/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  FileDropEvent,
} from './components/file-upload/FileDropEvent';
import {
  SvgPack,
} from './components/svg/svgs';

export namespace Components {
  interface OuiCard {}
  interface OuiCardHeading {}
  interface OuiDocumentsIcon {
    'isAnimating': boolean;
    'isFannedOut': boolean;
    'isHighlighted': boolean;
  }
  interface OuiFileUpload {
    /**
    * Specify mime types to accept (unrestricted by default) Separate by spaces for multiple: `text/html text/xml`
    */
    'accept': string;
  }
  interface OuiFileUploadModal {}
  interface OuiNavBar {
    'Dark': boolean;
  }
  interface OuiNotiButtons {}
  interface OuiNotiTray {
    'open': () => Promise<void>;
    'opened': boolean;
  }
  interface OuiSvg {
    'name': SvgPack;
    'scale': number;
  }
  interface OuiTmSwitch {
    'theme': string;
  }
}

declare global {


  interface HTMLOuiCardElement extends Components.OuiCard, HTMLStencilElement {}
  var HTMLOuiCardElement: {
    prototype: HTMLOuiCardElement;
    new (): HTMLOuiCardElement;
  };

  interface HTMLOuiCardHeadingElement extends Components.OuiCardHeading, HTMLStencilElement {}
  var HTMLOuiCardHeadingElement: {
    prototype: HTMLOuiCardHeadingElement;
    new (): HTMLOuiCardHeadingElement;
  };

  interface HTMLOuiDocumentsIconElement extends Components.OuiDocumentsIcon, HTMLStencilElement {}
  var HTMLOuiDocumentsIconElement: {
    prototype: HTMLOuiDocumentsIconElement;
    new (): HTMLOuiDocumentsIconElement;
  };

  interface HTMLOuiFileUploadElement extends Components.OuiFileUpload, HTMLStencilElement {}
  var HTMLOuiFileUploadElement: {
    prototype: HTMLOuiFileUploadElement;
    new (): HTMLOuiFileUploadElement;
  };

  interface HTMLOuiFileUploadModalElement extends Components.OuiFileUploadModal, HTMLStencilElement {}
  var HTMLOuiFileUploadModalElement: {
    prototype: HTMLOuiFileUploadModalElement;
    new (): HTMLOuiFileUploadModalElement;
  };

  interface HTMLOuiNavBarElement extends Components.OuiNavBar, HTMLStencilElement {}
  var HTMLOuiNavBarElement: {
    prototype: HTMLOuiNavBarElement;
    new (): HTMLOuiNavBarElement;
  };

  interface HTMLOuiNotiButtonsElement extends Components.OuiNotiButtons, HTMLStencilElement {}
  var HTMLOuiNotiButtonsElement: {
    prototype: HTMLOuiNotiButtonsElement;
    new (): HTMLOuiNotiButtonsElement;
  };

  interface HTMLOuiNotiTrayElement extends Components.OuiNotiTray, HTMLStencilElement {}
  var HTMLOuiNotiTrayElement: {
    prototype: HTMLOuiNotiTrayElement;
    new (): HTMLOuiNotiTrayElement;
  };

  interface HTMLOuiSvgElement extends Components.OuiSvg, HTMLStencilElement {}
  var HTMLOuiSvgElement: {
    prototype: HTMLOuiSvgElement;
    new (): HTMLOuiSvgElement;
  };

  interface HTMLOuiTmSwitchElement extends Components.OuiTmSwitch, HTMLStencilElement {}
  var HTMLOuiTmSwitchElement: {
    prototype: HTMLOuiTmSwitchElement;
    new (): HTMLOuiTmSwitchElement;
  };
  interface HTMLElementTagNameMap {
    'oui-card': HTMLOuiCardElement;
    'oui-card-heading': HTMLOuiCardHeadingElement;
    'oui-documents-icon': HTMLOuiDocumentsIconElement;
    'oui-file-upload': HTMLOuiFileUploadElement;
    'oui-file-upload-modal': HTMLOuiFileUploadModalElement;
    'oui-nav-bar': HTMLOuiNavBarElement;
    'oui-noti-buttons': HTMLOuiNotiButtonsElement;
    'oui-noti-tray': HTMLOuiNotiTrayElement;
    'oui-svg': HTMLOuiSvgElement;
    'oui-tm-switch': HTMLOuiTmSwitchElement;
  }
}

declare namespace LocalJSX {
  interface OuiCard {}
  interface OuiCardHeading {}
  interface OuiDocumentsIcon {
    'isAnimating'?: boolean;
    'isFannedOut'?: boolean;
    'isHighlighted'?: boolean;
  }
  interface OuiFileUpload {
    /**
    * Specify mime types to accept (unrestricted by default) Separate by spaces for multiple: `text/html text/xml`
    */
    'accept'?: string;
    /**
    * Files dropped onto page, and validated. You can use this event to perform an upload in javscript
    */
    'onDropped'?: (event: CustomEvent<FileDropEvent>) => void;
  }
  interface OuiFileUploadModal {
    /**
    * Emitted when modal is closed via button or esc
    */
    'onClose'?: (event: CustomEvent<any>) => void;
  }
  interface OuiNavBar {
    'Dark'?: boolean;
  }
  interface OuiNotiButtons {}
  interface OuiNotiTray {
    'opened'?: boolean;
  }
  interface OuiSvg {
    'name'?: SvgPack;
    'scale'?: number;
  }
  interface OuiTmSwitch {
    'theme'?: string;
  }

  interface IntrinsicElements {
    'oui-card': OuiCard;
    'oui-card-heading': OuiCardHeading;
    'oui-documents-icon': OuiDocumentsIcon;
    'oui-file-upload': OuiFileUpload;
    'oui-file-upload-modal': OuiFileUploadModal;
    'oui-nav-bar': OuiNavBar;
    'oui-noti-buttons': OuiNotiButtons;
    'oui-noti-tray': OuiNotiTray;
    'oui-svg': OuiSvg;
    'oui-tm-switch': OuiTmSwitch;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'oui-card': LocalJSX.OuiCard & JSXBase.HTMLAttributes<HTMLOuiCardElement>;
      'oui-card-heading': LocalJSX.OuiCardHeading & JSXBase.HTMLAttributes<HTMLOuiCardHeadingElement>;
      'oui-documents-icon': LocalJSX.OuiDocumentsIcon & JSXBase.HTMLAttributes<HTMLOuiDocumentsIconElement>;
      'oui-file-upload': LocalJSX.OuiFileUpload & JSXBase.HTMLAttributes<HTMLOuiFileUploadElement>;
      'oui-file-upload-modal': LocalJSX.OuiFileUploadModal & JSXBase.HTMLAttributes<HTMLOuiFileUploadModalElement>;
      'oui-nav-bar': LocalJSX.OuiNavBar & JSXBase.HTMLAttributes<HTMLOuiNavBarElement>;
      'oui-noti-buttons': LocalJSX.OuiNotiButtons & JSXBase.HTMLAttributes<HTMLOuiNotiButtonsElement>;
      'oui-noti-tray': LocalJSX.OuiNotiTray & JSXBase.HTMLAttributes<HTMLOuiNotiTrayElement>;
      'oui-svg': LocalJSX.OuiSvg & JSXBase.HTMLAttributes<HTMLOuiSvgElement>;
      'oui-tm-switch': LocalJSX.OuiTmSwitch & JSXBase.HTMLAttributes<HTMLOuiTmSwitchElement>;
    }
  }
}


