define('jsx',{load: function(id){throw new Error("Dynamic load not allowed: " + id);}});

define('text!docs/../../bower.json',[],function () { return '{\n  "name": "oui",\n  "version": "0.0.1",\n  "description": "Oberd Generic Frontend Components",\n  "main": "dist/oui.js",\n  "moduleType": [\n    "amd",\n    "es6",\n    "globals"\n  ],\n  "license": "MIT",\n  "ignore": [\n    "**/.*",\n    "node_modules",\n    "bower_components",\n    "test",\n    "tests"\n  ],\n  "dependencies": {\n    "backbone": "~1.1.2",\n    "jquery": "~2.1.1",\n    "react": "~0.12.2",\n    "react.backbone": "~0.6.0",\n    "jsx-requirejs-plugin": "~0.5.1",\n    "backbone-filtered-collection": "~0.4.0"\n  },\n  "devDependencies": {\n    "almond": "~0.2.9",\n    "mocha": "~1.20.1",\n    "chai": "~1.9.1",\n    "sinonjs": "~1.10.2",\n    "requirejs": "~2.1.14",\n    "pretender": "~0.1.0",\n    "responsive": "~3.1.4",\n    "jsx-requirejs-plugin": "~0.5.1",\n    "requirejs-plugins": "~1.0.3",\n    "highlightjs": "~8.4.0",\n    "chance": "~0.7.1"\n  }\n}\n';});


/*global define */

define('jsx!docs/Menu',['require','underscore','react.backbone'],function (require) {
  
  var _ = require('underscore');
  var React = require('react.backbone');
  var ExampleMenuItem = React.createClass({displayName: 'ExampleMenuItem',
    render: function () {
      var classes = React.addons.classSet({
        'menu-item': true,
        'active': this.props.active
      });
      return (
        React.createElement("li", {className: classes, onClick: this.props.onClick, key: this.props.key}, 
          React.createElement("span", {className: "icon"}, "★"), 
          this.props.name
        )
      );
    }
  });
  var ExamplesMenu = React.createClass({displayName: 'ExamplesMenu',
    componentDidMount: function () {
      if (window.location.hash) {
        var val = window.location.hash.toString().replace('#','');
        var isFound = _.find(this.props.examples, function (ex) {
          return ex.name === val;
        });
        if (isFound) {
          this.props.onSelect(isFound);
        }
      }
    },
    handleExample: function (example) {
      var self = this;
      return function () {
        window.location.hash = '#' + example.name;
        if (self.props.onSelect) {
          self.props.onSelect(example);
        }
      };
    },
    render: function () {
      var self = this;
      return (
        React.createElement("ul", {className: "no-bullets"}, 
        _(this.props.examples).map(function (example) {
          example.active = example.name === self.props.value;
          return React.createElement(ExampleMenuItem, React.__spread({key: example.name},  example, {onClick: self.handleExample(example)}));
        })
        )
      );
    }
  });
  return ExamplesMenu;
});

!function(e){"undefined"!=typeof exports?e(exports):(window.hljs=e({}),"function"==typeof define&&define.amd&&define('highlightjs',[],function(){return window.hljs}))}(function(e){function t(e){return e.replace(/&/gm,"&amp;").replace(/</gm,"&lt;").replace(/>/gm,"&gt;")}function r(e){return e.nodeName.toLowerCase()}function a(e,t){var r=e&&e.exec(t);return r&&0==r.index}function i(e){var t=(e.className+" "+(e.parentNode?e.parentNode.className:"")).split(/\s+/);return t=t.map(function(e){return e.replace(/^lang(uage)?-/,"")}),t.filter(function(e){return _(e)||/no(-?)highlight/.test(e)})[0]}function n(e,t){var r={};for(var a in e)r[a]=e[a];if(t)for(var a in t)r[a]=t[a];return r}function o(e){var t=[];return function a(e,i){for(var n=e.firstChild;n;n=n.nextSibling)3==n.nodeType?i+=n.nodeValue.length:1==n.nodeType&&(t.push({event:"start",offset:i,node:n}),i=a(n,i),r(n).match(/br|hr|img|input/)||t.push({event:"stop",offset:i,node:n}));return i}(e,0),t}function s(e,a,i){function n(){return e.length&&a.length?e[0].offset!=a[0].offset?e[0].offset<a[0].offset?e:a:"start"==a[0].event?e:a:e.length?e:a}function o(e){function a(e){return" "+e.nodeName+'="'+t(e.value)+'"'}p+="<"+r(e)+Array.prototype.map.call(e.attributes,a).join("")+">"}function s(e){p+="</"+r(e)+">"}function l(e){("start"==e.event?o:s)(e.node)}for(var c=0,p="",d=[];e.length||a.length;){var u=n();if(p+=t(i.substr(c,u[0].offset-c)),c=u[0].offset,u==e){d.reverse().forEach(s);do l(u.splice(0,1)[0]),u=n();while(u==e&&u.length&&u[0].offset==c);d.reverse().forEach(o)}else"start"==u[0].event?d.push(u[0].node):d.pop(),l(u.splice(0,1)[0])}return p+t(i.substr(c))}function l(e){function t(e){return e&&e.source||e}function r(r,a){return RegExp(t(r),"m"+(e.cI?"i":"")+(a?"g":""))}function a(i,o){if(!i.compiled){if(i.compiled=!0,i.k=i.k||i.bK,i.k){var s={},l=function(t,r){e.cI&&(r=r.toLowerCase()),r.split(" ").forEach(function(e){var r=e.split("|");s[r[0]]=[t,r[1]?Number(r[1]):1]})};"string"==typeof i.k?l("keyword",i.k):Object.keys(i.k).forEach(function(e){l(e,i.k[e])}),i.k=s}i.lR=r(i.l||/\b[A-Za-z0-9_]+\b/,!0),o&&(i.bK&&(i.b="\\b("+i.bK.split(" ").join("|")+")\\b"),i.b||(i.b=/\B|\b/),i.bR=r(i.b),i.e||i.eW||(i.e=/\B|\b/),i.e&&(i.eR=r(i.e)),i.tE=t(i.e)||"",i.eW&&o.tE&&(i.tE+=(i.e?"|":"")+o.tE)),i.i&&(i.iR=r(i.i)),void 0===i.r&&(i.r=1),i.c||(i.c=[]);var c=[];i.c.forEach(function(e){e.v?e.v.forEach(function(t){c.push(n(e,t))}):c.push("self"==e?i:e)}),i.c=c,i.c.forEach(function(e){a(e,i)}),i.starts&&a(i.starts,o);var p=i.c.map(function(e){return e.bK?"\\.?("+e.b+")\\.?":e.b}).concat([i.tE,i.i]).map(t).filter(Boolean);i.t=p.length?r(p.join("|"),!0):{exec:function(){return null}}}}a(e)}function c(e,r,i,n){function o(e,t){for(var r=0;r<t.c.length;r++)if(a(t.c[r].bR,e))return t.c[r]}function s(e,t){return a(e.eR,t)?e:e.eW?s(e.parent,t):void 0}function d(e,t){return!i&&a(t.iR,e)}function u(e,t){var r=S.cI?t[0].toLowerCase():t[0];return e.k.hasOwnProperty(r)&&e.k[r]}function m(e,t,r,a){var i=a?"":y.classPrefix,n='<span class="'+i,o=r?"":"</span>";return n+=e+'">',n+t+o}function b(){if(!C.k)return t(k);var e="",r=0;C.lR.lastIndex=0;for(var a=C.lR.exec(k);a;){e+=t(k.substr(r,a.index-r));var i=u(C,a);i?(M+=i[1],e+=m(i[0],t(a[0]))):e+=t(a[0]),r=C.lR.lastIndex,a=C.lR.exec(k)}return e+t(k.substr(r))}function g(){if(C.sL&&!x[C.sL])return t(k);var e=C.sL?c(C.sL,k,!0,w[C.sL]):p(k);return C.r>0&&(M+=e.r),"continuous"==C.subLanguageMode&&(w[C.sL]=e.top),m(e.language,e.value,!1,!0)}function f(){return void 0!==C.sL?g():b()}function v(e,r){var a=e.cN?m(e.cN,"",!0):"";e.rB?(N+=a,k=""):e.eB?(N+=t(r)+a,k=""):(N+=a,k=r),C=Object.create(e,{parent:{value:C}})}function h(e,r){if(k+=e,void 0===r)return N+=f(),0;var a=o(r,C);if(a)return N+=f(),v(a,r),a.rB?0:r.length;var i=s(C,r);if(i){var n=C;n.rE||n.eE||(k+=r),N+=f();do C.cN&&(N+="</span>"),M+=C.r,C=C.parent;while(C!=i.parent);return n.eE&&(N+=t(r)),k="",i.starts&&v(i.starts,""),n.rE?0:r.length}if(d(r,C))throw new Error('Illegal lexeme "'+r+'" for mode "'+(C.cN||"<unnamed>")+'"');return k+=r,r.length||1}var S=_(e);if(!S)throw new Error('Unknown language: "'+e+'"');l(S);for(var C=n||S,w={},N="",D=C;D!=S;D=D.parent)D.cN&&(N=m(D.cN,"",!0)+N);var k="",M=0;try{for(var T,E,A=0;;){if(C.t.lastIndex=A,T=C.t.exec(r),!T)break;E=h(r.substr(A,T.index-A),T[0]),A=T.index+E}h(r.substr(A));for(var D=C;D.parent;D=D.parent)D.cN&&(N+="</span>");return{r:M,value:N,language:e,top:C}}catch(L){if(-1!=L.message.indexOf("Illegal"))return{r:0,value:t(r)};throw L}}function p(e,r){r=r||y.languages||Object.keys(x);var a={r:0,value:t(e)},i=a;return r.forEach(function(t){if(_(t)){var r=c(t,e,!1);r.language=t,r.r>i.r&&(i=r),r.r>a.r&&(i=a,a=r)}}),i.language&&(a.second_best=i),a}function d(e){return y.tabReplace&&(e=e.replace(/^((<[^>]+>|\t)+)/gm,function(e,t){return t.replace(/\t/g,y.tabReplace)})),y.useBR&&(e=e.replace(/\n/g,"<br>")),e}function u(e,t,r){var a=t?S[t]:r,i=[e.trim()];return e.match(/(\s|^)hljs(\s|$)/)||i.push("hljs"),a&&i.push(a),i.join(" ").trim()}function m(e){var t=i(e);if(!/no(-?)highlight/.test(t)){var r;y.useBR?(r=document.createElementNS("http://www.w3.org/1999/xhtml","div"),r.innerHTML=e.innerHTML.replace(/\n/g,"").replace(/<br[ \/]*>/g,"\n")):r=e;var a=r.textContent,n=t?c(t,a,!0):p(a),l=o(r);if(l.length){var m=document.createElementNS("http://www.w3.org/1999/xhtml","div");m.innerHTML=n.value,n.value=s(l,o(m),a)}n.value=d(n.value),e.innerHTML=n.value,e.className=u(e.className,t,n.language),e.result={language:n.language,re:n.r},n.second_best&&(e.second_best={language:n.second_best.language,re:n.second_best.r})}}function b(e){y=n(y,e)}function g(){if(!g.called){g.called=!0;var e=document.querySelectorAll("pre code");Array.prototype.forEach.call(e,m)}}function f(){addEventListener("DOMContentLoaded",g,!1),addEventListener("load",g,!1)}function v(t,r){var a=x[t]=r(e);a.aliases&&a.aliases.forEach(function(e){S[e]=t})}function h(){return Object.keys(x)}function _(e){return x[e]||x[S[e]]}var y={classPrefix:"hljs-",tabReplace:null,useBR:!1,languages:void 0},x={},S={};return e.highlight=c,e.highlightAuto=p,e.fixMarkup=d,e.highlightBlock=m,e.configure=b,e.initHighlighting=g,e.initHighlightingOnLoad=f,e.registerLanguage=v,e.listLanguages=h,e.getLanguage=_,e.inherit=n,e.IR="[a-zA-Z][a-zA-Z0-9_]*",e.UIR="[a-zA-Z_][a-zA-Z0-9_]*",e.NR="\\b\\d+(\\.\\d+)?",e.CNR="(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)",e.BNR="\\b(0b[01]+)",e.RSR="!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~",e.BE={b:"\\\\[\\s\\S]",r:0},e.ASM={cN:"string",b:"'",e:"'",i:"\\n",c:[e.BE]},e.QSM={cN:"string",b:'"',e:'"',i:"\\n",c:[e.BE]},e.PWM={b:/\b(a|an|the|are|I|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such)\b/},e.CLCM={cN:"comment",b:"//",e:"$",c:[e.PWM]},e.CBCM={cN:"comment",b:"/\\*",e:"\\*/",c:[e.PWM]},e.HCM={cN:"comment",b:"#",e:"$",c:[e.PWM]},e.NM={cN:"number",b:e.NR,r:0},e.CNM={cN:"number",b:e.CNR,r:0},e.BNM={cN:"number",b:e.BNR,r:0},e.CSSNM={cN:"number",b:e.NR+"(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?",r:0},e.RM={cN:"regexp",b:/\//,e:/\/[gimuy]*/,i:/\n/,c:[e.BE,{b:/\[/,e:/\]/,r:0,c:[e.BE]}]},e.TM={cN:"title",b:e.IR,r:0},e.UTM={cN:"title",b:e.UIR,r:0},e}),hljs.registerLanguage("1c",function(e){var t="[a-zA-Zа-яА-Я][a-zA-Z0-9_а-яА-Я]*",r="возврат дата для если и или иначе иначеесли исключение конецесли конецпопытки конецпроцедуры конецфункции конеццикла константа не перейти перем перечисление по пока попытка прервать продолжить процедура строка тогда фс функция цикл число экспорт",a="ansitooem oemtoansi ввестивидсубконто ввестидату ввестизначение ввестиперечисление ввестипериод ввестиплансчетов ввестистроку ввестичисло вопрос восстановитьзначение врег выбранныйплансчетов вызватьисключение датагод датамесяц датачисло добавитьмесяц завершитьработусистемы заголовоксистемы записьжурналарегистрации запуститьприложение зафиксироватьтранзакцию значениевстроку значениевстрокувнутр значениевфайл значениеизстроки значениеизстрокивнутр значениеизфайла имякомпьютера имяпользователя каталогвременныхфайлов каталогиб каталогпользователя каталогпрограммы кодсимв командасистемы конгода конецпериодаби конецрассчитанногопериодаби конецстандартногоинтервала конквартала конмесяца коннедели лев лог лог10 макс максимальноеколичествосубконто мин монопольныйрежим названиеинтерфейса названиенабораправ назначитьвид назначитьсчет найти найтипомеченныенаудаление найтиссылки началопериодаби началостандартногоинтервала начатьтранзакцию начгода начквартала начмесяца начнедели номерднягода номерднянедели номернеделигода нрег обработкаожидания окр описаниеошибки основнойжурналрасчетов основнойплансчетов основнойязык открытьформу открытьформумодально отменитьтранзакцию очиститьокносообщений периодстр полноеимяпользователя получитьвремята получитьдатута получитьдокументта получитьзначенияотбора получитьпозициюта получитьпустоезначение получитьта прав праводоступа предупреждение префиксавтонумерации пустаястрока пустоезначение рабочаядаттьпустоезначение рабочаядата разделительстраниц разделительстрок разм разобратьпозициюдокумента рассчитатьрегистрына рассчитатьрегистрыпо сигнал симв символтабуляции создатьобъект сокрл сокрлп сокрп сообщить состояние сохранитьзначение сред статусвозврата стрдлина стрзаменить стрколичествострок стрполучитьстроку  стрчисловхождений сформироватьпозициюдокумента счетпокоду текущаядата текущеевремя типзначения типзначениястр удалитьобъекты установитьтана установитьтапо фиксшаблон формат цел шаблон",i={cN:"dquote",b:'""'},n={cN:"string",b:'"',e:'"|$',c:[i]},o={cN:"string",b:"\\|",e:'"|$',c:[i]};return{cI:!0,l:t,k:{keyword:r,built_in:a},c:[e.CLCM,e.NM,n,o,{cN:"function",b:"(процедура|функция)",e:"$",l:t,k:"процедура функция",c:[e.inherit(e.TM,{b:t}),{cN:"tail",eW:!0,c:[{cN:"params",b:"\\(",e:"\\)",l:t,k:"знач",c:[n,o]},{cN:"export",b:"экспорт",eW:!0,l:t,k:"экспорт",c:[e.CLCM]}]},e.CLCM]},{cN:"preprocessor",b:"#",e:"$"},{cN:"date",b:"'\\d{2}\\.\\d{2}\\.(\\d{2}|\\d{4})'"}]}}),hljs.registerLanguage("actionscript",function(e){var t="[a-zA-Z_$][a-zA-Z0-9_$]*",r="([*]|[a-zA-Z_$][a-zA-Z0-9_$]*)",a={cN:"rest_arg",b:"[.]{3}",e:t,r:10};return{aliases:["as"],k:{keyword:"as break case catch class const continue default delete do dynamic each else extends final finally for function get if implements import in include instanceof interface internal is namespace native new override package private protected public return set static super switch this throw try typeof use var void while with",literal:"true false null undefined"},c:[e.ASM,e.QSM,e.CLCM,e.CBCM,e.CNM,{cN:"package",bK:"package",e:"{",c:[e.TM]},{cN:"class",bK:"class interface",e:"{",eE:!0,c:[{bK:"extends implements"},e.TM]},{cN:"preprocessor",bK:"import include",e:";"},{cN:"function",bK:"function",e:"[{;]",eE:!0,i:"\\S",c:[e.TM,{cN:"params",b:"\\(",e:"\\)",c:[e.ASM,e.QSM,e.CLCM,e.CBCM,a]},{cN:"type",b:":",e:r,r:10}]}]}}),hljs.registerLanguage("apache",function(e){var t={cN:"number",b:"[\\$%]\\d+"};return{aliases:["apacheconf"],cI:!0,c:[e.HCM,{cN:"tag",b:"</?",e:">"},{cN:"keyword",b:/\w+/,r:0,k:{common:"order deny allow setenv rewriterule rewriteengine rewritecond documentroot sethandler errordocument loadmodule options header listen serverroot servername"},starts:{e:/$/,r:0,k:{literal:"on off all"},c:[{cN:"sqbracket",b:"\\s\\[",e:"\\]$"},{cN:"cbracket",b:"[\\$%]\\{",e:"\\}",c:["self",t]},t,e.QSM]}}],i:/\S/}}),hljs.registerLanguage("applescript",function(e){var t=e.inherit(e.QSM,{i:""}),r={cN:"params",b:"\\(",e:"\\)",c:["self",e.CNM,t]},a=[{cN:"comment",b:"--",e:"$"},{cN:"comment",b:"\\(\\*",e:"\\*\\)",c:["self",{b:"--",e:"$"}]},e.HCM];return{aliases:["osascript"],k:{keyword:"about above after against and around as at back before beginning behind below beneath beside between but by considering contain contains continue copy div does eighth else end equal equals error every exit fifth first for fourth from front get given global if ignoring in into is it its last local me middle mod my ninth not of on onto or over prop property put ref reference repeat returning script second set seventh since sixth some tell tenth that the|0 then third through thru timeout times to transaction try until where while whose with without",constant:"AppleScript false linefeed return pi quote result space tab true",type:"alias application boolean class constant date file integer list number real record string text",command:"activate beep count delay launch log offset read round run say summarize write",property:"character characters contents day frontmost id item length month name paragraph paragraphs rest reverse running time version weekday word words year"},c:[t,e.CNM,{cN:"type",b:"\\bPOSIX file\\b"},{cN:"command",b:"\\b(clipboard info|the clipboard|info for|list (disks|folder)|mount volume|path to|(close|open for) access|(get|set) eof|current date|do shell script|get volume settings|random number|set volume|system attribute|system info|time to GMT|(load|run|store) script|scripting components|ASCII (character|number)|localized string|choose (application|color|file|file name|folder|from list|remote application|URL)|display (alert|dialog))\\b|^\\s*return\\b"},{cN:"constant",b:"\\b(text item delimiters|current application|missing value)\\b"},{cN:"keyword",b:"\\b(apart from|aside from|instead of|out of|greater than|isn't|(doesn't|does not) (equal|come before|come after|contain)|(greater|less) than( or equal)?|(starts?|ends|begins?) with|contained by|comes (before|after)|a (ref|reference))\\b"},{cN:"property",b:"\\b(POSIX path|(date|time) string|quoted form)\\b"},{cN:"function_start",bK:"on",i:"[${=;\\n]",c:[e.UTM,r]}].concat(a),i:"//|->|=>"}}),hljs.registerLanguage("xml",function(){var e="[A-Za-z0-9\\._:-]+",t={b:/<\?(php)?(?!\w)/,e:/\?>/,sL:"php",subLanguageMode:"continuous"},r={eW:!0,i:/</,r:0,c:[t,{cN:"attribute",b:e,r:0},{b:"=",r:0,c:[{cN:"value",c:[t],v:[{b:/"/,e:/"/},{b:/'/,e:/'/},{b:/[^\s\/>]+/}]}]}]};return{aliases:["html","xhtml","rss","atom","xsl","plist"],cI:!0,c:[{cN:"doctype",b:"<!DOCTYPE",e:">",r:10,c:[{b:"\\[",e:"\\]"}]},{cN:"comment",b:"<!--",e:"-->",r:10},{cN:"cdata",b:"<\\!\\[CDATA\\[",e:"\\]\\]>",r:10},{cN:"tag",b:"<style(?=\\s|>|$)",e:">",k:{title:"style"},c:[r],starts:{e:"</style>",rE:!0,sL:"css"}},{cN:"tag",b:"<script(?=\\s|>|$)",e:">",k:{title:"script"},c:[r],starts:{e:"</script>",rE:!0,sL:"javascript"}},t,{cN:"pi",b:/<\?\w+/,e:/\?>/,r:10},{cN:"tag",b:"</?",e:"/?>",c:[{cN:"title",b:/[^ \/><\n\t]+/,r:0},r]}]}}),hljs.registerLanguage("asciidoc",function(){return{c:[{cN:"comment",b:"^/{4,}\\n",e:"\\n/{4,}$",r:10},{cN:"comment",b:"^//",e:"$",r:0},{cN:"title",b:"^\\.\\w.*$"},{b:"^[=\\*]{4,}\\n",e:"\\n^[=\\*]{4,}$",r:10},{cN:"header",b:"^(={1,5}) .+?( \\1)?$",r:10},{cN:"header",b:"^[^\\[\\]\\n]+?\\n[=\\-~\\^\\+]{2,}$",r:10},{cN:"attribute",b:"^:.+?:",e:"\\s",eE:!0,r:10},{cN:"attribute",b:"^\\[.+?\\]$",r:0},{cN:"blockquote",b:"^_{4,}\\n",e:"\\n_{4,}$",r:10},{cN:"code",b:"^[\\-\\.]{4,}\\n",e:"\\n[\\-\\.]{4,}$",r:10},{b:"^\\+{4,}\\n",e:"\\n\\+{4,}$",c:[{b:"<",e:">",sL:"xml",r:0}],r:10},{cN:"bullet",b:"^(\\*+|\\-+|\\.+|[^\\n]+?::)\\s+"},{cN:"label",b:"^(NOTE|TIP|IMPORTANT|WARNING|CAUTION):\\s+",r:10},{cN:"strong",b:"\\B\\*(?![\\*\\s])",e:"(\\n{2}|\\*)",c:[{b:"\\\\*\\w",r:0}]},{cN:"emphasis",b:"\\B'(?!['\\s])",e:"(\\n{2}|')",c:[{b:"\\\\'\\w",r:0}],r:0},{cN:"emphasis",b:"_(?![_\\s])",e:"(\\n{2}|_)",r:0},{cN:"smartquote",v:[{b:"``.+?''"},{b:"`.+?'"}]},{cN:"code",b:"(`.+?`|\\+.+?\\+)",r:0},{cN:"code",b:"^[ \\t]",e:"$",r:0},{cN:"horizontal_rule",b:"^'{3,}[ \\t]*$",r:10},{b:"(link:)?(http|https|ftp|file|irc|image:?):\\S+\\[.*?\\]",rB:!0,c:[{b:"(link|image:?):",r:0},{cN:"link_url",b:"\\w",e:"[^\\[]+",r:0},{cN:"link_label",b:"\\[",e:"\\]",eB:!0,eE:!0,r:0}],r:10}]}}),hljs.registerLanguage("aspectj",function(e){var t="false synchronized int abstract float private char boolean static null if const for true while long throw strictfp finally protected import native final return void enum else extends implements break transient new catch instanceof byte super volatile case assert short package default double public try this switch continue throws privileged aspectOf adviceexecution proceed cflowbelow cflow initialization preinitialization staticinitialization withincode target within execution getWithinTypeName handler thisJoinPoint thisJoinPointStaticPart thisEnclosingJoinPointStaticPart declare parents warning error soft precedence",r="get set args call";return{k:t,i:/<\//,c:[{cN:"javadoc",b:"/\\*\\*",e:"\\*/",r:0,c:[{cN:"javadoctag",b:"(^|\\s)@[A-Za-z]+"}]},e.CLCM,e.CBCM,e.ASM,e.QSM,{cN:"aspect",bK:"aspect",e:/[{;=]/,eE:!0,i:/[:;"\[\]]/,c:[{bK:"extends implements pertypewithin perthis pertarget percflowbelow percflow issingleton"},e.UTM,{b:/\([^\)]*/,e:/[)]+/,k:t+" "+r,eE:!1}]},{cN:"class",bK:"class interface",e:/[{;=]/,eE:!0,r:0,k:"class interface",i:/[:"\[\]]/,c:[{bK:"extends implements"},e.UTM]},{bK:"pointcut after before around throwing returning",e:/[)]/,eE:!1,i:/["\[\]]/,c:[{b:e.UIR+"\\s*\\(",rB:!0,c:[e.UTM]}]},{b:/[:]/,rB:!0,e:/[{;]/,r:0,eE:!1,k:t,i:/["\[\]]/,c:[{b:e.UIR+"\\s*\\(",k:t+" "+r},e.QSM]},{bK:"new throw",r:0},{cN:"function",b:/\w+ +\w+(\.)?\w+\s*\([^\)]*\)\s*((throws)[\w\s\,]+)?[\{\;]/,rB:!0,e:/[{;=]/,k:t,eE:!0,c:[{b:e.UIR+"\\s*\\(",rB:!0,r:0,c:[e.UTM]},{cN:"params",b:/\(/,e:/\)/,r:0,k:t,c:[e.ASM,e.QSM,e.CNM,e.CBCM]},e.CLCM,e.CBCM]},e.CNM,{cN:"annotation",b:"@[A-Za-z]+"}]}}),hljs.registerLanguage("autohotkey",function(e){var t={cN:"escape",b:"`[\\s\\S]"},r={cN:"comment",b:";",e:"$",r:0},a=[{cN:"built_in",b:"A_[a-zA-Z0-9]+"},{cN:"built_in",bK:"ComSpec Clipboard ClipboardAll ErrorLevel"}];return{cI:!0,k:{keyword:"Break Continue Else Gosub If Loop Return While",literal:"A true false NOT AND OR"},c:a.concat([t,e.inherit(e.QSM,{c:[t]}),r,{cN:"number",b:e.NR,r:0},{cN:"var_expand",b:"%",e:"%",i:"\\n",c:[t]},{cN:"label",c:[t],v:[{b:'^[^\\n";]+::(?!=)'},{b:'^[^\\n";]+:(?!=)',r:0}]},{b:",\\s*,",r:10}])}}),hljs.registerLanguage("avrasm",function(e){return{cI:!0,l:"\\.?"+e.IR,k:{keyword:"adc add adiw and andi asr bclr bld brbc brbs brcc brcs break breq brge brhc brhs brid brie brlo brlt brmi brne brpl brsh brtc brts brvc brvs bset bst call cbi cbr clc clh cli cln clr cls clt clv clz com cp cpc cpi cpse dec eicall eijmp elpm eor fmul fmuls fmulsu icall ijmp in inc jmp ld ldd ldi lds lpm lsl lsr mov movw mul muls mulsu neg nop or ori out pop push rcall ret reti rjmp rol ror sbc sbr sbrc sbrs sec seh sbi sbci sbic sbis sbiw sei sen ser ses set sev sez sleep spm st std sts sub subi swap tst wdr",built_in:"r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31 x|0 xh xl y|0 yh yl z|0 zh zl ucsr1c udr1 ucsr1a ucsr1b ubrr1l ubrr1h ucsr0c ubrr0h tccr3c tccr3a tccr3b tcnt3h tcnt3l ocr3ah ocr3al ocr3bh ocr3bl ocr3ch ocr3cl icr3h icr3l etimsk etifr tccr1c ocr1ch ocr1cl twcr twdr twar twsr twbr osccal xmcra xmcrb eicra spmcsr spmcr portg ddrg ping portf ddrf sreg sph spl xdiv rampz eicrb eimsk gimsk gicr eifr gifr timsk tifr mcucr mcucsr tccr0 tcnt0 ocr0 assr tccr1a tccr1b tcnt1h tcnt1l ocr1ah ocr1al ocr1bh ocr1bl icr1h icr1l tccr2 tcnt2 ocr2 ocdr wdtcr sfior eearh eearl eedr eecr porta ddra pina portb ddrb pinb portc ddrc pinc portd ddrd pind spdr spsr spcr udr0 ucsr0a ucsr0b ubrr0l acsr admux adcsr adch adcl porte ddre pine pinf",preprocessor:".byte .cseg .db .def .device .dseg .dw .endmacro .equ .eseg .exit .include .list .listmac .macro .nolist .org .set"},c:[e.CBCM,{cN:"comment",b:";",e:"$",r:0},e.CNM,e.BNM,{cN:"number",b:"\\b(\\$[a-zA-Z0-9]+|0o[0-7]+)"},e.QSM,{cN:"string",b:"'",e:"[^\\\\]'",i:"[^\\\\][^']"},{cN:"label",b:"^[A-Za-z0-9_.$]+:"},{cN:"preprocessor",b:"#",e:"$"},{cN:"localvars",b:"@[0-9]+"}]}}),hljs.registerLanguage("axapta",function(e){return{k:"false int abstract private char boolean static null if for true while long throw finally protected final return void enum else break new catch byte super case short default double public try this switch continue reverse firstfast firstonly forupdate nofetch sum avg minof maxof count order group by asc desc index hint like dispaly edit client server ttsbegin ttscommit str real date container anytype common div mod",c:[e.CLCM,e.CBCM,e.ASM,e.QSM,e.CNM,{cN:"preprocessor",b:"#",e:"$"},{cN:"class",bK:"class interface",e:"{",eE:!0,i:":",c:[{bK:"extends implements"},e.UTM]}]}}),hljs.registerLanguage("bash",function(e){var t={cN:"variable",v:[{b:/\$[\w\d#@][\w\d_]*/},{b:/\$\{(.*?)\}/}]},r={cN:"string",b:/"/,e:/"/,c:[e.BE,t,{cN:"variable",b:/\$\(/,e:/\)/,c:[e.BE]}]},a={cN:"string",b:/'/,e:/'/};return{aliases:["sh","zsh"],l:/-?[a-z\.]+/,k:{keyword:"if then else elif fi for while in do done case esac function",literal:"true false",built_in:"break cd continue eval exec exit export getopts hash pwd readonly return shift test times trap umask unset alias bind builtin caller command declare echo enable help let local logout mapfile printf read readarray source type typeset ulimit unalias set shopt autoload bg bindkey bye cap chdir clone comparguments compcall compctl compdescribe compfiles compgroups compquote comptags comptry compvalues dirs disable disown echotc echoti emulate fc fg float functions getcap getln history integer jobs kill limit log noglob popd print pushd pushln rehash sched setcap setopt stat suspend ttyctl unfunction unhash unlimit unsetopt vared wait whence where which zcompile zformat zftp zle zmodload zparseopts zprof zpty zregexparse zsocket zstyle ztcp",operator:"-ne -eq -lt -gt -f -d -e -s -l -a"},c:[{cN:"shebang",b:/^#![^\n]+sh\s*$/,r:10},{cN:"function",b:/\w[\w\d_]*\s*\(\s*\)\s*\{/,rB:!0,c:[e.inherit(e.TM,{b:/\w[\w\d_]*/})],r:0},e.HCM,e.NM,r,a,t]}}),hljs.registerLanguage("brainfuck",function(){var e={cN:"literal",b:"[\\+\\-]",r:0};return{aliases:["bf"],c:[{cN:"comment",b:"[^\\[\\]\\.,\\+\\-<> \r\n]",rE:!0,e:"[\\[\\]\\.,\\+\\-<> \r\n]",r:0},{cN:"title",b:"[\\[\\]]",r:0},{cN:"string",b:"[\\.,]",r:0},{b:/\+\+|\-\-/,rB:!0,c:[e]},e]}}),hljs.registerLanguage("capnproto",function(e){return{aliases:["capnp"],k:{keyword:"struct enum interface union group import using const annotation extends in of on as with from fixed",built_in:"Void Bool Int8 Int16 Int32 Int64 UInt8 UInt16 UInt32 UInt64 Float32 Float64 Text Data AnyPointer AnyStruct Capability List",literal:"true false"},c:[e.QSM,e.NM,e.HCM,{cN:"shebang",b:/@0x[\w\d]{16};/,i:/\n/},{cN:"number",b:/@\d+\b/},{cN:"class",bK:"struct enum",e:/\{/,i:/\n/,c:[e.inherit(e.TM,{starts:{eW:!0,eE:!0}})]},{cN:"class",bK:"interface",e:/\{/,i:/\n/,c:[e.inherit(e.TM,{starts:{eW:!0,eE:!0}})]}]}}),hljs.registerLanguage("clojure",function(e){var t={built_in:"def cond apply if-not if-let if not not= = < > <= >= == + / * - rem quot neg? pos? delay? symbol? keyword? true? false? integer? empty? coll? list? set? ifn? fn? associative? sequential? sorted? counted? reversible? number? decimal? class? distinct? isa? float? rational? reduced? ratio? odd? even? char? seq? vector? string? map? nil? contains? zero? instance? not-every? not-any? libspec? -> ->> .. . inc compare do dotimes mapcat take remove take-while drop letfn drop-last take-last drop-while while intern condp case reduced cycle split-at split-with repeat replicate iterate range merge zipmap declare line-seq sort comparator sort-by dorun doall nthnext nthrest partition eval doseq await await-for let agent atom send send-off release-pending-sends add-watch mapv filterv remove-watch agent-error restart-agent set-error-handler error-handler set-error-mode! error-mode shutdown-agents quote var fn loop recur throw try monitor-enter monitor-exit defmacro defn defn- macroexpand macroexpand-1 for dosync and or when when-not when-let comp juxt partial sequence memoize constantly complement identity assert peek pop doto proxy defstruct first rest cons defprotocol cast coll deftype defrecord last butlast sigs reify second ffirst fnext nfirst nnext defmulti defmethod meta with-meta ns in-ns create-ns import refer keys select-keys vals key val rseq name namespace promise into transient persistent! conj! assoc! dissoc! pop! disj! use class type num float double short byte boolean bigint biginteger bigdec print-method print-dup throw-if printf format load compile get-in update-in pr pr-on newline flush read slurp read-line subvec with-open memfn time re-find re-groups rand-int rand mod locking assert-valid-fdecl alias resolve ref deref refset swap! reset! set-validator! compare-and-set! alter-meta! reset-meta! commute get-validator alter ref-set ref-history-count ref-min-history ref-max-history ensure sync io! new next conj set! to-array future future-call into-array aset gen-class reduce map filter find empty hash-map hash-set sorted-map sorted-map-by sorted-set sorted-set-by vec vector seq flatten reverse assoc dissoc list disj get union difference intersection extend extend-type extend-protocol int nth delay count concat chunk chunk-buffer chunk-append chunk-first chunk-rest max min dec unchecked-inc-int unchecked-inc unchecked-dec-inc unchecked-dec unchecked-negate unchecked-add-int unchecked-add unchecked-subtract-int unchecked-subtract chunk-next chunk-cons chunked-seq? prn vary-meta lazy-seq spread list* str find-keyword keyword symbol gensym force rationalize"},r="a-zA-Z_\\-!.?+*=<>&#'",a="["+r+"]["+r+"0-9/;:]*",i="[-+]?\\d+(\\.\\d+)?",n={b:a,r:0},o={cN:"number",b:i,r:0},s=e.inherit(e.QSM,{i:null}),l={cN:"comment",b:";",e:"$",r:0},c={cN:"literal",b:/\b(true|false|nil)\b/},p={cN:"collection",b:"[\\[\\{]",e:"[\\]\\}]"},d={cN:"comment",b:"\\^"+a},u={cN:"comment",b:"\\^\\{",e:"\\}"},m={cN:"attribute",b:"[:]"+a},b={cN:"list",b:"\\(",e:"\\)"},g={eW:!0,r:0},f={k:t,l:a,cN:"keyword",b:a,starts:g},v=[b,s,d,u,l,m,p,o,c,n];return b.c=[{cN:"comment",b:"comment"},f,g],g.c=v,p.c=v,{aliases:["clj"],i:/\S/,c:[b,s,d,u,l,m,p,o,c]}}),hljs.registerLanguage("clojure-repl",function(){return{c:[{cN:"prompt",b:/^([\w.-]+|\s*#_)=>/,starts:{e:/$/,sL:"clojure",subLanguageMode:"continuous"}}]}}),hljs.registerLanguage("cmake",function(e){return{aliases:["cmake.in"],cI:!0,k:{keyword:"add_custom_command add_custom_target add_definitions add_dependencies add_executable add_library add_subdirectory add_test aux_source_directory break build_command cmake_minimum_required cmake_policy configure_file create_test_sourcelist define_property else elseif enable_language enable_testing endforeach endfunction endif endmacro endwhile execute_process export find_file find_library find_package find_path find_program fltk_wrap_ui foreach function get_cmake_property get_directory_property get_filename_component get_property get_source_file_property get_target_property get_test_property if include include_directories include_external_msproject include_regular_expression install link_directories load_cache load_command macro mark_as_advanced message option output_required_files project qt_wrap_cpp qt_wrap_ui remove_definitions return separate_arguments set set_directory_properties set_property set_source_files_properties set_target_properties set_tests_properties site_name source_group string target_link_libraries try_compile try_run unset variable_watch while build_name exec_program export_library_dependencies install_files install_programs install_targets link_libraries make_directory remove subdir_depends subdirs use_mangled_mesa utility_source variable_requires write_file qt5_use_modules qt5_use_package qt5_wrap_cpp on off true false and or",operator:"equal less greater strless strgreater strequal matches"},c:[{cN:"envvar",b:"\\${",e:"}"},e.HCM,e.QSM,e.NM]}}),hljs.registerLanguage("coffeescript",function(e){var t={keyword:"in if for while finally new do return else break catch instanceof throw try this switch continue typeof delete debugger super then unless until loop of by when and or is isnt not",literal:"true false null undefined yes no on off",reserved:"case default function var void with const let enum export import native __hasProp __extends __slice __bind __indexOf",built_in:"npm require console print module global window document"},r="[A-Za-z$_][0-9A-Za-z$_]*",a={cN:"subst",b:/#\{/,e:/}/,k:t},i=[e.BNM,e.inherit(e.CNM,{starts:{e:"(\\s*/)?",r:0}}),{cN:"string",v:[{b:/'''/,e:/'''/,c:[e.BE]},{b:/'/,e:/'/,c:[e.BE]},{b:/"""/,e:/"""/,c:[e.BE,a]},{b:/"/,e:/"/,c:[e.BE,a]}]},{cN:"regexp",v:[{b:"///",e:"///",c:[a,e.HCM]},{b:"//[gim]*",r:0},{b:/\/(?![ *])(\\\/|.)*?\/[gim]*(?=\W|$)/}]},{cN:"property",b:"@"+r},{b:"`",e:"`",eB:!0,eE:!0,sL:"javascript"}];a.c=i;var n=e.inherit(e.TM,{b:r}),o="(\\(.*\\))?\\s*\\B[-=]>",s={cN:"params",b:"\\([^\\(]",rB:!0,c:[{b:/\(/,e:/\)/,k:t,c:["self"].concat(i)}]};return{aliases:["coffee","cson","iced"],k:t,i:/\/\*/,c:i.concat([{cN:"comment",b:"###",e:"###",c:[e.PWM]},e.HCM,{cN:"function",b:"^\\s*"+r+"\\s*=\\s*"+o,e:"[-=]>",rB:!0,c:[n,s]},{b:/[:\(,=]\s*/,r:0,c:[{cN:"function",b:o,e:"[-=]>",rB:!0,c:[s]}]},{cN:"class",bK:"class",e:"$",i:/[:="\[\]]/,c:[{bK:"extends",eW:!0,i:/[:="\[\]]/,c:[n]},n]},{cN:"attribute",b:r+":",e:":",rB:!0,rE:!0,r:0}])}}),hljs.registerLanguage("cpp",function(e){var t={keyword:"false int float while private char catch export virtual operator sizeof dynamic_cast|10 typedef const_cast|10 const struct for static_cast|10 union namespace unsigned long volatile static protected bool template mutable if public friend do goto auto void enum else break extern using true class asm case typeid short reinterpret_cast|10 default double register explicit signed typename try this switch continue wchar_t inline delete alignof char16_t char32_t constexpr decltype noexcept nullptr static_assert thread_local restrict _Bool complex _Complex _Imaginaryintmax_t uintmax_t int8_t uint8_t int16_t uint16_t int32_t uint32_t  int64_t uint64_tint_least8_t uint_least8_t int_least16_t uint_least16_t int_least32_t uint_least32_tint_least64_t uint_least64_t int_fast8_t uint_fast8_t int_fast16_t uint_fast16_t int_fast32_tuint_fast32_t int_fast64_t uint_fast64_t intptr_t uintptr_t atomic_bool atomic_char atomic_scharatomic_uchar atomic_short atomic_ushort atomic_int atomic_uint atomic_long atomic_ulong atomic_llongatomic_ullong atomic_wchar_t atomic_char16_t atomic_char32_t atomic_intmax_t atomic_uintmax_tatomic_intptr_t atomic_uintptr_t atomic_size_t atomic_ptrdiff_t atomic_int_least8_t atomic_int_least16_tatomic_int_least32_t atomic_int_least64_t atomic_uint_least8_t atomic_uint_least16_t atomic_uint_least32_tatomic_uint_least64_t atomic_int_fast8_t atomic_int_fast16_t atomic_int_fast32_t atomic_int_fast64_tatomic_uint_fast8_t atomic_uint_fast16_t atomic_uint_fast32_t atomic_uint_fast64_t",built_in:"std string cin cout cerr clog stringstream istringstream ostringstream auto_ptr deque list queue stack vector map set bitset multiset multimap unordered_set unordered_map unordered_multiset unordered_multimap array shared_ptr abort abs acos asin atan2 atan calloc ceil cosh cos exit exp fabs floor fmod fprintf fputs free frexp fscanf isalnum isalpha iscntrl isdigit isgraph islower isprint ispunct isspace isupper isxdigit tolower toupper labs ldexp log10 log malloc memchr memcmp memcpy memset modf pow printf putchar puts scanf sinh sin snprintf sprintf sqrt sscanf strcat strchr strcmp strcpy strcspn strlen strncat strncmp strncpy strpbrk strrchr strspn strstr tanh tan vfprintf vprintf vsprintf"};return{aliases:["c","h","c++","h++"],k:t,i:"</",c:[e.CLCM,e.CBCM,e.QSM,{cN:"string",b:"'\\\\?.",e:"'",i:"."},{cN:"number",b:"\\b(\\d+(\\.\\d*)?|\\.\\d+)(u|U|l|L|ul|UL|f|F)"},e.CNM,{cN:"preprocessor",b:"#",e:"$",k:"if else elif endif define undef warning error line pragma",c:[{b:'include\\s*[<"]',e:'[>"]',k:"include",i:"\\n"},e.CLCM]},{cN:"stl_container",b:"\\b(deque|list|queue|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array)\\s*<",e:">",k:t,c:["self"]},{b:e.IR+"::"},{bK:"new throw return",r:0},{cN:"function",b:"("+e.IR+"\\s+)+"+e.IR+"\\s*\\(",rB:!0,e:/[{;=]/,eE:!0,k:t,c:[{b:e.IR+"\\s*\\(",rB:!0,c:[e.TM],r:0},{cN:"params",b:/\(/,e:/\)/,k:t,r:0,c:[e.CBCM]},e.CLCM,e.CBCM]}]}
}),hljs.registerLanguage("cs",function(e){var t="abstract as base bool break byte case catch char checked const continue decimal default delegate do double else enum event explicit extern false finally fixed float for foreach goto if implicit in int interface internal is lock long null object operator out override params private protected public readonly ref sbyte sealed short sizeof stackalloc static string struct switch this true try typeof uint ulong unchecked unsafe ushort using virtual volatile void while async protected public private internal ascending descending from get group into join let orderby partial select set value var where yield",r=e.IR+"(<"+e.IR+">)?";return{aliases:["csharp"],k:t,i:/::/,c:[{cN:"comment",b:"///",e:"$",rB:!0,c:[{cN:"xmlDocTag",v:[{b:"///",r:0},{b:"<!--|-->"},{b:"</?",e:">"}]}]},e.CLCM,e.CBCM,{cN:"preprocessor",b:"#",e:"$",k:"if else elif endif define undef warning error line region endregion pragma checksum"},{cN:"string",b:'@"',e:'"',c:[{b:'""'}]},e.ASM,e.QSM,e.CNM,{bK:"class namespace interface",e:/[{;=]/,i:/[^\s:]/,c:[e.TM,e.CLCM,e.CBCM]},{bK:"new return throw await",r:0},{cN:"function",b:"("+r+"\\s+)+"+e.IR+"\\s*\\(",rB:!0,e:/[{;=]/,eE:!0,k:t,c:[{b:e.IR+"\\s*\\(",rB:!0,c:[e.TM],r:0},{cN:"params",b:/\(/,e:/\)/,k:t,r:0,c:[e.ASM,e.QSM,e.CNM,e.CBCM]},e.CLCM,e.CBCM]}]}}),hljs.registerLanguage("css",function(e){var t="[a-zA-Z-][a-zA-Z0-9_-]*",r={cN:"function",b:t+"\\(",rB:!0,eE:!0,e:"\\("};return{cI:!0,i:"[=/|']",c:[e.CBCM,{cN:"id",b:"\\#[A-Za-z0-9_-]+"},{cN:"class",b:"\\.[A-Za-z0-9_-]+",r:0},{cN:"attr_selector",b:"\\[",e:"\\]",i:"$"},{cN:"pseudo",b:":(:)?[a-zA-Z0-9\\_\\-\\+\\(\\)\\\"\\']+"},{cN:"at_rule",b:"@(font-face|page)",l:"[a-z-]+",k:"font-face page"},{cN:"at_rule",b:"@",e:"[{;]",c:[{cN:"keyword",b:/\S+/},{b:/\s/,eW:!0,eE:!0,r:0,c:[r,e.ASM,e.QSM,e.CSSNM]}]},{cN:"tag",b:t,r:0},{cN:"rules",b:"{",e:"}",i:"[^\\s]",r:0,c:[e.CBCM,{cN:"rule",b:"[^\\s]",rB:!0,e:";",eW:!0,c:[{cN:"attribute",b:"[A-Z\\_\\.\\-]+",e:":",eE:!0,i:"[^\\s]",starts:{cN:"value",eW:!0,eE:!0,c:[r,e.CSSNM,e.QSM,e.ASM,e.CBCM,{cN:"hexcolor",b:"#[0-9A-Fa-f]+"},{cN:"important",b:"!important"}]}}]}]}]}}),hljs.registerLanguage("d",function(e){var t={keyword:"abstract alias align asm assert auto body break byte case cast catch class const continue debug default delete deprecated do else enum export extern final finally for foreach foreach_reverse|10 goto if immutable import in inout int interface invariant is lazy macro mixin module new nothrow out override package pragma private protected public pure ref return scope shared static struct super switch synchronized template this throw try typedef typeid typeof union unittest version void volatile while with __FILE__ __LINE__ __gshared|10 __thread __traits __DATE__ __EOF__ __TIME__ __TIMESTAMP__ __VENDOR__ __VERSION__",built_in:"bool cdouble cent cfloat char creal dchar delegate double dstring float function idouble ifloat ireal long real short string ubyte ucent uint ulong ushort wchar wstring",literal:"false null true"},r="(0|[1-9][\\d_]*)",a="(0|[1-9][\\d_]*|\\d[\\d_]*|[\\d_]+?\\d)",i="0[bB][01_]+",n="([\\da-fA-F][\\da-fA-F_]*|_[\\da-fA-F][\\da-fA-F_]*)",o="0[xX]"+n,s="([eE][+-]?"+a+")",l="("+a+"(\\.\\d*|"+s+")|\\d+\\."+a+a+"|\\."+r+s+"?)",c="(0[xX]("+n+"\\."+n+"|\\.?"+n+")[pP][+-]?"+a+")",p="("+r+"|"+i+"|"+o+")",d="("+c+"|"+l+")",u="\\\\(['\"\\?\\\\abfnrtv]|u[\\dA-Fa-f]{4}|[0-7]{1,3}|x[\\dA-Fa-f]{2}|U[\\dA-Fa-f]{8})|&[a-zA-Z\\d]{2,};",m={cN:"number",b:"\\b"+p+"(L|u|U|Lu|LU|uL|UL)?",r:0},b={cN:"number",b:"\\b("+d+"([fF]|L|i|[fF]i|Li)?|"+p+"(i|[fF]i|Li))",r:0},g={cN:"string",b:"'("+u+"|.)",e:"'",i:"."},f={b:u,r:0},v={cN:"string",b:'"',c:[f],e:'"[cwd]?'},h={cN:"string",b:'[rq]"',e:'"[cwd]?',r:5},_={cN:"string",b:"`",e:"`[cwd]?"},y={cN:"string",b:'x"[\\da-fA-F\\s\\n\\r]*"[cwd]?',r:10},x={cN:"string",b:'q"\\{',e:'\\}"'},S={cN:"shebang",b:"^#!",e:"$",r:5},C={cN:"preprocessor",b:"#(line)",e:"$",r:5},w={cN:"keyword",b:"@[a-zA-Z_][a-zA-Z_\\d]*"},N={cN:"comment",b:"\\/\\+",c:["self"],e:"\\+\\/",r:10};return{l:e.UIR,k:t,c:[e.CLCM,e.CBCM,N,y,v,h,_,x,b,m,g,S,C,w]}}),hljs.registerLanguage("markdown",function(){return{aliases:["md","mkdown","mkd"],c:[{cN:"header",v:[{b:"^#{1,6}",e:"$"},{b:"^.+?\\n[=-]{2,}$"}]},{b:"<",e:">",sL:"xml",r:0},{cN:"bullet",b:"^([*+-]|(\\d+\\.))\\s+"},{cN:"strong",b:"[*_]{2}.+?[*_]{2}"},{cN:"emphasis",v:[{b:"\\*.+?\\*"},{b:"_.+?_",r:0}]},{cN:"blockquote",b:"^>\\s+",e:"$"},{cN:"code",v:[{b:"`.+?`"},{b:"^( {4}|	)",e:"$",r:0}]},{cN:"horizontal_rule",b:"^[-\\*]{3,}",e:"$"},{b:"\\[.+?\\][\\(\\[].*?[\\)\\]]",rB:!0,c:[{cN:"link_label",b:"\\[",e:"\\]",eB:!0,rE:!0,r:0},{cN:"link_url",b:"\\]\\(",e:"\\)",eB:!0,eE:!0},{cN:"link_reference",b:"\\]\\[",e:"\\]",eB:!0,eE:!0}],r:10},{b:"^\\[.+\\]:",rB:!0,c:[{cN:"link_reference",b:"\\[",e:"\\]:",eB:!0,eE:!0,starts:{cN:"link_url",e:"$"}}]}]}}),hljs.registerLanguage("dart",function(e){var t={cN:"subst",b:"\\$\\{",e:"}",k:"true false null this is new super"},r={cN:"string",v:[{b:"r'''",e:"'''"},{b:'r"""',e:'"""'},{b:"r'",e:"'",i:"\\n"},{b:'r"',e:'"',i:"\\n"},{b:"'''",e:"'''",c:[e.BE,t]},{b:'"""',e:'"""',c:[e.BE,t]},{b:"'",e:"'",i:"\\n",c:[e.BE,t]},{b:'"',e:'"',i:"\\n",c:[e.BE,t]}]};t.c=[e.CNM,r];var a={keyword:"assert break case catch class const continue default do else enum extends false final finally for if in is new null rethrow return super switch this throw true try var void while with",literal:"abstract as dynamic export external factory get implements import library operator part set static typedef",built_in:"print Comparable DateTime Duration Function Iterable Iterator List Map Match Null Object Pattern RegExp Set Stopwatch String StringBuffer StringSink Symbol Type Uri bool double int num document window querySelector querySelectorAll Element ElementList"};return{k:a,c:[r,{cN:"dartdoc",b:"/\\*\\*",e:"\\*/",sL:"markdown",subLanguageMode:"continuous"},{cN:"dartdoc",b:"///",e:"$",sL:"markdown",subLanguageMode:"continuous"},e.CLCM,e.CBCM,{cN:"class",bK:"class interface",e:"{",eE:!0,c:[{bK:"extends implements"},e.UTM]},e.CNM,{cN:"annotation",b:"@[A-Za-z]+"},{b:"=>"}]}}),hljs.registerLanguage("delphi",function(e){var t="exports register file shl array record property for mod while set ally label uses raise not stored class safecall var interface or private static exit index inherited to else stdcall override shr asm far resourcestring finalization packed virtual out and protected library do xorwrite goto near function end div overload object unit begin string on inline repeat until destructor write message program with read initialization except default nil if case cdecl in downto threadvar of try pascal const external constructor type public then implementation finally published procedure",r={cN:"comment",v:[{b:/\{/,e:/\}/,r:0},{b:/\(\*/,e:/\*\)/,r:10}]},a={cN:"string",b:/'/,e:/'/,c:[{b:/''/}]},i={cN:"string",b:/(#\d+)+/},n={b:e.IR+"\\s*=\\s*class\\s*\\(",rB:!0,c:[e.TM]},o={cN:"function",bK:"function constructor destructor procedure",e:/[:;]/,k:"function constructor|10 destructor|10 procedure|10",c:[e.TM,{cN:"params",b:/\(/,e:/\)/,k:t,c:[a,i]},r]};return{cI:!0,k:t,i:/"|\$[G-Zg-z]|\/\*|<\/|\|/,c:[r,e.CLCM,a,i,e.NM,n,o]}}),hljs.registerLanguage("diff",function(){return{aliases:["patch"],c:[{cN:"chunk",r:10,v:[{b:/^\@\@ +\-\d+,\d+ +\+\d+,\d+ +\@\@$/},{b:/^\*\*\* +\d+,\d+ +\*\*\*\*$/},{b:/^\-\-\- +\d+,\d+ +\-\-\-\-$/}]},{cN:"header",v:[{b:/Index: /,e:/$/},{b:/=====/,e:/=====$/},{b:/^\-\-\-/,e:/$/},{b:/^\*{3} /,e:/$/},{b:/^\+\+\+/,e:/$/},{b:/\*{5}/,e:/\*{5}$/}]},{cN:"addition",b:"^\\+",e:"$"},{cN:"deletion",b:"^\\-",e:"$"},{cN:"change",b:"^\\!",e:"$"}]}}),hljs.registerLanguage("django",function(){var e={cN:"filter",b:/\|[A-Za-z]+\:?/,k:"truncatewords removetags linebreaksbr yesno get_digit timesince random striptags filesizeformat escape linebreaks length_is ljust rjust cut urlize fix_ampersands title floatformat capfirst pprint divisibleby add make_list unordered_list urlencode timeuntil urlizetrunc wordcount stringformat linenumbers slice date dictsort dictsortreversed default_if_none pluralize lower join center default truncatewords_html upper length phone2numeric wordwrap time addslashes slugify first escapejs force_escape iriencode last safe safeseq truncatechars localize unlocalize localtime utc timezone",c:[{cN:"argument",b:/"/,e:/"/},{cN:"argument",b:/'/,e:/'/}]};return{aliases:["jinja"],cI:!0,sL:"xml",subLanguageMode:"continuous",c:[{cN:"comment",b:/\{%\s*comment\s*%}/,e:/\{%\s*endcomment\s*%}/},{cN:"comment",b:/\{#/,e:/#}/},{cN:"template_tag",b:/\{%/,e:/%}/,k:"comment endcomment load templatetag ifchanged endifchanged if endif firstof for endfor in ifnotequal endifnotequal widthratio extends include spaceless endspaceless regroup by as ifequal endifequal ssi now with cycle url filter endfilter debug block endblock else autoescape endautoescape csrf_token empty elif endwith static trans blocktrans endblocktrans get_static_prefix get_media_prefix plural get_current_language language get_available_languages get_current_language_bidi get_language_info get_language_info_list localize endlocalize localtime endlocaltime timezone endtimezone get_current_timezone verbatim",c:[e]},{cN:"variable",b:/\{\{/,e:/}}/,c:[e]}]}}),hljs.registerLanguage("dos",function(e){var t={cN:"comment",b:/@?rem\b/,e:/$/,r:10},r={cN:"label",b:"^\\s*[A-Za-z._?][A-Za-z0-9_$#@~.?]*(:|\\s+label)",r:0};return{aliases:["bat","cmd"],cI:!0,k:{flow:"if else goto for in do call exit not exist errorlevel defined",operator:"equ neq lss leq gtr geq",keyword:"shift cd dir echo setlocal endlocal set pause copy",stream:"prn nul lpt3 lpt2 lpt1 con com4 com3 com2 com1 aux",winutils:"ping net ipconfig taskkill xcopy ren del",built_in:"append assoc at attrib break cacls cd chcp chdir chkdsk chkntfs cls cmd color comp compact convert date dir diskcomp diskcopy doskey erase fs find findstr format ftype graftabl help keyb label md mkdir mode more move path pause print popd pushd promt rd recover rem rename replace restore rmdir shiftsort start subst time title tree type ver verify vol"},c:[{cN:"envvar",b:/%%[^ ]|%[^ ]+?%|![^ ]+?!/},{cN:"function",b:r.b,e:"goto:eof",c:[e.inherit(e.TM,{b:"([_a-zA-Z]\\w*\\.)*([_a-zA-Z]\\w*:)?[_a-zA-Z]\\w*"}),t]},{cN:"number",b:"\\b\\d+",r:0},t]}}),hljs.registerLanguage("dust",function(){var e="if eq ne lt lte gt gte select default math sep";return{aliases:["dst"],cI:!0,sL:"xml",subLanguageMode:"continuous",c:[{cN:"expression",b:"{",e:"}",r:0,c:[{cN:"begin-block",b:"#[a-zA-Z- .]+",k:e},{cN:"string",b:'"',e:'"'},{cN:"end-block",b:"\\/[a-zA-Z- .]+",k:e},{cN:"variable",b:"[a-zA-Z-.]+",k:e,r:0}]}]}}),hljs.registerLanguage("elixir",function(e){var t="[a-zA-Z_][a-zA-Z0-9_]*(\\!|\\?)?",r="[a-zA-Z_]\\w*[!?=]?|[-+~]\\@|<<|>>|=~|===?|<=>|[<>]=?|\\*\\*|[-/+%^&*~`|]|\\[\\]=?",a="and false then defined module in return redo retry end for true self when next until do begin unless nil break not case cond alias while ensure or include use alias fn quote",i={cN:"subst",b:"#\\{",e:"}",l:t,k:a},n={cN:"string",c:[e.BE,i],v:[{b:/'/,e:/'/},{b:/"/,e:/"/}]},o={eW:!0,rE:!0,l:t,k:a,r:0},s={cN:"function",bK:"def defmacro",e:/\bdo\b/,c:[e.inherit(e.TM,{b:r,starts:o})]},l=e.inherit(s,{cN:"class",bK:"defmodule defrecord",e:/\bdo\b|$|;/}),c=[n,e.HCM,l,s,{cN:"constant",b:"(\\b[A-Z_]\\w*(.)?)+",r:0},{cN:"symbol",b:":",c:[n,{b:r}],r:0},{cN:"symbol",b:t+":",r:0},{cN:"number",b:"(\\b0[0-7_]+)|(\\b0x[0-9a-fA-F_]+)|(\\b[1-9][0-9_]*(\\.[0-9_]+)?)|[0_]\\b",r:0},{cN:"variable",b:"(\\$\\W)|((\\$|\\@\\@?)(\\w+))"},{b:"->"},{b:"("+e.RSR+")\\s*",c:[e.HCM,{cN:"regexp",i:"\\n",c:[e.BE,i],v:[{b:"/",e:"/[a-z]*"},{b:"%r\\[",e:"\\][a-z]*"}]}],r:0}];return i.c=c,o.c=c,{l:t,k:a,c:c}}),hljs.registerLanguage("ruby",function(e){var t="[a-zA-Z_]\\w*[!?=]?|[-+~]\\@|<<|>>|=~|===?|<=>|[<>]=?|\\*\\*|[-/+%^&*~`|]|\\[\\]=?",r="and false then defined module in return redo if BEGIN retry end for true self when next until do begin unless END rescue nil else break undef not super class case require yield alias while ensure elsif or include attr_reader attr_writer attr_accessor",a={cN:"yardoctag",b:"@[A-Za-z]+"},i={cN:"value",b:"#<",e:">"},n={cN:"comment",v:[{b:"#",e:"$",c:[a]},{b:"^\\=begin",e:"^\\=end",c:[a],r:10},{b:"^__END__",e:"\\n$"}]},o={cN:"subst",b:"#\\{",e:"}",k:r},s={cN:"string",c:[e.BE,o],v:[{b:/'/,e:/'/},{b:/"/,e:/"/},{b:/`/,e:/`/},{b:"%[qQwWx]?\\(",e:"\\)"},{b:"%[qQwWx]?\\[",e:"\\]"},{b:"%[qQwWx]?{",e:"}"},{b:"%[qQwWx]?<",e:">"},{b:"%[qQwWx]?/",e:"/"},{b:"%[qQwWx]?%",e:"%"},{b:"%[qQwWx]?-",e:"-"},{b:"%[qQwWx]?\\|",e:"\\|"},{b:/\B\?(\\\d{1,3}|\\x[A-Fa-f0-9]{1,2}|\\u[A-Fa-f0-9]{4}|\\?\S)\b/}]},l={cN:"params",b:"\\(",e:"\\)",k:r},c=[s,i,n,{cN:"class",bK:"class module",e:"$|;",i:/=/,c:[e.inherit(e.TM,{b:"[A-Za-z_]\\w*(::\\w+)*(\\?|\\!)?"}),{cN:"inheritance",b:"<\\s*",c:[{cN:"parent",b:"("+e.IR+"::)?"+e.IR}]},n]},{cN:"function",bK:"def",e:" |$|;",r:0,c:[e.inherit(e.TM,{b:t}),l,n]},{cN:"constant",b:"(::)?(\\b[A-Z]\\w*(::)?)+",r:0},{cN:"symbol",b:e.UIR+"(\\!|\\?)?:",r:0},{cN:"symbol",b:":",c:[s,{b:t}],r:0},{cN:"number",b:"(\\b0[0-7_]+)|(\\b0x[0-9a-fA-F_]+)|(\\b[1-9][0-9_]*(\\.[0-9_]+)?)|[0_]\\b",r:0},{cN:"variable",b:"(\\$\\W)|((\\$|\\@\\@?)(\\w+))"},{b:"("+e.RSR+")\\s*",c:[i,n,{cN:"regexp",c:[e.BE,o],i:/\n/,v:[{b:"/",e:"/[a-z]*"},{b:"%r{",e:"}[a-z]*"},{b:"%r\\(",e:"\\)[a-z]*"},{b:"%r!",e:"![a-z]*"},{b:"%r\\[",e:"\\][a-z]*"}]}],r:0}];o.c=c,l.c=c;var p="[>?]>",d="[\\w#]+\\(\\w+\\):\\d+:\\d+>",u="(\\w+-)?\\d+\\.\\d+\\.\\d(p\\d+)?[^>]+>",m=[{b:/^\s*=>/,cN:"status",starts:{e:"$",c:c}},{cN:"prompt",b:"^("+p+"|"+d+"|"+u+")",starts:{e:"$",c:c}}];return{aliases:["rb","gemspec","podspec","thor","irb"],k:r,c:[n].concat(m).concat(c)}}),hljs.registerLanguage("erb",function(){return{sL:"xml",subLanguageMode:"continuous",c:[{cN:"comment",b:"<%#",e:"%>"},{b:"<%[%=-]?",e:"[%-]?%>",sL:"ruby",eB:!0,eE:!0}]}}),hljs.registerLanguage("erlang-repl",function(e){return{k:{special_functions:"spawn spawn_link self",reserved:"after and andalso|10 band begin bnot bor bsl bsr bxor case catch cond div end fun if let not of or orelse|10 query receive rem try when xor"},c:[{cN:"prompt",b:"^[0-9]+> ",r:10},{cN:"comment",b:"%",e:"$"},{cN:"number",b:"\\b(\\d+#[a-fA-F0-9]+|\\d+(\\.\\d+)?([eE][-+]?\\d+)?)",r:0},e.ASM,e.QSM,{cN:"constant",b:"\\?(::)?([A-Z]\\w*(::)?)+"},{cN:"arrow",b:"->"},{cN:"ok",b:"ok"},{cN:"exclamation_mark",b:"!"},{cN:"function_or_atom",b:"(\\b[a-z'][a-zA-Z0-9_']*:[a-z'][a-zA-Z0-9_']*)|(\\b[a-z'][a-zA-Z0-9_']*)",r:0},{cN:"variable",b:"[A-Z][a-zA-Z0-9_']*",r:0}]}}),hljs.registerLanguage("erlang",function(e){var t="[a-z'][a-zA-Z0-9_']*",r="("+t+":"+t+"|"+t+")",a={keyword:"after and andalso|10 band begin bnot bor bsl bzr bxor case catch cond div end fun if let not of orelse|10 query receive rem try when xor",literal:"false true"},i={cN:"comment",b:"%",e:"$"},n={cN:"number",b:"\\b(\\d+#[a-fA-F0-9]+|\\d+(\\.\\d+)?([eE][-+]?\\d+)?)",r:0},o={b:"fun\\s+"+t+"/\\d+"},s={b:r+"\\(",e:"\\)",rB:!0,r:0,c:[{cN:"function_name",b:r,r:0},{b:"\\(",e:"\\)",eW:!0,rE:!0,r:0}]},l={cN:"tuple",b:"{",e:"}",r:0},c={cN:"variable",b:"\\b_([A-Z][A-Za-z0-9_]*)?",r:0},p={cN:"variable",b:"[A-Z][a-zA-Z0-9_]*",r:0},d={b:"#"+e.UIR,r:0,rB:!0,c:[{cN:"record_name",b:"#"+e.UIR,r:0},{b:"{",e:"}",r:0}]},u={bK:"fun receive if try case",e:"end",k:a};u.c=[i,o,e.inherit(e.ASM,{cN:""}),u,s,e.QSM,n,l,c,p,d];var m=[i,o,u,s,e.QSM,n,l,c,p,d];s.c[1].c=m,l.c=m,d.c[1].c=m;var b={cN:"params",b:"\\(",e:"\\)",c:m};return{aliases:["erl"],k:a,i:"(</|\\*=|\\+=|-=|/\\*|\\*/|\\(\\*|\\*\\))",c:[{cN:"function",b:"^"+t+"\\s*\\(",e:"->",rB:!0,i:"\\(|#|//|/\\*|\\\\|:|;",c:[b,e.inherit(e.TM,{b:t})],starts:{e:";|\\.",k:a,c:m}},i,{cN:"pp",b:"^-",e:"\\.",r:0,eE:!0,rB:!0,l:"-"+e.IR,k:"-module -record -undef -export -ifdef -ifndef -author -copyright -doc -vsn -import -include -include_lib -compile -define -else -endif -file -behaviour -behavior -spec",c:[b]},n,e.QSM,d,c,p,l,{b:/\.$/}]}}),hljs.registerLanguage("fix",function(){return{c:[{b:/[^\u2401\u0001]+/,e:/[\u2401\u0001]/,eE:!0,rB:!0,rE:!1,c:[{b:/([^\u2401\u0001=]+)/,e:/=([^\u2401\u0001=]+)/,rE:!0,rB:!1,cN:"attribute"},{b:/=/,e:/([\u2401\u0001])/,eE:!0,eB:!0,cN:"string"}]}],cI:!0}}),hljs.registerLanguage("fsharp",function(e){var t={b:"<",e:">",c:[e.inherit(e.TM,{b:/'[a-zA-Z0-9_]+/})]};return{aliases:["fs"],k:"yield! return! let! do!abstract and as assert base begin class default delegate do done downcast downto elif else end exception extern false finally for fun function global if in inherit inline interface internal lazy let match member module mutable namespace new null of open or override private public rec return sig static struct then to true try type upcast use val void when while with yield",c:[{cN:"string",b:'@"',e:'"',c:[{b:'""'}]},{cN:"string",b:'"""',e:'"""'},{cN:"comment",b:"\\(\\*",e:"\\*\\)"},{cN:"class",bK:"type",e:"\\(|=|$",eE:!0,c:[e.UTM,t]},{cN:"annotation",b:"\\[<",e:">\\]",r:10},{cN:"attribute",b:"\\B('[A-Za-z])\\b",c:[e.BE]},e.CLCM,e.inherit(e.QSM,{i:null}),e.CNM]}}),hljs.registerLanguage("gcode",function(e){var t="[A-Z_][A-Z0-9_.]*",r="\\%",a={literal:"",built_in:"",keyword:"IF DO WHILE ENDWHILE CALL ENDIF SUB ENDSUB GOTO REPEAT ENDREPEAT EQ LT GT NE GE LE OR XOR"},i={cN:"preprocessor",b:"([O])([0-9]+)"},n=[e.CLCM,{cN:"comment",b:/\(/,e:/\)/,c:[e.PWM]},e.CBCM,e.inherit(e.CNM,{b:"([-+]?([0-9]*\\.?[0-9]+\\.?))|"+e.CNR}),e.inherit(e.ASM,{i:null}),e.inherit(e.QSM,{i:null}),{cN:"keyword",b:"([G])([0-9]+\\.?[0-9]?)"},{cN:"title",b:"([M])([0-9]+\\.?[0-9]?)"},{cN:"title",b:"(VC|VS|#)",e:"(\\d+)"},{cN:"title",b:"(VZOFX|VZOFY|VZOFZ)"},{cN:"built_in",b:"(ATAN|ABS|ACOS|ASIN|SIN|COS|EXP|FIX|FUP|ROUND|LN|TAN)(\\[)",e:"([-+]?([0-9]*\\.?[0-9]+\\.?))(\\])"},{cN:"label",v:[{b:"N",e:"\\d+",i:"\\W"}]}];return{aliases:["nc"],cI:!0,l:t,k:a,c:[{cN:"preprocessor",b:r},i].concat(n)}}),hljs.registerLanguage("gherkin",function(e){return{aliases:["feature"],k:"Feature Background Ability Business Need Scenario Scenarios Scenario Outline Scenario Template Examples Given And Then But When",c:[{cN:"keyword",b:"\\*"},{cN:"comment",b:"@[^@\r\n	 ]+",e:"$"},{cN:"string",b:"\\|",e:"\\$"},{cN:"variable",b:"<",e:">"},e.HCM,{cN:"string",b:'"""',e:'"""'},e.QSM]}}),hljs.registerLanguage("glsl",function(e){return{k:{keyword:"atomic_uint attribute bool break bvec2 bvec3 bvec4 case centroid coherent const continue default discard dmat2 dmat2x2 dmat2x3 dmat2x4 dmat3 dmat3x2 dmat3x3 dmat3x4 dmat4 dmat4x2 dmat4x3 dmat4x4 do double dvec2 dvec3 dvec4 else flat float for highp if iimage1D iimage1DArray iimage2D iimage2DArray iimage2DMS iimage2DMSArray iimage2DRect iimage3D iimageBuffer iimageCube iimageCubeArray image1D image1DArray image2D image2DArray image2DMS image2DMSArray image2DRect image3D imageBuffer imageCube imageCubeArray in inout int invariant isampler1D isampler1DArray isampler2D isampler2DArray isampler2DMS isampler2DMSArray isampler2DRect isampler3D isamplerBuffer isamplerCube isamplerCubeArray ivec2 ivec3 ivec4 layout lowp mat2 mat2x2 mat2x3 mat2x4 mat3 mat3x2 mat3x3 mat3x4 mat4 mat4x2 mat4x3 mat4x4 mediump noperspective out patch precision readonly restrict return sample sampler1D sampler1DArray sampler1DArrayShadow sampler1DShadow sampler2D sampler2DArray sampler2DArrayShadow sampler2DMS sampler2DMSArray sampler2DRect sampler2DRectShadow sampler2DShadow sampler3D samplerBuffer samplerCube samplerCubeArray samplerCubeArrayShadow samplerCubeShadow smooth struct subroutine switch uimage1D uimage1DArray uimage2D uimage2DArray uimage2DMS uimage2DMSArray uimage2DRect uimage3D uimageBuffer uimageCube uimageCubeArray uint uniform usampler1D usampler1DArray usampler2D usampler2DArray usampler2DMS usampler2DMSArray usampler2DRect usampler3D usamplerBuffer usamplerCube usamplerCubeArray uvec2 uvec3 uvec4 varying vec2 vec3 vec4 void volatile while writeonly",built_in:"gl_BackColor gl_BackLightModelProduct gl_BackLightProduct gl_BackMaterial gl_BackSecondaryColor gl_ClipDistance gl_ClipPlane gl_ClipVertex gl_Color gl_DepthRange gl_EyePlaneQ gl_EyePlaneR gl_EyePlaneS gl_EyePlaneT gl_Fog gl_FogCoord gl_FogFragCoord gl_FragColor gl_FragCoord gl_FragData gl_FragDepth gl_FrontColor gl_FrontFacing gl_FrontLightModelProduct gl_FrontLightProduct gl_FrontMaterial gl_FrontSecondaryColor gl_InstanceID gl_InvocationID gl_Layer gl_LightModel gl_LightSource gl_MaxAtomicCounterBindings gl_MaxAtomicCounterBufferSize gl_MaxClipDistances gl_MaxClipPlanes gl_MaxCombinedAtomicCounterBuffers gl_MaxCombinedAtomicCounters gl_MaxCombinedImageUniforms gl_MaxCombinedImageUnitsAndFragmentOutputs gl_MaxCombinedTextureImageUnits gl_MaxDrawBuffers gl_MaxFragmentAtomicCounterBuffers gl_MaxFragmentAtomicCounters gl_MaxFragmentImageUniforms gl_MaxFragmentInputComponents gl_MaxFragmentUniformComponents gl_MaxFragmentUniformVectors gl_MaxGeometryAtomicCounterBuffers gl_MaxGeometryAtomicCounters gl_MaxGeometryImageUniforms gl_MaxGeometryInputComponents gl_MaxGeometryOutputComponents gl_MaxGeometryOutputVertices gl_MaxGeometryTextureImageUnits gl_MaxGeometryTotalOutputComponents gl_MaxGeometryUniformComponents gl_MaxGeometryVaryingComponents gl_MaxImageSamples gl_MaxImageUnits gl_MaxLights gl_MaxPatchVertices gl_MaxProgramTexelOffset gl_MaxTessControlAtomicCounterBuffers gl_MaxTessControlAtomicCounters gl_MaxTessControlImageUniforms gl_MaxTessControlInputComponents gl_MaxTessControlOutputComponents gl_MaxTessControlTextureImageUnits gl_MaxTessControlTotalOutputComponents gl_MaxTessControlUniformComponents gl_MaxTessEvaluationAtomicCounterBuffers gl_MaxTessEvaluationAtomicCounters gl_MaxTessEvaluationImageUniforms gl_MaxTessEvaluationInputComponents gl_MaxTessEvaluationOutputComponents gl_MaxTessEvaluationTextureImageUnits gl_MaxTessEvaluationUniformComponents gl_MaxTessGenLevel gl_MaxTessPatchComponents gl_MaxTextureCoords gl_MaxTextureImageUnits gl_MaxTextureUnits gl_MaxVaryingComponents gl_MaxVaryingFloats gl_MaxVaryingVectors gl_MaxVertexAtomicCounterBuffers gl_MaxVertexAtomicCounters gl_MaxVertexAttribs gl_MaxVertexImageUniforms gl_MaxVertexOutputComponents gl_MaxVertexTextureImageUnits gl_MaxVertexUniformComponents gl_MaxVertexUniformVectors gl_MaxViewports gl_MinProgramTexelOffsetgl_ModelViewMatrix gl_ModelViewMatrixInverse gl_ModelViewMatrixInverseTranspose gl_ModelViewMatrixTranspose gl_ModelViewProjectionMatrix gl_ModelViewProjectionMatrixInverse gl_ModelViewProjectionMatrixInverseTranspose gl_ModelViewProjectionMatrixTranspose gl_MultiTexCoord0 gl_MultiTexCoord1 gl_MultiTexCoord2 gl_MultiTexCoord3 gl_MultiTexCoord4 gl_MultiTexCoord5 gl_MultiTexCoord6 gl_MultiTexCoord7 gl_Normal gl_NormalMatrix gl_NormalScale gl_ObjectPlaneQ gl_ObjectPlaneR gl_ObjectPlaneS gl_ObjectPlaneT gl_PatchVerticesIn gl_PerVertex gl_Point gl_PointCoord gl_PointSize gl_Position gl_PrimitiveID gl_PrimitiveIDIn gl_ProjectionMatrix gl_ProjectionMatrixInverse gl_ProjectionMatrixInverseTranspose gl_ProjectionMatrixTranspose gl_SampleID gl_SampleMask gl_SampleMaskIn gl_SamplePosition gl_SecondaryColor gl_TessCoord gl_TessLevelInner gl_TessLevelOuter gl_TexCoord gl_TextureEnvColor gl_TextureMatrixInverseTranspose gl_TextureMatrixTranspose gl_Vertex gl_VertexID gl_ViewportIndex gl_in gl_out EmitStreamVertex EmitVertex EndPrimitive EndStreamPrimitive abs acos acosh all any asin asinh atan atanh atomicCounter atomicCounterDecrement atomicCounterIncrement barrier bitCount bitfieldExtract bitfieldInsert bitfieldReverse ceil clamp cos cosh cross dFdx dFdy degrees determinant distance dot equal exp exp2 faceforward findLSB findMSB floatBitsToInt floatBitsToUint floor fma fract frexp ftransform fwidth greaterThan greaterThanEqual imageAtomicAdd imageAtomicAnd imageAtomicCompSwap imageAtomicExchange imageAtomicMax imageAtomicMin imageAtomicOr imageAtomicXor imageLoad imageStore imulExtended intBitsToFloat interpolateAtCentroid interpolateAtOffset interpolateAtSample inverse inversesqrt isinf isnan ldexp length lessThan lessThanEqual log log2 matrixCompMult max memoryBarrier min mix mod modf noise1 noise2 noise3 noise4 normalize not notEqual outerProduct packDouble2x32 packHalf2x16 packSnorm2x16 packSnorm4x8 packUnorm2x16 packUnorm4x8 pow radians reflect refract round roundEven shadow1D shadow1DLod shadow1DProj shadow1DProjLod shadow2D shadow2DLod shadow2DProj shadow2DProjLod sign sin sinh smoothstep sqrt step tan tanh texelFetch texelFetchOffset texture texture1D texture1DLod texture1DProj texture1DProjLod texture2D texture2DLod texture2DProj texture2DProjLod texture3D texture3DLod texture3DProj texture3DProjLod textureCube textureCubeLod textureGather textureGatherOffset textureGatherOffsets textureGrad textureGradOffset textureLod textureLodOffset textureOffset textureProj textureProjGrad textureProjGradOffset textureProjLod textureProjLodOffset textureProjOffset textureQueryLod textureSize transpose trunc uaddCarry uintBitsToFloat umulExtended unpackDouble2x32 unpackHalf2x16 unpackSnorm2x16 unpackSnorm4x8 unpackUnorm2x16 unpackUnorm4x8 usubBorrow gl_TextureMatrix gl_TextureMatrixInverse",literal:"true false"},i:'"',c:[e.CLCM,e.CBCM,e.CNM,{cN:"preprocessor",b:"#",e:"$"}]}}),hljs.registerLanguage("go",function(e){var t={keyword:"break default func interface select case map struct chan else goto package switch const fallthrough if range type continue for import return var go defer",constant:"true false iota nil",typename:"bool byte complex64 complex128 float32 float64 int8 int16 int32 int64 string uint8 uint16 uint32 uint64 int uint uintptr rune",built_in:"append cap close complex copy imag len make new panic print println real recover delete"};return{aliases:["golang"],k:t,i:"</",c:[e.CLCM,e.CBCM,e.QSM,{cN:"string",b:"'",e:"[^\\\\]'"},{cN:"string",b:"`",e:"`"},{cN:"number",b:e.CNR+"[dflsi]?",r:0},e.CNM]}}),hljs.registerLanguage("gradle",function(e){return{cI:!0,k:{keyword:"task project allprojects subprojects artifacts buildscript configurations dependencies repositories sourceSets description delete from into include exclude source classpath destinationDir includes options sourceCompatibility targetCompatibility group flatDir doLast doFirst flatten todir fromdir ant def abstract break case catch continue default do else extends final finally for if implements instanceof native new private protected public return static switch synchronized throw throws transient try volatile while strictfp package import false null super this true antlrtask checkstyle codenarc copy boolean byte char class double float int interface long short void compile runTime file fileTree abs any append asList asWritable call collect compareTo count div dump each eachByte eachFile eachLine every find findAll flatten getAt getErr getIn getOut getText grep immutable inject inspect intersect invokeMethods isCase join leftShift minus multiply newInputStream newOutputStream newPrintWriter newReader newWriter next plus pop power previous print println push putAt read readBytes readLines reverse reverseEach round size sort splitEachLine step subMap times toInteger toList tokenize upto waitForOrKill withPrintWriter withReader withStream withWriter withWriterAppend write writeLine"},c:[e.CLCM,e.CBCM,e.ASM,e.QSM,e.NM,e.RM]}}),hljs.registerLanguage("groovy",function(e){return{k:{typename:"byte short char int long boolean float double void",literal:"true false null",keyword:"def as in assert trait super this abstract static volatile transient public private protected synchronized final class interface enum if else for while switch case break default continue throw throws try catch finally implements extends new import package return instanceof"},c:[e.CLCM,{cN:"javadoc",b:"/\\*\\*",e:"\\*//*",r:0,c:[{cN:"javadoctag",b:"(^|\\s)@[A-Za-z]+"}]},e.CBCM,{cN:"string",b:'"""',e:'"""'},{cN:"string",b:"'''",e:"'''"},{cN:"string",b:"\\$/",e:"/\\$",r:10},e.ASM,{cN:"regexp",b:/~?\/[^\/\n]+\//,c:[e.BE]},e.QSM,{cN:"shebang",b:"^#!/usr/bin/env",e:"$",i:"\n"},e.BNM,{cN:"class",bK:"class interface trait enum",e:"{",i:":",c:[{bK:"extends implements"},e.UTM]},e.CNM,{cN:"annotation",b:"@[A-Za-z]+"},{cN:"string",b:/[^\?]{0}[A-Za-z0-9_$]+ *:/},{b:/\?/,e:/\:/},{cN:"label",b:"^\\s*[A-Za-z0-9_$]+:",r:0}]}}),hljs.registerLanguage("haml",function(){return{cI:!0,c:[{cN:"doctype",b:"^!!!( (5|1\\.1|Strict|Frameset|Basic|Mobile|RDFa|XML\\b.*))?$",r:10},{cN:"comment",b:"^\\s*(!=#|=#|-#|/).*$",r:0},{b:"^\\s*(-|=|!=)(?!#)",starts:{e:"\\n",sL:"ruby"}},{cN:"tag",b:"^\\s*%",c:[{cN:"title",b:"\\w+"},{cN:"value",b:"[#\\.]\\w+"},{b:"{\\s*",e:"\\s*}",eE:!0,c:[{b:":\\w+\\s*=>",e:",\\s+",rB:!0,eW:!0,c:[{cN:"symbol",b:":\\w+"},{cN:"string",b:'"',e:'"'},{cN:"string",b:"'",e:"'"},{b:"\\w+",r:0}]}]},{b:"\\(\\s*",e:"\\s*\\)",eE:!0,c:[{b:"\\w+\\s*=",e:"\\s+",rB:!0,eW:!0,c:[{cN:"attribute",b:"\\w+",r:0},{cN:"string",b:'"',e:'"'},{cN:"string",b:"'",e:"'"},{b:"\\w+",r:0}]}]}]},{cN:"bullet",b:"^\\s*[=~]\\s*",r:0},{b:"#{",starts:{e:"}",sL:"ruby"}}]}}),hljs.registerLanguage("handlebars",function(){var e="each in with if else unless bindattr action collection debugger log outlet template unbound view yield";return{aliases:["hbs","html.hbs","html.handlebars"],cI:!0,sL:"xml",subLanguageMode:"continuous",c:[{cN:"expression",b:"{{",e:"}}",c:[{cN:"begin-block",b:"#[a-zA-Z- .]+",k:e},{cN:"string",b:'"',e:'"'},{cN:"end-block",b:"\\/[a-zA-Z- .]+",k:e},{cN:"variable",b:"[a-zA-Z-.]+",k:e}]}]}}),hljs.registerLanguage("haskell",function(e){var t={cN:"comment",v:[{b:"--",e:"$"},{b:"{-",e:"-}",c:["self"]}]},r={cN:"pragma",b:"{-#",e:"#-}"},a={cN:"preprocessor",b:"^#",e:"$"},i={cN:"type",b:"\\b[A-Z][\\w']*",r:0},n={cN:"container",b:"\\(",e:"\\)",i:'"',c:[r,t,a,{cN:"type",b:"\\b[A-Z][\\w]*(\\((\\.\\.|,|\\w+)\\))?"},e.inherit(e.TM,{b:"[_a-z][\\w']*"})]},o={cN:"container",b:"{",e:"}",c:n.c};return{aliases:["hs"],k:"let in if then else case of where do module import hiding qualified type data newtype deriving class instance as default infix infixl infixr foreign export ccall stdcall cplusplus jvm dotnet safe unsafe family forall mdo proc rec",c:[{cN:"module",b:"\\bmodule\\b",e:"where",k:"module where",c:[n,t],i:"\\W\\.|;"},{cN:"import",b:"\\bimport\\b",e:"$",k:"import|0 qualified as hiding",c:[n,t],i:"\\W\\.|;"},{cN:"class",b:"^(\\s*)?(class|instance)\\b",e:"where",k:"class family instance where",c:[i,n,t]},{cN:"typedef",b:"\\b(data|(new)?type)\\b",e:"$",k:"data family type newtype deriving",c:[r,t,i,n,o]},{cN:"default",bK:"default",e:"$",c:[i,n,t]},{cN:"infix",bK:"infix infixl infixr",e:"$",c:[e.CNM,t]},{cN:"foreign",b:"\\bforeign\\b",e:"$",k:"foreign import export ccall stdcall cplusplus jvm dotnet safe unsafe",c:[i,e.QSM,t]},{cN:"shebang",b:"#!\\/usr\\/bin\\/env runhaskell",e:"$"},r,t,a,e.QSM,e.CNM,i,e.inherit(e.TM,{b:"^[_a-z][\\w']*"}),{b:"->|<-"}]}}),hljs.registerLanguage("haxe",function(e){var t="([*]|[a-zA-Z_$][a-zA-Z0-9_$]*)";return{aliases:["hx"],k:{keyword:"break callback case cast catch class continue default do dynamic else enum extends extern for function here if implements import in inline interface never new override package private public return static super switch this throw trace try typedef untyped using var while",literal:"true false null"},c:[e.ASM,e.QSM,e.CLCM,e.CBCM,e.CNM,{cN:"class",bK:"class interface",e:"{",eE:!0,c:[{bK:"extends implements"},e.TM]},{cN:"preprocessor",b:"#",e:"$",k:"if else elseif end error"},{cN:"function",bK:"function",e:"[{;]",eE:!0,i:"\\S",c:[e.TM,{cN:"params",b:"\\(",e:"\\)",c:[e.ASM,e.QSM,e.CLCM,e.CBCM]},{cN:"type",b:":",e:t,r:10}]}]}}),hljs.registerLanguage("http",function(){return{i:"\\S",c:[{cN:"status",b:"^HTTP/[0-9\\.]+",e:"$",c:[{cN:"number",b:"\\b\\d{3}\\b"}]},{cN:"request",b:"^[A-Z]+ (.*?) HTTP/[0-9\\.]+$",rB:!0,e:"$",c:[{cN:"string",b:" ",e:" ",eB:!0,eE:!0}]},{cN:"attribute",b:"^\\w",e:": ",eE:!0,i:"\\n|\\s|=",starts:{cN:"string",e:"$"}},{b:"\\n\\n",starts:{sL:"",eW:!0}}]}}),hljs.registerLanguage("ini",function(e){return{cI:!0,i:/\S/,c:[{cN:"comment",b:";",e:"$"},{cN:"title",b:"^\\[",e:"\\]"},{cN:"setting",b:"^[a-z0-9\\[\\]_-]+[ \\t]*=[ \\t]*",e:"$",c:[{cN:"value",eW:!0,k:"on off true false yes no",c:[e.QSM,e.NM],r:0}]}]}}),hljs.registerLanguage("java",function(e){var t=e.UIR+"(<"+e.UIR+">)?",r="false synchronized int abstract float private char boolean static null if const for true while long strictfp finally protected import native final void enum else break transient catch instanceof byte super volatile case assert short package default double public try this switch continue throws protected public private",a="(\\b(0b[01_]+)|\\b0[xX][a-fA-F0-9_]+|(\\b[\\d_]+(\\.[\\d_]*)?|\\.[\\d_]+)([eE][-+]?\\d+)?)[lLfF]?",i={cN:"number",b:a,r:0};
return{aliases:["jsp"],k:r,i:/<\//,c:[{cN:"javadoc",b:"/\\*\\*",e:"\\*/",r:0,c:[{cN:"javadoctag",b:"(^|\\s)@[A-Za-z]+"}]},e.CLCM,e.CBCM,e.ASM,e.QSM,{cN:"class",bK:"class interface",e:/[{;=]/,eE:!0,k:"class interface",i:/[:"\[\]]/,c:[{bK:"extends implements"},e.UTM]},{bK:"new throw return",r:0},{cN:"function",b:"("+t+"\\s+)+"+e.UIR+"\\s*\\(",rB:!0,e:/[{;=]/,eE:!0,k:r,c:[{b:e.UIR+"\\s*\\(",rB:!0,r:0,c:[e.UTM]},{cN:"params",b:/\(/,e:/\)/,k:r,r:0,c:[e.ASM,e.QSM,e.CNM,e.CBCM]},e.CLCM,e.CBCM]},i,{cN:"annotation",b:"@[A-Za-z]+"}]}}),hljs.registerLanguage("javascript",function(e){return{aliases:["js"],k:{keyword:"in if for while finally var new function do return void else break catch instanceof with throw case default try this switch continue typeof delete let yield const class",literal:"true false null undefined NaN Infinity",built_in:"eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent encodeURI encodeURIComponent escape unescape Object Function Boolean Error EvalError InternalError RangeError ReferenceError StopIteration SyntaxError TypeError URIError Number Math Date String RegExp Array Float32Array Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require module console window document"},c:[{cN:"pi",r:10,v:[{b:/^\s*('|")use strict('|")/},{b:/^\s*('|")use asm('|")/}]},e.ASM,e.QSM,e.CLCM,e.CBCM,e.CNM,{b:"("+e.RSR+"|\\b(case|return|throw)\\b)\\s*",k:"return throw case",c:[e.CLCM,e.CBCM,e.RM,{b:/</,e:/>;/,r:0,sL:"xml"}],r:0},{cN:"function",bK:"function",e:/\{/,eE:!0,c:[e.inherit(e.TM,{b:/[A-Za-z$_][0-9A-Za-z$_]*/}),{cN:"params",b:/\(/,e:/\)/,c:[e.CLCM,e.CBCM],i:/["'\(]/}],i:/\[|%/},{b:/\$[(.]/},{b:"\\."+e.IR,r:0}]}}),hljs.registerLanguage("json",function(e){var t={literal:"true false null"},r=[e.QSM,e.CNM],a={cN:"value",e:",",eW:!0,eE:!0,c:r,k:t},i={b:"{",e:"}",c:[{cN:"attribute",b:'\\s*"',e:'"\\s*:\\s*',eB:!0,eE:!0,c:[e.BE],i:"\\n",starts:a}],i:"\\S"},n={b:"\\[",e:"\\]",c:[e.inherit(a,{cN:null})],i:"\\S"};return r.splice(r.length,0,i,n),{c:r,k:t,i:"\\S"}}),hljs.registerLanguage("lasso",function(e){var t="[a-zA-Z_][a-zA-Z0-9_.]*",r="<\\?(lasso(script)?|=)",a="\\]|\\?>",i={literal:"true false none minimal full all void and or not bw nbw ew new cn ncn lt lte gt gte eq neq rx nrx ft",built_in:"array date decimal duration integer map pair string tag xml null boolean bytes keyword list locale queue set stack staticarray local var variable global data self inherited",keyword:"error_code error_msg error_pop error_push error_reset cache database_names database_schemanames database_tablenames define_tag define_type email_batch encode_set html_comment handle handle_error header if inline iterate ljax_target link link_currentaction link_currentgroup link_currentrecord link_detail link_firstgroup link_firstrecord link_lastgroup link_lastrecord link_nextgroup link_nextrecord link_prevgroup link_prevrecord log loop namespace_using output_none portal private protect records referer referrer repeating resultset rows search_args search_arguments select sort_args sort_arguments thread_atomic value_list while abort case else if_empty if_false if_null if_true loop_abort loop_continue loop_count params params_up return return_value run_children soap_definetag soap_lastrequest soap_lastresponse tag_name ascending average by define descending do equals frozen group handle_failure import in into join let match max min on order parent protected provide public require returnhome skip split_thread sum take thread to trait type where with yield yieldhome"},n={cN:"comment",b:"<!--",e:"-->",r:0},o={cN:"preprocessor",b:"\\[noprocess\\]",starts:{cN:"markup",e:"\\[/noprocess\\]",rE:!0,c:[n]}},s={cN:"preprocessor",b:"\\[/noprocess|"+r},l={cN:"variable",b:"'"+t+"'"},c=[e.CLCM,{cN:"javadoc",b:"/\\*\\*!",e:"\\*/",c:[e.PWM]},e.CBCM,e.inherit(e.CNM,{b:e.CNR+"|(-?infinity|nan)\\b"}),e.inherit(e.ASM,{i:null}),e.inherit(e.QSM,{i:null}),{cN:"string",b:"`",e:"`"},{cN:"variable",v:[{b:"[#$]"+t},{b:"#",e:"\\d+",i:"\\W"}]},{cN:"tag",b:"::\\s*",e:t,i:"\\W"},{cN:"attribute",v:[{b:"-"+e.UIR,r:0},{b:"(\\.\\.\\.)"}]},{cN:"subst",v:[{b:"->\\s*",c:[l]},{b:":=|/(?!\\w)=?|[-+*%=<>&|!?\\\\]+",r:0}]},{cN:"built_in",b:"\\.\\.?\\s*",r:0,c:[l]},{cN:"class",bK:"define",rE:!0,e:"\\(|=>",c:[e.inherit(e.TM,{b:e.UIR+"(=(?!>))?"})]}];return{aliases:["ls","lassoscript"],cI:!0,l:t+"|&[lg]t;",k:i,c:[{cN:"preprocessor",b:a,r:0,starts:{cN:"markup",e:"\\[|"+r,rE:!0,r:0,c:[n]}},o,s,{cN:"preprocessor",b:"\\[no_square_brackets",starts:{e:"\\[/no_square_brackets\\]",l:t+"|&[lg]t;",k:i,c:[{cN:"preprocessor",b:a,r:0,starts:{cN:"markup",e:"\\[noprocess\\]|"+r,rE:!0,c:[n]}},o,s].concat(c)}},{cN:"preprocessor",b:"\\[",r:0},{cN:"shebang",b:"^#!.+lasso9\\b",r:10}].concat(c)}}),hljs.registerLanguage("less",function(e){var t="[\\w-]+",r="("+t+"|@{"+t+"})+",a=[],i=[],n=function(e){return{cN:"string",b:"~?"+e+".*?"+e}},o=function(e,t,r){return{cN:e,b:t,r:r}},s=function(t,r,a){return e.inherit({cN:t,b:r+"\\(",e:"\\(",rB:!0,eE:!0,r:0},a)},l={b:"\\(",e:"\\)",c:i,r:0};i.push(e.CLCM,e.CBCM,n("'"),n('"'),e.CSSNM,o("hexcolor","#[0-9A-Fa-f]+\\b"),s("function","(url|data-uri)",{starts:{cN:"string",e:"[\\)\\n]",eE:!0}}),s("function",t),l,o("variable","@@?"+t,10),o("variable","@{"+t+"}"),o("built_in","~?`[^`]*?`"),{cN:"attribute",b:t+"\\s*:",e:":",rB:!0,eE:!0});var c=i.concat({b:"{",e:"}",c:a}),p={bK:"when",eW:!0,c:[{bK:"and not"}].concat(i)},d={cN:"attribute",b:r,e:":",eE:!0,c:[e.CLCM,e.CBCM],i:/\S/,starts:{e:"[;}]",rE:!0,c:i,i:"[<=$]"}},u={cN:"at_rule",b:"@(import|media|charset|font-face|(-[a-z]+-)?keyframes|supports|document|namespace|page|viewport|host)\\b",starts:{e:"[;{}]",rE:!0,c:i,r:0}},m={cN:"variable",v:[{b:"@"+t+"\\s*:",r:15},{b:"@"+t}],starts:{e:"[;}]",rE:!0,c:c}},b={v:[{b:"[\\.#:&\\[]",e:"[;{}]"},{b:r+"[^;]*{",e:"{"}],rB:!0,rE:!0,i:"[<='$\"]",c:[e.CLCM,e.CBCM,p,o("keyword","all\\b"),o("variable","@{"+t+"}"),o("tag",r+"%?",0),o("id","#"+r),o("class","\\."+r,0),o("keyword","&",0),s("pseudo",":not"),s("keyword",":extend"),o("pseudo","::?"+r),{cN:"attr_selector",b:"\\[",e:"\\]"},{b:"\\(",e:"\\)",c:c},{b:"!important"}]};return a.push(e.CLCM,e.CBCM,u,m,b,d),{cI:!0,i:"[=>'/<($\"]",c:a}}),hljs.registerLanguage("lisp",function(e){var t="[a-zA-Z_\\-\\+\\*\\/\\<\\=\\>\\&\\#][a-zA-Z0-9_\\-\\+\\*\\/\\<\\=\\>\\&\\#!]*",r="\\|[^]*?\\|",a="(\\-|\\+)?\\d+(\\.\\d+|\\/\\d+)?((d|e|f|l|s)(\\+|\\-)?\\d+)?",i={cN:"shebang",b:"^#!",e:"$"},n={cN:"literal",b:"\\b(t{1}|nil)\\b"},o={cN:"number",v:[{b:a,r:0},{b:"#b[0-1]+(/[0-1]+)?"},{b:"#o[0-7]+(/[0-7]+)?"},{b:"#x[0-9a-f]+(/[0-9a-f]+)?"},{b:"#c\\("+a+" +"+a,e:"\\)"}]},s=e.inherit(e.QSM,{i:null}),l={cN:"comment",b:";",e:"$",r:0},c={cN:"variable",b:"\\*",e:"\\*"},p={cN:"keyword",b:"[:&]"+t},d={b:r},u={b:"\\(",e:"\\)",c:["self",n,s,o]},m={cN:"quoted",c:[o,s,c,p,u],v:[{b:"['`]\\(",e:"\\)"},{b:"\\(quote ",e:"\\)",k:"quote"},{b:"'"+r}]},b={cN:"quoted",b:"'"+t},g={cN:"list",b:"\\(",e:"\\)"},f={eW:!0,r:0};return g.c=[{cN:"keyword",v:[{b:t},{b:r}]},f],f.c=[m,b,g,n,o,s,l,c,p,d],{i:/\S/,c:[o,i,n,s,l,m,b,g]}}),hljs.registerLanguage("livecodeserver",function(e){var t={cN:"variable",b:"\\b[gtps][A-Z]+[A-Za-z0-9_\\-]*\\b|\\$_[A-Z]+",r:0},r={cN:"comment",e:"$",v:[e.CBCM,e.HCM,{b:"--"},{b:"[^:]//"}]},a=e.inherit(e.TM,{v:[{b:"\\b_*rig[A-Z]+[A-Za-z0-9_\\-]*"},{b:"\\b_[a-z0-9\\-]+"}]}),i=e.inherit(e.TM,{b:"\\b([A-Za-z0-9_\\-]+)\\b"});return{cI:!1,k:{keyword:"after byte bytes english the until http forever descending using line real8 with seventh for stdout finally element word fourth before black ninth sixth characters chars stderr uInt1 uInt1s uInt2 uInt2s stdin string lines relative rel any fifth items from middle mid at else of catch then third it file milliseconds seconds second secs sec int1 int1s int4 int4s internet int2 int2s normal text item last long detailed effective uInt4 uInt4s repeat end repeat URL in try into switch to words https token binfile each tenth as ticks tick system real4 by dateItems without char character ascending eighth whole dateTime numeric short first ftp integer abbreviated abbr abbrev private case while if",constant:"SIX TEN FORMFEED NINE ZERO NONE SPACE FOUR FALSE COLON CRLF PI COMMA ENDOFFILE EOF EIGHT FIVE QUOTE EMPTY ONE TRUE RETURN CR LINEFEED RIGHT BACKSLASH NULL SEVEN TAB THREE TWO six ten formfeed nine zero none space four false colon crlf pi comma endoffile eof eight five quote empty one true return cr linefeed right backslash null seven tab three two RIVERSION RISTATE FILE_READ_MODE FILE_WRITE_MODE FILE_WRITE_MODE DIR_WRITE_MODE FILE_READ_UMASK FILE_WRITE_UMASK DIR_READ_UMASK DIR_WRITE_UMASK",operator:"div mod wrap and or bitAnd bitNot bitOr bitXor among not in a an within contains ends with begins the keys of keys",built_in:"put abs acos aliasReference annuity arrayDecode arrayEncode asin atan atan2 average avg base64Decode base64Encode baseConvert binaryDecode binaryEncode byteToNum cachedURL cachedURLs charToNum cipherNames commandNames compound compress constantNames cos date dateFormat decompress directories diskSpace DNSServers exp exp1 exp2 exp10 extents files flushEvents folders format functionNames global globals hasMemory hostAddress hostAddressToName hostName hostNameToAddress isNumber ISOToMac itemOffset keys len length libURLErrorData libUrlFormData libURLftpCommand libURLLastHTTPHeaders libURLLastRHHeaders libUrlMultipartFormAddPart libUrlMultipartFormData libURLVersion lineOffset ln ln1 localNames log log2 log10 longFilePath lower macToISO matchChunk matchText matrixMultiply max md5Digest median merge millisec millisecs millisecond milliseconds min monthNames num number numToByte numToChar offset open openfiles openProcesses openProcessIDs openSockets paramCount param params peerAddress pendingMessages platform processID random randomBytes replaceText result revCreateXMLTree revCreateXMLTreeFromFile revCurrentRecord revCurrentRecordIsFirst revCurrentRecordIsLast revDatabaseColumnCount revDatabaseColumnIsNull revDatabaseColumnLengths revDatabaseColumnNames revDatabaseColumnNamed revDatabaseColumnNumbered revDatabaseColumnTypes revDatabaseConnectResult revDatabaseCursors revDatabaseID revDatabaseTableNames revDatabaseType revDataFromQuery revdb_closeCursor revdb_columnbynumber revdb_columncount revdb_columnisnull revdb_columnlengths revdb_columnnames revdb_columntypes revdb_commit revdb_connect revdb_connections revdb_connectionerr revdb_currentrecord revdb_cursorconnection revdb_cursorerr revdb_cursors revdb_dbtype revdb_disconnect revdb_execute revdb_iseof revdb_isbof revdb_movefirst revdb_movelast revdb_movenext revdb_moveprev revdb_query revdb_querylist revdb_recordcount revdb_rollback revdb_tablenames revGetDatabaseDriverPath revNumberOfRecords revOpenDatabase revOpenDatabases revQueryDatabase revQueryDatabaseBlob revQueryResult revQueryIsAtStart revQueryIsAtEnd revUnixFromMacPath revXMLAttribute revXMLAttributes revXMLAttributeValues revXMLChildContents revXMLChildNames revXMLFirstChild revXMLMatchingNode revXMLNextSibling revXMLNodeContents revXMLNumberOfChildren revXMLParent revXMLPreviousSibling revXMLRootNode revXMLRPC_CreateRequest revXMLRPC_Documents revXMLRPC_Error revXMLRPC_Execute revXMLRPC_GetHost revXMLRPC_GetMethod revXMLRPC_GetParam revXMLText revXMLRPC_GetParamCount revXMLRPC_GetParamNode revXMLRPC_GetParamType revXMLRPC_GetPath revXMLRPC_GetPort revXMLRPC_GetProtocol revXMLRPC_GetRequest revXMLRPC_GetResponse revXMLRPC_GetSocket revXMLTree revXMLTrees revXMLValidateDTD revZipDescribeItem revZipEnumerateItems revZipOpenArchives round sec secs seconds sha1Digest shell shortFilePath sin specialFolderPath sqrt standardDeviation statRound stdDev sum sysError systemVersion tan tempName tick ticks time to toLower toUpper transpose trunc uniDecode uniEncode upper URLDecode URLEncode URLStatus value variableNames version waitDepth weekdayNames wordOffset add breakpoint cancel clear local variable file word line folder directory URL close socket process combine constant convert create new alias folder directory decrypt delete variable word line folder directory URL dispatch divide do encrypt filter get include intersect kill libURLDownloadToFile libURLFollowHttpRedirects libURLftpUpload libURLftpUploadFile libURLresetAll libUrlSetAuthCallback libURLSetCustomHTTPHeaders libUrlSetExpect100 libURLSetFTPListCommand libURLSetFTPMode libURLSetFTPStopTime libURLSetStatusCallback load multiply socket process post seek rel relative read from process rename replace require resetAll revAddXMLNode revAppendXML revCloseCursor revCloseDatabase revCommitDatabase revCopyFile revCopyFolder revCopyXMLNode revDeleteFolder revDeleteXMLNode revDeleteAllXMLTrees revDeleteXMLTree revExecuteSQL revGoURL revInsertXMLNode revMoveFolder revMoveToFirstRecord revMoveToLastRecord revMoveToNextRecord revMoveToPreviousRecord revMoveToRecord revMoveXMLNode revPutIntoXMLNode revRollBackDatabase revSetDatabaseDriverPath revSetXMLAttribute revXMLRPC_AddParam revXMLRPC_DeleteAllDocuments revXMLAddDTD revXMLRPC_Free revXMLRPC_FreeAll revXMLRPC_DeleteDocument revXMLRPC_DeleteParam revXMLRPC_SetHost revXMLRPC_SetMethod revXMLRPC_SetPort revXMLRPC_SetProtocol revXMLRPC_SetSocket revZipAddItemWithData revZipAddItemWithFile revZipAddUncompressedItemWithData revZipAddUncompressedItemWithFile revZipCancel revZipCloseArchive revZipDeleteItem revZipExtractItemToFile revZipExtractItemToVariable revZipSetProgressCallback revZipRenameItem revZipReplaceItemWithData revZipReplaceItemWithFile revZipOpenArchive send set sort split subtract union unload wait write"},c:[t,{cN:"keyword",b:"\\bend\\sif\\b"},{cN:"function",bK:"function",e:"$",c:[t,i,e.ASM,e.QSM,e.BNM,e.CNM,a]},{cN:"function",bK:"end",e:"$",c:[i,a]},{cN:"command",bK:"command on",e:"$",c:[t,i,e.ASM,e.QSM,e.BNM,e.CNM,a]},{cN:"command",bK:"end",e:"$",c:[i,a]},{cN:"preprocessor",b:"<\\?rev|<\\?lc|<\\?livecode",r:10},{cN:"preprocessor",b:"<\\?"},{cN:"preprocessor",b:"\\?>"},r,e.ASM,e.QSM,e.BNM,e.CNM,a],i:";$|^\\[|^="}}),hljs.registerLanguage("livescript",function(e){var t={keyword:"in if for while finally new do return else break catch instanceof throw try this switch continue typeof delete debugger case default function var with then unless until loop of by when and or is isnt not it that otherwise from to til fallthrough super case default function var void const let enum export import native __hasProp __extends __slice __bind __indexOf",literal:"true false null undefined yes no on off it that void",built_in:"npm require console print module global window document"},r="[A-Za-z$_](?:-[0-9A-Za-z$_]|[0-9A-Za-z$_])*",a=e.inherit(e.TM,{b:r}),i={cN:"subst",b:/#\{/,e:/\}/,k:t},n={cN:"subst",b:/#[A-Za-z$_]/,e:/(?:\-[0-9A-Za-z$_]|[0-9A-Za-z$_])*/,k:t},o=[e.BNM,{cN:"number",b:"(\\b0[xX][a-fA-F0-9_]+)|(\\b\\d(\\d|_\\d)*(\\.(\\d(\\d|_\\d)*)?)?(_*[eE]([-+]\\d(_\\d|\\d)*)?)?[_a-z]*)",r:0,starts:{e:"(\\s*/)?",r:0}},{cN:"string",v:[{b:/'''/,e:/'''/,c:[e.BE]},{b:/'/,e:/'/,c:[e.BE]},{b:/"""/,e:/"""/,c:[e.BE,i,n]},{b:/"/,e:/"/,c:[e.BE,i,n]},{b:/\\/,e:/(\s|$)/,eE:!0}]},{cN:"pi",v:[{b:"//",e:"//[gim]*",c:[i,e.HCM]},{b:/\/(?![ *])(\\\/|.)*?\/[gim]*(?=\W|$)/}]},{cN:"property",b:"@"+r},{b:"``",e:"``",eB:!0,eE:!0,sL:"javascript"}];i.c=o;var s={cN:"params",b:"\\(",rB:!0,c:[{b:/\(/,e:/\)/,k:t,c:["self"].concat(o)}]};return{aliases:["ls"],k:t,i:/\/\*/,c:o.concat([{cN:"comment",b:"\\/\\*",e:"\\*\\/"},e.HCM,{cN:"function",c:[a,s],rB:!0,v:[{b:"("+r+"\\s*(?:=|:=)\\s*)?(\\(.*\\))?\\s*\\B\\->\\*?",e:"\\->\\*?"},{b:"("+r+"\\s*(?:=|:=)\\s*)?!?(\\(.*\\))?\\s*\\B[-~]{1,2}>\\*?",e:"[-~]{1,2}>\\*?"},{b:"("+r+"\\s*(?:=|:=)\\s*)?(\\(.*\\))?\\s*\\B!?[-~]{1,2}>\\*?",e:"!?[-~]{1,2}>\\*?"}]},{cN:"class",bK:"class",e:"$",i:/[:="\[\]]/,c:[{bK:"extends",eW:!0,i:/[:="\[\]]/,c:[a]},a]},{cN:"attribute",b:r+":",e:":",rB:!0,rE:!0,r:0}])}}),hljs.registerLanguage("lua",function(e){var t="\\[=*\\[",r="\\]=*\\]",a={b:t,e:r,c:["self"]},i=[{cN:"comment",b:"--(?!"+t+")",e:"$"},{cN:"comment",b:"--"+t,e:r,c:[a],r:10}];return{l:e.UIR,k:{keyword:"and break do else elseif end false for if in local nil not or repeat return then true until while",built_in:"_G _VERSION assert collectgarbage dofile error getfenv getmetatable ipairs load loadfile loadstring module next pairs pcall print rawequal rawget rawset require select setfenv setmetatable tonumber tostring type unpack xpcall coroutine debug io math os package string table"},c:i.concat([{cN:"function",bK:"function",e:"\\)",c:[e.inherit(e.TM,{b:"([_a-zA-Z]\\w*\\.)*([_a-zA-Z]\\w*:)?[_a-zA-Z]\\w*"}),{cN:"params",b:"\\(",eW:!0,c:i}].concat(i)},e.CNM,e.ASM,e.QSM,{cN:"string",b:t,e:r,c:[a],r:5}])}}),hljs.registerLanguage("makefile",function(e){var t={cN:"variable",b:/\$\(/,e:/\)/,c:[e.BE]};return{aliases:["mk","mak"],c:[e.HCM,{b:/^\w+\s*\W*=/,rB:!0,r:0,starts:{cN:"constant",e:/\s*\W*=/,eE:!0,starts:{e:/$/,r:0,c:[t]}}},{cN:"title",b:/^[\w]+:\s*$/},{cN:"phony",b:/^\.PHONY:/,e:/$/,k:".PHONY",l:/[\.\w]+/},{b:/^\t+/,e:/$/,r:0,c:[e.QSM,t]}]}}),hljs.registerLanguage("mathematica",function(e){return{aliases:["mma"],l:"(\\$|\\b)"+e.IR+"\\b",k:"AbelianGroup Abort AbortKernels AbortProtect Above Abs Absolute AbsoluteCorrelation AbsoluteCorrelationFunction AbsoluteCurrentValue AbsoluteDashing AbsoluteFileName AbsoluteOptions AbsolutePointSize AbsoluteThickness AbsoluteTime AbsoluteTiming AccountingForm Accumulate Accuracy AccuracyGoal ActionDelay ActionMenu ActionMenuBox ActionMenuBoxOptions Active ActiveItem ActiveStyle AcyclicGraphQ AddOnHelpPath AddTo AdjacencyGraph AdjacencyList AdjacencyMatrix AdjustmentBox AdjustmentBoxOptions AdjustTimeSeriesForecast AffineTransform After AiryAi AiryAiPrime AiryAiZero AiryBi AiryBiPrime AiryBiZero AlgebraicIntegerQ AlgebraicNumber AlgebraicNumberDenominator AlgebraicNumberNorm AlgebraicNumberPolynomial AlgebraicNumberTrace AlgebraicRules AlgebraicRulesData Algebraics AlgebraicUnitQ Alignment AlignmentMarker AlignmentPoint All AllowedDimensions AllowGroupClose AllowInlineCells AllowKernelInitialization AllowReverseGroupClose AllowScriptLevelChange AlphaChannel AlternatingGroup AlternativeHypothesis Alternatives AmbientLight Analytic AnchoredSearch And AndersonDarlingTest AngerJ AngleBracket AngularGauge Animate AnimationCycleOffset AnimationCycleRepetitions AnimationDirection AnimationDisplayTime AnimationRate AnimationRepetitions AnimationRunning Animator AnimatorBox AnimatorBoxOptions AnimatorElements Annotation Annuity AnnuityDue Antialiasing Antisymmetric Apart ApartSquareFree Appearance AppearanceElements AppellF1 Append AppendTo Apply ArcCos ArcCosh ArcCot ArcCoth ArcCsc ArcCsch ArcSec ArcSech ArcSin ArcSinDistribution ArcSinh ArcTan ArcTanh Arg ArgMax ArgMin ArgumentCountQ ARIMAProcess ArithmeticGeometricMean ARMAProcess ARProcess Array ArrayComponents ArrayDepth ArrayFlatten ArrayPad ArrayPlot ArrayQ ArrayReshape ArrayRules Arrays Arrow Arrow3DBox ArrowBox Arrowheads AspectRatio AspectRatioFixed Assert Assuming Assumptions AstronomicalData Asynchronous AsynchronousTaskObject AsynchronousTasks AtomQ Attributes AugmentedSymmetricPolynomial AutoAction AutoDelete AutoEvaluateEvents AutoGeneratedPackage AutoIndent AutoIndentSpacings AutoItalicWords AutoloadPath AutoMatch Automatic AutomaticImageSize AutoMultiplicationSymbol AutoNumberFormatting AutoOpenNotebooks AutoOpenPalettes AutorunSequencing AutoScaling AutoScroll AutoSpacing AutoStyleOptions AutoStyleWords Axes AxesEdge AxesLabel AxesOrigin AxesStyle Axis BabyMonsterGroupB Back Background BackgroundTasksSettings Backslash Backsubstitution Backward Band BandpassFilter BandstopFilter BarabasiAlbertGraphDistribution BarChart BarChart3D BarLegend BarlowProschanImportance BarnesG BarOrigin BarSpacing BartlettHannWindow BartlettWindow BaseForm Baseline BaselinePosition BaseStyle BatesDistribution BattleLemarieWavelet Because BeckmannDistribution Beep Before Begin BeginDialogPacket BeginFrontEndInteractionPacket BeginPackage BellB BellY Below BenfordDistribution BeniniDistribution BenktanderGibratDistribution BenktanderWeibullDistribution BernoulliB BernoulliDistribution BernoulliGraphDistribution BernoulliProcess BernsteinBasis BesselFilterModel BesselI BesselJ BesselJZero BesselK BesselY BesselYZero Beta BetaBinomialDistribution BetaDistribution BetaNegativeBinomialDistribution BetaPrimeDistribution BetaRegularized BetweennessCentrality BezierCurve BezierCurve3DBox BezierCurve3DBoxOptions BezierCurveBox BezierCurveBoxOptions BezierFunction BilateralFilter Binarize BinaryFormat BinaryImageQ BinaryRead BinaryReadList BinaryWrite BinCounts BinLists Binomial BinomialDistribution BinomialProcess BinormalDistribution BiorthogonalSplineWavelet BipartiteGraphQ BirnbaumImportance BirnbaumSaundersDistribution BitAnd BitClear BitGet BitLength BitNot BitOr BitSet BitShiftLeft BitShiftRight BitXor Black BlackmanHarrisWindow BlackmanNuttallWindow BlackmanWindow Blank BlankForm BlankNullSequence BlankSequence Blend Block BlockRandom BlomqvistBeta BlomqvistBetaTest Blue Blur BodePlot BohmanWindow Bold Bookmarks Boole BooleanConsecutiveFunction BooleanConvert BooleanCountingFunction BooleanFunction BooleanGraph BooleanMaxterms BooleanMinimize BooleanMinterms Booleans BooleanTable BooleanVariables BorderDimensions BorelTannerDistribution Bottom BottomHatTransform BoundaryStyle Bounds Box BoxBaselineShift BoxData BoxDimensions Boxed Boxes BoxForm BoxFormFormatTypes BoxFrame BoxID BoxMargins BoxMatrix BoxRatios BoxRotation BoxRotationPoint BoxStyle BoxWhiskerChart Bra BracketingBar BraKet BrayCurtisDistance BreadthFirstScan Break Brown BrownForsytheTest BrownianBridgeProcess BrowserCategory BSplineBasis BSplineCurve BSplineCurve3DBox BSplineCurveBox BSplineCurveBoxOptions BSplineFunction BSplineSurface BSplineSurface3DBox BubbleChart BubbleChart3D BubbleScale BubbleSizes BulletGauge BusinessDayQ ButterflyGraph ButterworthFilterModel Button ButtonBar ButtonBox ButtonBoxOptions ButtonCell ButtonContents ButtonData ButtonEvaluator ButtonExpandable ButtonFrame ButtonFunction ButtonMargins ButtonMinHeight ButtonNote ButtonNotebook ButtonSource ButtonStyle ButtonStyleMenuListing Byte ByteCount ByteOrdering C CachedValue CacheGraphics CalendarData CalendarType CallPacket CanberraDistance Cancel CancelButton CandlestickChart Cap CapForm CapitalDifferentialD CardinalBSplineBasis CarmichaelLambda Cases Cashflow Casoratian Catalan CatalanNumber Catch CauchyDistribution CauchyWindow CayleyGraph CDF CDFDeploy CDFInformation CDFWavelet Ceiling Cell CellAutoOverwrite CellBaseline CellBoundingBox CellBracketOptions CellChangeTimes CellContents CellContext CellDingbat CellDynamicExpression CellEditDuplicate CellElementsBoundingBox CellElementSpacings CellEpilog CellEvaluationDuplicate CellEvaluationFunction CellEventActions CellFrame CellFrameColor CellFrameLabelMargins CellFrameLabels CellFrameMargins CellGroup CellGroupData CellGrouping CellGroupingRules CellHorizontalScrolling CellID CellLabel CellLabelAutoDelete CellLabelMargins CellLabelPositioning CellMargins CellObject CellOpen CellPrint CellProlog Cells CellSize CellStyle CellTags CellularAutomaton CensoredDistribution Censoring Center CenterDot CentralMoment CentralMomentGeneratingFunction CForm ChampernowneNumber ChanVeseBinarize Character CharacterEncoding CharacterEncodingsPath CharacteristicFunction CharacteristicPolynomial CharacterRange Characters ChartBaseStyle ChartElementData ChartElementDataFunction ChartElementFunction ChartElements ChartLabels ChartLayout ChartLegends ChartStyle Chebyshev1FilterModel Chebyshev2FilterModel ChebyshevDistance ChebyshevT ChebyshevU Check CheckAbort CheckAll Checkbox CheckboxBar CheckboxBox CheckboxBoxOptions ChemicalData ChessboardDistance ChiDistribution ChineseRemainder ChiSquareDistribution ChoiceButtons ChoiceDialog CholeskyDecomposition Chop Circle CircleBox CircleDot CircleMinus CirclePlus CircleTimes CirculantGraph CityData Clear ClearAll ClearAttributes ClearSystemCache ClebschGordan ClickPane Clip ClipboardNotebook ClipFill ClippingStyle ClipPlanes ClipRange Clock ClockGauge ClockwiseContourIntegral Close Closed CloseKernels ClosenessCentrality Closing ClosingAutoSave ClosingEvent ClusteringComponents CMYKColor Coarse Coefficient CoefficientArrays CoefficientDomain CoefficientList CoefficientRules CoifletWavelet Collect Colon ColonForm ColorCombine ColorConvert ColorData ColorDataFunction ColorFunction ColorFunctionScaling Colorize ColorNegate ColorOutput ColorProfileData ColorQuantize ColorReplace ColorRules ColorSelectorSettings ColorSeparate ColorSetter ColorSetterBox ColorSetterBoxOptions ColorSlider ColorSpace Column ColumnAlignments ColumnBackgrounds ColumnForm ColumnLines ColumnsEqual ColumnSpacings ColumnWidths CommonDefaultFormatTypes Commonest CommonestFilter CommonUnits CommunityBoundaryStyle CommunityGraphPlot CommunityLabels CommunityRegionStyle CompatibleUnitQ CompilationOptions CompilationTarget Compile Compiled CompiledFunction Complement CompleteGraph CompleteGraphQ CompleteKaryTree CompletionsListPacket Complex Complexes ComplexExpand ComplexInfinity ComplexityFunction ComponentMeasurements ComponentwiseContextMenu Compose ComposeList ComposeSeries Composition CompoundExpression CompoundPoissonDistribution CompoundPoissonProcess CompoundRenewalProcess Compress CompressedData Condition ConditionalExpression Conditioned Cone ConeBox ConfidenceLevel ConfidenceRange ConfidenceTransform ConfigurationPath Congruent Conjugate ConjugateTranspose Conjunction Connect ConnectedComponents ConnectedGraphQ ConnesWindow ConoverTest ConsoleMessage ConsoleMessagePacket ConsolePrint Constant ConstantArray Constants ConstrainedMax ConstrainedMin ContentPadding ContentsBoundingBox ContentSelectable ContentSize Context ContextMenu Contexts ContextToFilename ContextToFileName Continuation Continue ContinuedFraction ContinuedFractionK ContinuousAction ContinuousMarkovProcess ContinuousTimeModelQ ContinuousWaveletData ContinuousWaveletTransform ContourDetect ContourGraphics ContourIntegral ContourLabels ContourLines ContourPlot ContourPlot3D Contours ContourShading ContourSmoothing ContourStyle ContraharmonicMean Control ControlActive ControlAlignment ControllabilityGramian ControllabilityMatrix ControllableDecomposition ControllableModelQ ControllerDuration ControllerInformation ControllerInformationData ControllerLinking ControllerManipulate ControllerMethod ControllerPath ControllerState ControlPlacement ControlsRendering ControlType Convergents ConversionOptions ConversionRules ConvertToBitmapPacket ConvertToPostScript ConvertToPostScriptPacket Convolve ConwayGroupCo1 ConwayGroupCo2 ConwayGroupCo3 CoordinateChartData CoordinatesToolOptions CoordinateTransform CoordinateTransformData CoprimeQ Coproduct CopulaDistribution Copyable CopyDirectory CopyFile CopyTag CopyToClipboard CornerFilter CornerNeighbors Correlation CorrelationDistance CorrelationFunction CorrelationTest Cos Cosh CoshIntegral CosineDistance CosineWindow CosIntegral Cot Coth Count CounterAssignments CounterBox CounterBoxOptions CounterClockwiseContourIntegral CounterEvaluator CounterFunction CounterIncrements CounterStyle CounterStyleMenuListing CountRoots CountryData Covariance CovarianceEstimatorFunction CovarianceFunction CoxianDistribution CoxIngersollRossProcess CoxModel CoxModelFit CramerVonMisesTest CreateArchive CreateDialog CreateDirectory CreateDocument CreateIntermediateDirectories CreatePalette CreatePalettePacket CreateScheduledTask CreateTemporary CreateWindow CriticalityFailureImportance CriticalitySuccessImportance CriticalSection Cross CrossingDetect CrossMatrix Csc Csch CubeRoot Cubics Cuboid CuboidBox Cumulant CumulantGeneratingFunction Cup CupCap Curl CurlyDoubleQuote CurlyQuote CurrentImage CurrentlySpeakingPacket CurrentValue CurvatureFlowFilter CurveClosed Cyan CycleGraph CycleIndexPolynomial Cycles CyclicGroup Cyclotomic Cylinder CylinderBox CylindricalDecomposition D DagumDistribution DamerauLevenshteinDistance DampingFactor Darker Dashed Dashing DataCompression DataDistribution DataRange DataReversed Date DateDelimiters DateDifference DateFunction DateList DateListLogPlot DateListPlot DatePattern DatePlus DateRange DateString DateTicksFormat DaubechiesWavelet DavisDistribution DawsonF DayCount DayCountConvention DayMatchQ DayName DayPlus DayRange DayRound DeBruijnGraph Debug DebugTag Decimal DeclareKnownSymbols DeclarePackage Decompose Decrement DedekindEta Default DefaultAxesStyle DefaultBaseStyle DefaultBoxStyle DefaultButton DefaultColor DefaultControlPlacement DefaultDuplicateCellStyle DefaultDuration DefaultElement DefaultFaceGridsStyle DefaultFieldHintStyle DefaultFont DefaultFontProperties DefaultFormatType DefaultFormatTypeForStyle DefaultFrameStyle DefaultFrameTicksStyle DefaultGridLinesStyle DefaultInlineFormatType DefaultInputFormatType DefaultLabelStyle DefaultMenuStyle DefaultNaturalLanguage DefaultNewCellStyle DefaultNewInlineCellStyle DefaultNotebook DefaultOptions DefaultOutputFormatType DefaultStyle DefaultStyleDefinitions DefaultTextFormatType DefaultTextInlineFormatType DefaultTicksStyle DefaultTooltipStyle DefaultValues Defer DefineExternal DefineInputStreamMethod DefineOutputStreamMethod Definition Degree DegreeCentrality DegreeGraphDistribution DegreeLexicographic DegreeReverseLexicographic Deinitialization Del Deletable Delete DeleteBorderComponents DeleteCases DeleteContents DeleteDirectory DeleteDuplicates DeleteFile DeleteSmallComponents DeleteWithContents DeletionWarning Delimiter DelimiterFlashTime DelimiterMatching Delimiters Denominator DensityGraphics DensityHistogram DensityPlot DependentVariables Deploy Deployed Depth DepthFirstScan Derivative DerivativeFilter DescriptorStateSpace DesignMatrix Det DGaussianWavelet DiacriticalPositioning Diagonal DiagonalMatrix Dialog DialogIndent DialogInput DialogLevel DialogNotebook DialogProlog DialogReturn DialogSymbols Diamond DiamondMatrix DiceDissimilarity DictionaryLookup DifferenceDelta DifferenceOrder DifferenceRoot DifferenceRootReduce Differences DifferentialD DifferentialRoot DifferentialRootReduce DifferentiatorFilter DigitBlock DigitBlockMinimum DigitCharacter DigitCount DigitQ DihedralGroup Dilation Dimensions DiracComb DiracDelta DirectedEdge DirectedEdges DirectedGraph DirectedGraphQ DirectedInfinity Direction Directive Directory DirectoryName DirectoryQ DirectoryStack DirichletCharacter DirichletConvolve DirichletDistribution DirichletL DirichletTransform DirichletWindow DisableConsolePrintPacket DiscreteChirpZTransform DiscreteConvolve DiscreteDelta DiscreteHadamardTransform DiscreteIndicator DiscreteLQEstimatorGains DiscreteLQRegulatorGains DiscreteLyapunovSolve DiscreteMarkovProcess DiscretePlot DiscretePlot3D DiscreteRatio DiscreteRiccatiSolve DiscreteShift DiscreteTimeModelQ DiscreteUniformDistribution DiscreteVariables DiscreteWaveletData DiscreteWaveletPacketTransform DiscreteWaveletTransform Discriminant Disjunction Disk DiskBox DiskMatrix Dispatch DispersionEstimatorFunction Display DisplayAllSteps DisplayEndPacket DisplayFlushImagePacket DisplayForm DisplayFunction DisplayPacket DisplayRules DisplaySetSizePacket DisplayString DisplayTemporary DisplayWith DisplayWithRef DisplayWithVariable DistanceFunction DistanceTransform Distribute Distributed DistributedContexts DistributeDefinitions DistributionChart DistributionDomain DistributionFitTest DistributionParameterAssumptions DistributionParameterQ Dithering Div Divergence Divide DivideBy Dividers Divisible Divisors DivisorSigma DivisorSum DMSList DMSString Do DockedCells DocumentNotebook DominantColors DOSTextFormat Dot DotDashed DotEqual Dotted DoubleBracketingBar DoubleContourIntegral DoubleDownArrow DoubleLeftArrow DoubleLeftRightArrow DoubleLeftTee DoubleLongLeftArrow DoubleLongLeftRightArrow DoubleLongRightArrow DoubleRightArrow DoubleRightTee DoubleUpArrow DoubleUpDownArrow DoubleVerticalBar DoublyInfinite Down DownArrow DownArrowBar DownArrowUpArrow DownLeftRightVector DownLeftTeeVector DownLeftVector DownLeftVectorBar DownRightTeeVector DownRightVector DownRightVectorBar Downsample DownTee DownTeeArrow DownValues DragAndDrop DrawEdges DrawFrontFaces DrawHighlighted Drop DSolve Dt DualLinearProgramming DualSystemsModel DumpGet DumpSave DuplicateFreeQ Dynamic DynamicBox DynamicBoxOptions DynamicEvaluationTimeout DynamicLocation DynamicModule DynamicModuleBox DynamicModuleBoxOptions DynamicModuleParent DynamicModuleValues DynamicName DynamicNamespace DynamicReference DynamicSetting DynamicUpdating DynamicWrapper DynamicWrapperBox DynamicWrapperBoxOptions E EccentricityCentrality EdgeAdd EdgeBetweennessCentrality EdgeCapacity EdgeCapForm EdgeColor EdgeConnectivity EdgeCost EdgeCount EdgeCoverQ EdgeDashing EdgeDelete EdgeDetect EdgeForm EdgeIndex EdgeJoinForm EdgeLabeling EdgeLabels EdgeLabelStyle EdgeList EdgeOpacity EdgeQ EdgeRenderingFunction EdgeRules EdgeShapeFunction EdgeStyle EdgeThickness EdgeWeight Editable EditButtonSettings EditCellTagsSettings EditDistance EffectiveInterest Eigensystem Eigenvalues EigenvectorCentrality Eigenvectors Element ElementData Eliminate EliminationOrder EllipticE EllipticExp EllipticExpPrime EllipticF EllipticFilterModel EllipticK EllipticLog EllipticNomeQ EllipticPi EllipticReducedHalfPeriods EllipticTheta EllipticThetaPrime EmitSound EmphasizeSyntaxErrors EmpiricalDistribution Empty EmptyGraphQ EnableConsolePrintPacket Enabled Encode End EndAdd EndDialogPacket EndFrontEndInteractionPacket EndOfFile EndOfLine EndOfString EndPackage EngineeringForm Enter EnterExpressionPacket EnterTextPacket Entropy EntropyFilter Environment Epilog Equal EqualColumns EqualRows EqualTilde EquatedTo Equilibrium EquirippleFilterKernel Equivalent Erf Erfc Erfi ErlangB ErlangC ErlangDistribution Erosion ErrorBox ErrorBoxOptions ErrorNorm ErrorPacket ErrorsDialogSettings EstimatedDistribution EstimatedProcess EstimatorGains EstimatorRegulator EuclideanDistance EulerE EulerGamma EulerianGraphQ EulerPhi Evaluatable Evaluate Evaluated EvaluatePacket EvaluationCell EvaluationCompletionAction EvaluationElements EvaluationMode EvaluationMonitor EvaluationNotebook EvaluationObject EvaluationOrder Evaluator EvaluatorNames EvenQ EventData EventEvaluator EventHandler EventHandlerTag EventLabels ExactBlackmanWindow ExactNumberQ ExactRootIsolation ExampleData Except ExcludedForms ExcludePods Exclusions ExclusionsStyle Exists Exit ExitDialog Exp Expand ExpandAll ExpandDenominator ExpandFileName ExpandNumerator Expectation ExpectationE ExpectedValue ExpGammaDistribution ExpIntegralE ExpIntegralEi Exponent ExponentFunction ExponentialDistribution ExponentialFamily ExponentialGeneratingFunction ExponentialMovingAverage ExponentialPowerDistribution ExponentPosition ExponentStep Export ExportAutoReplacements ExportPacket ExportString Expression ExpressionCell ExpressionPacket ExpToTrig ExtendedGCD Extension ExtentElementFunction ExtentMarkers ExtentSize ExternalCall ExternalDataCharacterEncoding Extract ExtractArchive ExtremeValueDistribution FaceForm FaceGrids FaceGridsStyle Factor FactorComplete Factorial Factorial2 FactorialMoment FactorialMomentGeneratingFunction FactorialPower FactorInteger FactorList FactorSquareFree FactorSquareFreeList FactorTerms FactorTermsList Fail FailureDistribution False FARIMAProcess FEDisableConsolePrintPacket FeedbackSector FeedbackSectorStyle FeedbackType FEEnableConsolePrintPacket Fibonacci FieldHint FieldHintStyle FieldMasked FieldSize File FileBaseName FileByteCount FileDate FileExistsQ FileExtension FileFormat FileHash FileInformation FileName FileNameDepth FileNameDialogSettings FileNameDrop FileNameJoin FileNames FileNameSetter FileNameSplit FileNameTake FilePrint FileType FilledCurve FilledCurveBox Filling FillingStyle FillingTransform FilterRules FinancialBond FinancialData FinancialDerivative FinancialIndicator Find FindArgMax FindArgMin FindClique FindClusters FindCurvePath FindDistributionParameters FindDivisions FindEdgeCover FindEdgeCut FindEulerianCycle FindFaces FindFile FindFit FindGeneratingFunction FindGeoLocation FindGeometricTransform FindGraphCommunities FindGraphIsomorphism FindGraphPartition FindHamiltonianCycle FindIndependentEdgeSet FindIndependentVertexSet FindInstance FindIntegerNullVector FindKClan FindKClique FindKClub FindKPlex FindLibrary FindLinearRecurrence FindList FindMaximum FindMaximumFlow FindMaxValue FindMinimum FindMinimumCostFlow FindMinimumCut FindMinValue FindPermutation FindPostmanTour FindProcessParameters FindRoot FindSequenceFunction FindSettings FindShortestPath FindShortestTour FindThreshold FindVertexCover FindVertexCut Fine FinishDynamic FiniteAbelianGroupCount FiniteGroupCount FiniteGroupData First FirstPassageTimeDistribution FischerGroupFi22 FischerGroupFi23 FischerGroupFi24Prime FisherHypergeometricDistribution FisherRatioTest FisherZDistribution Fit FitAll FittedModel FixedPoint FixedPointList FlashSelection Flat Flatten FlattenAt FlatTopWindow FlipView Floor FlushPrintOutputPacket Fold FoldList Font FontColor FontFamily FontForm FontName FontOpacity FontPostScriptName FontProperties FontReencoding FontSize FontSlant FontSubstitutions FontTracking FontVariations FontWeight For ForAll Format FormatRules FormatType FormatTypeAutoConvert FormatValues FormBox FormBoxOptions FortranForm Forward ForwardBackward Fourier FourierCoefficient FourierCosCoefficient FourierCosSeries FourierCosTransform FourierDCT FourierDCTFilter FourierDCTMatrix FourierDST FourierDSTMatrix FourierMatrix FourierParameters FourierSequenceTransform FourierSeries FourierSinCoefficient FourierSinSeries FourierSinTransform FourierTransform FourierTrigSeries FractionalBrownianMotionProcess FractionalPart FractionBox FractionBoxOptions FractionLine Frame FrameBox FrameBoxOptions Framed FrameInset FrameLabel Frameless FrameMargins FrameStyle FrameTicks FrameTicksStyle FRatioDistribution FrechetDistribution FreeQ FrequencySamplingFilterKernel FresnelC FresnelS Friday FrobeniusNumber FrobeniusSolve FromCharacterCode FromCoefficientRules FromContinuedFraction FromDate FromDigits FromDMS Front FrontEndDynamicExpression FrontEndEventActions FrontEndExecute FrontEndObject FrontEndResource FrontEndResourceString FrontEndStackSize FrontEndToken FrontEndTokenExecute FrontEndValueCache FrontEndVersion FrontFaceColor FrontFaceOpacity Full FullAxes FullDefinition FullForm FullGraphics FullOptions FullSimplify Function FunctionExpand FunctionInterpolation FunctionSpace FussellVeselyImportance GaborFilter GaborMatrix GaborWavelet GainMargins GainPhaseMargins Gamma GammaDistribution GammaRegularized GapPenalty Gather GatherBy GaugeFaceElementFunction GaugeFaceStyle GaugeFrameElementFunction GaugeFrameSize GaugeFrameStyle GaugeLabels GaugeMarkers GaugeStyle GaussianFilter GaussianIntegers GaussianMatrix GaussianWindow GCD GegenbauerC General GeneralizedLinearModelFit GenerateConditions GeneratedCell GeneratedParameters GeneratingFunction Generic GenericCylindricalDecomposition GenomeData GenomeLookup GeodesicClosing GeodesicDilation GeodesicErosion GeodesicOpening GeoDestination GeodesyData GeoDirection GeoDistance GeoGridPosition GeometricBrownianMotionProcess GeometricDistribution GeometricMean GeometricMeanFilter GeometricTransformation GeometricTransformation3DBox GeometricTransformation3DBoxOptions GeometricTransformationBox GeometricTransformationBoxOptions GeoPosition GeoPositionENU GeoPositionXYZ GeoProjectionData GestureHandler GestureHandlerTag Get GetBoundingBoxSizePacket GetContext GetEnvironment GetFileName GetFrontEndOptionsDataPacket GetLinebreakInformationPacket GetMenusPacket GetPageBreakInformationPacket Glaisher GlobalClusteringCoefficient GlobalPreferences GlobalSession Glow GoldenRatio GompertzMakehamDistribution GoodmanKruskalGamma GoodmanKruskalGammaTest Goto Grad Gradient GradientFilter GradientOrientationFilter Graph GraphAssortativity GraphCenter GraphComplement GraphData GraphDensity GraphDiameter GraphDifference GraphDisjointUnion GraphDistance GraphDistanceMatrix GraphElementData GraphEmbedding GraphHighlight GraphHighlightStyle GraphHub Graphics Graphics3D Graphics3DBox Graphics3DBoxOptions GraphicsArray GraphicsBaseline GraphicsBox GraphicsBoxOptions GraphicsColor GraphicsColumn GraphicsComplex GraphicsComplex3DBox GraphicsComplex3DBoxOptions GraphicsComplexBox GraphicsComplexBoxOptions GraphicsContents GraphicsData GraphicsGrid GraphicsGridBox GraphicsGroup GraphicsGroup3DBox GraphicsGroup3DBoxOptions GraphicsGroupBox GraphicsGroupBoxOptions GraphicsGrouping GraphicsHighlightColor GraphicsRow GraphicsSpacing GraphicsStyle GraphIntersection GraphLayout GraphLinkEfficiency GraphPeriphery GraphPlot GraphPlot3D GraphPower GraphPropertyDistribution GraphQ GraphRadius GraphReciprocity GraphRoot GraphStyle GraphUnion Gray GrayLevel GreatCircleDistance Greater GreaterEqual GreaterEqualLess GreaterFullEqual GreaterGreater GreaterLess GreaterSlantEqual GreaterTilde Green Grid GridBaseline GridBox GridBoxAlignment GridBoxBackground GridBoxDividers GridBoxFrame GridBoxItemSize GridBoxItemStyle GridBoxOptions GridBoxSpacings GridCreationSettings GridDefaultElement GridElementStyleOptions GridFrame GridFrameMargins GridGraph GridLines GridLinesStyle GroebnerBasis GroupActionBase GroupCentralizer GroupElementFromWord GroupElementPosition GroupElementQ GroupElements GroupElementToWord GroupGenerators GroupMultiplicationTable GroupOrbits GroupOrder GroupPageBreakWithin GroupSetwiseStabilizer GroupStabilizer GroupStabilizerChain Gudermannian GumbelDistribution HaarWavelet HadamardMatrix HalfNormalDistribution HamiltonianGraphQ HammingDistance HammingWindow HankelH1 HankelH2 HankelMatrix HannPoissonWindow HannWindow HaradaNortonGroupHN HararyGraph HarmonicMean HarmonicMeanFilter HarmonicNumber Hash HashTable Haversine HazardFunction Head HeadCompose Heads HeavisideLambda HeavisidePi HeavisideTheta HeldGroupHe HeldPart HelpBrowserLookup HelpBrowserNotebook HelpBrowserSettings HermiteDecomposition HermiteH HermitianMatrixQ HessenbergDecomposition Hessian HexadecimalCharacter Hexahedron HexahedronBox HexahedronBoxOptions HiddenSurface HighlightGraph HighlightImage HighpassFilter HigmanSimsGroupHS HilbertFilter HilbertMatrix Histogram Histogram3D HistogramDistribution HistogramList HistogramTransform HistogramTransformInterpolation HitMissTransform HITSCentrality HodgeDual HoeffdingD HoeffdingDTest Hold HoldAll HoldAllComplete HoldComplete HoldFirst HoldForm HoldPattern HoldRest HolidayCalendar HomeDirectory HomePage Horizontal HorizontalForm HorizontalGauge HorizontalScrollPosition HornerForm HotellingTSquareDistribution HoytDistribution HTMLSave Hue HumpDownHump HumpEqual HurwitzLerchPhi HurwitzZeta HyperbolicDistribution HypercubeGraph HyperexponentialDistribution Hyperfactorial Hypergeometric0F1 Hypergeometric0F1Regularized Hypergeometric1F1 Hypergeometric1F1Regularized Hypergeometric2F1 Hypergeometric2F1Regularized HypergeometricDistribution HypergeometricPFQ HypergeometricPFQRegularized HypergeometricU Hyperlink HyperlinkCreationSettings Hyphenation HyphenationOptions HypoexponentialDistribution HypothesisTestData I Identity IdentityMatrix If IgnoreCase Im Image Image3D Image3DSlices ImageAccumulate ImageAdd ImageAdjust ImageAlign ImageApply ImageAspectRatio ImageAssemble ImageCache ImageCacheValid ImageCapture ImageChannels ImageClip ImageColorSpace ImageCompose ImageConvolve ImageCooccurrence ImageCorners ImageCorrelate ImageCorrespondingPoints ImageCrop ImageData ImageDataPacket ImageDeconvolve ImageDemosaic ImageDifference ImageDimensions ImageDistance ImageEffect ImageFeatureTrack ImageFileApply ImageFileFilter ImageFileScan ImageFilter ImageForestingComponents ImageForwardTransformation ImageHistogram ImageKeypoints ImageLevels ImageLines ImageMargins ImageMarkers ImageMeasurements ImageMultiply ImageOffset ImagePad ImagePadding ImagePartition ImagePeriodogram ImagePerspectiveTransformation ImageQ ImageRangeCache ImageReflect ImageRegion ImageResize ImageResolution ImageRotate ImageRotated ImageScaled ImageScan ImageSize ImageSizeAction ImageSizeCache ImageSizeMultipliers ImageSizeRaw ImageSubtract ImageTake ImageTransformation ImageTrim ImageType ImageValue ImageValuePositions Implies Import ImportAutoReplacements ImportString ImprovementImportance In IncidenceGraph IncidenceList IncidenceMatrix IncludeConstantBasis IncludeFileExtension IncludePods IncludeSingularTerm Increment Indent IndentingNewlineSpacings IndentMaxFraction IndependenceTest IndependentEdgeSetQ IndependentUnit IndependentVertexSetQ Indeterminate IndexCreationOptions Indexed IndexGraph IndexTag Inequality InexactNumberQ InexactNumbers Infinity Infix Information Inherited InheritScope Initialization InitializationCell InitializationCellEvaluation InitializationCellWarning InlineCounterAssignments InlineCounterIncrements InlineRules Inner Inpaint Input InputAliases InputAssumptions InputAutoReplacements InputField InputFieldBox InputFieldBoxOptions InputForm InputGrouping InputNamePacket InputNotebook InputPacket InputSettings InputStream InputString InputStringPacket InputToBoxFormPacket Insert InsertionPointObject InsertResults Inset Inset3DBox Inset3DBoxOptions InsetBox InsetBoxOptions Install InstallService InString Integer IntegerDigits IntegerExponent IntegerLength IntegerPart IntegerPartitions IntegerQ Integers IntegerString Integral Integrate Interactive InteractiveTradingChart Interlaced Interleaving InternallyBalancedDecomposition InterpolatingFunction InterpolatingPolynomial Interpolation InterpolationOrder InterpolationPoints InterpolationPrecision Interpretation InterpretationBox InterpretationBoxOptions InterpretationFunction InterpretTemplate InterquartileRange Interrupt InterruptSettings Intersection Interval IntervalIntersection IntervalMemberQ IntervalUnion Inverse InverseBetaRegularized InverseCDF InverseChiSquareDistribution InverseContinuousWaveletTransform InverseDistanceTransform InverseEllipticNomeQ InverseErf InverseErfc InverseFourier InverseFourierCosTransform InverseFourierSequenceTransform InverseFourierSinTransform InverseFourierTransform InverseFunction InverseFunctions InverseGammaDistribution InverseGammaRegularized InverseGaussianDistribution InverseGudermannian InverseHaversine InverseJacobiCD InverseJacobiCN InverseJacobiCS InverseJacobiDC InverseJacobiDN InverseJacobiDS InverseJacobiNC InverseJacobiND InverseJacobiNS InverseJacobiSC InverseJacobiSD InverseJacobiSN InverseLaplaceTransform InversePermutation InverseRadon InverseSeries InverseSurvivalFunction InverseWaveletTransform InverseWeierstrassP InverseZTransform Invisible InvisibleApplication InvisibleTimes IrreduciblePolynomialQ IsolatingInterval IsomorphicGraphQ IsotopeData Italic Item ItemBox ItemBoxOptions ItemSize ItemStyle ItoProcess JaccardDissimilarity JacobiAmplitude Jacobian JacobiCD JacobiCN JacobiCS JacobiDC JacobiDN JacobiDS JacobiNC JacobiND JacobiNS JacobiP JacobiSC JacobiSD JacobiSN JacobiSymbol JacobiZeta JankoGroupJ1 JankoGroupJ2 JankoGroupJ3 JankoGroupJ4 JarqueBeraALMTest JohnsonDistribution Join Joined JoinedCurve JoinedCurveBox JoinForm JordanDecomposition JordanModelDecomposition K KagiChart KaiserBesselWindow KaiserWindow KalmanEstimator KalmanFilter KarhunenLoeveDecomposition KaryTree KatzCentrality KCoreComponents KDistribution KelvinBei KelvinBer KelvinKei KelvinKer KendallTau KendallTauTest KernelExecute KernelMixtureDistribution KernelObject Kernels Ket Khinchin KirchhoffGraph KirchhoffMatrix KleinInvariantJ KnightTourGraph KnotData KnownUnitQ KolmogorovSmirnovTest KroneckerDelta KroneckerModelDecomposition KroneckerProduct KroneckerSymbol KuiperTest KumaraswamyDistribution Kurtosis KuwaharaFilter Label Labeled LabeledSlider LabelingFunction LabelStyle LaguerreL LambdaComponents LambertW LanczosWindow LandauDistribution Language LanguageCategory LaplaceDistribution LaplaceTransform Laplacian LaplacianFilter LaplacianGaussianFilter Large Larger Last Latitude LatitudeLongitude LatticeData LatticeReduce Launch LaunchKernels LayeredGraphPlot LayerSizeFunction LayoutInformation LCM LeafCount LeapYearQ LeastSquares LeastSquaresFilterKernel Left LeftArrow LeftArrowBar LeftArrowRightArrow LeftDownTeeVector LeftDownVector LeftDownVectorBar LeftRightArrow LeftRightVector LeftTee LeftTeeArrow LeftTeeVector LeftTriangle LeftTriangleBar LeftTriangleEqual LeftUpDownVector LeftUpTeeVector LeftUpVector LeftUpVectorBar LeftVector LeftVectorBar LegendAppearance Legended LegendFunction LegendLabel LegendLayout LegendMargins LegendMarkers LegendMarkerSize LegendreP LegendreQ LegendreType Length LengthWhile LerchPhi Less LessEqual LessEqualGreater LessFullEqual LessGreater LessLess LessSlantEqual LessTilde LetterCharacter LetterQ Level LeveneTest LeviCivitaTensor LevyDistribution Lexicographic LibraryFunction LibraryFunctionError LibraryFunctionInformation LibraryFunctionLoad LibraryFunctionUnload LibraryLoad LibraryUnload LicenseID LiftingFilterData LiftingWaveletTransform LightBlue LightBrown LightCyan Lighter LightGray LightGreen Lighting LightingAngle LightMagenta LightOrange LightPink LightPurple LightRed LightSources LightYellow Likelihood Limit LimitsPositioning LimitsPositioningTokens LindleyDistribution Line Line3DBox LinearFilter LinearFractionalTransform LinearModelFit LinearOffsetFunction LinearProgramming LinearRecurrence LinearSolve LinearSolveFunction LineBox LineBreak LinebreakAdjustments LineBreakChart LineBreakWithin LineColor LineForm LineGraph LineIndent LineIndentMaxFraction LineIntegralConvolutionPlot LineIntegralConvolutionScale LineLegend LineOpacity LineSpacing LineWrapParts LinkActivate LinkClose LinkConnect LinkConnectedQ LinkCreate LinkError LinkFlush LinkFunction LinkHost LinkInterrupt LinkLaunch LinkMode LinkObject LinkOpen LinkOptions LinkPatterns LinkProtocol LinkRead LinkReadHeld LinkReadyQ Links LinkWrite LinkWriteHeld LiouvilleLambda List Listable ListAnimate ListContourPlot ListContourPlot3D ListConvolve ListCorrelate ListCurvePathPlot ListDeconvolve ListDensityPlot Listen ListFourierSequenceTransform ListInterpolation ListLineIntegralConvolutionPlot ListLinePlot ListLogLinearPlot ListLogLogPlot ListLogPlot ListPicker ListPickerBox ListPickerBoxBackground ListPickerBoxOptions ListPlay ListPlot ListPlot3D ListPointPlot3D ListPolarPlot ListQ ListStreamDensityPlot ListStreamPlot ListSurfacePlot3D ListVectorDensityPlot ListVectorPlot ListVectorPlot3D ListZTransform Literal LiteralSearch LocalClusteringCoefficient LocalizeVariables LocationEquivalenceTest LocationTest Locator LocatorAutoCreate LocatorBox LocatorBoxOptions LocatorCentering LocatorPane LocatorPaneBox LocatorPaneBoxOptions LocatorRegion Locked Log Log10 Log2 LogBarnesG LogGamma LogGammaDistribution LogicalExpand LogIntegral LogisticDistribution LogitModelFit LogLikelihood LogLinearPlot LogLogisticDistribution LogLogPlot LogMultinormalDistribution LogNormalDistribution LogPlot LogRankTest LogSeriesDistribution LongEqual Longest LongestAscendingSequence LongestCommonSequence LongestCommonSequencePositions LongestCommonSubsequence LongestCommonSubsequencePositions LongestMatch LongForm Longitude LongLeftArrow LongLeftRightArrow LongRightArrow Loopback LoopFreeGraphQ LowerCaseQ LowerLeftArrow LowerRightArrow LowerTriangularize LowpassFilter LQEstimatorGains LQGRegulator LQOutputRegulatorGains LQRegulatorGains LUBackSubstitution LucasL LuccioSamiComponents LUDecomposition LyapunovSolve LyonsGroupLy MachineID MachineName MachineNumberQ MachinePrecision MacintoshSystemPageSetup Magenta Magnification Magnify MainSolve MaintainDynamicCaches Majority MakeBoxes MakeExpression MakeRules MangoldtLambda ManhattanDistance Manipulate Manipulator MannWhitneyTest MantissaExponent Manual Map MapAll MapAt MapIndexed MAProcess MapThread MarcumQ MardiaCombinedTest MardiaKurtosisTest MardiaSkewnessTest MarginalDistribution MarkovProcessProperties Masking MatchingDissimilarity MatchLocalNameQ MatchLocalNames MatchQ Material MathematicaNotation MathieuC MathieuCharacteristicA MathieuCharacteristicB MathieuCharacteristicExponent MathieuCPrime MathieuGroupM11 MathieuGroupM12 MathieuGroupM22 MathieuGroupM23 MathieuGroupM24 MathieuS MathieuSPrime MathMLForm MathMLText Matrices MatrixExp MatrixForm MatrixFunction MatrixLog MatrixPlot MatrixPower MatrixQ MatrixRank Max MaxBend MaxDetect MaxExtraBandwidths MaxExtraConditions MaxFeatures MaxFilter Maximize MaxIterations MaxMemoryUsed MaxMixtureKernels MaxPlotPoints MaxPoints MaxRecursion MaxStableDistribution MaxStepFraction MaxSteps MaxStepSize MaxValue MaxwellDistribution McLaughlinGroupMcL Mean MeanClusteringCoefficient MeanDegreeConnectivity MeanDeviation MeanFilter MeanGraphDistance MeanNeighborDegree MeanShift MeanShiftFilter Median MedianDeviation MedianFilter Medium MeijerG MeixnerDistribution MemberQ MemoryConstrained MemoryInUse Menu MenuAppearance MenuCommandKey MenuEvaluator MenuItem MenuPacket MenuSortingValue MenuStyle MenuView MergeDifferences Mesh MeshFunctions MeshRange MeshShading MeshStyle Message MessageDialog MessageList MessageName MessageOptions MessagePacket Messages MessagesNotebook MetaCharacters MetaInformation Method MethodOptions MexicanHatWavelet MeyerWavelet Min MinDetect MinFilter MinimalPolynomial MinimalStateSpaceModel Minimize Minors MinRecursion MinSize MinStableDistribution Minus MinusPlus MinValue Missing MissingDataMethod MittagLefflerE MixedRadix MixedRadixQuantity MixtureDistribution Mod Modal Mode Modular ModularLambda Module Modulus MoebiusMu Moment Momentary MomentConvert MomentEvaluate MomentGeneratingFunction Monday Monitor MonomialList MonomialOrder MonsterGroupM MorletWavelet MorphologicalBinarize MorphologicalBranchPoints MorphologicalComponents MorphologicalEulerNumber MorphologicalGraph MorphologicalPerimeter MorphologicalTransform Most MouseAnnotation MouseAppearance MouseAppearanceTag MouseButtons Mouseover MousePointerNote MousePosition MovingAverage MovingMedian MoyalDistribution MultiedgeStyle MultilaunchWarning MultiLetterItalics MultiLetterStyle MultilineFunction Multinomial MultinomialDistribution MultinormalDistribution MultiplicativeOrder Multiplicity Multiselection MultivariateHypergeometricDistribution MultivariatePoissonDistribution MultivariateTDistribution N NakagamiDistribution NameQ Names NamespaceBox Nand NArgMax NArgMin NBernoulliB NCache NDSolve NDSolveValue Nearest NearestFunction NeedCurrentFrontEndPackagePacket NeedCurrentFrontEndSymbolsPacket NeedlemanWunschSimilarity Needs Negative NegativeBinomialDistribution NegativeMultinomialDistribution NeighborhoodGraph Nest NestedGreaterGreater NestedLessLess NestedScriptRules NestList NestWhile NestWhileList NevilleThetaC NevilleThetaD NevilleThetaN NevilleThetaS NewPrimitiveStyle NExpectation Next NextPrime NHoldAll NHoldFirst NHoldRest NicholsGridLines NicholsPlot NIntegrate NMaximize NMaxValue NMinimize NMinValue NominalVariables NonAssociative NoncentralBetaDistribution NoncentralChiSquareDistribution NoncentralFRatioDistribution NoncentralStudentTDistribution NonCommutativeMultiply NonConstants None NonlinearModelFit NonlocalMeansFilter NonNegative NonPositive Nor NorlundB Norm Normal NormalDistribution NormalGrouping Normalize NormalizedSquaredEuclideanDistance NormalsFunction NormFunction Not NotCongruent NotCupCap NotDoubleVerticalBar Notebook NotebookApply NotebookAutoSave NotebookClose NotebookConvertSettings NotebookCreate NotebookCreateReturnObject NotebookDefault NotebookDelete NotebookDirectory NotebookDynamicExpression NotebookEvaluate NotebookEventActions NotebookFileName NotebookFind NotebookFindReturnObject NotebookGet NotebookGetLayoutInformationPacket NotebookGetMisspellingsPacket NotebookInformation NotebookInterfaceObject NotebookLocate NotebookObject NotebookOpen NotebookOpenReturnObject NotebookPath NotebookPrint NotebookPut NotebookPutReturnObject NotebookRead NotebookResetGeneratedCells Notebooks NotebookSave NotebookSaveAs NotebookSelection NotebookSetupLayoutInformationPacket NotebooksMenu NotebookWrite NotElement NotEqualTilde NotExists NotGreater NotGreaterEqual NotGreaterFullEqual NotGreaterGreater NotGreaterLess NotGreaterSlantEqual NotGreaterTilde NotHumpDownHump NotHumpEqual NotLeftTriangle NotLeftTriangleBar NotLeftTriangleEqual NotLess NotLessEqual NotLessFullEqual NotLessGreater NotLessLess NotLessSlantEqual NotLessTilde NotNestedGreaterGreater NotNestedLessLess NotPrecedes NotPrecedesEqual NotPrecedesSlantEqual NotPrecedesTilde NotReverseElement NotRightTriangle NotRightTriangleBar NotRightTriangleEqual NotSquareSubset NotSquareSubsetEqual NotSquareSuperset NotSquareSupersetEqual NotSubset NotSubsetEqual NotSucceeds NotSucceedsEqual NotSucceedsSlantEqual NotSucceedsTilde NotSuperset NotSupersetEqual NotTilde NotTildeEqual NotTildeFullEqual NotTildeTilde NotVerticalBar NProbability NProduct NProductFactors NRoots NSolve NSum NSumTerms Null NullRecords NullSpace NullWords Number NumberFieldClassNumber NumberFieldDiscriminant NumberFieldFundamentalUnits NumberFieldIntegralBasis NumberFieldNormRepresentatives NumberFieldRegulator NumberFieldRootsOfUnity NumberFieldSignature NumberForm NumberFormat NumberMarks NumberMultiplier NumberPadding NumberPoint NumberQ NumberSeparator NumberSigns NumberString Numerator NumericFunction NumericQ NuttallWindow NValues NyquistGridLines NyquistPlot O ObservabilityGramian ObservabilityMatrix ObservableDecomposition ObservableModelQ OddQ Off Offset OLEData On ONanGroupON OneIdentity Opacity Open OpenAppend Opener OpenerBox OpenerBoxOptions OpenerView OpenFunctionInspectorPacket Opening OpenRead OpenSpecialOptions OpenTemporary OpenWrite Operate OperatingSystem OptimumFlowData Optional OptionInspectorSettings OptionQ Options OptionsPacket OptionsPattern OptionValue OptionValueBox OptionValueBoxOptions Or Orange Order OrderDistribution OrderedQ Ordering Orderless OrnsteinUhlenbeckProcess Orthogonalize Out Outer OutputAutoOverwrite OutputControllabilityMatrix OutputControllableModelQ OutputForm OutputFormData OutputGrouping OutputMathEditExpression OutputNamePacket OutputResponse OutputSizeLimit OutputStream Over OverBar OverDot Overflow OverHat Overlaps Overlay OverlayBox OverlayBoxOptions Overscript OverscriptBox OverscriptBoxOptions OverTilde OverVector OwenT OwnValues PackingMethod PaddedForm Padding PadeApproximant PadLeft PadRight PageBreakAbove PageBreakBelow PageBreakWithin PageFooterLines PageFooters PageHeaderLines PageHeaders PageHeight PageRankCentrality PageWidth PairedBarChart PairedHistogram PairedSmoothHistogram PairedTTest PairedZTest PaletteNotebook PalettePath Pane PaneBox PaneBoxOptions Panel PanelBox PanelBoxOptions Paneled PaneSelector PaneSelectorBox PaneSelectorBoxOptions PaperWidth ParabolicCylinderD ParagraphIndent ParagraphSpacing ParallelArray ParallelCombine ParallelDo ParallelEvaluate Parallelization Parallelize ParallelMap ParallelNeeds ParallelProduct ParallelSubmit ParallelSum ParallelTable ParallelTry Parameter ParameterEstimator ParameterMixtureDistribution ParameterVariables ParametricFunction ParametricNDSolve ParametricNDSolveValue ParametricPlot ParametricPlot3D ParentConnect ParentDirectory ParentForm Parenthesize ParentList ParetoDistribution Part PartialCorrelationFunction PartialD ParticleData Partition PartitionsP PartitionsQ ParzenWindow PascalDistribution PassEventsDown PassEventsUp Paste PasteBoxFormInlineCells PasteButton Path PathGraph PathGraphQ Pattern PatternSequence PatternTest PauliMatrix PaulWavelet Pause PausedTime PDF PearsonChiSquareTest PearsonCorrelationTest PearsonDistribution PerformanceGoal PeriodicInterpolation Periodogram PeriodogramArray PermutationCycles PermutationCyclesQ PermutationGroup PermutationLength PermutationList PermutationListQ PermutationMax PermutationMin PermutationOrder PermutationPower PermutationProduct PermutationReplace Permutations PermutationSupport Permute PeronaMalikFilter Perpendicular PERTDistribution PetersenGraph PhaseMargins Pi Pick PIDData PIDDerivativeFilter PIDFeedforward PIDTune Piecewise PiecewiseExpand PieChart PieChart3D PillaiTrace PillaiTraceTest Pink Pivoting PixelConstrained PixelValue PixelValuePositions Placed Placeholder PlaceholderReplace Plain PlanarGraphQ Play PlayRange Plot Plot3D Plot3Matrix PlotDivision PlotJoined PlotLabel PlotLayout PlotLegends PlotMarkers PlotPoints PlotRange PlotRangeClipping PlotRangePadding PlotRegion PlotStyle Plus PlusMinus Pochhammer PodStates PodWidth Point Point3DBox PointBox PointFigureChart PointForm PointLegend PointSize PoissonConsulDistribution PoissonDistribution PoissonProcess PoissonWindow PolarAxes PolarAxesOrigin PolarGridLines PolarPlot PolarTicks PoleZeroMarkers PolyaAeppliDistribution PolyGamma Polygon Polygon3DBox Polygon3DBoxOptions PolygonBox PolygonBoxOptions PolygonHoleScale PolygonIntersections PolygonScale PolyhedronData PolyLog PolynomialExtendedGCD PolynomialForm PolynomialGCD PolynomialLCM PolynomialMod PolynomialQ PolynomialQuotient PolynomialQuotientRemainder PolynomialReduce PolynomialRemainder Polynomials PopupMenu PopupMenuBox PopupMenuBoxOptions PopupView PopupWindow Position Positive PositiveDefiniteMatrixQ PossibleZeroQ Postfix PostScript Power PowerDistribution PowerExpand PowerMod PowerModList PowerSpectralDensity PowersRepresentations PowerSymmetricPolynomial Precedence PrecedenceForm Precedes PrecedesEqual PrecedesSlantEqual PrecedesTilde Precision PrecisionGoal PreDecrement PredictionRoot PreemptProtect PreferencesPath Prefix PreIncrement Prepend PrependTo PreserveImageOptions Previous PriceGraphDistribution PrimaryPlaceholder Prime PrimeNu PrimeOmega PrimePi PrimePowerQ PrimeQ Primes PrimeZetaP PrimitiveRoot PrincipalComponents PrincipalValue Print PrintAction PrintForm PrintingCopies PrintingOptions PrintingPageRange PrintingStartingPageNumber PrintingStyleEnvironment PrintPrecision PrintTemporary Prism PrismBox PrismBoxOptions PrivateCellOptions PrivateEvaluationOptions PrivateFontOptions PrivateFrontEndOptions PrivateNotebookOptions PrivatePaths Probability ProbabilityDistribution ProbabilityPlot ProbabilityPr ProbabilityScalePlot ProbitModelFit ProcessEstimator ProcessParameterAssumptions ProcessParameterQ ProcessStateDomain ProcessTimeDomain Product ProductDistribution ProductLog ProgressIndicator ProgressIndicatorBox ProgressIndicatorBoxOptions Projection Prolog PromptForm Properties Property PropertyList PropertyValue Proportion Proportional Protect Protected ProteinData Pruning PseudoInverse Purple Put PutAppend Pyramid PyramidBox PyramidBoxOptions QBinomial QFactorial QGamma QHypergeometricPFQ QPochhammer QPolyGamma QRDecomposition QuadraticIrrationalQ Quantile QuantilePlot Quantity QuantityForm QuantityMagnitude QuantityQ QuantityUnit Quartics QuartileDeviation Quartiles QuartileSkewness QueueingNetworkProcess QueueingProcess QueueProperties Quiet Quit Quotient QuotientRemainder RadialityCentrality RadicalBox RadicalBoxOptions RadioButton RadioButtonBar RadioButtonBox RadioButtonBoxOptions Radon RamanujanTau RamanujanTauL RamanujanTauTheta RamanujanTauZ Random RandomChoice RandomComplex RandomFunction RandomGraph RandomImage RandomInteger RandomPermutation RandomPrime RandomReal RandomSample RandomSeed RandomVariate RandomWalkProcess Range RangeFilter RangeSpecification RankedMax RankedMin Raster Raster3D Raster3DBox Raster3DBoxOptions RasterArray RasterBox RasterBoxOptions Rasterize RasterSize Rational RationalFunctions Rationalize Rationals Ratios Raw RawArray RawBoxes RawData RawMedium RayleighDistribution Re Read ReadList ReadProtected Real RealBlockDiagonalForm RealDigits RealExponent Reals Reap Record RecordLists RecordSeparators Rectangle RectangleBox RectangleBoxOptions RectangleChart RectangleChart3D RecurrenceFilter RecurrenceTable RecurringDigitsForm Red Reduce RefBox ReferenceLineStyle ReferenceMarkers ReferenceMarkerStyle Refine ReflectionMatrix ReflectionTransform Refresh RefreshRate RegionBinarize RegionFunction RegionPlot RegionPlot3D RegularExpression Regularization Reinstall Release ReleaseHold ReliabilityDistribution ReliefImage ReliefPlot Remove RemoveAlphaChannel RemoveAsynchronousTask Removed RemoveInputStreamMethod RemoveOutputStreamMethod RemoveProperty RemoveScheduledTask RenameDirectory RenameFile RenderAll RenderingOptions RenewalProcess RenkoChart Repeated RepeatedNull RepeatedString Replace ReplaceAll ReplaceHeldPart ReplaceImageValue ReplaceList ReplacePart ReplacePixelValue ReplaceRepeated Resampling Rescale RescalingTransform ResetDirectory ResetMenusPacket ResetScheduledTask Residue Resolve Rest Resultant ResumePacket Return ReturnExpressionPacket ReturnInputFormPacket ReturnPacket ReturnTextPacket Reverse ReverseBiorthogonalSplineWavelet ReverseElement ReverseEquilibrium ReverseGraph ReverseUpEquilibrium RevolutionAxis RevolutionPlot3D RGBColor RiccatiSolve RiceDistribution RidgeFilter RiemannR RiemannSiegelTheta RiemannSiegelZ Riffle Right RightArrow RightArrowBar RightArrowLeftArrow RightCosetRepresentative RightDownTeeVector RightDownVector RightDownVectorBar RightTee RightTeeArrow RightTeeVector RightTriangle RightTriangleBar RightTriangleEqual RightUpDownVector RightUpTeeVector RightUpVector RightUpVectorBar RightVector RightVectorBar RiskAchievementImportance RiskReductionImportance RogersTanimotoDissimilarity Root RootApproximant RootIntervals RootLocusPlot RootMeanSquare RootOfUnityQ RootReduce Roots RootSum Rotate RotateLabel RotateLeft RotateRight RotationAction RotationBox RotationBoxOptions RotationMatrix RotationTransform Round RoundImplies RoundingRadius Row RowAlignments RowBackgrounds RowBox RowHeights RowLines RowMinHeight RowReduce RowsEqual RowSpacings RSolve RudvalisGroupRu Rule RuleCondition RuleDelayed RuleForm RulerUnits Run RunScheduledTask RunThrough RuntimeAttributes RuntimeOptions RussellRaoDissimilarity SameQ SameTest SampleDepth SampledSoundFunction SampledSoundList SampleRate SamplingPeriod SARIMAProcess SARMAProcess SatisfiabilityCount SatisfiabilityInstances SatisfiableQ Saturday Save Saveable SaveAutoDelete SaveDefinitions SawtoothWave Scale Scaled ScaleDivisions ScaledMousePosition ScaleOrigin ScalePadding ScaleRanges ScaleRangeStyle ScalingFunctions ScalingMatrix ScalingTransform Scan ScheduledTaskActiveQ ScheduledTaskData ScheduledTaskObject ScheduledTasks SchurDecomposition ScientificForm ScreenRectangle ScreenStyleEnvironment ScriptBaselineShifts ScriptLevel ScriptMinSize ScriptRules ScriptSizeMultipliers Scrollbars ScrollingOptions ScrollPosition Sec Sech SechDistribution SectionGrouping SectorChart SectorChart3D SectorOrigin SectorSpacing SeedRandom Select Selectable SelectComponents SelectedCells SelectedNotebook Selection SelectionAnimate SelectionCell SelectionCellCreateCell SelectionCellDefaultStyle SelectionCellParentStyle SelectionCreateCell SelectionDebuggerTag SelectionDuplicateCell SelectionEvaluate SelectionEvaluateCreateCell SelectionMove SelectionPlaceholder SelectionSetStyle SelectWithContents SelfLoops SelfLoopStyle SemialgebraicComponentInstances SendMail Sequence SequenceAlignment SequenceForm SequenceHold SequenceLimit Series SeriesCoefficient SeriesData SessionTime Set SetAccuracy SetAlphaChannel SetAttributes Setbacks SetBoxFormNamesPacket SetDelayed SetDirectory SetEnvironment SetEvaluationNotebook SetFileDate SetFileLoadingContext SetNotebookStatusLine SetOptions SetOptionsPacket SetPrecision SetProperty SetSelectedNotebook SetSharedFunction SetSharedVariable SetSpeechParametersPacket SetStreamPosition SetSystemOptions Setter SetterBar SetterBox SetterBoxOptions Setting SetValue Shading Shallow ShannonWavelet ShapiroWilkTest Share Sharpen ShearingMatrix ShearingTransform ShenCastanMatrix Short ShortDownArrow Shortest ShortestMatch ShortestPathFunction ShortLeftArrow ShortRightArrow ShortUpArrow Show ShowAutoStyles ShowCellBracket ShowCellLabel ShowCellTags ShowClosedCellArea ShowContents ShowControls ShowCursorTracker ShowGroupOpenCloseIcon ShowGroupOpener ShowInvisibleCharacters ShowPageBreaks ShowPredictiveInterface ShowSelection ShowShortBoxForm ShowSpecialCharacters ShowStringCharacters ShowSyntaxStyles ShrinkingDelay ShrinkWrapBoundingBox SiegelTheta SiegelTukeyTest Sign Signature SignedRankTest SignificanceLevel SignPadding SignTest SimilarityRules SimpleGraph SimpleGraphQ Simplify Sin Sinc SinghMaddalaDistribution SingleEvaluation SingleLetterItalics SingleLetterStyle SingularValueDecomposition SingularValueList SingularValuePlot SingularValues Sinh SinhIntegral SinIntegral SixJSymbol Skeleton SkeletonTransform SkellamDistribution Skewness SkewNormalDistribution Skip SliceDistribution Slider Slider2D Slider2DBox Slider2DBoxOptions SliderBox SliderBoxOptions SlideView Slot SlotSequence Small SmallCircle Smaller SmithDelayCompensator SmithWatermanSimilarity SmoothDensityHistogram SmoothHistogram SmoothHistogram3D SmoothKernelDistribution SocialMediaData Socket SokalSneathDissimilarity Solve SolveAlways SolveDelayed Sort SortBy Sound SoundAndGraphics SoundNote SoundVolume Sow Space SpaceForm Spacer Spacings Span SpanAdjustments SpanCharacterRounding SpanFromAbove SpanFromBoth SpanFromLeft SpanLineThickness SpanMaxSize SpanMinSize SpanningCharacters SpanSymmetric SparseArray SpatialGraphDistribution Speak SpeakTextPacket SpearmanRankTest SpearmanRho Spectrogram SpectrogramArray Specularity SpellingCorrection SpellingDictionaries SpellingDictionariesPath SpellingOptions SpellingSuggestionsPacket Sphere SphereBox SphericalBesselJ SphericalBesselY SphericalHankelH1 SphericalHankelH2 SphericalHarmonicY SphericalPlot3D SphericalRegion SpheroidalEigenvalue SpheroidalJoiningFactor SpheroidalPS SpheroidalPSPrime SpheroidalQS SpheroidalQSPrime SpheroidalRadialFactor SpheroidalS1 SpheroidalS1Prime SpheroidalS2 SpheroidalS2Prime Splice SplicedDistribution SplineClosed SplineDegree SplineKnots SplineWeights Split SplitBy SpokenString Sqrt SqrtBox SqrtBoxOptions Square SquaredEuclideanDistance SquareFreeQ SquareIntersection SquaresR SquareSubset SquareSubsetEqual SquareSuperset SquareSupersetEqual SquareUnion SquareWave StabilityMargins StabilityMarginsStyle StableDistribution Stack StackBegin StackComplete StackInhibit StandardDeviation StandardDeviationFilter StandardForm Standardize StandbyDistribution Star StarGraph StartAsynchronousTask StartingStepSize StartOfLine StartOfString StartScheduledTask StartupSound StateDimensions StateFeedbackGains StateOutputEstimator StateResponse StateSpaceModel StateSpaceRealization StateSpaceTransform StationaryDistribution StationaryWaveletPacketTransform StationaryWaveletTransform StatusArea StatusCentrality StepMonitor StieltjesGamma StirlingS1 StirlingS2 StopAsynchronousTask StopScheduledTask StrataVariables StratonovichProcess StreamColorFunction StreamColorFunctionScaling StreamDensityPlot StreamPlot StreamPoints StreamPosition Streams StreamScale StreamStyle String StringBreak StringByteCount StringCases StringCount StringDrop StringExpression StringForm StringFormat StringFreeQ StringInsert StringJoin StringLength StringMatchQ StringPosition StringQ StringReplace StringReplaceList StringReplacePart StringReverse StringRotateLeft StringRotateRight StringSkeleton StringSplit StringTake StringToStream StringTrim StripBoxes StripOnInput StripWrapperBoxes StrokeForm StructuralImportance StructuredArray StructuredSelection StruveH StruveL Stub StudentTDistribution Style StyleBox StyleBoxAutoDelete StyleBoxOptions StyleData StyleDefinitions StyleForm StyleKeyMapping StyleMenuListing StyleNameDialogSettings StyleNames StylePrint StyleSheetPath Subfactorial Subgraph SubMinus SubPlus SubresultantPolynomialRemainders SubresultantPolynomials Subresultants Subscript SubscriptBox SubscriptBoxOptions Subscripted Subset SubsetEqual Subsets SubStar Subsuperscript SubsuperscriptBox SubsuperscriptBoxOptions Subtract SubtractFrom SubValues Succeeds SucceedsEqual SucceedsSlantEqual SucceedsTilde SuchThat Sum SumConvergence Sunday SuperDagger SuperMinus SuperPlus Superscript SuperscriptBox SuperscriptBoxOptions Superset SupersetEqual SuperStar Surd SurdForm SurfaceColor SurfaceGraphics SurvivalDistribution SurvivalFunction SurvivalModel SurvivalModelFit SuspendPacket SuzukiDistribution SuzukiGroupSuz SwatchLegend Switch Symbol SymbolName SymletWavelet Symmetric SymmetricGroup SymmetricMatrixQ SymmetricPolynomial SymmetricReduction Symmetrize SymmetrizedArray SymmetrizedArrayRules SymmetrizedDependentComponents SymmetrizedIndependentComponents SymmetrizedReplacePart SynchronousInitialization SynchronousUpdating Syntax SyntaxForm SyntaxInformation SyntaxLength SyntaxPacket SyntaxQ SystemDialogInput SystemException SystemHelpPath SystemInformation SystemInformationData SystemOpen SystemOptions SystemsModelDelay SystemsModelDelayApproximate SystemsModelDelete SystemsModelDimensions SystemsModelExtract SystemsModelFeedbackConnect SystemsModelLabels SystemsModelOrder SystemsModelParallelConnect SystemsModelSeriesConnect SystemsModelStateFeedbackConnect SystemStub Tab TabFilling Table TableAlignments TableDepth TableDirections TableForm TableHeadings TableSpacing TableView TableViewBox TabSpacings TabView TabViewBox TabViewBoxOptions TagBox TagBoxNote TagBoxOptions TaggingRules TagSet TagSetDelayed TagStyle TagUnset Take TakeWhile Tally Tan Tanh TargetFunctions TargetUnits TautologyQ TelegraphProcess TemplateBox TemplateBoxOptions TemplateSlotSequence TemporalData Temporary TemporaryVariable TensorContract TensorDimensions TensorExpand TensorProduct TensorQ TensorRank TensorReduce TensorSymmetry TensorTranspose TensorWedge Tetrahedron TetrahedronBox TetrahedronBoxOptions TeXForm TeXSave Text Text3DBox Text3DBoxOptions TextAlignment TextBand TextBoundingBox TextBox TextCell TextClipboardType TextData TextForm TextJustification TextLine TextPacket TextParagraph TextRecognize TextRendering TextStyle Texture TextureCoordinateFunction TextureCoordinateScaling Therefore ThermometerGauge Thick Thickness Thin Thinning ThisLink ThompsonGroupTh Thread ThreeJSymbol Threshold Through Throw Thumbnail Thursday Ticks TicksStyle Tilde TildeEqual TildeFullEqual TildeTilde TimeConstrained TimeConstraint Times TimesBy TimeSeriesForecast TimeSeriesInvertibility TimeUsed TimeValue TimeZone Timing Tiny TitleGrouping TitsGroupT ToBoxes ToCharacterCode ToColor ToContinuousTimeModel ToDate ToDiscreteTimeModel ToeplitzMatrix ToExpression ToFileName Together Toggle ToggleFalse Toggler TogglerBar TogglerBox TogglerBoxOptions ToHeldExpression ToInvertibleTimeSeries TokenWords Tolerance ToLowerCase ToNumberField TooBig Tooltip TooltipBox TooltipBoxOptions TooltipDelay TooltipStyle Top TopHatTransform TopologicalSort ToRadicals ToRules ToString Total TotalHeight TotalVariationFilter TotalWidth TouchscreenAutoZoom TouchscreenControlPlacement ToUpperCase Tr Trace TraceAbove TraceAction TraceBackward TraceDepth TraceDialog TraceForward TraceInternal TraceLevel TraceOff TraceOn TraceOriginal TracePrint TraceScan TrackedSymbols TradingChart TraditionalForm TraditionalFunctionNotation TraditionalNotation TraditionalOrder TransferFunctionCancel TransferFunctionExpand TransferFunctionFactor TransferFunctionModel TransferFunctionPoles TransferFunctionTransform TransferFunctionZeros TransformationFunction TransformationFunctions TransformationMatrix TransformedDistribution TransformedField Translate TranslationTransform TransparentColor Transpose TreeForm TreeGraph TreeGraphQ TreePlot TrendStyle TriangleWave TriangularDistribution Trig TrigExpand TrigFactor TrigFactorList Trigger TrigReduce TrigToExp TrimmedMean True TrueQ TruncatedDistribution TsallisQExponentialDistribution TsallisQGaussianDistribution TTest Tube TubeBezierCurveBox TubeBezierCurveBoxOptions TubeBox TubeBSplineCurveBox TubeBSplineCurveBoxOptions Tuesday TukeyLambdaDistribution TukeyWindow Tuples TuranGraph TuringMachine Transparent UnateQ Uncompress Undefined UnderBar Underflow Underlined Underoverscript UnderoverscriptBox UnderoverscriptBoxOptions Underscript UnderscriptBox UnderscriptBoxOptions UndirectedEdge UndirectedGraph UndirectedGraphQ UndocumentedTestFEParserPacket UndocumentedTestGetSelectionPacket Unequal Unevaluated UniformDistribution UniformGraphDistribution UniformSumDistribution Uninstall Union UnionPlus Unique UnitBox UnitConvert UnitDimensions Unitize UnitRootTest UnitSimplify UnitStep UnitTriangle UnitVector Unprotect UnsameQ UnsavedVariables Unset UnsetShared UntrackedVariables Up UpArrow UpArrowBar UpArrowDownArrow Update UpdateDynamicObjects UpdateDynamicObjectsSynchronous UpdateInterval UpDownArrow UpEquilibrium UpperCaseQ UpperLeftArrow UpperRightArrow UpperTriangularize Upsample UpSet UpSetDelayed UpTee UpTeeArrow UpValues URL URLFetch URLFetchAsynchronous URLSave URLSaveAsynchronous UseGraphicsRange Using UsingFrontEnd V2Get ValidationLength Value ValueBox ValueBoxOptions ValueForm ValueQ ValuesData Variables Variance VarianceEquivalenceTest VarianceEstimatorFunction VarianceGammaDistribution VarianceTest VectorAngle VectorColorFunction VectorColorFunctionScaling VectorDensityPlot VectorGlyphData VectorPlot VectorPlot3D VectorPoints VectorQ Vectors VectorScale VectorStyle Vee Verbatim Verbose VerboseConvertToPostScriptPacket VerifyConvergence VerifySolutions VerifyTestAssumptions Version VersionNumber VertexAdd VertexCapacity VertexColors VertexComponent VertexConnectivity VertexCoordinateRules VertexCoordinates VertexCorrelationSimilarity VertexCosineSimilarity VertexCount VertexCoverQ VertexDataCoordinates VertexDegree VertexDelete VertexDiceSimilarity VertexEccentricity VertexInComponent VertexInDegree VertexIndex VertexJaccardSimilarity VertexLabeling VertexLabels VertexLabelStyle VertexList VertexNormals VertexOutComponent VertexOutDegree VertexQ VertexRenderingFunction VertexReplace VertexShape VertexShapeFunction VertexSize VertexStyle VertexTextureCoordinates VertexWeight Vertical VerticalBar VerticalForm VerticalGauge VerticalSeparator VerticalSlider VerticalTilde ViewAngle ViewCenter ViewMatrix ViewPoint ViewPointSelectorSettings ViewPort ViewRange ViewVector ViewVertical VirtualGroupData Visible VisibleCell VoigtDistribution VonMisesDistribution WaitAll WaitAsynchronousTask WaitNext WaitUntil WakebyDistribution WalleniusHypergeometricDistribution WaringYuleDistribution WatershedComponents WatsonUSquareTest WattsStrogatzGraphDistribution WaveletBestBasis WaveletFilterCoefficients WaveletImagePlot WaveletListPlot WaveletMapIndexed WaveletMatrixPlot WaveletPhi WaveletPsi WaveletScale WaveletScalogram WaveletThreshold WeaklyConnectedComponents WeaklyConnectedGraphQ WeakStationarity WeatherData WeberE Wedge Wednesday WeibullDistribution WeierstrassHalfPeriods WeierstrassInvariants WeierstrassP WeierstrassPPrime WeierstrassSigma WeierstrassZeta WeightedAdjacencyGraph WeightedAdjacencyMatrix WeightedData WeightedGraphQ Weights WelchWindow WheelGraph WhenEvent Which While White Whitespace WhitespaceCharacter WhittakerM WhittakerW WienerFilter WienerProcess WignerD WignerSemicircleDistribution WilksW WilksWTest WindowClickSelect WindowElements WindowFloating WindowFrame WindowFrameElements WindowMargins WindowMovable WindowOpacity WindowSelected WindowSize WindowStatusArea WindowTitle WindowToolbars WindowWidth With WolframAlpha WolframAlphaDate WolframAlphaQuantity WolframAlphaResult Word WordBoundary WordCharacter WordData WordSearch WordSeparators WorkingPrecision Write WriteString Wronskian XMLElement XMLObject Xnor Xor Yellow YuleDissimilarity ZernikeR ZeroSymmetric ZeroTest ZeroWidthTimes Zeta ZetaZero ZipfDistribution ZTest ZTransform $Aborted $ActivationGroupID $ActivationKey $ActivationUserRegistered $AddOnsDirectory $AssertFunction $Assumptions $AsynchronousTask $BaseDirectory $BatchInput $BatchOutput $BoxForms $ByteOrdering $Canceled $CharacterEncoding $CharacterEncodings $CommandLine $CompilationTarget $ConditionHold $ConfiguredKernels $Context $ContextPath $ControlActiveSetting $CreationDate $CurrentLink $DateStringFormat $DefaultFont $DefaultFrontEnd $DefaultImagingDevice $DefaultPath $Display $DisplayFunction $DistributedContexts $DynamicEvaluation $Echo $Epilog $ExportFormats $Failed $FinancialDataSource $FormatType $FrontEnd $FrontEndSession $GeoLocation $HistoryLength $HomeDirectory $HTTPCookies $IgnoreEOF $ImagingDevices $ImportFormats $InitialDirectory $Input $InputFileName $InputStreamMethods $Inspector $InstallationDate $InstallationDirectory $InterfaceEnvironment $IterationLimit $KernelCount $KernelID $Language $LaunchDirectory $LibraryPath $LicenseExpirationDate $LicenseID $LicenseProcesses $LicenseServer $LicenseSubprocesses $LicenseType $Line $Linked $LinkSupported $LoadedFiles $MachineAddresses $MachineDomain $MachineDomains $MachineEpsilon $MachineID $MachineName $MachinePrecision $MachineType $MaxExtraPrecision $MaxLicenseProcesses $MaxLicenseSubprocesses $MaxMachineNumber $MaxNumber $MaxPiecewiseCases $MaxPrecision $MaxRootDegree $MessageGroups $MessageList $MessagePrePrint $Messages $MinMachineNumber $MinNumber $MinorReleaseNumber $MinPrecision $ModuleNumber $NetworkLicense $NewMessage $NewSymbol $Notebooks $NumberMarks $Off $OperatingSystem $Output $OutputForms $OutputSizeLimit $OutputStreamMethods $Packages $ParentLink $ParentProcessID $PasswordFile $PatchLevelID $Path $PathnameSeparator $PerformanceGoal $PipeSupported $Post $Pre $PreferencesDirectory $PrePrint $PreRead $PrintForms $PrintLiteral $ProcessID $ProcessorCount $ProcessorType $ProductInformation $ProgramName $RandomState $RecursionLimit $ReleaseNumber $RootDirectory $ScheduledTask $ScriptCommandLine $SessionID $SetParentLink $SharedFunctions $SharedVariables $SoundDisplay $SoundDisplayFunction $SuppressInputFormHeads $SynchronousEvaluation $SyntaxHandler $System $SystemCharacterEncoding $SystemID $SystemWordLength $TemporaryDirectory $TemporaryPrefix $TextStyle $TimedOut $TimeUnit $TimeZone $TopDirectory $TraceOff $TraceOn $TracePattern $TracePostAction $TracePreAction $Urgent $UserAddOnsDirectory $UserBaseDirectory $UserDocumentsDirectory $UserName $Version $VersionNumber",c:[{cN:"comment",b:/\(\*/,e:/\*\)/},e.ASM,e.QSM,e.CNM,{cN:"list",b:/\{/,e:/\}/,i:/:/}]}
}),hljs.registerLanguage("matlab",function(e){var t=[e.CNM,{cN:"string",b:"'",e:"'",c:[e.BE,{b:"''"}]}],r={r:0,c:[{cN:"operator",b:/'['\.]*/}]};return{k:{keyword:"break case catch classdef continue else elseif end enumerated events for function global if methods otherwise parfor persistent properties return spmd switch try while",built_in:"sin sind sinh asin asind asinh cos cosd cosh acos acosd acosh tan tand tanh atan atand atan2 atanh sec secd sech asec asecd asech csc cscd csch acsc acscd acsch cot cotd coth acot acotd acoth hypot exp expm1 log log1p log10 log2 pow2 realpow reallog realsqrt sqrt nthroot nextpow2 abs angle complex conj imag real unwrap isreal cplxpair fix floor ceil round mod rem sign airy besselj bessely besselh besseli besselk beta betainc betaln ellipj ellipke erf erfc erfcx erfinv expint gamma gammainc gammaln psi legendre cross dot factor isprime primes gcd lcm rat rats perms nchoosek factorial cart2sph cart2pol pol2cart sph2cart hsv2rgb rgb2hsv zeros ones eye repmat rand randn linspace logspace freqspace meshgrid accumarray size length ndims numel disp isempty isequal isequalwithequalnans cat reshape diag blkdiag tril triu fliplr flipud flipdim rot90 find sub2ind ind2sub bsxfun ndgrid permute ipermute shiftdim circshift squeeze isscalar isvector ans eps realmax realmin pi i inf nan isnan isinf isfinite j why compan gallery hadamard hankel hilb invhilb magic pascal rosser toeplitz vander wilkinson"},i:'(//|"|#|/\\*|\\s+/\\w+)',c:[{cN:"function",bK:"function",e:"$",c:[e.UTM,{cN:"params",b:"\\(",e:"\\)"},{cN:"params",b:"\\[",e:"\\]"}]},{b:/[a-zA-Z_][a-zA-Z_0-9]*'['\.]*/,rB:!0,r:0,c:[{b:/[a-zA-Z_][a-zA-Z_0-9]*/,r:0},r.c[0]]},{cN:"matrix",b:"\\[",e:"\\]",c:t,r:0,starts:r},{cN:"cell",b:"\\{",e:/\}/,c:t,r:0,i:/:/,starts:r},{b:/\)/,r:0,starts:r},{cN:"comment",b:"\\%",e:"$"}].concat(t)}}),hljs.registerLanguage("mel",function(e){return{k:"int float string vector matrix if else switch case default while do for in break continue global proc return about abs addAttr addAttributeEditorNodeHelp addDynamic addNewShelfTab addPP addPanelCategory addPrefixToName advanceToNextDrivenKey affectedNet affects aimConstraint air alias aliasAttr align alignCtx alignCurve alignSurface allViewFit ambientLight angle angleBetween animCone animCurveEditor animDisplay animView annotate appendStringArray applicationName applyAttrPreset applyTake arcLenDimContext arcLengthDimension arclen arrayMapper art3dPaintCtx artAttrCtx artAttrPaintVertexCtx artAttrSkinPaintCtx artAttrTool artBuildPaintMenu artFluidAttrCtx artPuttyCtx artSelectCtx artSetPaintCtx artUserPaintCtx assignCommand assignInputDevice assignViewportFactories attachCurve attachDeviceAttr attachSurface attrColorSliderGrp attrCompatibility attrControlGrp attrEnumOptionMenu attrEnumOptionMenuGrp attrFieldGrp attrFieldSliderGrp attrNavigationControlGrp attrPresetEditWin attributeExists attributeInfo attributeMenu attributeQuery autoKeyframe autoPlace bakeClip bakeFluidShading bakePartialHistory bakeResults bakeSimulation basename basenameEx batchRender bessel bevel bevelPlus binMembership bindSkin blend2 blendShape blendShapeEditor blendShapePanel blendTwoAttr blindDataType boneLattice boundary boxDollyCtx boxZoomCtx bufferCurve buildBookmarkMenu buildKeyframeMenu button buttonManip CBG cacheFile cacheFileCombine cacheFileMerge cacheFileTrack camera cameraView canCreateManip canvas capitalizeString catch catchQuiet ceil changeSubdivComponentDisplayLevel changeSubdivRegion channelBox character characterMap characterOutlineEditor characterize chdir checkBox checkBoxGrp checkDefaultRenderGlobals choice circle circularFillet clamp clear clearCache clip clipEditor clipEditorCurrentTimeCtx clipSchedule clipSchedulerOutliner clipTrimBefore closeCurve closeSurface cluster cmdFileOutput cmdScrollFieldExecuter cmdScrollFieldReporter cmdShell coarsenSubdivSelectionList collision color colorAtPoint colorEditor colorIndex colorIndexSliderGrp colorSliderButtonGrp colorSliderGrp columnLayout commandEcho commandLine commandPort compactHairSystem componentEditor compositingInterop computePolysetVolume condition cone confirmDialog connectAttr connectControl connectDynamic connectJoint connectionInfo constrain constrainValue constructionHistory container containsMultibyte contextInfo control convertFromOldLayers convertIffToPsd convertLightmap convertSolidTx convertTessellation convertUnit copyArray copyFlexor copyKey copySkinWeights cos cpButton cpCache cpClothSet cpCollision cpConstraint cpConvClothToMesh cpForces cpGetSolverAttr cpPanel cpProperty cpRigidCollisionFilter cpSeam cpSetEdit cpSetSolverAttr cpSolver cpSolverTypes cpTool cpUpdateClothUVs createDisplayLayer createDrawCtx createEditor createLayeredPsdFile createMotionField createNewShelf createNode createRenderLayer createSubdivRegion cross crossProduct ctxAbort ctxCompletion ctxEditMode ctxTraverse currentCtx currentTime currentTimeCtx currentUnit curve curveAddPtCtx curveCVCtx curveEPCtx curveEditorCtx curveIntersect curveMoveEPCtx curveOnSurface curveSketchCtx cutKey cycleCheck cylinder dagPose date defaultLightListCheckBox defaultNavigation defineDataServer defineVirtualDevice deformer deg_to_rad delete deleteAttr deleteShadingGroupsAndMaterials deleteShelfTab deleteUI deleteUnusedBrushes delrandstr detachCurve detachDeviceAttr detachSurface deviceEditor devicePanel dgInfo dgdirty dgeval dgtimer dimWhen directKeyCtx directionalLight dirmap dirname disable disconnectAttr disconnectJoint diskCache displacementToPoly displayAffected displayColor displayCull displayLevelOfDetail displayPref displayRGBColor displaySmoothness displayStats displayString displaySurface distanceDimContext distanceDimension doBlur dolly dollyCtx dopeSheetEditor dot dotProduct doubleProfileBirailSurface drag dragAttrContext draggerContext dropoffLocator duplicate duplicateCurve duplicateSurface dynCache dynControl dynExport dynExpression dynGlobals dynPaintEditor dynParticleCtx dynPref dynRelEdPanel dynRelEditor dynamicLoad editAttrLimits editDisplayLayerGlobals editDisplayLayerMembers editRenderLayerAdjustment editRenderLayerGlobals editRenderLayerMembers editor editorTemplate effector emit emitter enableDevice encodeString endString endsWith env equivalent equivalentTol erf error eval evalDeferred evalEcho event exactWorldBoundingBox exclusiveLightCheckBox exec executeForEachObject exists exp expression expressionEditorListen extendCurve extendSurface extrude fcheck fclose feof fflush fgetline fgetword file fileBrowserDialog fileDialog fileExtension fileInfo filetest filletCurve filter filterCurve filterExpand filterStudioImport findAllIntersections findAnimCurves findKeyframe findMenuItem findRelatedSkinCluster finder firstParentOf fitBspline flexor floatEq floatField floatFieldGrp floatScrollBar floatSlider floatSlider2 floatSliderButtonGrp floatSliderGrp floor flow fluidCacheInfo fluidEmitter fluidVoxelInfo flushUndo fmod fontDialog fopen formLayout format fprint frameLayout fread freeFormFillet frewind fromNativePath fwrite gamma gauss geometryConstraint getApplicationVersionAsFloat getAttr getClassification getDefaultBrush getFileList getFluidAttr getInputDeviceRange getMayaPanelTypes getModifiers getPanel getParticleAttr getPluginResource getenv getpid glRender glRenderEditor globalStitch gmatch goal gotoBindPose grabColor gradientControl gradientControlNoAttr graphDollyCtx graphSelectContext graphTrackCtx gravity grid gridLayout group groupObjectsByName HfAddAttractorToAS HfAssignAS HfBuildEqualMap HfBuildFurFiles HfBuildFurImages HfCancelAFR HfConnectASToHF HfCreateAttractor HfDeleteAS HfEditAS HfPerformCreateAS HfRemoveAttractorFromAS HfSelectAttached HfSelectAttractors HfUnAssignAS hardenPointCurve hardware hardwareRenderPanel headsUpDisplay headsUpMessage help helpLine hermite hide hilite hitTest hotBox hotkey hotkeyCheck hsv_to_rgb hudButton hudSlider hudSliderButton hwReflectionMap hwRender hwRenderLoad hyperGraph hyperPanel hyperShade hypot iconTextButton iconTextCheckBox iconTextRadioButton iconTextRadioCollection iconTextScrollList iconTextStaticLabel ikHandle ikHandleCtx ikHandleDisplayScale ikSolver ikSplineHandleCtx ikSystem ikSystemInfo ikfkDisplayMethod illustratorCurves image imfPlugins inheritTransform insertJoint insertJointCtx insertKeyCtx insertKnotCurve insertKnotSurface instance instanceable instancer intField intFieldGrp intScrollBar intSlider intSliderGrp interToUI internalVar intersect iprEngine isAnimCurve isConnected isDirty isParentOf isSameObject isTrue isValidObjectName isValidString isValidUiName isolateSelect itemFilter itemFilterAttr itemFilterRender itemFilterType joint jointCluster jointCtx jointDisplayScale jointLattice keyTangent keyframe keyframeOutliner keyframeRegionCurrentTimeCtx keyframeRegionDirectKeyCtx keyframeRegionDollyCtx keyframeRegionInsertKeyCtx keyframeRegionMoveKeyCtx keyframeRegionScaleKeyCtx keyframeRegionSelectKeyCtx keyframeRegionSetKeyCtx keyframeRegionTrackCtx keyframeStats lassoContext lattice latticeDeformKeyCtx launch launchImageEditor layerButton layeredShaderPort layeredTexturePort layout layoutDialog lightList lightListEditor lightListPanel lightlink lineIntersection linearPrecision linstep listAnimatable listAttr listCameras listConnections listDeviceAttachments listHistory listInputDeviceAxes listInputDeviceButtons listInputDevices listMenuAnnotation listNodeTypes listPanelCategories listRelatives listSets listTransforms listUnselected listerEditor loadFluid loadNewShelf loadPlugin loadPluginLanguageResources loadPrefObjects localizedPanelLabel lockNode loft log longNameOf lookThru ls lsThroughFilter lsType lsUI Mayatomr mag makeIdentity makeLive makePaintable makeRoll makeSingleSurface makeTubeOn makebot manipMoveContext manipMoveLimitsCtx manipOptions manipRotateContext manipRotateLimitsCtx manipScaleContext manipScaleLimitsCtx marker match max memory menu menuBarLayout menuEditor menuItem menuItemToShelf menuSet menuSetPref messageLine min minimizeApp mirrorJoint modelCurrentTimeCtx modelEditor modelPanel mouse movIn movOut move moveIKtoFK moveKeyCtx moveVertexAlongDirection multiProfileBirailSurface mute nParticle nameCommand nameField namespace namespaceInfo newPanelItems newton nodeCast nodeIconButton nodeOutliner nodePreset nodeType noise nonLinear normalConstraint normalize nurbsBoolean nurbsCopyUVSet nurbsCube nurbsEditUV nurbsPlane nurbsSelect nurbsSquare nurbsToPoly nurbsToPolygonsPref nurbsToSubdiv nurbsToSubdivPref nurbsUVSet nurbsViewDirectionVector objExists objectCenter objectLayer objectType objectTypeUI obsoleteProc oceanNurbsPreviewPlane offsetCurve offsetCurveOnSurface offsetSurface openGLExtension openMayaPref optionMenu optionMenuGrp optionVar orbit orbitCtx orientConstraint outlinerEditor outlinerPanel overrideModifier paintEffectsDisplay pairBlend palettePort paneLayout panel panelConfiguration panelHistory paramDimContext paramDimension paramLocator parent parentConstraint particle particleExists particleInstancer particleRenderInfo partition pasteKey pathAnimation pause pclose percent performanceOptions pfxstrokes pickWalk picture pixelMove planarSrf plane play playbackOptions playblast plugAttr plugNode pluginInfo pluginResourceUtil pointConstraint pointCurveConstraint pointLight pointMatrixMult pointOnCurve pointOnSurface pointPosition poleVectorConstraint polyAppend polyAppendFacetCtx polyAppendVertex polyAutoProjection polyAverageNormal polyAverageVertex polyBevel polyBlendColor polyBlindData polyBoolOp polyBridgeEdge polyCacheMonitor polyCheck polyChipOff polyClipboard polyCloseBorder polyCollapseEdge polyCollapseFacet polyColorBlindData polyColorDel polyColorPerVertex polyColorSet polyCompare polyCone polyCopyUV polyCrease polyCreaseCtx polyCreateFacet polyCreateFacetCtx polyCube polyCut polyCutCtx polyCylinder polyCylindricalProjection polyDelEdge polyDelFacet polyDelVertex polyDuplicateAndConnect polyDuplicateEdge polyEditUV polyEditUVShell polyEvaluate polyExtrudeEdge polyExtrudeFacet polyExtrudeVertex polyFlipEdge polyFlipUV polyForceUV polyGeoSampler polyHelix polyInfo polyInstallAction polyLayoutUV polyListComponentConversion polyMapCut polyMapDel polyMapSew polyMapSewMove polyMergeEdge polyMergeEdgeCtx polyMergeFacet polyMergeFacetCtx polyMergeUV polyMergeVertex polyMirrorFace polyMoveEdge polyMoveFacet polyMoveFacetUV polyMoveUV polyMoveVertex polyNormal polyNormalPerVertex polyNormalizeUV polyOptUvs polyOptions polyOutput polyPipe polyPlanarProjection polyPlane polyPlatonicSolid polyPoke polyPrimitive polyPrism polyProjection polyPyramid polyQuad polyQueryBlindData polyReduce polySelect polySelectConstraint polySelectConstraintMonitor polySelectCtx polySelectEditCtx polySeparate polySetToFaceNormal polySewEdge polyShortestPathCtx polySmooth polySoftEdge polySphere polySphericalProjection polySplit polySplitCtx polySplitEdge polySplitRing polySplitVertex polyStraightenUVBorder polySubdivideEdge polySubdivideFacet polyToSubdiv polyTorus polyTransfer polyTriangulate polyUVSet polyUnite polyWedgeFace popen popupMenu pose pow preloadRefEd print progressBar progressWindow projFileViewer projectCurve projectTangent projectionContext projectionManip promptDialog propModCtx propMove psdChannelOutliner psdEditTextureFile psdExport psdTextureFile putenv pwd python querySubdiv quit rad_to_deg radial radioButton radioButtonGrp radioCollection radioMenuItemCollection rampColorPort rand randomizeFollicles randstate rangeControl readTake rebuildCurve rebuildSurface recordAttr recordDevice redo reference referenceEdit referenceQuery refineSubdivSelectionList refresh refreshAE registerPluginResource rehash reloadImage removeJoint removeMultiInstance removePanelCategory rename renameAttr renameSelectionList renameUI render renderGlobalsNode renderInfo renderLayerButton renderLayerParent renderLayerPostProcess renderLayerUnparent renderManip renderPartition renderQualityNode renderSettings renderThumbnailUpdate renderWindowEditor renderWindowSelectContext renderer reorder reorderDeformers requires reroot resampleFluid resetAE resetPfxToPolyCamera resetTool resolutionNode retarget reverseCurve reverseSurface revolve rgb_to_hsv rigidBody rigidSolver roll rollCtx rootOf rot rotate rotationInterpolation roundConstantRadius rowColumnLayout rowLayout runTimeCommand runup sampleImage saveAllShelves saveAttrPreset saveFluid saveImage saveInitialState saveMenu savePrefObjects savePrefs saveShelf saveToolSettings scale scaleBrushBrightness scaleComponents scaleConstraint scaleKey scaleKeyCtx sceneEditor sceneUIReplacement scmh scriptCtx scriptEditorInfo scriptJob scriptNode scriptTable scriptToShelf scriptedPanel scriptedPanelType scrollField scrollLayout sculpt searchPathArray seed selLoadSettings select selectContext selectCurveCV selectKey selectKeyCtx selectKeyframeRegionCtx selectMode selectPref selectPriority selectType selectedNodes selectionConnection separator setAttr setAttrEnumResource setAttrMapping setAttrNiceNameResource setConstraintRestPosition setDefaultShadingGroup setDrivenKeyframe setDynamic setEditCtx setEditor setFluidAttr setFocus setInfinity setInputDeviceMapping setKeyCtx setKeyPath setKeyframe setKeyframeBlendshapeTargetWts setMenuMode setNodeNiceNameResource setNodeTypeFlag setParent setParticleAttr setPfxToPolyCamera setPluginResource setProject setStampDensity setStartupMessage setState setToolTo setUITemplate setXformManip sets shadingConnection shadingGeometryRelCtx shadingLightRelCtx shadingNetworkCompare shadingNode shapeCompare shelfButton shelfLayout shelfTabLayout shellField shortNameOf showHelp showHidden showManipCtx showSelectionInTitle showShadingGroupAttrEditor showWindow sign simplify sin singleProfileBirailSurface size sizeBytes skinCluster skinPercent smoothCurve smoothTangentSurface smoothstep snap2to2 snapKey snapMode snapTogetherCtx snapshot soft softMod softModCtx sort sound soundControl source spaceLocator sphere sphrand spotLight spotLightPreviewPort spreadSheetEditor spring sqrt squareSurface srtContext stackTrace startString startsWith stitchAndExplodeShell stitchSurface stitchSurfacePoints strcmp stringArrayCatenate stringArrayContains stringArrayCount stringArrayInsertAtIndex stringArrayIntersector stringArrayRemove stringArrayRemoveAtIndex stringArrayRemoveDuplicates stringArrayRemoveExact stringArrayToString stringToStringArray strip stripPrefixFromName stroke subdAutoProjection subdCleanTopology subdCollapse subdDuplicateAndConnect subdEditUV subdListComponentConversion subdMapCut subdMapSewMove subdMatchTopology subdMirror subdToBlind subdToPoly subdTransferUVsToCache subdiv subdivCrease subdivDisplaySmoothness substitute substituteAllString substituteGeometry substring surface surfaceSampler surfaceShaderList swatchDisplayPort switchTable symbolButton symbolCheckBox sysFile system tabLayout tan tangentConstraint texLatticeDeformContext texManipContext texMoveContext texMoveUVShellContext texRotateContext texScaleContext texSelectContext texSelectShortestPathCtx texSmudgeUVContext texWinToolCtx text textCurves textField textFieldButtonGrp textFieldGrp textManip textScrollList textToShelf textureDisplacePlane textureHairColor texturePlacementContext textureWindow threadCount threePointArcCtx timeControl timePort timerX toNativePath toggle toggleAxis toggleWindowVisibility tokenize tokenizeList tolerance tolower toolButton toolCollection toolDropped toolHasOptions toolPropertyWindow torus toupper trace track trackCtx transferAttributes transformCompare transformLimits translator trim trunc truncateFluidCache truncateHairCache tumble tumbleCtx turbulence twoPointArcCtx uiRes uiTemplate unassignInputDevice undo undoInfo ungroup uniform unit unloadPlugin untangleUV untitledFileName untrim upAxis updateAE userCtx uvLink uvSnapshot validateShelfName vectorize view2dToolCtx viewCamera viewClipPlane viewFit viewHeadOn viewLookAt viewManip viewPlace viewSet visor volumeAxis vortex waitCursor warning webBrowser webBrowserPrefs whatIs window windowPref wire wireContext workspace wrinkle wrinkleContext writeTake xbmLangPathList xform",i:"</",c:[e.CNM,e.ASM,e.QSM,{cN:"string",b:"`",e:"`",c:[e.BE]},{cN:"variable",v:[{b:"\\$\\d"},{b:"[\\$\\%\\@](\\^\\w\\b|#\\w+|[^\\s\\w{]|{\\w+}|\\w+)"},{b:"\\*(\\^\\w\\b|#\\w+|[^\\s\\w{]|{\\w+}|\\w+)",r:0}]},e.CLCM,e.CBCM]}}),hljs.registerLanguage("mercury",function(e){var t={keyword:"module use_module import_module include_module end_module initialise mutable initialize finalize finalise interface implementation pred mode func type inst solver any_pred any_func is semidet det nondet multi erroneous failure cc_nondet cc_multi typeclass instance where pragma promise external trace atomic or_else require_complete_switch require_det require_semidet require_multi require_nondet require_cc_multi require_cc_nondet require_erroneous require_failure",pragma:"inline no_inline type_spec source_file fact_table obsolete memo loop_check minimal_model terminates does_not_terminate check_termination promise_equivalent_clauses",preprocessor:"foreign_proc foreign_decl foreign_code foreign_type foreign_import_module foreign_export_enum foreign_export foreign_enum may_call_mercury will_not_call_mercury thread_safe not_thread_safe maybe_thread_safe promise_pure promise_semipure tabled_for_io local untrailed trailed attach_to_io_state can_pass_as_mercury_type stable will_not_throw_exception may_modify_trail will_not_modify_trail may_duplicate may_not_duplicate affects_liveness does_not_affect_liveness doesnt_affect_liveness no_sharing unknown_sharing sharing",built_in:"some all not if then else true fail false try catch catch_any semidet_true semidet_false semidet_fail impure_true impure semipure"},r={cN:"label",b:"XXX",e:"$",eW:!0,r:0},a=e.inherit(e.CLCM,{b:"%"}),i=e.inherit(e.CBCM,{r:0});a.c.push(r),i.c.push(r);var n={cN:"number",b:"0'.\\|0[box][0-9a-fA-F]*"},o=e.inherit(e.ASM,{r:0}),s=e.inherit(e.QSM,{r:0}),l={cN:"constant",b:"\\\\[abfnrtv]\\|\\\\x[0-9a-fA-F]*\\\\\\|%[-+# *.0-9]*[dioxXucsfeEgGp]",r:0};s.c.push(l);var c={cN:"built_in",v:[{b:"<=>"},{b:"<=",r:0},{b:"=>",r:0},{b:"/\\\\"},{b:"\\\\/"}]},p={cN:"built_in",v:[{b:":-\\|-->"},{b:"=",r:0}]};return{aliases:["m","moo"],k:t,c:[c,p,a,i,n,e.NM,o,s,{b:/:-/}]}}),hljs.registerLanguage("mizar",function(){return{k:"environ vocabularies notations constructors definitions registrations theorems schemes requirements begin end definition registration cluster existence pred func defpred deffunc theorem proof let take assume then thus hence ex for st holds consider reconsider such that and in provided of as from be being by means equals implies iff redefine define now not or attr is mode suppose per cases set thesis contradiction scheme reserve struct correctness compatibility coherence symmetry assymetry reflexivity irreflexivity connectedness uniqueness commutativity idempotence involutiveness projectivity",c:[{cN:"comment",b:"::",e:"$"}]}}),hljs.registerLanguage("monkey",function(e){var t={cN:"number",r:0,v:[{b:"[$][a-fA-F0-9]+"},e.NM]};return{cI:!0,k:{keyword:"public private property continue exit extern new try catch eachin not abstract final select case default const local global field end if then else elseif endif while wend repeat until forever for to step next return module inline throw",built_in:"DebugLog DebugStop Error Print ACos ACosr ASin ASinr ATan ATan2 ATan2r ATanr Abs Abs Ceil Clamp Clamp Cos Cosr Exp Floor Log Max Max Min Min Pow Sgn Sgn Sin Sinr Sqrt Tan Tanr Seed PI HALFPI TWOPI",literal:"true false null and or shl shr mod"},c:[{cN:"comment",b:"#rem",e:"#end"},{cN:"comment",b:"'",e:"$",r:0},{cN:"function",bK:"function method",e:"[(=:]|$",i:/\n/,c:[e.UTM]},{cN:"class",bK:"class interface",e:"$",c:[{bK:"extends implements"},e.UTM]},{cN:"variable",b:"\\b(self|super)\\b"},{cN:"preprocessor",bK:"import",e:"$"},{cN:"preprocessor",b:"\\s*#",e:"$",k:"if else elseif endif end then"},{cN:"pi",b:"^\\s*strict\\b"},{bK:"alias",e:"=",c:[e.UTM]},e.QSM,t]}}),hljs.registerLanguage("nginx",function(e){var t={cN:"variable",v:[{b:/\$\d+/},{b:/\$\{/,e:/}/},{b:"[\\$\\@]"+e.UIR}]},r={eW:!0,l:"[a-z/_]+",k:{built_in:"on off yes no true false none blocked debug info notice warn error crit select break last permanent redirect kqueue rtsig epoll poll /dev/poll"},r:0,i:"=>",c:[e.HCM,{cN:"string",c:[e.BE,t],v:[{b:/"/,e:/"/},{b:/'/,e:/'/}]},{cN:"url",b:"([a-z]+):/",e:"\\s",eW:!0,eE:!0,c:[t]},{cN:"regexp",c:[e.BE,t],v:[{b:"\\s\\^",e:"\\s|{|;",rE:!0},{b:"~\\*?\\s+",e:"\\s|{|;",rE:!0},{b:"\\*(\\.[a-z\\-]+)+"},{b:"([a-z\\-]+\\.)+\\*"}]},{cN:"number",b:"\\b\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d{1,5})?\\b"},{cN:"number",b:"\\b\\d+[kKmMgGdshdwy]*\\b",r:0},t]};return{aliases:["nginxconf"],c:[e.HCM,{b:e.UIR+"\\s",e:";|{",rB:!0,c:[{cN:"title",b:e.UIR,starts:r}],r:0}],i:"[^\\s\\}]"}}),hljs.registerLanguage("nimrod",function(e){return{k:{keyword:"addr and as asm bind block break|0 case|0 cast const|0 continue|0 converter discard distinct|10 div do elif else|0 end|0 enum|0 except export finally for from generic if|0 import|0 in include|0 interface is isnot|10 iterator|10 let|0 macro method|10 mixin mod nil not notin|10 object|0 of or out proc|10 ptr raise ref|10 return shl shr static template|10 try|0 tuple type|0 using|0 var|0 when while|0 with without xor yield",literal:"shared guarded stdin stdout stderr result|10 true false"},c:[{cN:"decorator",b:/{\./,e:/\.}/,r:10},{cN:"string",b:/[a-zA-Z]\w*"/,e:/"/,c:[{b:/""/}]},{cN:"string",b:/([a-zA-Z]\w*)?"""/,e:/"""/},{cN:"string",b:/"/,e:/"/,i:/\n/,c:[{b:/\\./}]},{cN:"type",b:/\b[A-Z]\w+\b/,r:0},{cN:"type",b:/\b(int|int8|int16|int32|int64|uint|uint8|uint16|uint32|uint64|float|float32|float64|bool|char|string|cstring|pointer|expr|stmt|void|auto|any|range|array|openarray|varargs|seq|set|clong|culong|cchar|cschar|cshort|cint|csize|clonglong|cfloat|cdouble|clongdouble|cuchar|cushort|cuint|culonglong|cstringarray|semistatic)\b/},{cN:"number",b:/\b(0[xX][0-9a-fA-F][_0-9a-fA-F]*)('?[iIuU](8|16|32|64))?/,r:0},{cN:"number",b:/\b(0o[0-7][_0-7]*)('?[iIuUfF](8|16|32|64))?/,r:0},{cN:"number",b:/\b(0(b|B)[01][_01]*)('?[iIuUfF](8|16|32|64))?/,r:0},{cN:"number",b:/\b(\d[_\d]*)('?[iIuUfF](8|16|32|64))?/,r:0},e.HCM]}}),hljs.registerLanguage("nix",function(e){var t={keyword:"rec with let in inherit assert if else then",constant:"true false or and null",built_in:"import abort baseNameOf dirOf isNull builtins map removeAttrs throw toString derivation"},r={cN:"subst",b:/\$\{/,e:/\}/,k:t},a={cN:"variable",b:/[a-zA-Z0-9-_]+(\s*=)/},i={cN:"string",b:"''",e:"''",c:[r]},n={cN:"string",b:'"',e:'"',c:[r]},o=[e.NM,e.HCM,e.CBCM,i,n,a];return r.c=o,{aliases:["nixos"],k:t,c:o}}),hljs.registerLanguage("nsis",function(e){var t={cN:"symbol",b:"\\$(ADMINTOOLS|APPDATA|CDBURN_AREA|CMDLINE|COMMONFILES32|COMMONFILES64|COMMONFILES|COOKIES|DESKTOP|DOCUMENTS|EXEDIR|EXEFILE|EXEPATH|FAVORITES|FONTS|HISTORY|HWNDPARENT|INSTDIR|INTERNET_CACHE|LANGUAGE|LOCALAPPDATA|MUSIC|NETHOOD|OUTDIR|PICTURES|PLUGINSDIR|PRINTHOOD|PROFILE|PROGRAMFILES32|PROGRAMFILES64|PROGRAMFILES|QUICKLAUNCH|RECENT|RESOURCES_LOCALIZED|RESOURCES|SENDTO|SMPROGRAMS|SMSTARTUP|STARTMENU|SYSDIR|TEMP|TEMPLATES|VIDEOS|WINDIR)"},r={cN:"constant",b:"\\$+{[a-zA-Z0-9_]+}"},a={cN:"variable",b:"\\$+[a-zA-Z0-9_]+",i:"\\(\\){}"},i={cN:"constant",b:"\\$+\\([a-zA-Z0-9_]+\\)"},n={cN:"params",b:"(ARCHIVE|FILE_ATTRIBUTE_ARCHIVE|FILE_ATTRIBUTE_NORMAL|FILE_ATTRIBUTE_OFFLINE|FILE_ATTRIBUTE_READONLY|FILE_ATTRIBUTE_SYSTEM|FILE_ATTRIBUTE_TEMPORARY|HKCR|HKCU|HKDD|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_DYN_DATA|HKEY_LOCAL_MACHINE|HKEY_PERFORMANCE_DATA|HKEY_USERS|HKLM|HKPD|HKU|IDABORT|IDCANCEL|IDIGNORE|IDNO|IDOK|IDRETRY|IDYES|MB_ABORTRETRYIGNORE|MB_DEFBUTTON1|MB_DEFBUTTON2|MB_DEFBUTTON3|MB_DEFBUTTON4|MB_ICONEXCLAMATION|MB_ICONINFORMATION|MB_ICONQUESTION|MB_ICONSTOP|MB_OK|MB_OKCANCEL|MB_RETRYCANCEL|MB_RIGHT|MB_RTLREADING|MB_SETFOREGROUND|MB_TOPMOST|MB_USERICON|MB_YESNO|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY)"},o={cN:"constant",b:"\\!(addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversionsystem|ifdef|ifmacrodef|ifmacrondef|ifndef|if|include|insertmacro|macroend|macro|makensis|packhdr|searchparse|searchreplace|tempfile|undef|verbose|warning)"};return{cI:!1,k:{keyword:"Abort AddBrandingImage AddSize AllowRootDirInstall AllowSkipFiles AutoCloseWindow BGFont BGGradient BrandingText BringToFront Call CallInstDLL Caption ChangeUI CheckBitmap ClearErrors CompletedText ComponentText CopyFiles CRCCheck CreateDirectory CreateFont CreateShortCut Delete DeleteINISec DeleteINIStr DeleteRegKey DeleteRegValue DetailPrint DetailsButtonText DirText DirVar DirVerify EnableWindow EnumRegKey EnumRegValue Exch Exec ExecShell ExecWait ExpandEnvStrings File FileBufSize FileClose FileErrorText FileOpen FileRead FileReadByte FileReadUTF16LE FileReadWord FileSeek FileWrite FileWriteByte FileWriteUTF16LE FileWriteWord FindClose FindFirst FindNext FindWindow FlushINI FunctionEnd GetCurInstType GetCurrentAddress GetDlgItem GetDLLVersion GetDLLVersionLocal GetErrorLevel GetFileTime GetFileTimeLocal GetFullPathName GetFunctionAddress GetInstDirError GetLabelAddress GetTempFileName Goto HideWindow Icon IfAbort IfErrors IfFileExists IfRebootFlag IfSilent InitPluginsDir InstallButtonText InstallColors InstallDir InstallDirRegKey InstProgressFlags InstType InstTypeGetText InstTypeSetText IntCmp IntCmpU IntFmt IntOp IsWindow LangString LicenseBkColor LicenseData LicenseForceSelection LicenseLangString LicenseText LoadLanguageFile LockWindow LogSet LogText ManifestDPIAware ManifestSupportedOS MessageBox MiscButtonText Name Nop OutFile Page PageCallbacks PageExEnd Pop Push Quit ReadEnvStr ReadINIStr ReadRegDWORD ReadRegStr Reboot RegDLL Rename RequestExecutionLevel ReserveFile Return RMDir SearchPath SectionEnd SectionGetFlags SectionGetInstTypes SectionGetSize SectionGetText SectionGroupEnd SectionIn SectionSetFlags SectionSetInstTypes SectionSetSize SectionSetText SendMessage SetAutoClose SetBrandingImage SetCompress SetCompressor SetCompressorDictSize SetCtlColors SetCurInstType SetDatablockOptimize SetDateSave SetDetailsPrint SetDetailsView SetErrorLevel SetErrors SetFileAttributes SetFont SetOutPath SetOverwrite SetPluginUnload SetRebootFlag SetRegView SetShellVarContext SetSilent ShowInstDetails ShowUninstDetails ShowWindow SilentInstall SilentUnInstall Sleep SpaceTexts StrCmp StrCmpS StrCpy StrLen SubCaption SubSectionEnd Unicode UninstallButtonText UninstallCaption UninstallIcon UninstallSubCaption UninstallText UninstPage UnRegDLL Var VIAddVersionKey VIFileVersion VIProductVersion WindowIcon WriteINIStr WriteRegBin WriteRegDWORD WriteRegExpandStr WriteRegStr WriteUninstaller XPStyle",literal:"admin all auto both colored current false force hide highest lastused leave listonly none normal notset off on open print show silent silentlog smooth textonly true user "},c:[e.HCM,e.CBCM,{cN:"string",b:'"',e:'"',i:"\\n",c:[{cN:"symbol",b:"\\$(\\\\(n|r|t)|\\$)"},t,r,a,i]},{cN:"comment",b:";",e:"$",r:0},{cN:"function",bK:"Function PageEx Section SectionGroup SubSection",e:"$"},o,r,a,i,n,e.NM,{cN:"literal",b:e.IR+"::"+e.IR}]}}),hljs.registerLanguage("objectivec",function(e){var t={keyword:"int float while char export sizeof typedef const struct for union unsigned long volatile static bool mutable if do return goto void enum else break extern asm case short default double register explicit signed typename this switch continue wchar_t inline readonly assign readwrite self @synchronized id typeof nonatomic super unichar IBOutlet IBAction strong weak copy in out inout bycopy byref oneway __strong __weak __block __autoreleasing @private @protected @public @try @property @end @throw @catch @finally @autoreleasepool @synthesize @dynamic @selector @optional @required",literal:"false true FALSE TRUE nil YES NO NULL",built_in:"NSString NSData NSDictionary CGRect CGPoint UIButton UILabel UITextView UIWebView MKMapView NSView NSViewController NSWindow NSWindowController NSSet NSUUID NSIndexSet UISegmentedControl NSObject UITableViewDelegate UITableViewDataSource NSThread UIActivityIndicator UITabbar UIToolBar UIBarButtonItem UIImageView NSAutoreleasePool UITableView BOOL NSInteger CGFloat NSException NSLog NSMutableString NSMutableArray NSMutableDictionary NSURL NSIndexPath CGSize UITableViewCell UIView UIViewController UINavigationBar UINavigationController UITabBarController UIPopoverController UIPopoverControllerDelegate UIImage NSNumber UISearchBar NSFetchedResultsController NSFetchedResultsChangeType UIScrollView UIScrollViewDelegate UIEdgeInsets UIColor UIFont UIApplication NSNotFound NSNotificationCenter NSNotification UILocalNotification NSBundle NSFileManager NSTimeInterval NSDate NSCalendar NSUserDefaults UIWindow NSRange NSArray NSError NSURLRequest NSURLConnection NSURLSession NSURLSessionDataTask NSURLSessionDownloadTask NSURLSessionUploadTask NSURLResponseUIInterfaceOrientation MPMoviePlayerController dispatch_once_t dispatch_queue_t dispatch_sync dispatch_async dispatch_once"},r=/[a-zA-Z@][a-zA-Z0-9_]*/,a="@interface @class @protocol @implementation";return{aliases:["m","mm","objc","obj-c"],k:t,l:r,i:"</",c:[e.CLCM,e.CBCM,e.CNM,e.QSM,{cN:"string",v:[{b:'@"',e:'"',i:"\\n",c:[e.BE]},{b:"'",e:"[^\\\\]'",i:"[^\\\\][^']"}]},{cN:"preprocessor",b:"#",e:"$",c:[{cN:"title",v:[{b:'"',e:'"'},{b:"<",e:">"}]}]},{cN:"class",b:"("+a.split(" ").join("|")+")\\b",e:"({|$)",eE:!0,k:a,l:r,c:[e.UTM]},{cN:"variable",b:"\\."+e.UIR,r:0}]}}),hljs.registerLanguage("ocaml",function(e){return{aliases:["ml"],k:{keyword:"and as assert asr begin class constraint do done downto else end exception external for fun function functor if in include inherit! inherit initializer land lazy let lor lsl lsr lxor match method!|10 method mod module mutable new object of open! open or private rec sig struct then to try type val! val virtual when while with parser value",built_in:"array bool bytes char exn|5 float int int32 int64 list lazy_t|5 nativeint|5 string unit in_channel out_channel ref",literal:"true false"},i:/\/\/|>>/,l:"[a-z_]\\w*!?",c:[{cN:"literal",b:"\\[(\\|\\|)?\\]|\\(\\)"},{cN:"comment",b:"\\(\\*",e:"\\*\\)",c:["self"]},{cN:"symbol",b:"'[A-Za-z_](?!')[\\w']*"},{cN:"tag",b:"`[A-Z][\\w']*"},{cN:"type",b:"\\b[A-Z][\\w']*",r:0},{b:"[a-z_]\\w*'[\\w']*"},e.inherit(e.ASM,{cN:"char",r:0}),e.inherit(e.QSM,{i:null}),{cN:"number",b:"\\b(0[xX][a-fA-F0-9_]+[Lln]?|0[oO][0-7_]+[Lln]?|0[bB][01_]+[Lln]?|[0-9][0-9_]*([Lln]|(\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)",r:0},{b:/[-=]>/}]}
}),hljs.registerLanguage("oxygene",function(e){var t="abstract add and array as asc aspect assembly async begin break block by case class concat const copy constructor continue create default delegate desc distinct div do downto dynamic each else empty end ensure enum equals event except exit extension external false final finalize finalizer finally flags for forward from function future global group has if implementation implements implies in index inherited inline interface into invariants is iterator join locked locking loop matching method mod module namespace nested new nil not notify nullable of old on operator or order out override parallel params partial pinned private procedure property protected public queryable raise read readonly record reintroduce remove repeat require result reverse sealed select self sequence set shl shr skip static step soft take then to true try tuple type union unit unsafe until uses using var virtual raises volatile where while with write xor yield await mapped deprecated stdcall cdecl pascal register safecall overload library platform reference packed strict published autoreleasepool selector strong weak unretained",r={cN:"comment",b:"{",e:"}",r:0},a={cN:"comment",b:"\\(\\*",e:"\\*\\)",r:10},i={cN:"string",b:"'",e:"'",c:[{b:"''"}]},n={cN:"string",b:"(#\\d+)+"},o={cN:"function",bK:"function constructor destructor procedure method",e:"[:;]",k:"function constructor|10 destructor|10 procedure|10 method|10",c:[e.TM,{cN:"params",b:"\\(",e:"\\)",k:t,c:[i,n]},r,a]};return{cI:!0,k:t,i:'("|\\$[G-Zg-z]|\\/\\*|</|=>|->)',c:[r,a,e.CLCM,i,n,e.NM,o,{cN:"class",b:"=\\bclass\\b",e:"end;",k:t,c:[i,n,r,a,e.CLCM,o]}]}}),hljs.registerLanguage("parser3",function(e){return{sL:"xml",r:0,c:[{cN:"comment",b:"^#",e:"$"},{cN:"comment",b:"\\^rem{",e:"}",r:10,c:[{b:"{",e:"}",c:["self"]}]},{cN:"preprocessor",b:"^@(?:BASE|USE|CLASS|OPTIONS)$",r:10},{cN:"title",b:"@[\\w\\-]+\\[[\\w^;\\-]*\\](?:\\[[\\w^;\\-]*\\])?(?:.*)$"},{cN:"variable",b:"\\$\\{?[\\w\\-\\.\\:]+\\}?"},{cN:"keyword",b:"\\^[\\w\\-\\.\\:]+"},{cN:"number",b:"\\^#[0-9a-fA-F]+"},e.CNM]}}),hljs.registerLanguage("perl",function(e){var t="getpwent getservent quotemeta msgrcv scalar kill dbmclose undef lc ma syswrite tr send umask sysopen shmwrite vec qx utime local oct semctl localtime readpipe do return format read sprintf dbmopen pop getpgrp not getpwnam rewinddir qqfileno qw endprotoent wait sethostent bless s|0 opendir continue each sleep endgrent shutdown dump chomp connect getsockname die socketpair close flock exists index shmgetsub for endpwent redo lstat msgctl setpgrp abs exit select print ref gethostbyaddr unshift fcntl syscall goto getnetbyaddr join gmtime symlink semget splice x|0 getpeername recv log setsockopt cos last reverse gethostbyname getgrnam study formline endhostent times chop length gethostent getnetent pack getprotoent getservbyname rand mkdir pos chmod y|0 substr endnetent printf next open msgsnd readdir use unlink getsockopt getpriority rindex wantarray hex system getservbyport endservent int chr untie rmdir prototype tell listen fork shmread ucfirst setprotoent else sysseek link getgrgid shmctl waitpid unpack getnetbyname reset chdir grep split require caller lcfirst until warn while values shift telldir getpwuid my getprotobynumber delete and sort uc defined srand accept package seekdir getprotobyname semop our rename seek if q|0 chroot sysread setpwent no crypt getc chown sqrt write setnetent setpriority foreach tie sin msgget map stat getlogin unless elsif truncate exec keys glob tied closedirioctl socket readlink eval xor readline binmode setservent eof ord bind alarm pipe atan2 getgrent exp time push setgrent gt lt or ne m|0 break given say state when",r={cN:"subst",b:"[$@]\\{",e:"\\}",k:t},a={b:"->{",e:"}"},i={cN:"variable",v:[{b:/\$\d/},{b:/[\$\%\@](\^\w\b|#\w+(\:\:\w+)*|{\w+}|\w+(\:\:\w*)*)/},{b:/[\$\%\@][^\s\w{]/,r:0}]},n={cN:"comment",b:"^(__END__|__DATA__)",e:"\\n$",r:5},o=[e.BE,r,i],s=[i,e.HCM,n,{cN:"comment",b:"^\\=\\w",e:"\\=cut",eW:!0},a,{cN:"string",c:o,v:[{b:"q[qwxr]?\\s*\\(",e:"\\)",r:5},{b:"q[qwxr]?\\s*\\[",e:"\\]",r:5},{b:"q[qwxr]?\\s*\\{",e:"\\}",r:5},{b:"q[qwxr]?\\s*\\|",e:"\\|",r:5},{b:"q[qwxr]?\\s*\\<",e:"\\>",r:5},{b:"qw\\s+q",e:"q",r:5},{b:"'",e:"'",c:[e.BE]},{b:'"',e:'"'},{b:"`",e:"`",c:[e.BE]},{b:"{\\w+}",c:[],r:0},{b:"-?\\w+\\s*\\=\\>",c:[],r:0}]},{cN:"number",b:"(\\b0[0-7_]+)|(\\b0x[0-9a-fA-F_]+)|(\\b[1-9][0-9_]*(\\.[0-9_]+)?)|[0_]\\b",r:0},{b:"(\\/\\/|"+e.RSR+"|\\b(split|return|print|reverse|grep)\\b)\\s*",k:"split return print reverse grep",r:0,c:[e.HCM,n,{cN:"regexp",b:"(s|tr|y)/(\\\\.|[^/])*/(\\\\.|[^/])*/[a-z]*",r:10},{cN:"regexp",b:"(m|qr)?/",e:"/[a-z]*",c:[e.BE],r:0}]},{cN:"sub",bK:"sub",e:"(\\s*\\(.*?\\))?[;{]",r:5},{cN:"operator",b:"-\\w\\b",r:0}];return r.c=s,a.c=s,{aliases:["pl"],k:t,c:s}}),hljs.registerLanguage("php",function(e){var t={cN:"variable",b:"\\$+[a-zA-Z_-ÿ][a-zA-Z0-9_-ÿ]*"},r={cN:"preprocessor",b:/<\?(php)?|\?>/},a={cN:"string",c:[e.BE,r],v:[{b:'b"',e:'"'},{b:"b'",e:"'"},e.inherit(e.ASM,{i:null}),e.inherit(e.QSM,{i:null})]},i={v:[e.BNM,e.CNM]};return{aliases:["php3","php4","php5","php6"],cI:!0,k:"and include_once list abstract global private echo interface as static endswitch array null if endwhile or const for endforeach self var while isset public protected exit foreach throw elseif include __FILE__ empty require_once do xor return parent clone use __CLASS__ __LINE__ else break print eval new catch __METHOD__ case exception default die require __FUNCTION__ enddeclare final try switch continue endfor endif declare unset true false trait goto instanceof insteadof __DIR__ __NAMESPACE__ yield finally",c:[e.CLCM,e.HCM,{cN:"comment",b:"/\\*",e:"\\*/",c:[{cN:"phpdoc",b:"\\s@[A-Za-z]+"},r]},{cN:"comment",b:"__halt_compiler.+?;",eW:!0,k:"__halt_compiler",l:e.UIR},{cN:"string",b:"<<<['\"]?\\w+['\"]?$",e:"^\\w+;",c:[e.BE]},r,t,{b:/->+[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*/},{cN:"function",bK:"function",e:/[;{]/,eE:!0,i:"\\$|\\[|%",c:[e.UTM,{cN:"params",b:"\\(",e:"\\)",c:["self",t,e.CBCM,a,i]}]},{cN:"class",bK:"class interface",e:"{",eE:!0,i:/[:\(\$"]/,c:[{bK:"extends implements"},e.UTM]},{bK:"namespace",e:";",i:/[\.']/,c:[e.UTM]},{bK:"use",e:";",c:[e.UTM]},{b:"=>"},a,i]}}),hljs.registerLanguage("powershell",function(e){var t={b:"`[\\s\\S]",r:0},r={cN:"variable",v:[{b:/\$[\w\d][\w\d_:]*/}]},a={cN:"string",b:/"/,e:/"/,c:[t,r,{cN:"variable",b:/\$[A-z]/,e:/[^A-z]/}]},i={cN:"string",b:/'/,e:/'/};return{aliases:["ps"],l:/-?[A-z\.\-]+/,cI:!0,k:{keyword:"if else foreach return function do while until elseif begin for trap data dynamicparam end break throw param continue finally in switch exit filter try process catch",literal:"$null $true $false",built_in:"Add-Content Add-History Add-Member Add-PSSnapin Clear-Content Clear-Item Clear-Item Property Clear-Variable Compare-Object ConvertFrom-SecureString Convert-Path ConvertTo-Html ConvertTo-SecureString Copy-Item Copy-ItemProperty Export-Alias Export-Clixml Export-Console Export-Csv ForEach-Object Format-Custom Format-List Format-Table Format-Wide Get-Acl Get-Alias Get-AuthenticodeSignature Get-ChildItem Get-Command Get-Content Get-Credential Get-Culture Get-Date Get-EventLog Get-ExecutionPolicy Get-Help Get-History Get-Host Get-Item Get-ItemProperty Get-Location Get-Member Get-PfxCertificate Get-Process Get-PSDrive Get-PSProvider Get-PSSnapin Get-Service Get-TraceSource Get-UICulture Get-Unique Get-Variable Get-WmiObject Group-Object Import-Alias Import-Clixml Import-Csv Invoke-Expression Invoke-History Invoke-Item Join-Path Measure-Command Measure-Object Move-Item Move-ItemProperty New-Alias New-Item New-ItemProperty New-Object New-PSDrive New-Service New-TimeSpan New-Variable Out-Default Out-File Out-Host Out-Null Out-Printer Out-String Pop-Location Push-Location Read-Host Remove-Item Remove-ItemProperty Remove-PSDrive Remove-PSSnapin Remove-Variable Rename-Item Rename-ItemProperty Resolve-Path Restart-Service Resume-Service Select-Object Select-String Set-Acl Set-Alias Set-AuthenticodeSignature Set-Content Set-Date Set-ExecutionPolicy Set-Item Set-ItemProperty Set-Location Set-PSDebug Set-Service Set-TraceSource Set-Variable Sort-Object Split-Path Start-Service Start-Sleep Start-Transcript Stop-Process Stop-Service Stop-Transcript Suspend-Service Tee-Object Test-Path Trace-Command Update-FormatData Update-TypeData Where-Object Write-Debug Write-Error Write-Host Write-Output Write-Progress Write-Verbose Write-Warning",operator:"-ne -eq -lt -gt -ge -le -not -like -notlike -match -notmatch -contains -notcontains -in -notin -replace"},c:[e.HCM,e.NM,a,i,r]}}),hljs.registerLanguage("processing",function(e){return{k:{keyword:"BufferedReader PVector PFont PImage PGraphics HashMap boolean byte char color double float int long String Array FloatDict FloatList IntDict IntList JSONArray JSONObject Object StringDict StringList Table TableRow XML false synchronized int abstract float private char boolean static null if const for true while long throw strictfp finally protected import native final return void enum else break transient new catch instanceof byte super volatile case assert short package default double public try this switch continue throws protected public private",constant:"P2D P3D HALF_PI PI QUARTER_PI TAU TWO_PI",variable:"displayHeight displayWidth mouseY mouseX mousePressed pmouseX pmouseY key keyCode pixels focused frameCount frameRate height width",title:"setup draw",built_in:"size createGraphics beginDraw createShape loadShape PShape arc ellipse line point quad rect triangle bezier bezierDetail bezierPoint bezierTangent curve curveDetail curvePoint curveTangent curveTightness shape shapeMode beginContour beginShape bezierVertex curveVertex endContour endShape quadraticVertex vertex ellipseMode noSmooth rectMode smooth strokeCap strokeJoin strokeWeight mouseClicked mouseDragged mouseMoved mousePressed mouseReleased mouseWheel keyPressed keyPressedkeyReleased keyTyped print println save saveFrame day hour millis minute month second year background clear colorMode fill noFill noStroke stroke alpha blue brightness color green hue lerpColor red saturation modelX modelY modelZ screenX screenY screenZ ambient emissive shininess specular add createImage beginCamera camera endCamera frustum ortho perspective printCamera printProjection cursor frameRate noCursor exit loop noLoop popStyle pushStyle redraw binary boolean byte char float hex int str unbinary unhex join match matchAll nf nfc nfp nfs split splitTokens trim append arrayCopy concat expand reverse shorten sort splice subset box sphere sphereDetail createInput createReader loadBytes loadJSONArray loadJSONObject loadStrings loadTable loadXML open parseXML saveTable selectFolder selectInput beginRaw beginRecord createOutput createWriter endRaw endRecord PrintWritersaveBytes saveJSONArray saveJSONObject saveStream saveStrings saveXML selectOutput popMatrix printMatrix pushMatrix resetMatrix rotate rotateX rotateY rotateZ scale shearX shearY translate ambientLight directionalLight lightFalloff lights lightSpecular noLights normal pointLight spotLight image imageMode loadImage noTint requestImage tint texture textureMode textureWrap blend copy filter get loadPixels set updatePixels blendMode loadShader PShaderresetShader shader createFont loadFont text textFont textAlign textLeading textMode textSize textWidth textAscent textDescent abs ceil constrain dist exp floor lerp log mag map max min norm pow round sq sqrt acos asin atan atan2 cos degrees radians sin tan noise noiseDetail noiseSeed random randomGaussian randomSeed"},c:[e.CLCM,e.CBCM,e.ASM,e.QSM,e.CNM]}}),hljs.registerLanguage("profile",function(e){return{c:[e.CNM,{cN:"built_in",b:"{",e:"}$",eB:!0,eE:!0,c:[e.ASM,e.QSM],r:0},{cN:"filename",b:"[a-zA-Z_][\\da-zA-Z_]+\\.[\\da-zA-Z_]{1,3}",e:":",eE:!0},{cN:"header",b:"(ncalls|tottime|cumtime)",e:"$",k:"ncalls tottime|10 cumtime|10 filename",r:10},{cN:"summary",b:"function calls",e:"$",c:[e.CNM],r:10},e.ASM,e.QSM,{cN:"function",b:"\\(",e:"\\)$",c:[e.UTM],r:0}]}}),hljs.registerLanguage("protobuf",function(e){return{k:{keyword:"package import option optional required repeated group",built_in:"double float int32 int64 uint32 uint64 sint32 sint64 fixed32 fixed64 sfixed32 sfixed64 bool string bytes",literal:"true false"},c:[e.QSM,e.NM,e.CLCM,{cN:"class",bK:"message enum service",e:/\{/,i:/\n/,c:[e.inherit(e.TM,{starts:{eW:!0,eE:!0}})]},{cN:"function",bK:"rpc",e:/;/,eE:!0,k:"rpc returns"},{cN:"constant",b:/^\s*[A-Z_]+/,e:/\s*=/,eE:!0}]}}),hljs.registerLanguage("puppet",function(e){var t="augeas computer cron exec file filebucket host interface k5login macauthorization mailalias maillist mcx mount nagios_command nagios_contact nagios_contactgroup nagios_host nagios_hostdependency nagios_hostescalation nagios_hostextinfo nagios_hostgroup nagios_service firewall nagios_servicedependency nagios_serviceescalation nagios_serviceextinfo nagios_servicegroup nagios_timeperiod notify package resources router schedule scheduled_task selboolean selmodule service ssh_authorized_key sshkey stage tidy user vlan yumrepo zfs zone zpool",r="alias audit before loglevel noop require subscribe tag owner ensure group mode name|0 changes context force incl lens load_path onlyif provider returns root show_diff type_check en_address ip_address realname command environment hour monute month monthday special target weekday creates cwd ogoutput refresh refreshonly tries try_sleep umask backup checksum content ctime force ignore links mtime purge recurse recurselimit replace selinux_ignore_defaults selrange selrole seltype seluser source souirce_permissions sourceselect validate_cmd validate_replacement allowdupe attribute_membership auth_membership forcelocal gid ia_load_module members system host_aliases ip allowed_trunk_vlans description device_url duplex encapsulation etherchannel native_vlan speed principals allow_root auth_class auth_type authenticate_user k_of_n mechanisms rule session_owner shared options device fstype enable hasrestart directory present absent link atboot blockdevice device dump pass remounts poller_tag use message withpath adminfile allow_virtual allowcdrom category configfiles flavor install_options instance package_settings platform responsefile status uninstall_options vendor unless_system_user unless_uid binary control flags hasstatus manifest pattern restart running start stop allowdupe auths expiry gid groups home iterations key_membership keys managehome membership password password_max_age password_min_age profile_membership profiles project purge_ssh_keys role_membership roles salt shell uid baseurl cost descr enabled enablegroups exclude failovermethod gpgcheck gpgkey http_caching include includepkgs keepalive metadata_expire metalink mirrorlist priority protect proxy proxy_password proxy_username repo_gpgcheck s3_enabled skip_if_unavailable sslcacert sslclientcert sslclientkey sslverify mounted",a={keyword:"and case class default define else elsif false if in import enherits node or true undef unless main settings $string "+t,literal:r,built_in:"architecture augeasversion blockdevices boardmanufacturer boardproductname boardserialnumber cfkey dhcp_servers domain ec2_ ec2_userdata facterversion filesystems ldom fqdn gid hardwareisa hardwaremodel hostname id|0 interfaces ipaddress ipaddress_ ipaddress6 ipaddress6_ iphostnumber is_virtual kernel kernelmajversion kernelrelease kernelversion kernelrelease kernelversion lsbdistcodename lsbdistdescription lsbdistid lsbdistrelease lsbmajdistrelease lsbminordistrelease lsbrelease macaddress macaddress_ macosx_buildversion macosx_productname macosx_productversion macosx_productverson_major macosx_productversion_minor manufacturer memoryfree memorysize netmask metmask_ network_ operatingsystem operatingsystemmajrelease operatingsystemrelease osfamily partitions path physicalprocessorcount processor processorcount productname ps puppetversion rubysitedir rubyversion selinux selinux_config_mode selinux_config_policy selinux_current_mode selinux_current_mode selinux_enforced selinux_policyversion serialnumber sp_ sshdsakey sshecdsakey sshrsakey swapencrypted swapfree swapsize timezone type uniqueid uptime uptime_days uptime_hours uptime_seconds uuid virtual vlans xendomains zfs_version zonenae zones zpool_version"},i={cN:"comment",b:"#",e:"$"},n={cN:"string",c:[e.BE],v:[{b:/'/,e:/'/},{b:/"/,e:/"/}]},o=[n,i,{cN:"keyword",bK:"class",e:"$|;",i:/=/,c:[e.inherit(e.TM,{b:"(::)?[A-Za-z_]\\w*(::\\w+)*"}),i,n]},{cN:"keyword",b:"([a-zA-Z_(::)]+ *\\{)",c:[n,i],r:0},{cN:"keyword",b:"(\\}|\\{)",r:0},{cN:"function",b:"[a-zA-Z_]+\\s*=>"},{cN:"constant",b:"(::)?(\\b[A-Z][a-z_]*(::)?)+",r:0},{cN:"number",b:"(\\b0[0-7_]+)|(\\b0x[0-9a-fA-F_]+)|(\\b[1-9][0-9_]*(\\.[0-9_]+)?)|[0_]\\b",r:0}];return{aliases:["pp"],k:a,c:o}}),hljs.registerLanguage("python",function(e){var t={cN:"prompt",b:/^(>>>|\.\.\.) /},r={cN:"string",c:[e.BE],v:[{b:/(u|b)?r?'''/,e:/'''/,c:[t],r:10},{b:/(u|b)?r?"""/,e:/"""/,c:[t],r:10},{b:/(u|r|ur)'/,e:/'/,r:10},{b:/(u|r|ur)"/,e:/"/,r:10},{b:/(b|br)'/,e:/'/},{b:/(b|br)"/,e:/"/},e.ASM,e.QSM]},a={cN:"number",r:0,v:[{b:e.BNR+"[lLjJ]?"},{b:"\\b(0o[0-7]+)[lLjJ]?"},{b:e.CNR+"[lLjJ]?"}]},i={cN:"params",b:/\(/,e:/\)/,c:["self",t,a,r]};return{aliases:["py","gyp"],k:{keyword:"and elif is global as in if from raise for except finally print import pass return exec else break not with class assert yield try while continue del or def lambda nonlocal|10 None True False",built_in:"Ellipsis NotImplemented"},i:/(<\/|->|\?)/,c:[t,a,r,e.HCM,{v:[{cN:"function",bK:"def",r:10},{cN:"class",bK:"class"}],e:/:/,i:/[${=;\n]/,c:[e.UTM,i]},{cN:"decorator",b:/@/,e:/$/},{b:/\b(print|exec)\(/}]}}),hljs.registerLanguage("q",function(e){var t={keyword:"do while select delete by update from",constant:"0b 1b",built_in:"neg not null string reciprocal floor ceiling signum mod xbar xlog and or each scan over prior mmu lsq inv md5 ltime gtime count first var dev med cov cor all any rand sums prds mins maxs fills deltas ratios avgs differ prev next rank reverse iasc idesc asc desc msum mcount mavg mdev xrank mmin mmax xprev rotate distinct group where flip type key til get value attr cut set upsert raze union inter except cross sv vs sublist enlist read0 read1 hopen hclose hdel hsym hcount peach system ltrim rtrim trim lower upper ssr view tables views cols xcols keys xkey xcol xasc xdesc fkeys meta lj aj aj0 ij pj asof uj ww wj wj1 fby xgroup ungroup ej save load rsave rload show csv parse eval min max avg wavg wsum sin cos tan sum",typename:"`float `double int `timestamp `timespan `datetime `time `boolean `symbol `char `byte `short `long `real `month `date `minute `second `guid"};return{aliases:["k","kdb"],k:t,l:/\b(`?)[A-Za-z0-9_]+\b/,c:[e.CLCM,e.QSM,e.CNM]}}),hljs.registerLanguage("r",function(e){var t="([a-zA-Z]|\\.[a-zA-Z.])[a-zA-Z0-9._]*";return{c:[e.HCM,{b:t,l:t,k:{keyword:"function if in break next repeat else for return switch while try tryCatch|10 stop warning require library attach detach source setMethod setGeneric setGroupGeneric setClass ...|10",literal:"NULL NA TRUE FALSE T F Inf NaN NA_integer_|10 NA_real_|10 NA_character_|10 NA_complex_|10"},r:0},{cN:"number",b:"0[xX][0-9a-fA-F]+[Li]?\\b",r:0},{cN:"number",b:"\\d+(?:[eE][+\\-]?\\d*)?L\\b",r:0},{cN:"number",b:"\\d+\\.(?!\\d)(?:i\\b)?",r:0},{cN:"number",b:"\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d*)?i?\\b",r:0},{cN:"number",b:"\\.\\d+(?:[eE][+\\-]?\\d*)?i?\\b",r:0},{b:"`",e:"`",r:0},{cN:"string",c:[e.BE],v:[{b:'"',e:'"'},{b:"'",e:"'"}]}]}}),hljs.registerLanguage("rib",function(e){return{k:"ArchiveRecord AreaLightSource Atmosphere Attribute AttributeBegin AttributeEnd Basis Begin Blobby Bound Clipping ClippingPlane Color ColorSamples ConcatTransform Cone CoordinateSystem CoordSysTransform CropWindow Curves Cylinder DepthOfField Detail DetailRange Disk Displacement Display End ErrorHandler Exposure Exterior Format FrameAspectRatio FrameBegin FrameEnd GeneralPolygon GeometricApproximation Geometry Hider Hyperboloid Identity Illuminate Imager Interior LightSource MakeCubeFaceEnvironment MakeLatLongEnvironment MakeShadow MakeTexture Matte MotionBegin MotionEnd NuPatch ObjectBegin ObjectEnd ObjectInstance Opacity Option Orientation Paraboloid Patch PatchMesh Perspective PixelFilter PixelSamples PixelVariance Points PointsGeneralPolygons PointsPolygons Polygon Procedural Projection Quantize ReadArchive RelativeDetail ReverseOrientation Rotate Scale ScreenWindow ShadingInterpolation ShadingRate Shutter Sides Skew SolidBegin SolidEnd Sphere SubdivisionMesh Surface TextureCoordinates Torus Transform TransformBegin TransformEnd TransformPoints Translate TrimCurve WorldBegin WorldEnd",i:"</",c:[e.HCM,e.CNM,e.ASM,e.QSM]}}),hljs.registerLanguage("roboconf",function(e){var t="[a-zA-Z-_][^\n{\r\n]+\\{";return{aliases:["graph","instances"],cI:!0,k:"import",c:[{cN:"facet",b:"^facet "+t,e:"}",k:"facet installer exports children extends",c:[e.HCM]},{cN:"instance-of",b:"^instance of "+t,e:"}",k:"name count channels instance-data instance-state instance of",c:[{cN:"keyword",b:"[a-zA-Z-_]+( |	)*:"},e.HCM]},{cN:"component",b:"^"+t,e:"}",l:"\\(?[a-zA-Z]+\\)?",k:"installer exports children extends imports facets alias (optional)",c:[{cN:"string",b:"\\.[a-zA-Z-_]+",e:"\\s|,|;",eE:!0},e.HCM]},e.HCM]}}),hljs.registerLanguage("rsl",function(e){return{k:{keyword:"float color point normal vector matrix while for if do return else break extern continue",built_in:"abs acos ambient area asin atan atmosphere attribute calculatenormal ceil cellnoise clamp comp concat cos degrees depth Deriv diffuse distance Du Dv environment exp faceforward filterstep floor format fresnel incident length lightsource log match max min mod noise normalize ntransform opposite option phong pnoise pow printf ptlined radians random reflect refract renderinfo round setcomp setxcomp setycomp setzcomp shadow sign sin smoothstep specular specularbrdf spline sqrt step tan texture textureinfo trace transform vtransform xcomp ycomp zcomp"},i:"</",c:[e.CLCM,e.CBCM,e.QSM,e.ASM,e.CNM,{cN:"preprocessor",b:"#",e:"$"},{cN:"shader",bK:"surface displacement light volume imager",e:"\\("},{cN:"shading",bK:"illuminate illuminance gather",e:"\\("}]}}),hljs.registerLanguage("ruleslanguage",function(e){return{k:{keyword:"BILL_PERIOD BILL_START BILL_STOP RS_EFFECTIVE_START RS_EFFECTIVE_STOP RS_JURIS_CODE RS_OPCO_CODE INTDADDATTRIBUTE|5 INTDADDVMSG|5 INTDBLOCKOP|5 INTDBLOCKOPNA|5 INTDCLOSE|5 INTDCOUNT|5 INTDCOUNTSTATUSCODE|5 INTDCREATEMASK|5 INTDCREATEDAYMASK|5 INTDCREATEFACTORMASK|5 INTDCREATEHANDLE|5 INTDCREATEOVERRIDEDAYMASK|5 INTDCREATEOVERRIDEMASK|5 INTDCREATESTATUSCODEMASK|5 INTDCREATETOUPERIOD|5 INTDDELETE|5 INTDDIPTEST|5 INTDEXPORT|5 INTDGETERRORCODE|5 INTDGETERRORMESSAGE|5 INTDISEQUAL|5 INTDJOIN|5 INTDLOAD|5 INTDLOADACTUALCUT|5 INTDLOADDATES|5 INTDLOADHIST|5 INTDLOADLIST|5 INTDLOADLISTDATES|5 INTDLOADLISTENERGY|5 INTDLOADLISTHIST|5 INTDLOADRELATEDCHANNEL|5 INTDLOADSP|5 INTDLOADSTAGING|5 INTDLOADUOM|5 INTDLOADUOMDATES|5 INTDLOADUOMHIST|5 INTDLOADVERSION|5 INTDOPEN|5 INTDREADFIRST|5 INTDREADNEXT|5 INTDRECCOUNT|5 INTDRELEASE|5 INTDREPLACE|5 INTDROLLAVG|5 INTDROLLPEAK|5 INTDSCALAROP|5 INTDSCALE|5 INTDSETATTRIBUTE|5 INTDSETDSTPARTICIPANT|5 INTDSETSTRING|5 INTDSETVALUE|5 INTDSETVALUESTATUS|5 INTDSHIFTSTARTTIME|5 INTDSMOOTH|5 INTDSORT|5 INTDSPIKETEST|5 INTDSUBSET|5 INTDTOU|5 INTDTOURELEASE|5 INTDTOUVALUE|5 INTDUPDATESTATS|5 INTDVALUE|5 STDEV INTDDELETEEX|5 INTDLOADEXACTUAL|5 INTDLOADEXCUT|5 INTDLOADEXDATES|5 INTDLOADEX|5 INTDLOADEXRELATEDCHANNEL|5 INTDSAVEEX|5 MVLOAD|5 MVLOADACCT|5 MVLOADACCTDATES|5 MVLOADACCTHIST|5 MVLOADDATES|5 MVLOADHIST|5 MVLOADLIST|5 MVLOADLISTDATES|5 MVLOADLISTHIST|5 IF FOR NEXT DONE SELECT END CALL ABORT CLEAR CHANNEL FACTOR LIST NUMBER OVERRIDE SET WEEK DISTRIBUTIONNODE ELSE WHEN THEN OTHERWISE IENUM CSV INCLUDE LEAVE RIDER SAVE DELETE NOVALUE SECTION WARN SAVE_UPDATE DETERMINANT LABEL REPORT REVENUE EACH IN FROM TOTAL CHARGE BLOCK AND OR CSV_FILE RATE_CODE AUXILIARY_DEMAND UIDACCOUNT RS BILL_PERIOD_SELECT HOURS_PER_MONTH INTD_ERROR_STOP SEASON_SCHEDULE_NAME ACCOUNTFACTOR ARRAYUPPERBOUND CALLSTOREDPROC GETADOCONNECTION GETCONNECT GETDATASOURCE GETQUALIFIER GETUSERID HASVALUE LISTCOUNT LISTOP LISTUPDATE LISTVALUE PRORATEFACTOR RSPRORATE SETBINPATH SETDBMONITOR WQ_OPEN BILLINGHOURS DATE DATEFROMFLOAT DATETIMEFROMSTRING DATETIMETOSTRING DATETOFLOAT DAY DAYDIFF DAYNAME DBDATETIME HOUR MINUTE MONTH MONTHDIFF MONTHHOURS MONTHNAME ROUNDDATE SAMEWEEKDAYLASTYEAR SECOND WEEKDAY WEEKDIFF YEAR YEARDAY YEARSTR COMPSUM HISTCOUNT HISTMAX HISTMIN HISTMINNZ HISTVALUE MAXNRANGE MAXRANGE MINRANGE COMPIKVA COMPKVA COMPKVARFROMKQKW COMPLF IDATTR FLAG LF2KW LF2KWH MAXKW POWERFACTOR READING2USAGE AVGSEASON MAXSEASON MONTHLYMERGE SEASONVALUE SUMSEASON ACCTREADDATES ACCTTABLELOAD CONFIGADD CONFIGGET CREATEOBJECT CREATEREPORT EMAILCLIENT EXPBLKMDMUSAGE EXPMDMUSAGE EXPORT_USAGE FACTORINEFFECT GETUSERSPECIFIEDSTOP INEFFECT ISHOLIDAY RUNRATE SAVE_PROFILE SETREPORTTITLE USEREXIT WATFORRUNRATE TO TABLE ACOS ASIN ATAN ATAN2 BITAND CEIL COS COSECANT COSH COTANGENT DIVQUOT DIVREM EXP FABS FLOOR FMOD FREPM FREXPN LOG LOG10 MAX MAXN MIN MINNZ MODF POW ROUND ROUND2VALUE ROUNDINT SECANT SIN SINH SQROOT TAN TANH FLOAT2STRING FLOAT2STRINGNC INSTR LEFT LEN LTRIM MID RIGHT RTRIM STRING STRINGNC TOLOWER TOUPPER TRIM NUMDAYS READ_DATE STAGING",built_in:"IDENTIFIER OPTIONS XML_ELEMENT XML_OP XML_ELEMENT_OF DOMDOCCREATE DOMDOCLOADFILE DOMDOCLOADXML DOMDOCSAVEFILE DOMDOCGETROOT DOMDOCADDPI DOMNODEGETNAME DOMNODEGETTYPE DOMNODEGETVALUE DOMNODEGETCHILDCT DOMNODEGETFIRSTCHILD DOMNODEGETSIBLING DOMNODECREATECHILDELEMENT DOMNODESETATTRIBUTE DOMNODEGETCHILDELEMENTCT DOMNODEGETFIRSTCHILDELEMENT DOMNODEGETSIBLINGELEMENT DOMNODEGETATTRIBUTECT DOMNODEGETATTRIBUTEI DOMNODEGETATTRIBUTEBYNAME DOMNODEGETBYNAME"},c:[e.CLCM,e.CBCM,e.ASM,e.QSM,e.CNM,{cN:"array",b:"#[a-zA-Z .]+"}]}}),hljs.registerLanguage("rust",function(e){var t=e.inherit(e.CBCM);return t.c.push("self"),{aliases:["rs"],k:{keyword:"alignof as be box break const continue crate do else enum extern false fn for if impl in let loop match mod mut offsetof once priv proc pub pure ref return self sizeof static struct super trait true type typeof unsafe unsized use virtual while yield int i8 i16 i32 i64 uint u8 u32 u64 float f32 f64 str char bool",built_in:"assert! assert_eq! bitflags! bytes! cfg! col! concat! concat_idents! debug_assert! debug_assert_eq! env! panic! file! format! format_args! include_bin! include_str! line! local_data_key! module_path! option_env! print! println! select! stringify! try! unimplemented! unreachable! vec! write! writeln!"},l:e.IR+"!?",i:"</",c:[e.CLCM,t,e.inherit(e.QSM,{i:null}),{cN:"string",b:/r(#*)".*?"\1(?!#)/},{cN:"string",b:/'\\?(x\w{2}|u\w{4}|U\w{8}|.)'/},{b:/'[a-zA-Z_][a-zA-Z0-9_]*/},{cN:"number",b:/\b(0[xb][A-Za-z0-9_]+|[0-9_]+(\.[0-9_]+)?([eE][+-]?[0-9_]+)?)([uif](8|16|32|64)?)?/,r:0},{cN:"function",bK:"fn",e:"(\\(|<)",eE:!0,c:[e.UTM]},{cN:"preprocessor",b:"#\\[",e:"\\]"},{bK:"type",e:"(=|<)",c:[e.UTM],i:"\\S"},{bK:"trait enum",e:"({|<)",c:[e.UTM],i:"\\S"},{b:e.IR+"::"},{b:"->"}]}}),hljs.registerLanguage("scala",function(e){var t={cN:"annotation",b:"@[A-Za-z]+"},r={cN:"string",b:'u?r?"""',e:'"""',r:10},a={cN:"symbol",b:"'\\w[\\w\\d_]*(?!')"},i={cN:"type",b:"\\b[A-Z][A-Za-z0-9_]*",r:0},n={cN:"title",b:/[^0-9\n\t "'(),.`{}\[\]:;][^\n\t "'(),.`{}\[\]:;]+|[^0-9\n\t "'(),.`{}\[\]:;=]/,r:0},o={cN:"class",bK:"class object trait type",e:/[:={\[(\n;]/,c:[{cN:"keyword",bK:"extends with",r:10},n]},s={cN:"function",bK:"def val",e:/[:={\[(\n;]/,c:[n]};return{k:{literal:"true false null",keyword:"type yield lazy override def with val var sealed abstract private trait object if forSome for while throw finally protected extends import final return else break new catch super class case package default try this match continue throws implicit"},c:[e.CLCM,e.CBCM,r,e.QSM,a,i,s,o,e.CNM,t]}}),hljs.registerLanguage("scheme",function(e){var t="[^\\(\\)\\[\\]\\{\\}\",'`;#|\\\\\\s]+",r="(\\-|\\+)?\\d+([./]\\d+)?",a=r+"[+\\-]"+r+"i",i={built_in:"case-lambda call/cc class define-class exit-handler field import inherit init-field interface let*-values let-values let/ec mixin opt-lambda override protect provide public rename require require-for-syntax syntax syntax-case syntax-error unit/sig unless when with-syntax and begin call-with-current-continuation call-with-input-file call-with-output-file case cond define define-syntax delay do dynamic-wind else for-each if lambda let let* let-syntax letrec letrec-syntax map or syntax-rules ' * + , ,@ - ... / ; < <= = => > >= ` abs acos angle append apply asin assoc assq assv atan boolean? caar cadr call-with-input-file call-with-output-file call-with-values car cdddar cddddr cdr ceiling char->integer char-alphabetic? char-ci<=? char-ci<? char-ci=? char-ci>=? char-ci>? char-downcase char-lower-case? char-numeric? char-ready? char-upcase char-upper-case? char-whitespace? char<=? char<? char=? char>=? char>? char? close-input-port close-output-port complex? cons cos current-input-port current-output-port denominator display eof-object? eq? equal? eqv? eval even? exact->inexact exact? exp expt floor force gcd imag-part inexact->exact inexact? input-port? integer->char integer? interaction-environment lcm length list list->string list->vector list-ref list-tail list? load log magnitude make-polar make-rectangular make-string make-vector max member memq memv min modulo negative? newline not null-environment null? number->string number? numerator odd? open-input-file open-output-file output-port? pair? peek-char port? positive? procedure? quasiquote quote quotient rational? rationalize read read-char real-part real? remainder reverse round scheme-report-environment set! set-car! set-cdr! sin sqrt string string->list string->number string->symbol string-append string-ci<=? string-ci<? string-ci=? string-ci>=? string-ci>? string-copy string-fill! string-length string-ref string-set! string<=? string<? string=? string>=? string>? string? substring symbol->string symbol? tan transcript-off transcript-on truncate values vector vector->list vector-fill! vector-length vector-ref vector-set! with-input-from-file with-output-to-file write write-char zero?"},n={cN:"shebang",b:"^#!",e:"$"},o={cN:"literal",b:"(#t|#f|#\\\\"+t+"|#\\\\.)"},s={cN:"number",v:[{b:r,r:0},{b:a,r:0},{b:"#b[0-1]+(/[0-1]+)?"},{b:"#o[0-7]+(/[0-7]+)?"},{b:"#x[0-9a-f]+(/[0-9a-f]+)?"}]},l=e.QSM,c={cN:"comment",v:[{b:";",e:"$",r:0},{b:"#\\|",e:"\\|#"}]},p={b:t,r:0},d={cN:"variable",b:"'"+t},u={eW:!0,r:0},m={cN:"list",v:[{b:"\\(",e:"\\)"},{b:"\\[",e:"\\]"}],c:[{cN:"keyword",b:t,l:t,k:i},u]};return u.c=[o,s,l,c,p,d,m],{i:/\S/,c:[n,s,l,c,d,m]}}),hljs.registerLanguage("scilab",function(e){var t=[e.CNM,{cN:"string",b:"'|\"",e:"'|\"",c:[e.BE,{b:"''"}]}];return{aliases:["sci"],k:{keyword:"abort break case clear catch continue do elseif else endfunction end for functionglobal if pause return resume select try then while%f %F %t %T %pi %eps %inf %nan %e %i %z %s",built_in:"abs and acos asin atan ceil cd chdir clearglobal cosh cos cumprod deff disp errorexec execstr exists exp eye gettext floor fprintf fread fsolve imag isdef isemptyisinfisnan isvector lasterror length load linspace list listfiles log10 log2 logmax min msprintf mclose mopen ones or pathconvert poly printf prod pwd rand realround sinh sin size gsort sprintf sqrt strcat strcmps tring sum system tanh tantype typename warning zeros matrix"},i:'("|#|/\\*|\\s+/\\w+)',c:[{cN:"function",bK:"function endfunction",e:"$",k:"function endfunction|10",c:[e.UTM,{cN:"params",b:"\\(",e:"\\)"}]},{cN:"transposed_variable",b:"[a-zA-Z_][a-zA-Z_0-9]*('+[\\.']*|[\\.']+)",e:"",r:0},{cN:"matrix",b:"\\[",e:"\\]'*[\\.']*",r:0,c:t},{cN:"comment",b:"//",e:"$"}].concat(t)}}),hljs.registerLanguage("scss",function(e){{var t="[a-zA-Z-][a-zA-Z0-9_-]*",r={cN:"variable",b:"(\\$"+t+")\\b"},a={cN:"function",b:t+"\\(",rB:!0,eE:!0,e:"\\("},i={cN:"hexcolor",b:"#[0-9A-Fa-f]+"};({cN:"attribute",b:"[A-Z\\_\\.\\-]+",e:":",eE:!0,i:"[^\\s]",starts:{cN:"value",eW:!0,eE:!0,c:[a,i,e.CSSNM,e.QSM,e.ASM,e.CBCM,{cN:"important",b:"!important"}]}})
}return{cI:!0,i:"[=/|']",c:[e.CLCM,e.CBCM,a,{cN:"id",b:"\\#[A-Za-z0-9_-]+",r:0},{cN:"class",b:"\\.[A-Za-z0-9_-]+",r:0},{cN:"attr_selector",b:"\\[",e:"\\]",i:"$"},{cN:"tag",b:"\\b(a|abbr|acronym|address|area|article|aside|audio|b|base|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|command|datalist|dd|del|details|dfn|div|dl|dt|em|embed|fieldset|figcaption|figure|footer|form|frame|frameset|(h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|keygen|label|legend|li|link|map|mark|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|pre|progress|q|rp|rt|ruby|samp|script|section|select|small|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|ul|var|video)\\b",r:0},{cN:"pseudo",b:":(visited|valid|root|right|required|read-write|read-only|out-range|optional|only-of-type|only-child|nth-of-type|nth-last-of-type|nth-last-child|nth-child|not|link|left|last-of-type|last-child|lang|invalid|indeterminate|in-range|hover|focus|first-of-type|first-line|first-letter|first-child|first|enabled|empty|disabled|default|checked|before|after|active)"},{cN:"pseudo",b:"::(after|before|choices|first-letter|first-line|repeat-index|repeat-item|selection|value)"},r,{cN:"attribute",b:"\\b(z-index|word-wrap|word-spacing|word-break|width|widows|white-space|visibility|vertical-align|unicode-bidi|transition-timing-function|transition-property|transition-duration|transition-delay|transition|transform-style|transform-origin|transform|top|text-underline-position|text-transform|text-shadow|text-rendering|text-overflow|text-indent|text-decoration-style|text-decoration-line|text-decoration-color|text-decoration|text-align-last|text-align|tab-size|table-layout|right|resize|quotes|position|pointer-events|perspective-origin|perspective|page-break-inside|page-break-before|page-break-after|padding-top|padding-right|padding-left|padding-bottom|padding|overflow-y|overflow-x|overflow-wrap|overflow|outline-width|outline-style|outline-offset|outline-color|outline|orphans|order|opacity|object-position|object-fit|normal|none|nav-up|nav-right|nav-left|nav-index|nav-down|min-width|min-height|max-width|max-height|mask|marks|margin-top|margin-right|margin-left|margin-bottom|margin|list-style-type|list-style-position|list-style-image|list-style|line-height|letter-spacing|left|justify-content|initial|inherit|ime-mode|image-orientation|image-resolution|image-rendering|icon|hyphens|height|font-weight|font-variant-ligatures|font-variant|font-style|font-stretch|font-size-adjust|font-size|font-language-override|font-kerning|font-feature-settings|font-family|font|float|flex-wrap|flex-shrink|flex-grow|flex-flow|flex-direction|flex-basis|flex|filter|empty-cells|display|direction|cursor|counter-reset|counter-increment|content|column-width|column-span|column-rule-width|column-rule-style|column-rule-color|column-rule|column-gap|column-fill|column-count|columns|color|clip-path|clip|clear|caption-side|break-inside|break-before|break-after|box-sizing|box-shadow|box-decoration-break|bottom|border-width|border-top-width|border-top-style|border-top-right-radius|border-top-left-radius|border-top-color|border-top|border-style|border-spacing|border-right-width|border-right-style|border-right-color|border-right|border-radius|border-left-width|border-left-style|border-left-color|border-left|border-image-width|border-image-source|border-image-slice|border-image-repeat|border-image-outset|border-image|border-color|border-collapse|border-bottom-width|border-bottom-style|border-bottom-right-radius|border-bottom-left-radius|border-bottom-color|border-bottom|border|background-size|background-repeat|background-position|background-origin|background-image|background-color|background-clip|background-attachment|background|backface-visibility|auto|animation-timing-function|animation-play-state|animation-name|animation-iteration-count|animation-fill-mode|animation-duration|animation-direction|animation-delay|animation|align-self|align-items|align-content)\\b",i:"[^\\s]"},{cN:"value",b:"\\b(whitespace|wait|w-resize|visible|vertical-text|vertical-ideographic|uppercase|upper-roman|upper-alpha|underline|transparent|top|thin|thick|text|text-top|text-bottom|tb-rl|table-header-group|table-footer-group|sw-resize|super|strict|static|square|solid|small-caps|separate|se-resize|scroll|s-resize|rtl|row-resize|ridge|right|repeat|repeat-y|repeat-x|relative|progress|pointer|overline|outside|outset|oblique|nowrap|not-allowed|normal|none|nw-resize|no-repeat|no-drop|newspaper|ne-resize|n-resize|move|middle|medium|ltr|lr-tb|lowercase|lower-roman|lower-alpha|loose|list-item|line|line-through|line-edge|lighter|left|keep-all|justify|italic|inter-word|inter-ideograph|inside|inset|inline|inline-block|inherit|inactive|ideograph-space|ideograph-parenthesis|ideograph-numeric|ideograph-alpha|horizontal|hidden|help|hand|groove|fixed|ellipsis|e-resize|double|dotted|distribute|distribute-space|distribute-letter|distribute-all-lines|disc|disabled|default|decimal|dashed|crosshair|collapse|col-resize|circle|char|center|capitalize|break-word|break-all|bottom|both|bolder|bold|block|bidi-override|below|baseline|auto|always|all-scroll|absolute|table|table-cell)\\b"},{cN:"value",b:":",e:";",c:[a,r,i,e.CSSNM,e.QSM,e.ASM,{cN:"important",b:"!important"}]},{cN:"at_rule",b:"@",e:"[{;]",k:"mixin include extend for if else each while charset import debug media page content font-face namespace warn",c:[a,r,e.QSM,e.ASM,i,e.CSSNM,{cN:"preprocessor",b:"\\s[A-Za-z0-9_.-]+",r:0}]}]}}),hljs.registerLanguage("smali",function(){var e=["add","and","cmp","cmpg","cmpl","const","div","double","float","goto","if","int","long","move","mul","neg","new","nop","not","or","rem","return","shl","shr","sput","sub","throw","ushr","xor"],t=["aget","aput","array","check","execute","fill","filled","goto/16","goto/32","iget","instance","invoke","iput","monitor","packed","sget","sparse"],r=["transient","constructor","abstract","final","synthetic","public","private","protected","static","bridge","system"];return{aliases:["smali"],c:[{cN:"string",b:'"',e:'"',r:0},{cN:"comment",b:"#",e:"$",r:0},{cN:"keyword",b:"\\s*\\.end\\s[a-zA-Z0-9]*",r:1},{cN:"keyword",b:"^[ ]*\\.[a-zA-Z]*",r:0},{cN:"keyword",b:"\\s:[a-zA-Z_0-9]*",r:0},{cN:"keyword",b:"\\s("+r.join("|")+")",r:1},{cN:"keyword",b:"\\[",r:0},{cN:"instruction",b:"\\s("+e.join("|")+")\\s",r:1},{cN:"instruction",b:"\\s("+e.join("|")+")((\\-|/)[a-zA-Z0-9]+)+\\s",r:10},{cN:"instruction",b:"\\s("+t.join("|")+")((\\-|/)[a-zA-Z0-9]+)*\\s",r:10},{cN:"class",b:"L[^(;:\n]*;",r:0},{cN:"function",b:'( |->)[^(\n ;"]*\\(',r:0},{cN:"function",b:"\\)",r:0},{cN:"variable",b:"[vp][0-9]+",r:0}]}}),hljs.registerLanguage("smalltalk",function(e){var t="[a-z][a-zA-Z0-9_]*",r={cN:"char",b:"\\$.{1}"},a={cN:"symbol",b:"#"+e.UIR};return{aliases:["st"],k:"self super nil true false thisContext",c:[{cN:"comment",b:'"',e:'"'},e.ASM,{cN:"class",b:"\\b[A-Z][A-Za-z0-9_]*",r:0},{cN:"method",b:t+":",r:0},e.CNM,a,r,{cN:"localvars",b:"\\|[ ]*"+t+"([ ]+"+t+")*[ ]*\\|",rB:!0,e:/\|/,i:/\S/,c:[{b:"(\\|[ ]*)?"+t}]},{cN:"array",b:"\\#\\(",e:"\\)",c:[e.ASM,r,e.CNM,a]}]}}),hljs.registerLanguage("sml",function(e){return{aliases:["ml"],k:{keyword:"abstype and andalso as case datatype do else end eqtype exception fn fun functor handle if in include infix infixr let local nonfix of op open orelse raise rec sharing sig signature struct structure then type val with withtype where while",built_in:"array bool char exn int list option order real ref string substring vector unit word",literal:"true false NONE SOME LESS EQUAL GREATER nil"},i:/\/\/|>>/,l:"[a-z_]\\w*!?",c:[{cN:"literal",b:"\\[(\\|\\|)?\\]|\\(\\)"},{cN:"comment",b:"\\(\\*",e:"\\*\\)",c:["self",e.PWM]},{cN:"symbol",b:"'[A-Za-z_](?!')[\\w']*"},{cN:"tag",b:"`[A-Z][\\w']*"},{cN:"type",b:"\\b[A-Z][\\w']*",r:0},{b:"[a-z_]\\w*'[\\w']*"},e.inherit(e.ASM,{cN:"char",r:0}),e.inherit(e.QSM,{i:null}),{cN:"number",b:"\\b(0[xX][a-fA-F0-9_]+[Lln]?|0[oO][0-7_]+[Lln]?|0[bB][01_]+[Lln]?|[0-9][0-9_]*([Lln]|(\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)",r:0},{b:/[-=]>/}]}}),hljs.registerLanguage("sql",function(e){var t={cN:"comment",b:"--",e:"$"};return{cI:!0,i:/[<>]/,c:[{cN:"operator",bK:"begin end start commit rollback savepoint lock alter create drop rename call delete do handler insert load replace select truncate update set show pragma grant merge describe use explain help declare prepare execute deallocate savepoint release unlock purge reset change stop analyze cache flush optimize repair kill install uninstall checksum restore check backup",e:/;/,eW:!0,k:{keyword:"abs absolute acos action add adddate addtime aes_decrypt aes_encrypt after aggregate all allocate alter analyze and any are as asc ascii asin assertion at atan atan2 atn2 authorization authors avg backup before begin benchmark between bin binlog bit_and bit_count bit_length bit_or bit_xor both by cache call cascade cascaded case cast catalog ceil ceiling chain change changed char_length character_length charindex charset check checksum checksum_agg choose close coalesce coercibility collate collation collationproperty column columns columns_updated commit compress concat concat_ws concurrent connect connection connection_id consistent constraint constraints continue contributors conv convert convert_tz corresponding cos cot count count_big crc32 create cross cume_dist curdate current current_date current_time current_timestamp current_user cursor curtime data database databases datalength date_add date_format date_sub dateadd datediff datefromparts datename datepart datetime2fromparts datetimeoffsetfromparts day dayname dayofmonth dayofweek dayofyear deallocate declare decode default deferrable deferred degrees delayed delete des_decrypt des_encrypt des_key_file desc describe descriptor diagnostics difference disconnect distinct distinctrow div do domain double drop dumpfile each else elt enclosed encode encrypt end end-exec engine engines eomonth errors escape escaped event eventdata events except exception exec execute exists exp explain export_set extended external extract fast fetch field fields find_in_set first first_value floor flush for force foreign format found found_rows from from_base64 from_days from_unixtime full function get get_format get_lock getdate getutcdate global go goto grant grants greatest group group_concat grouping grouping_id gtid_subset gtid_subtract handler having help hex high_priority hosts hour ident_current ident_incr ident_seed identified identity if ifnull ignore iif ilike immediate in index indicator inet6_aton inet6_ntoa inet_aton inet_ntoa infile initially inner innodb input insert install instr intersect into is is_free_lock is_ipv4 is_ipv4_compat is_ipv4_mapped is_not is_not_null is_used_lock isdate isnull isolation join key kill language last last_day last_insert_id last_value lcase lead leading least leaves left len lenght level like limit lines ln load load_file local localtime localtimestamp locate lock log log10 log2 logfile logs low_priority lower lpad ltrim make_set makedate maketime master master_pos_wait match matched max md5 medium merge microsecond mid min minute mod mode module month monthname mutex name_const names national natural nchar next no no_write_to_binlog not now nullif nvarchar oct octet_length of old_password on only open optimize option optionally or ord order outer outfile output pad parse partial partition password patindex percent_rank percentile_cont percentile_disc period_add period_diff pi plugin position pow power pragma precision prepare preserve primary prior privileges procedure procedure_analyze processlist profile profiles public publishingservername purge quarter query quick quote quotename radians rand read references regexp relative relaylog release release_lock rename repair repeat replace replicate reset restore restrict return returns reverse revoke right rlike rollback rollup round row row_count rows rpad rtrim savepoint schema scroll sec_to_time second section select serializable server session session_user set sha sha1 sha2 share show sign sin size slave sleep smalldatetimefromparts snapshot some soname soundex sounds_like space sql sql_big_result sql_buffer_result sql_cache sql_calc_found_rows sql_no_cache sql_small_result sql_variant_property sqlstate sqrt square start starting status std stddev stddev_pop stddev_samp stdev stdevp stop str str_to_date straight_join strcmp string stuff subdate substr substring subtime subtring_index sum switchoffset sysdate sysdatetime sysdatetimeoffset system_user sysutcdatetime table tables tablespace tan temporary terminated tertiary_weights then time time_format time_to_sec timediff timefromparts timestamp timestampadd timestampdiff timezone_hour timezone_minute to to_base64 to_days to_seconds todatetimeoffset trailing transaction translation trigger trigger_nestlevel triggers trim truncate try_cast try_convert try_parse ucase uncompress uncompressed_length unhex unicode uninstall union unique unix_timestamp unknown unlock update upgrade upped upper usage use user user_resources using utc_date utc_time utc_timestamp uuid uuid_short validate_password_strength value values var var_pop var_samp variables variance varp version view warnings week weekday weekofyear weight_string when whenever where with work write xml xor year yearweek zon",literal:"true false null",built_in:"array bigint binary bit blob boolean char character date dec decimal float int integer interval number numeric real serial smallint varchar varying int8 serial8 text"},c:[{cN:"string",b:"'",e:"'",c:[e.BE,{b:"''"}]},{cN:"string",b:'"',e:'"',c:[e.BE,{b:'""'}]},{cN:"string",b:"`",e:"`",c:[e.BE]},e.CNM,e.CBCM,t]},e.CBCM,t]}}),hljs.registerLanguage("stata",function(e){return{aliases:["do","ado"],cI:!0,k:"if else in foreach for forv forva forval forvalu forvalue forvalues by bys bysort xi quietly qui capture about ac ac_7 acprplot acprplot_7 adjust ado adopath adoupdate alpha ameans an ano anov anova anova_estat anova_terms anovadef aorder ap app appe appen append arch arch_dr arch_estat arch_p archlm areg areg_p args arima arima_dr arima_estat arima_p as asmprobit asmprobit_estat asmprobit_lf asmprobit_mfx__dlg asmprobit_p ass asse asser assert avplot avplot_7 avplots avplots_7 bcskew0 bgodfrey binreg bip0_lf biplot bipp_lf bipr_lf bipr_p biprobit bitest bitesti bitowt blogit bmemsize boot bootsamp bootstrap bootstrap_8 boxco_l boxco_p boxcox boxcox_6 boxcox_p bprobit br break brier bro brow brows browse brr brrstat bs bs_7 bsampl_w bsample bsample_7 bsqreg bstat bstat_7 bstat_8 bstrap bstrap_7 ca ca_estat ca_p cabiplot camat canon canon_8 canon_8_p canon_estat canon_p cap caprojection capt captu captur capture cat cc cchart cchart_7 cci cd censobs_table centile cf char chdir checkdlgfiles checkestimationsample checkhlpfiles checksum chelp ci cii cl class classutil clear cli clis clist clo clog clog_lf clog_p clogi clogi_sw clogit clogit_lf clogit_p clogitp clogl_sw cloglog clonevar clslistarray cluster cluster_measures cluster_stop cluster_tree cluster_tree_8 clustermat cmdlog cnr cnre cnreg cnreg_p cnreg_sw cnsreg codebook collaps4 collapse colormult_nb colormult_nw compare compress conf confi confir confirm conren cons const constr constra constrai constrain constraint continue contract copy copyright copysource cor corc corr corr2data corr_anti corr_kmo corr_smc corre correl correla correlat correlate corrgram cou coun count cox cox_p cox_sw coxbase coxhaz coxvar cprplot cprplot_7 crc cret cretu cretur creturn cross cs cscript cscript_log csi ct ct_is ctset ctst_5 ctst_st cttost cumsp cumsp_7 cumul cusum cusum_7 cutil d datasig datasign datasigna datasignat datasignatu datasignatur datasignature datetof db dbeta de dec deco decod decode deff des desc descr descri describ describe destring dfbeta dfgls dfuller di di_g dir dirstats dis discard disp disp_res disp_s displ displa display distinct do doe doed doedi doedit dotplot dotplot_7 dprobit drawnorm drop ds ds_util dstdize duplicates durbina dwstat dydx e ed edi edit egen eivreg emdef en enc enco encod encode eq erase ereg ereg_lf ereg_p ereg_sw ereghet ereghet_glf ereghet_glf_sh ereghet_gp ereghet_ilf ereghet_ilf_sh ereghet_ip eret eretu eretur ereturn err erro error est est_cfexist est_cfname est_clickable est_expand est_hold est_table est_unhold est_unholdok estat estat_default estat_summ estat_vce_only esti estimates etodow etof etomdy ex exi exit expand expandcl fac fact facto factor factor_estat factor_p factor_pca_rotated factor_rotate factormat fcast fcast_compute fcast_graph fdades fdadesc fdadescr fdadescri fdadescrib fdadescribe fdasav fdasave fdause fh_st file open file read file close file filefilter fillin find_hlp_file findfile findit findit_7 fit fl fli flis flist for5_0 form forma format fpredict frac_154 frac_adj frac_chk frac_cox frac_ddp frac_dis frac_dv frac_in frac_mun frac_pp frac_pq frac_pv frac_wgt frac_xo fracgen fracplot fracplot_7 fracpoly fracpred fron_ex fron_hn fron_p fron_tn fron_tn2 frontier ftodate ftoe ftomdy ftowdate g gamhet_glf gamhet_gp gamhet_ilf gamhet_ip gamma gamma_d2 gamma_p gamma_sw gammahet gdi_hexagon gdi_spokes ge gen gene gener genera generat generate genrank genstd genvmean gettoken gl gladder gladder_7 glim_l01 glim_l02 glim_l03 glim_l04 glim_l05 glim_l06 glim_l07 glim_l08 glim_l09 glim_l10 glim_l11 glim_l12 glim_lf glim_mu glim_nw1 glim_nw2 glim_nw3 glim_p glim_v1 glim_v2 glim_v3 glim_v4 glim_v5 glim_v6 glim_v7 glm glm_6 glm_p glm_sw glmpred glo glob globa global glogit glogit_8 glogit_p gmeans gnbre_lf gnbreg gnbreg_5 gnbreg_p gomp_lf gompe_sw gomper_p gompertz gompertzhet gomphet_glf gomphet_glf_sh gomphet_gp gomphet_ilf gomphet_ilf_sh gomphet_ip gphdot gphpen gphprint gprefs gprobi_p gprobit gprobit_8 gr gr7 gr_copy gr_current gr_db gr_describe gr_dir gr_draw gr_draw_replay gr_drop gr_edit gr_editviewopts gr_example gr_example2 gr_export gr_print gr_qscheme gr_query gr_read gr_rename gr_replay gr_save gr_set gr_setscheme gr_table gr_undo gr_use graph graph7 grebar greigen greigen_7 greigen_8 grmeanby grmeanby_7 gs_fileinfo gs_filetype gs_graphinfo gs_stat gsort gwood h hadimvo hareg hausman haver he heck_d2 heckma_p heckman heckp_lf heckpr_p heckprob hel help hereg hetpr_lf hetpr_p hetprob hettest hexdump hilite hist hist_7 histogram hlogit hlu hmeans hotel hotelling hprobit hreg hsearch icd9 icd9_ff icd9p iis impute imtest inbase include inf infi infil infile infix inp inpu input ins insheet insp inspe inspec inspect integ inten intreg intreg_7 intreg_p intrg2_ll intrg_ll intrg_ll2 ipolate iqreg ir irf irf_create irfm iri is_svy is_svysum isid istdize ivprob_1_lf ivprob_lf ivprobit ivprobit_p ivreg ivreg_footnote ivtob_1_lf ivtob_lf ivtobit ivtobit_p jackknife jacknife jknife jknife_6 jknife_8 jkstat joinby kalarma1 kap kap_3 kapmeier kappa kapwgt kdensity kdensity_7 keep ksm ksmirnov ktau kwallis l la lab labe label labelbook ladder levels levelsof leverage lfit lfit_p li lincom line linktest lis list lloghet_glf lloghet_glf_sh lloghet_gp lloghet_ilf lloghet_ilf_sh lloghet_ip llogi_sw llogis_p llogist llogistic llogistichet lnorm_lf lnorm_sw lnorma_p lnormal lnormalhet lnormhet_glf lnormhet_glf_sh lnormhet_gp lnormhet_ilf lnormhet_ilf_sh lnormhet_ip lnskew0 loadingplot loc loca local log logi logis_lf logistic logistic_p logit logit_estat logit_p loglogs logrank loneway lookfor lookup lowess lowess_7 lpredict lrecomp lroc lroc_7 lrtest ls lsens lsens_7 lsens_x lstat ltable ltable_7 ltriang lv lvr2plot lvr2plot_7 m ma mac macr macro makecns man manova manova_estat manova_p manovatest mantel mark markin markout marksample mat mat_capp mat_order mat_put_rr mat_rapp mata mata_clear mata_describe mata_drop mata_matdescribe mata_matsave mata_matuse mata_memory mata_mlib mata_mosave mata_rename mata_which matalabel matcproc matlist matname matr matri matrix matrix_input__dlg matstrik mcc mcci md0_ md1_ md1debug_ md2_ md2debug_ mds mds_estat mds_p mdsconfig mdslong mdsmat mdsshepard mdytoe mdytof me_derd mean means median memory memsize meqparse mer merg merge mfp mfx mhelp mhodds minbound mixed_ll mixed_ll_reparm mkassert mkdir mkmat mkspline ml ml_5 ml_adjs ml_bhhhs ml_c_d ml_check ml_clear ml_cnt ml_debug ml_defd ml_e0 ml_e0_bfgs ml_e0_cycle ml_e0_dfp ml_e0i ml_e1 ml_e1_bfgs ml_e1_bhhh ml_e1_cycle ml_e1_dfp ml_e2 ml_e2_cycle ml_ebfg0 ml_ebfr0 ml_ebfr1 ml_ebh0q ml_ebhh0 ml_ebhr0 ml_ebr0i ml_ecr0i ml_edfp0 ml_edfr0 ml_edfr1 ml_edr0i ml_eds ml_eer0i ml_egr0i ml_elf ml_elf_bfgs ml_elf_bhhh ml_elf_cycle ml_elf_dfp ml_elfi ml_elfs ml_enr0i ml_enrr0 ml_erdu0 ml_erdu0_bfgs ml_erdu0_bhhh ml_erdu0_bhhhq ml_erdu0_cycle ml_erdu0_dfp ml_erdu0_nrbfgs ml_exde ml_footnote ml_geqnr ml_grad0 ml_graph ml_hbhhh ml_hd0 ml_hold ml_init ml_inv ml_log ml_max ml_mlout ml_mlout_8 ml_model ml_nb0 ml_opt ml_p ml_plot ml_query ml_rdgrd ml_repor ml_s_e ml_score ml_searc ml_technique ml_unhold mleval mlf_ mlmatbysum mlmatsum mlog mlogi mlogit mlogit_footnote mlogit_p mlopts mlsum mlvecsum mnl0_ mor more mov move mprobit mprobit_lf mprobit_p mrdu0_ mrdu1_ mvdecode mvencode mvreg mvreg_estat n nbreg nbreg_al nbreg_lf nbreg_p nbreg_sw nestreg net newey newey_7 newey_p news nl nl_7 nl_9 nl_9_p nl_p nl_p_7 nlcom nlcom_p nlexp2 nlexp2_7 nlexp2a nlexp2a_7 nlexp3 nlexp3_7 nlgom3 nlgom3_7 nlgom4 nlgom4_7 nlinit nllog3 nllog3_7 nllog4 nllog4_7 nlog_rd nlogit nlogit_p nlogitgen nlogittree nlpred no nobreak noi nois noisi noisil noisily note notes notes_dlg nptrend numlabel numlist odbc old_ver olo olog ologi ologi_sw ologit ologit_p ologitp on one onew onewa oneway op_colnm op_comp op_diff op_inv op_str opr opro oprob oprob_sw oprobi oprobi_p oprobit oprobitp opts_exclusive order orthog orthpoly ou out outf outfi outfil outfile outs outsh outshe outshee outsheet ovtest pac pac_7 palette parse parse_dissim pause pca pca_8 pca_display pca_estat pca_p pca_rotate pcamat pchart pchart_7 pchi pchi_7 pcorr pctile pentium pergram pergram_7 permute permute_8 personal peto_st pkcollapse pkcross pkequiv pkexamine pkexamine_7 pkshape pksumm pksumm_7 pl plo plot plugin pnorm pnorm_7 poisgof poiss_lf poiss_sw poisso_p poisson poisson_estat post postclose postfile postutil pperron pr prais prais_e prais_e2 prais_p predict predictnl preserve print pro prob probi probit probit_estat probit_p proc_time procoverlay procrustes procrustes_estat procrustes_p profiler prog progr progra program prop proportion prtest prtesti pwcorr pwd q\\s qby qbys qchi qchi_7 qladder qladder_7 qnorm qnorm_7 qqplot qqplot_7 qreg qreg_c qreg_p qreg_sw qu quadchk quantile quantile_7 que quer query range ranksum ratio rchart rchart_7 rcof recast reclink recode reg reg3 reg3_p regdw regr regre regre_p2 regres regres_p regress regress_estat regriv_p remap ren rena renam rename renpfix repeat replace report reshape restore ret retu retur return rm rmdir robvar roccomp roccomp_7 roccomp_8 rocf_lf rocfit rocfit_8 rocgold rocplot rocplot_7 roctab roctab_7 rolling rologit rologit_p rot rota rotat rotate rotatemat rreg rreg_p ru run runtest rvfplot rvfplot_7 rvpplot rvpplot_7 sa safesum sample sampsi sav save savedresults saveold sc sca scal scala scalar scatter scm_mine sco scob_lf scob_p scobi_sw scobit scor score scoreplot scoreplot_help scree screeplot screeplot_help sdtest sdtesti se search separate seperate serrbar serrbar_7 serset set set_defaults sfrancia sh she shel shell shewhart shewhart_7 signestimationsample signrank signtest simul simul_7 simulate simulate_8 sktest sleep slogit slogit_d2 slogit_p smooth snapspan so sor sort spearman spikeplot spikeplot_7 spikeplt spline_x split sqreg sqreg_p sret sretu sretur sreturn ssc st st_ct st_hc st_hcd st_hcd_sh st_is st_issys st_note st_promo st_set st_show st_smpl st_subid stack statsby statsby_8 stbase stci stci_7 stcox stcox_estat stcox_fr stcox_fr_ll stcox_p stcox_sw stcoxkm stcoxkm_7 stcstat stcurv stcurve stcurve_7 stdes stem stepwise stereg stfill stgen stir stjoin stmc stmh stphplot stphplot_7 stphtest stphtest_7 stptime strate strate_7 streg streg_sw streset sts sts_7 stset stsplit stsum sttocc sttoct stvary stweib su suest suest_8 sum summ summa summar summari summariz summarize sunflower sureg survcurv survsum svar svar_p svmat svy svy_disp svy_dreg svy_est svy_est_7 svy_estat svy_get svy_gnbreg_p svy_head svy_header svy_heckman_p svy_heckprob_p svy_intreg_p svy_ivreg_p svy_logistic_p svy_logit_p svy_mlogit_p svy_nbreg_p svy_ologit_p svy_oprobit_p svy_poisson_p svy_probit_p svy_regress_p svy_sub svy_sub_7 svy_x svy_x_7 svy_x_p svydes svydes_8 svygen svygnbreg svyheckman svyheckprob svyintreg svyintreg_7 svyintrg svyivreg svylc svylog_p svylogit svymarkout svymarkout_8 svymean svymlog svymlogit svynbreg svyolog svyologit svyoprob svyoprobit svyopts svypois svypois_7 svypoisson svyprobit svyprobt svyprop svyprop_7 svyratio svyreg svyreg_p svyregress svyset svyset_7 svyset_8 svytab svytab_7 svytest svytotal sw sw_8 swcnreg swcox swereg swilk swlogis swlogit swologit swoprbt swpois swprobit swqreg swtobit swweib symmetry symmi symplot symplot_7 syntax sysdescribe sysdir sysuse szroeter ta tab tab1 tab2 tab_or tabd tabdi tabdis tabdisp tabi table tabodds tabodds_7 tabstat tabu tabul tabula tabulat tabulate te tempfile tempname tempvar tes test testnl testparm teststd tetrachoric time_it timer tis tob tobi tobit tobit_p tobit_sw token tokeni tokeniz tokenize tostring total translate translator transmap treat_ll treatr_p treatreg trim trnb_cons trnb_mean trpoiss_d2 trunc_ll truncr_p truncreg tsappend tset tsfill tsline tsline_ex tsreport tsrevar tsrline tsset tssmooth tsunab ttest ttesti tut_chk tut_wait tutorial tw tware_st two twoway twoway__fpfit_serset twoway__function_gen twoway__histogram_gen twoway__ipoint_serset twoway__ipoints_serset twoway__kdensity_gen twoway__lfit_serset twoway__normgen_gen twoway__pci_serset twoway__qfit_serset twoway__scatteri_serset twoway__sunflower_gen twoway_ksm_serset ty typ type typeof u unab unabbrev unabcmd update us use uselabel var var_mkcompanion var_p varbasic varfcast vargranger varirf varirf_add varirf_cgraph varirf_create varirf_ctable varirf_describe varirf_dir varirf_drop varirf_erase varirf_graph varirf_ograph varirf_rename varirf_set varirf_table varlist varlmar varnorm varsoc varstable varstable_w varstable_w2 varwle vce vec vec_fevd vec_mkphi vec_p vec_p_w vecirf_create veclmar veclmar_w vecnorm vecnorm_w vecrank vecstable verinst vers versi versio version view viewsource vif vwls wdatetof webdescribe webseek webuse weib1_lf weib2_lf weib_lf weib_lf0 weibhet_glf weibhet_glf_sh weibhet_glfa weibhet_glfa_sh weibhet_gp weibhet_ilf weibhet_ilf_sh weibhet_ilfa weibhet_ilfa_sh weibhet_ip weibu_sw weibul_p weibull weibull_c weibull_s weibullhet wh whelp whi which whil while wilc_st wilcoxon win wind windo window winexec wntestb wntestb_7 wntestq xchart xchart_7 xcorr xcorr_7 xi xi_6 xmlsav xmlsave xmluse xpose xsh xshe xshel xshell xt_iis xt_tis xtab_p xtabond xtbin_p xtclog xtcloglog xtcloglog_8 xtcloglog_d2 xtcloglog_pa_p xtcloglog_re_p xtcnt_p xtcorr xtdata xtdes xtfront_p xtfrontier xtgee xtgee_elink xtgee_estat xtgee_makeivar xtgee_p xtgee_plink xtgls xtgls_p xthaus xthausman xtht_p xthtaylor xtile xtint_p xtintreg xtintreg_8 xtintreg_d2 xtintreg_p xtivp_1 xtivp_2 xtivreg xtline xtline_ex xtlogit xtlogit_8 xtlogit_d2 xtlogit_fe_p xtlogit_pa_p xtlogit_re_p xtmixed xtmixed_estat xtmixed_p xtnb_fe xtnb_lf xtnbreg xtnbreg_pa_p xtnbreg_refe_p xtpcse xtpcse_p xtpois xtpoisson xtpoisson_d2 xtpoisson_pa_p xtpoisson_refe_p xtpred xtprobit xtprobit_8 xtprobit_d2 xtprobit_re_p xtps_fe xtps_lf xtps_ren xtps_ren_8 xtrar_p xtrc xtrc_p xtrchh xtrefe_p xtreg xtreg_be xtreg_fe xtreg_ml xtreg_pa_p xtreg_re xtregar xtrere_p xtset xtsf_ll xtsf_llti xtsum xttab xttest0 xttobit xttobit_8 xttobit_p xttrans yx yxview__barlike_draw yxview_area_draw yxview_bar_draw yxview_dot_draw yxview_dropline_draw yxview_function_draw yxview_iarrow_draw yxview_ilabels_draw yxview_normal_draw yxview_pcarrow_draw yxview_pcbarrow_draw yxview_pccapsym_draw yxview_pcscatter_draw yxview_pcspike_draw yxview_rarea_draw yxview_rbar_draw yxview_rbarm_draw yxview_rcap_draw yxview_rcapsym_draw yxview_rconnected_draw yxview_rline_draw yxview_rscatter_draw yxview_rspike_draw yxview_spike_draw yxview_sunflower_draw zap_s zinb zinb_llf zinb_plf zip zip_llf zip_p zip_plf zt_ct_5 zt_hc_5 zt_hcd_5 zt_is_5 zt_iss_5 zt_sho_5 zt_smp_5 ztbase_5 ztcox_5 ztdes_5 ztereg_5 ztfill_5 ztgen_5 ztir_5 ztjoin_5 ztnb ztnb_p ztp ztp_p zts_5 ztset_5 ztspli_5 ztsum_5 zttoct_5 ztvary_5 ztweib_5",c:[{cN:"label",v:[{b:"\\$\\{?[a-zA-Z_]+\\}?"},{b:"`[a-zA-Z_]+'"}]},{cN:"string",v:[{b:'`".*"\''},{b:'".*"'}]},{cN:"literal",v:[{b:"\\b(abs|acos|asin|atan|atan2|atanh|ceil|cloglog|comb|cos|digamma|exp|floor|invcloglog|invlogit|ln|lnfact|lnfactorial|lngamma|log|log10|max|min|mod|reldif|round|sign|sin|sqrt|sum|tan|tanh|trigamma|trunc|betaden|Binomial|binorm|binormal|chi2|chi2tail|dgammapda|dgammapdada|dgammapdadx|dgammapdx|dgammapdxdx|F|Fden|Ftail|gammaden|gammap|ibeta|invbinomial|invchi2|invchi2tail|invF|invFtail|invgammap|invibeta|invnchi2|invnFtail|invnibeta|invnorm|invnormal|invttail|nbetaden|nchi2|nFden|nFtail|nibeta|norm|normal|normalden|normd|npnchi2|tden|ttail|uniform|abbrev|char|index|indexnot|length|lower|ltrim|match|plural|proper|real|regexm|regexr|regexs|reverse|rtrim|string|strlen|strlower|strltrim|strmatch|strofreal|strpos|strproper|strreverse|strrtrim|strtrim|strupper|subinstr|subinword|substr|trim|upper|word|wordcount|_caller|autocode|byteorder|chop|clip|cond|e|epsdouble|epsfloat|group|inlist|inrange|irecode|matrix|maxbyte|maxdouble|maxfloat|maxint|maxlong|mi|minbyte|mindouble|minfloat|minint|minlong|missing|r|recode|replay|return|s|scalar|d|date|day|dow|doy|halfyear|mdy|month|quarter|week|year|d|daily|dofd|dofh|dofm|dofq|dofw|dofy|h|halfyearly|hofd|m|mofd|monthly|q|qofd|quarterly|tin|twithin|w|weekly|wofd|y|yearly|yh|ym|yofd|yq|yw|cholesky|colnumb|colsof|corr|det|diag|diag0cnt|el|get|hadamard|I|inv|invsym|issym|issymmetric|J|matmissing|matuniform|mreldif|nullmat|rownumb|rowsof|sweep|syminv|trace|vec|vecdiag)(?=\\(|$)"}]},{cN:"comment",v:[{b:"^\\*.*$"},e.CLCM,e.CBCM]}]}}),hljs.registerLanguage("step21",function(e){var t="[A-Z_][A-Z0-9_.]*",r="END-ISO-10303-21;",a={literal:"",built_in:"",keyword:"HEADER ENDSEC DATA"},i={cN:"preprocessor",b:"ISO-10303-21;",r:10},n=[e.CLCM,{cN:"comment",b:"/\\*\\*!",e:"\\*/",c:[e.PWM]},e.CBCM,e.CNM,e.inherit(e.ASM,{i:null}),e.inherit(e.QSM,{i:null}),{cN:"string",b:"'",e:"'"},{cN:"label",v:[{b:"#",e:"\\d+",i:"\\W"}]}];return{aliases:["p21","step","stp"],cI:!0,l:t,k:a,c:[{cN:"preprocessor",b:r,r:10},i].concat(n)}}),hljs.registerLanguage("stylus",function(e){var t={cN:"variable",b:"\\$"+e.IR},r={cN:"hexcolor",b:"#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})",r:10},a=["charset","css","debug","extend","font-face","for","import","include","media","mixin","page","warn","while"],i=["after","before","first-letter","first-line","active","first-child","focus","hover","lang","link","visited"],n=["a","abbr","address","article","aside","audio","b","blockquote","body","button","canvas","caption","cite","code","dd","del","details","dfn","div","dl","dt","em","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","html","i","iframe","img","input","ins","kbd","label","legend","li","mark","menu","nav","object","ol","p","q","quote","samp","section","span","strong","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","tr","ul","var","video"],o="[\\.\\s\\n\\[\\:,]",s=["align-content","align-items","align-self","animation","animation-delay","animation-direction","animation-duration","animation-fill-mode","animation-iteration-count","animation-name","animation-play-state","animation-timing-function","auto","backface-visibility","background","background-attachment","background-clip","background-color","background-image","background-origin","background-position","background-repeat","background-size","border","border-bottom","border-bottom-color","border-bottom-left-radius","border-bottom-right-radius","border-bottom-style","border-bottom-width","border-collapse","border-color","border-image","border-image-outset","border-image-repeat","border-image-slice","border-image-source","border-image-width","border-left","border-left-color","border-left-style","border-left-width","border-radius","border-right","border-right-color","border-right-style","border-right-width","border-spacing","border-style","border-top","border-top-color","border-top-left-radius","border-top-right-radius","border-top-style","border-top-width","border-width","bottom","box-decoration-break","box-shadow","box-sizing","break-after","break-before","break-inside","caption-side","clear","clip","clip-path","color","column-count","column-fill","column-gap","column-rule","column-rule-color","column-rule-style","column-rule-width","column-span","column-width","columns","content","counter-increment","counter-reset","cursor","direction","display","empty-cells","filter","flex","flex-basis","flex-direction","flex-flow","flex-grow","flex-shrink","flex-wrap","float","font","font-family","font-feature-settings","font-kerning","font-language-override","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-variant-ligatures","font-weight","height","hyphens","icon","image-orientation","image-rendering","image-resolution","ime-mode","inherit","initial","justify-content","left","letter-spacing","line-height","list-style","list-style-image","list-style-position","list-style-type","margin","margin-bottom","margin-left","margin-right","margin-top","marks","mask","max-height","max-width","min-height","min-width","nav-down","nav-index","nav-left","nav-right","nav-up","none","normal","object-fit","object-position","opacity","order","orphans","outline","outline-color","outline-offset","outline-style","outline-width","overflow","overflow-wrap","overflow-x","overflow-y","padding","padding-bottom","padding-left","padding-right","padding-top","page-break-after","page-break-before","page-break-inside","perspective","perspective-origin","pointer-events","position","quotes","resize","right","tab-size","table-layout","text-align","text-align-last","text-decoration","text-decoration-color","text-decoration-line","text-decoration-style","text-indent","text-overflow","text-rendering","text-shadow","text-transform","text-underline-position","top","transform","transform-origin","transform-style","transition","transition-delay","transition-duration","transition-property","transition-timing-function","unicode-bidi","vertical-align","visibility","white-space","widows","width","word-break","word-spacing","word-wrap","z-index"],l=["\\{","\\}","\\?","(\\bReturn\\b)","(\\bEnd\\b)","(\\bend\\b)",";","#\\s","\\*\\s","===\\s","\\|"];
return{aliases:["styl"],cI:!1,i:"("+l.join("|")+")",k:"if else for in",c:[e.QSM,e.ASM,e.CLCM,e.CBCM,r,{b:"\\.[a-zA-Z][a-zA-Z0-9_-]*"+o,rB:!0,c:[{cN:"class",b:"\\.[a-zA-Z][a-zA-Z0-9_-]*"}]},{b:"\\#[a-zA-Z][a-zA-Z0-9_-]*"+o,rB:!0,c:[{cN:"id",b:"\\#[a-zA-Z][a-zA-Z0-9_-]*"}]},{b:"\\b("+n.join("|")+")"+o,rB:!0,c:[{cN:"tag",b:"\\b[a-zA-Z][a-zA-Z0-9_-]*"}]},{cN:"pseudo",b:"&?:?:\\b("+i.join("|")+")"+o},{cN:"at_rule",b:"@("+a.join("|")+")\\b"},t,e.CSSNM,e.NM,{cN:"function",b:"\\b[a-zA-Z][a-zA-Z0-9_-]*\\(.*\\)",i:"[\\n]",rB:!0,c:[{cN:"title",b:"\\b[a-zA-Z][a-zA-Z0-9_-]*"},{cN:"params",b:/\(/,e:/\)/,c:[r,t,e.ASM,e.CSSNM,e.NM,e.QSM]}]},{cN:"attribute",b:"\\b("+s.reverse().join("|")+")\\b"}]}}),hljs.registerLanguage("swift",function(e){var t={keyword:"class deinit enum extension func import init let protocol static struct subscript typealias var break case continue default do else fallthrough if in for return switch where while as dynamicType is new super self Self Type __COLUMN__ __FILE__ __FUNCTION__ __LINE__ associativity didSet get infix inout left mutating none nonmutating operator override postfix precedence prefix right set unowned unowned safe unsafe weak willSet",literal:"true false nil",built_in:"abs advance alignof alignofValue assert bridgeFromObjectiveC bridgeFromObjectiveCUnconditional bridgeToObjectiveC bridgeToObjectiveCUnconditional c contains count countElements countLeadingZeros debugPrint debugPrintln distance dropFirst dropLast dump encodeBitsAsWords enumerate equal false filter find getBridgedObjectiveCType getVaList indices insertionSort isBridgedToObjectiveC isBridgedVerbatimToObjectiveC isUniquelyReferenced join lexicographicalCompare map max maxElement min minElement nil numericCast partition posix print println quickSort reduce reflect reinterpretCast reverse roundUpToAlignment sizeof sizeofValue sort split startsWith strideof strideofValue swap swift toString transcode true underestimateCount unsafeReflect withExtendedLifetime withObjectAtPlusZero withUnsafePointer withUnsafePointerToObject withUnsafePointers withVaList"},r={cN:"type",b:"\\b[A-Z][\\w']*",r:0},a={cN:"comment",b:"/\\*",e:"\\*/",c:[e.PWM,"self"]},i={cN:"subst",b:/\\\(/,e:"\\)",k:t,c:[]},n={cN:"number",b:"\\b([\\d_]+(\\.[\\deE_]+)?|0x[a-fA-F0-9_]+(\\.[a-fA-F0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b",r:0},o=e.inherit(e.QSM,{c:[i,e.BE]});return i.c=[n],{k:t,c:[o,e.CLCM,a,r,n,{cN:"func",bK:"func",e:"{",eE:!0,c:[e.inherit(e.TM,{b:/[A-Za-z$_][0-9A-Za-z$_]*/,i:/\(/}),{cN:"generics",b:/\</,e:/\>/,i:/\>/},{cN:"params",b:/\(/,e:/\)/,k:t,c:["self",n,o,e.CBCM,{b:":"}],i:/["']/}],i:/\[|%/},{cN:"class",k:"struct protocol class extension enum",b:"(struct|protocol|class(?! (func|var))|extension|enum)",e:"\\{",eE:!0,c:[e.inherit(e.TM,{b:/[A-Za-z$_][0-9A-Za-z$_]*/})]},{cN:"preprocessor",b:"(@assignment|@class_protocol|@exported|@final|@lazy|@noreturn|@NSCopying|@NSManaged|@objc|@optional|@required|@auto_closure|@noreturn|@IBAction|@IBDesignable|@IBInspectable|@IBOutlet|@infix|@prefix|@postfix)"}]}}),hljs.registerLanguage("tcl",function(e){return{aliases:["tk"],k:"after append apply array auto_execok auto_import auto_load auto_mkindex auto_mkindex_old auto_qualify auto_reset bgerror binary break catch cd chan clock close concat continue dde dict encoding eof error eval exec exit expr fblocked fconfigure fcopy file fileevent filename flush for foreach format gets glob global history http if incr info interp join lappend|10 lassign|10 lindex|10 linsert|10 list llength|10 load lrange|10 lrepeat|10 lreplace|10 lreverse|10 lsearch|10 lset|10 lsort|10 mathfunc mathop memory msgcat namespace open package parray pid pkg::create pkg_mkIndex platform platform::shell proc puts pwd read refchan regexp registry regsub|10 rename return safe scan seek set socket source split string subst switch tcl_endOfWord tcl_findLibrary tcl_startOfNextWord tcl_startOfPreviousWord tcl_wordBreakAfter tcl_wordBreakBefore tcltest tclvars tell time tm trace unknown unload unset update uplevel upvar variable vwait while",c:[{cN:"comment",v:[{b:";[ \\t]*#",e:"$"},{b:"^[ \\t]*#",e:"$"}]},{bK:"proc",e:"[\\{]",eE:!0,c:[{cN:"symbol",b:"[ \\t\\n\\r]+(::)?[a-zA-Z_]((::)?[a-zA-Z0-9_])*",e:"[ \\t\\n\\r]",eW:!0,eE:!0}]},{cN:"variable",eE:!0,v:[{b:"\\$(\\{)?(::)?[a-zA-Z_]((::)?[a-zA-Z0-9_])*\\(([a-zA-Z0-9_])*\\)",e:"[^a-zA-Z0-9_\\}\\$]"},{b:"\\$(\\{)?(::)?[a-zA-Z_]((::)?[a-zA-Z0-9_])*",e:"(\\))?[^a-zA-Z0-9_\\}\\$]"}]},{cN:"string",c:[e.BE],v:[e.inherit(e.ASM,{i:null}),e.inherit(e.QSM,{i:null})]},{cN:"number",v:[e.BNM,e.CNM]}]}}),hljs.registerLanguage("tex",function(){var e={cN:"command",b:"\\\\[a-zA-Zа-яА-я]+[\\*]?"},t={cN:"command",b:"\\\\[^a-zA-Zа-яА-я0-9]"},r={cN:"special",b:"[{}\\[\\]\\&#~]",r:0};return{c:[{b:"\\\\[a-zA-Zа-яА-я]+[\\*]? *= *-?\\d*\\.?\\d+(pt|pc|mm|cm|in|dd|cc|ex|em)?",rB:!0,c:[e,t,{cN:"number",b:" *=",e:"-?\\d*\\.?\\d+(pt|pc|mm|cm|in|dd|cc|ex|em)?",eB:!0}],r:10},e,t,r,{cN:"formula",b:"\\$\\$",e:"\\$\\$",c:[e,t,r],r:0},{cN:"formula",b:"\\$",e:"\\$",c:[e,t,r],r:0},{cN:"comment",b:"%",e:"$",r:0}]}}),hljs.registerLanguage("thrift",function(e){var t="bool byte i16 i32 i64 double string binary";return{k:{keyword:"namespace const typedef struct enum service exception void oneway set list map required optional",built_in:t,literal:"true false"},c:[e.QSM,e.NM,e.CLCM,e.CBCM,{cN:"class",bK:"struct enum service exception",e:/\{/,i:/\n/,c:[e.inherit(e.TM,{starts:{eW:!0,eE:!0}})]},{cN:"stl_container",b:"\\b(set|list|map)\\s*<",e:">",k:t,c:["self"]}]}}),hljs.registerLanguage("twig",function(){var e={cN:"params",b:"\\(",e:"\\)"},t="attribute block constant cycle date dump include max min parent random range source template_from_string",r={cN:"function",bK:t,r:0,c:[e]},a={cN:"filter",b:/\|[A-Za-z]+\:?/,k:"abs batch capitalize convert_encoding date date_modify default escape first format join json_encode keys last length lower merge nl2br number_format raw replace reverse round slice sort split striptags title trim upper url_encode",c:[r]},i="autoescape block do embed extends filter flush for if import include macro sandbox set spaceless use verbatim";return i=i+" "+i.split(" ").map(function(e){return"end"+e}).join(" "),{aliases:["craftcms"],cI:!0,sL:"xml",subLanguageMode:"continuous",c:[{cN:"comment",b:/\{#/,e:/#}/},{cN:"template_tag",b:/\{%/,e:/%}/,k:i,c:[a,r]},{cN:"variable",b:/\{\{/,e:/}}/,c:[a,r]}]}}),hljs.registerLanguage("typescript",function(e){return{aliases:["ts"],k:{keyword:"in if for while finally var new function|0 do return void else break catch instanceof with throw case default try this switch continue typeof delete let yield const class public private get set super interface extendsstatic constructor implements enum export import declare",literal:"true false null undefined NaN Infinity",built_in:"eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent encodeURI encodeURIComponent escape unescape Object Function Boolean Error EvalError InternalError RangeError ReferenceError StopIteration SyntaxError TypeError URIError Number Math Date String RegExp Array Float32Array Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require module console window document any number boolean string void"},c:[{cN:"pi",b:/^\s*('|")use strict('|")/,r:0},e.ASM,e.QSM,e.CLCM,e.CBCM,e.CNM,{b:"("+e.RSR+"|\\b(case|return|throw)\\b)\\s*",k:"return throw case",c:[e.CLCM,e.CBCM,e.RM,{b:/</,e:/>;/,r:0,sL:"xml"}],r:0},{cN:"function",bK:"function",e:/\{/,eE:!0,c:[e.inherit(e.TM,{b:/[A-Za-z$_][0-9A-Za-z$_]*/}),{cN:"params",b:/\(/,e:/\)/,c:[e.CLCM,e.CBCM],i:/["'\(]/}],i:/\[|%/,r:0},{cN:"constructor",bK:"constructor",e:/\{/,eE:!0,r:10},{cN:"module",bK:"module",e:/\{/,eE:!0},{cN:"interface",bK:"interface",e:/\{/,eE:!0},{b:/\$[(.]/},{b:"\\."+e.IR,r:0}]}}),hljs.registerLanguage("vala",function(e){return{k:{keyword:"char uchar unichar int uint long ulong short ushort int8 int16 int32 int64 uint8 uint16 uint32 uint64 float double bool struct enum string void weak unowned owned async signal static abstract interface override while do for foreach else switch case break default return try catch public private protected internal using new this get set const stdout stdin stderr var",built_in:"DBus GLib CCode Gee Object",literal:"false true null"},c:[{cN:"class",bK:"class interface delegate namespace",e:"{",eE:!0,i:"[^,:\\n\\s\\.]",c:[e.UTM]},e.CLCM,e.CBCM,{cN:"string",b:'"""',e:'"""',r:5},e.ASM,e.QSM,e.CNM,{cN:"preprocessor",b:"^#",e:"$",r:2},{cN:"constant",b:" [A-Z_]+ ",r:0}]}}),hljs.registerLanguage("vbnet",function(e){return{aliases:["vb"],cI:!0,k:{keyword:"addhandler addressof alias and andalso aggregate ansi as assembly auto binary by byref byval call case catch class compare const continue custom declare default delegate dim distinct do each equals else elseif end enum erase error event exit explicit finally for friend from function get global goto group handles if implements imports in inherits interface into is isfalse isnot istrue join key let lib like loop me mid mod module mustinherit mustoverride mybase myclass namespace narrowing new next not notinheritable notoverridable of off on operator option optional or order orelse overloads overridable overrides paramarray partial preserve private property protected public raiseevent readonly redim rem removehandler resume return select set shadows shared skip static step stop structure strict sub synclock take text then throw to try unicode until using when where while widening with withevents writeonly xor",built_in:"boolean byte cbool cbyte cchar cdate cdec cdbl char cint clng cobj csbyte cshort csng cstr ctype date decimal directcast double gettype getxmlnamespace iif integer long object sbyte short single string trycast typeof uinteger ulong ushort",literal:"true false nothing"},i:"//|{|}|endif|gosub|variant|wend",c:[e.inherit(e.QSM,{c:[{b:'""'}]}),{cN:"comment",b:"'",e:"$",rB:!0,c:[{cN:"xmlDocTag",b:"'''|<!--|-->"},{cN:"xmlDocTag",b:"</?",e:">"}]},e.CNM,{cN:"preprocessor",b:"#",e:"$",k:"if else elseif end region externalsource"}]}}),hljs.registerLanguage("vbscript",function(e){return{aliases:["vbs"],cI:!0,k:{keyword:"call class const dim do loop erase execute executeglobal exit for each next function if then else on error option explicit new private property let get public randomize redim rem select case set stop sub while wend with end to elseif is or xor and not class_initialize class_terminate default preserve in me byval byref step resume goto",built_in:"lcase month vartype instrrev ubound setlocale getobject rgb getref string weekdayname rnd dateadd monthname now day minute isarray cbool round formatcurrency conversions csng timevalue second year space abs clng timeserial fixs len asc isempty maths dateserial atn timer isobject filter weekday datevalue ccur isdate instr datediff formatdatetime replace isnull right sgn array snumeric log cdbl hex chr lbound msgbox ucase getlocale cos cdate cbyte rtrim join hour oct typename trim strcomp int createobject loadpicture tan formatnumber mid scriptenginebuildversion scriptengine split scriptengineminorversion cint sin datepart ltrim sqr scriptenginemajorversion time derived eval date formatpercent exp inputbox left ascw chrw regexp server response request cstr err",literal:"true false null nothing empty"},i:"//",c:[e.inherit(e.QSM,{c:[{b:'""'}]}),{cN:"comment",b:/'/,e:/$/,r:0},e.CNM]}}),hljs.registerLanguage("vbscript-html",function(){return{sL:"xml",subLanguageMode:"continuous",c:[{b:"<%",e:"%>",sL:"vbscript"}]}}),hljs.registerLanguage("verilog",function(e){return{aliases:["v"],cI:!0,k:{keyword:"always and assign begin buf bufif0 bufif1 case casex casez cmos deassign default defparam disable edge else end endcase endfunction endmodule endprimitive endspecify endtable endtask event for force forever fork function if ifnone initial inout input join macromodule module nand negedge nmos nor not notif0 notif1 or output parameter pmos posedge primitive pulldown pullup rcmos release repeat rnmos rpmos rtran rtranif0 rtranif1 specify specparam table task timescale tran tranif0 tranif1 wait while xnor xor",typename:"highz0 highz1 integer large medium pull0 pull1 real realtime reg scalared signed small strong0 strong1 supply0 supply0 supply1 supply1 time tri tri0 tri1 triand trior trireg vectored wand weak0 weak1 wire wor"},c:[e.CBCM,e.CLCM,e.QSM,{cN:"number",b:"\\b(\\d+'(b|h|o|d|B|H|O|D))?[0-9xzXZ]+",c:[e.BE],r:0},{cN:"typename",b:"\\.\\w+",r:0},{cN:"value",b:"#\\((?!parameter).+\\)"},{cN:"keyword",b:"\\+|-|\\*|/|%|<|>|=|#|`|\\!|&|\\||@|:|\\^|~|\\{|\\}",r:0}]}}),hljs.registerLanguage("vhdl",function(e){return{cI:!0,k:{keyword:"abs access after alias all and architecture array assert attribute begin block body buffer bus case component configuration constant context cover disconnect downto default else elsif end entity exit fairness file for force function generate generic group guarded if impure in inertial inout is label library linkage literal loop map mod nand new next nor not null of on open or others out package port postponed procedure process property protected pure range record register reject release rem report restrict restrict_guarantee return rol ror select sequence severity shared signal sla sll sra srl strong subtype then to transport type unaffected units until use variable vmode vprop vunit wait when while with xnor xor",typename:"boolean bit character severity_level integer time delay_length natural positive string bit_vector file_open_kind file_open_status std_ulogic std_ulogic_vector std_logic std_logic_vector unsigned signed boolean_vector integer_vector real_vector time_vector"},i:"{",c:[e.CBCM,{cN:"comment",b:"--",e:"$"},e.QSM,e.CNM,{cN:"literal",b:"'(U|X|0|1|Z|W|L|H|-)'",c:[e.BE]},{cN:"attribute",b:"'[A-Za-z](_?[A-Za-z0-9])*",c:[e.BE]}]}}),hljs.registerLanguage("vim",function(e){return{l:/[!#@\w]+/,k:{keyword:"N|0 P|0 X|0 a|0 ab abc abo al am an|0 ar arga argd arge argdo argg argl argu as au aug aun b|0 bN ba bad bd be bel bf bl bm bn bo bp br brea breaka breakd breakl bro bufdo buffers bun bw c|0 cN cNf ca cabc caddb cad caddf cal cat cb cc ccl cd ce cex cf cfir cgetb cgete cg changes chd che checkt cl cla clo cm cmapc cme cn cnew cnf cno cnorea cnoreme co col colo com comc comp con conf cope cp cpf cq cr cs cst cu cuna cunme cw d|0 delm deb debugg delc delf dif diffg diffo diffp diffpu diffs diffthis dig di dl dell dj dli do doautoa dp dr ds dsp e|0 ea ec echoe echoh echom echon el elsei em en endfo endf endt endw ene ex exe exi exu f|0 files filet fin fina fini fir fix fo foldc foldd folddoc foldo for fu g|0 go gr grepa gu gv ha h|0 helpf helpg helpt hi hid his i|0 ia iabc if ij il im imapc ime ino inorea inoreme int is isp iu iuna iunme j|0 ju k|0 keepa kee keepj lN lNf l|0 lad laddb laddf la lan lat lb lc lch lcl lcs le lefta let lex lf lfir lgetb lgete lg lgr lgrepa lh ll lla lli lmak lm lmapc lne lnew lnf ln loadk lo loc lockv lol lope lp lpf lr ls lt lu lua luad luaf lv lvimgrepa lw m|0 ma mak map mapc marks mat me menut mes mk mks mksp mkv mkvie mod mz mzf nbc nb nbs n|0 new nm nmapc nme nn nnoreme noa no noh norea noreme norm nu nun nunme ol o|0 om omapc ome on ono onoreme opt ou ounme ow p|0 profd prof pro promptr pc ped pe perld po popu pp pre prev ps pt ptN ptf ptj ptl ptn ptp ptr pts pu pw py3 python3 py3d py3f py pyd pyf q|0 quita qa r|0 rec red redi redr redraws reg res ret retu rew ri rightb rub rubyd rubyf rund ru rv s|0 sN san sa sal sav sb sbN sba sbf sbl sbm sbn sbp sbr scrip scripte scs se setf setg setl sf sfir sh sim sig sil sl sla sm smap smapc sme sn sni sno snor snoreme sor so spelld spe spelli spellr spellu spellw sp spr sre st sta startg startr star stopi stj sts sun sunm sunme sus sv sw sy synti sync t|0 tN tabN tabc tabdo tabe tabf tabfir tabl tabm tabnew tabn tabo tabp tabr tabs tab ta tags tc tcld tclf te tf th tj tl tm tn to tp tr try ts tu u|0 undoj undol una unh unl unlo unm unme uns up v|0 ve verb vert vim vimgrepa vi viu vie vm vmapc vme vne vn vnoreme vs vu vunme windo w|0 wN wa wh wi winc winp wn wp wq wqa ws wu wv x|0 xa xmapc xm xme xn xnoreme xu xunme y|0 z|0 ~ Next Print append abbreviate abclear aboveleft all amenu anoremenu args argadd argdelete argedit argglobal arglocal argument ascii autocmd augroup aunmenu buffer bNext ball badd bdelete behave belowright bfirst blast bmodified bnext botright bprevious brewind break breakadd breakdel breaklist browse bunload bwipeout change cNext cNfile cabbrev cabclear caddbuffer caddexpr caddfile call catch cbuffer cclose center cexpr cfile cfirst cgetbuffer cgetexpr cgetfile chdir checkpath checktime clist clast close cmap cmapclear cmenu cnext cnewer cnfile cnoremap cnoreabbrev cnoremenu copy colder colorscheme command comclear compiler continue confirm copen cprevious cpfile cquit crewind cscope cstag cunmap cunabbrev cunmenu cwindow delete delmarks debug debuggreedy delcommand delfunction diffupdate diffget diffoff diffpatch diffput diffsplit digraphs display deletel djump dlist doautocmd doautoall deletep drop dsearch dsplit edit earlier echo echoerr echohl echomsg else elseif emenu endif endfor endfunction endtry endwhile enew execute exit exusage file filetype find finally finish first fixdel fold foldclose folddoopen folddoclosed foldopen function global goto grep grepadd gui gvim hardcopy help helpfind helpgrep helptags highlight hide history insert iabbrev iabclear ijump ilist imap imapclear imenu inoremap inoreabbrev inoremenu intro isearch isplit iunmap iunabbrev iunmenu join jumps keepalt keepmarks keepjumps lNext lNfile list laddexpr laddbuffer laddfile last language later lbuffer lcd lchdir lclose lcscope left leftabove lexpr lfile lfirst lgetbuffer lgetexpr lgetfile lgrep lgrepadd lhelpgrep llast llist lmake lmap lmapclear lnext lnewer lnfile lnoremap loadkeymap loadview lockmarks lockvar lolder lopen lprevious lpfile lrewind ltag lunmap luado luafile lvimgrep lvimgrepadd lwindow move mark make mapclear match menu menutranslate messages mkexrc mksession mkspell mkvimrc mkview mode mzscheme mzfile nbclose nbkey nbsart next nmap nmapclear nmenu nnoremap nnoremenu noautocmd noremap nohlsearch noreabbrev noremenu normal number nunmap nunmenu oldfiles open omap omapclear omenu only onoremap onoremenu options ounmap ounmenu ownsyntax print profdel profile promptfind promptrepl pclose pedit perl perldo pop popup ppop preserve previous psearch ptag ptNext ptfirst ptjump ptlast ptnext ptprevious ptrewind ptselect put pwd py3do py3file python pydo pyfile quit quitall qall read recover redo redir redraw redrawstatus registers resize retab return rewind right rightbelow ruby rubydo rubyfile rundo runtime rviminfo substitute sNext sandbox sargument sall saveas sbuffer sbNext sball sbfirst sblast sbmodified sbnext sbprevious sbrewind scriptnames scriptencoding scscope set setfiletype setglobal setlocal sfind sfirst shell simalt sign silent sleep slast smagic smapclear smenu snext sniff snomagic snoremap snoremenu sort source spelldump spellgood spellinfo spellrepall spellundo spellwrong split sprevious srewind stop stag startgreplace startreplace startinsert stopinsert stjump stselect sunhide sunmap sunmenu suspend sview swapname syntax syntime syncbind tNext tabNext tabclose tabedit tabfind tabfirst tablast tabmove tabnext tabonly tabprevious tabrewind tag tcl tcldo tclfile tearoff tfirst throw tjump tlast tmenu tnext topleft tprevious trewind tselect tunmenu undo undojoin undolist unabbreviate unhide unlet unlockvar unmap unmenu unsilent update vglobal version verbose vertical vimgrep vimgrepadd visual viusage view vmap vmapclear vmenu vnew vnoremap vnoremenu vsplit vunmap vunmenu write wNext wall while winsize wincmd winpos wnext wprevious wqall wsverb wundo wviminfo xit xall xmapclear xmap xmenu xnoremap xnoremenu xunmap xunmenu yank",built_in:"abs acos add and append argc argidx argv asin atan atan2 browse browsedir bufexists buflisted bufloaded bufname bufnr bufwinnr byte2line byteidx call ceil changenr char2nr cindent clearmatches col complete complete_add complete_check confirm copy cos cosh count cscope_connection cursor deepcopy delete did_filetype diff_filler diff_hlID empty escape eval eventhandler executable exists exp expand extend feedkeys filereadable filewritable filter finddir findfile float2nr floor fmod fnameescape fnamemodify foldclosed foldclosedend foldlevel foldtext foldtextresult foreground function garbagecollect get getbufline getbufvar getchar getcharmod getcmdline getcmdpos getcmdtype getcwd getfontname getfperm getfsize getftime getftype getline getloclist getmatches getpid getpos getqflist getreg getregtype gettabvar gettabwinvar getwinposx getwinposy getwinvar glob globpath has has_key haslocaldir hasmapto histadd histdel histget histnr hlexists hlID hostname iconv indent index input inputdialog inputlist inputrestore inputsave inputsecret insert invert isdirectory islocked items join keys len libcall libcallnr line line2byte lispindent localtime log log10 luaeval map maparg mapcheck match matchadd matcharg matchdelete matchend matchlist matchstr max min mkdir mode mzeval nextnonblank nr2char or pathshorten pow prevnonblank printf pumvisible py3eval pyeval range readfile reltime reltimestr remote_expr remote_foreground remote_peek remote_read remote_send remove rename repeat resolve reverse round screenattr screenchar screencol screenrow search searchdecl searchpair searchpairpos searchpos server2client serverlist setbufvar setcmdpos setline setloclist setmatches setpos setqflist setreg settabvar settabwinvar setwinvar sha256 shellescape shiftwidth simplify sin sinh sort soundfold spellbadword spellsuggest split sqrt str2float str2nr strchars strdisplaywidth strftime stridx string strlen strpart strridx strtrans strwidth submatch substitute synconcealed synID synIDattr synIDtrans synstack system tabpagebuflist tabpagenr tabpagewinnr tagfiles taglist tan tanh tempname tolower toupper tr trunc type undofile undotree values virtcol visualmode wildmenumode winbufnr wincol winheight winline winnr winrestcmd winrestview winsaveview winwidth writefile xor"},i:/[{:]/,c:[e.NM,e.ASM,{cN:"string",b:/"((\\")|[^"\n])*("|\n)/},{cN:"variable",b:/[bwtglsav]:[\w\d_]*/},{cN:"function",bK:"function function!",e:"$",r:0,c:[e.TM,{cN:"params",b:"\\(",e:"\\)"}]}]}}),hljs.registerLanguage("x86asm",function(e){return{cI:!0,l:"\\.?"+e.IR,k:{keyword:"lock rep repe repz repne repnz xaquire xrelease bnd nobnd aaa aad aam aas adc add and arpl bb0_reset bb1_reset bound bsf bsr bswap bt btc btr bts call cbw cdq cdqe clc cld cli clts cmc cmp cmpsb cmpsd cmpsq cmpsw cmpxchg cmpxchg486 cmpxchg8b cmpxchg16b cpuid cpu_read cpu_write cqo cwd cwde daa das dec div dmint emms enter equ f2xm1 fabs fadd faddp fbld fbstp fchs fclex fcmovb fcmovbe fcmove fcmovnb fcmovnbe fcmovne fcmovnu fcmovu fcom fcomi fcomip fcomp fcompp fcos fdecstp fdisi fdiv fdivp fdivr fdivrp femms feni ffree ffreep fiadd ficom ficomp fidiv fidivr fild fimul fincstp finit fist fistp fisttp fisub fisubr fld fld1 fldcw fldenv fldl2e fldl2t fldlg2 fldln2 fldpi fldz fmul fmulp fnclex fndisi fneni fninit fnop fnsave fnstcw fnstenv fnstsw fpatan fprem fprem1 fptan frndint frstor fsave fscale fsetpm fsin fsincos fsqrt fst fstcw fstenv fstp fstsw fsub fsubp fsubr fsubrp ftst fucom fucomi fucomip fucomp fucompp fxam fxch fxtract fyl2x fyl2xp1 hlt ibts icebp idiv imul in inc incbin insb insd insw int int01 int1 int03 int3 into invd invpcid invlpg invlpga iret iretd iretq iretw jcxz jecxz jrcxz jmp jmpe lahf lar lds lea leave les lfence lfs lgdt lgs lidt lldt lmsw loadall loadall286 lodsb lodsd lodsq lodsw loop loope loopne loopnz loopz lsl lss ltr mfence monitor mov movd movq movsb movsd movsq movsw movsx movsxd movzx mul mwait neg nop not or out outsb outsd outsw packssdw packsswb packuswb paddb paddd paddsb paddsiw paddsw paddusb paddusw paddw pand pandn pause paveb pavgusb pcmpeqb pcmpeqd pcmpeqw pcmpgtb pcmpgtd pcmpgtw pdistib pf2id pfacc pfadd pfcmpeq pfcmpge pfcmpgt pfmax pfmin pfmul pfrcp pfrcpit1 pfrcpit2 pfrsqit1 pfrsqrt pfsub pfsubr pi2fd pmachriw pmaddwd pmagw pmulhriw pmulhrwa pmulhrwc pmulhw pmullw pmvgezb pmvlzb pmvnzb pmvzb pop popa popad popaw popf popfd popfq popfw por prefetch prefetchw pslld psllq psllw psrad psraw psrld psrlq psrlw psubb psubd psubsb psubsiw psubsw psubusb psubusw psubw punpckhbw punpckhdq punpckhwd punpcklbw punpckldq punpcklwd push pusha pushad pushaw pushf pushfd pushfq pushfw pxor rcl rcr rdshr rdmsr rdpmc rdtsc rdtscp ret retf retn rol ror rdm rsdc rsldt rsm rsts sahf sal salc sar sbb scasb scasd scasq scasw sfence sgdt shl shld shr shrd sidt sldt skinit smi smint smintold smsw stc std sti stosb stosd stosq stosw str sub svdc svldt svts swapgs syscall sysenter sysexit sysret test ud0 ud1 ud2b ud2 ud2a umov verr verw fwait wbinvd wrshr wrmsr xadd xbts xchg xlatb xlat xor cmove cmovz cmovne cmovnz cmova cmovnbe cmovae cmovnb cmovb cmovnae cmovbe cmovna cmovg cmovnle cmovge cmovnl cmovl cmovnge cmovle cmovng cmovc cmovnc cmovo cmovno cmovs cmovns cmovp cmovpe cmovnp cmovpo je jz jne jnz ja jnbe jae jnb jb jnae jbe jna jg jnle jge jnl jl jnge jle jng jc jnc jo jno js jns jpo jnp jpe jp sete setz setne setnz seta setnbe setae setnb setnc setb setnae setcset setbe setna setg setnle setge setnl setl setnge setle setng sets setns seto setno setpe setp setpo setnp addps addss andnps andps cmpeqps cmpeqss cmpleps cmpless cmpltps cmpltss cmpneqps cmpneqss cmpnleps cmpnless cmpnltps cmpnltss cmpordps cmpordss cmpunordps cmpunordss cmpps cmpss comiss cvtpi2ps cvtps2pi cvtsi2ss cvtss2si cvttps2pi cvttss2si divps divss ldmxcsr maxps maxss minps minss movaps movhps movlhps movlps movhlps movmskps movntps movss movups mulps mulss orps rcpps rcpss rsqrtps rsqrtss shufps sqrtps sqrtss stmxcsr subps subss ucomiss unpckhps unpcklps xorps fxrstor fxrstor64 fxsave fxsave64 xgetbv xsetbv xsave xsave64 xsaveopt xsaveopt64 xrstor xrstor64 prefetchnta prefetcht0 prefetcht1 prefetcht2 maskmovq movntq pavgb pavgw pextrw pinsrw pmaxsw pmaxub pminsw pminub pmovmskb pmulhuw psadbw pshufw pf2iw pfnacc pfpnacc pi2fw pswapd maskmovdqu clflush movntdq movnti movntpd movdqa movdqu movdq2q movq2dq paddq pmuludq pshufd pshufhw pshuflw pslldq psrldq psubq punpckhqdq punpcklqdq addpd addsd andnpd andpd cmpeqpd cmpeqsd cmplepd cmplesd cmpltpd cmpltsd cmpneqpd cmpneqsd cmpnlepd cmpnlesd cmpnltpd cmpnltsd cmpordpd cmpordsd cmpunordpd cmpunordsd cmppd comisd cvtdq2pd cvtdq2ps cvtpd2dq cvtpd2pi cvtpd2ps cvtpi2pd cvtps2dq cvtps2pd cvtsd2si cvtsd2ss cvtsi2sd cvtss2sd cvttpd2pi cvttpd2dq cvttps2dq cvttsd2si divpd divsd maxpd maxsd minpd minsd movapd movhpd movlpd movmskpd movupd mulpd mulsd orpd shufpd sqrtpd sqrtsd subpd subsd ucomisd unpckhpd unpcklpd xorpd addsubpd addsubps haddpd haddps hsubpd hsubps lddqu movddup movshdup movsldup clgi stgi vmcall vmclear vmfunc vmlaunch vmload vmmcall vmptrld vmptrst vmread vmresume vmrun vmsave vmwrite vmxoff vmxon invept invvpid pabsb pabsw pabsd palignr phaddw phaddd phaddsw phsubw phsubd phsubsw pmaddubsw pmulhrsw pshufb psignb psignw psignd extrq insertq movntsd movntss lzcnt blendpd blendps blendvpd blendvps dppd dpps extractps insertps movntdqa mpsadbw packusdw pblendvb pblendw pcmpeqq pextrb pextrd pextrq phminposuw pinsrb pinsrd pinsrq pmaxsb pmaxsd pmaxud pmaxuw pminsb pminsd pminud pminuw pmovsxbw pmovsxbd pmovsxbq pmovsxwd pmovsxwq pmovsxdq pmovzxbw pmovzxbd pmovzxbq pmovzxwd pmovzxwq pmovzxdq pmuldq pmulld ptest roundpd roundps roundsd roundss crc32 pcmpestri pcmpestrm pcmpistri pcmpistrm pcmpgtq popcnt getsec pfrcpv pfrsqrtv movbe aesenc aesenclast aesdec aesdeclast aesimc aeskeygenassist vaesenc vaesenclast vaesdec vaesdeclast vaesimc vaeskeygenassist vaddpd vaddps vaddsd vaddss vaddsubpd vaddsubps vandpd vandps vandnpd vandnps vblendpd vblendps vblendvpd vblendvps vbroadcastss vbroadcastsd vbroadcastf128 vcmpeq_ospd vcmpeqpd vcmplt_ospd vcmpltpd vcmple_ospd vcmplepd vcmpunord_qpd vcmpunordpd vcmpneq_uqpd vcmpneqpd vcmpnlt_uspd vcmpnltpd vcmpnle_uspd vcmpnlepd vcmpord_qpd vcmpordpd vcmpeq_uqpd vcmpnge_uspd vcmpngepd vcmpngt_uspd vcmpngtpd vcmpfalse_oqpd vcmpfalsepd vcmpneq_oqpd vcmpge_ospd vcmpgepd vcmpgt_ospd vcmpgtpd vcmptrue_uqpd vcmptruepd vcmplt_oqpd vcmple_oqpd vcmpunord_spd vcmpneq_uspd vcmpnlt_uqpd vcmpnle_uqpd vcmpord_spd vcmpeq_uspd vcmpnge_uqpd vcmpngt_uqpd vcmpfalse_ospd vcmpneq_ospd vcmpge_oqpd vcmpgt_oqpd vcmptrue_uspd vcmppd vcmpeq_osps vcmpeqps vcmplt_osps vcmpltps vcmple_osps vcmpleps vcmpunord_qps vcmpunordps vcmpneq_uqps vcmpneqps vcmpnlt_usps vcmpnltps vcmpnle_usps vcmpnleps vcmpord_qps vcmpordps vcmpeq_uqps vcmpnge_usps vcmpngeps vcmpngt_usps vcmpngtps vcmpfalse_oqps vcmpfalseps vcmpneq_oqps vcmpge_osps vcmpgeps vcmpgt_osps vcmpgtps vcmptrue_uqps vcmptrueps vcmplt_oqps vcmple_oqps vcmpunord_sps vcmpneq_usps vcmpnlt_uqps vcmpnle_uqps vcmpord_sps vcmpeq_usps vcmpnge_uqps vcmpngt_uqps vcmpfalse_osps vcmpneq_osps vcmpge_oqps vcmpgt_oqps vcmptrue_usps vcmpps vcmpeq_ossd vcmpeqsd vcmplt_ossd vcmpltsd vcmple_ossd vcmplesd vcmpunord_qsd vcmpunordsd vcmpneq_uqsd vcmpneqsd vcmpnlt_ussd vcmpnltsd vcmpnle_ussd vcmpnlesd vcmpord_qsd vcmpordsd vcmpeq_uqsd vcmpnge_ussd vcmpngesd vcmpngt_ussd vcmpngtsd vcmpfalse_oqsd vcmpfalsesd vcmpneq_oqsd vcmpge_ossd vcmpgesd vcmpgt_ossd vcmpgtsd vcmptrue_uqsd vcmptruesd vcmplt_oqsd vcmple_oqsd vcmpunord_ssd vcmpneq_ussd vcmpnlt_uqsd vcmpnle_uqsd vcmpord_ssd vcmpeq_ussd vcmpnge_uqsd vcmpngt_uqsd vcmpfalse_ossd vcmpneq_ossd vcmpge_oqsd vcmpgt_oqsd vcmptrue_ussd vcmpsd vcmpeq_osss vcmpeqss vcmplt_osss vcmpltss vcmple_osss vcmpless vcmpunord_qss vcmpunordss vcmpneq_uqss vcmpneqss vcmpnlt_usss vcmpnltss vcmpnle_usss vcmpnless vcmpord_qss vcmpordss vcmpeq_uqss vcmpnge_usss vcmpngess vcmpngt_usss vcmpngtss vcmpfalse_oqss vcmpfalsess vcmpneq_oqss vcmpge_osss vcmpgess vcmpgt_osss vcmpgtss vcmptrue_uqss vcmptruess vcmplt_oqss vcmple_oqss vcmpunord_sss vcmpneq_usss vcmpnlt_uqss vcmpnle_uqss vcmpord_sss vcmpeq_usss vcmpnge_uqss vcmpngt_uqss vcmpfalse_osss vcmpneq_osss vcmpge_oqss vcmpgt_oqss vcmptrue_usss vcmpss vcomisd vcomiss vcvtdq2pd vcvtdq2ps vcvtpd2dq vcvtpd2ps vcvtps2dq vcvtps2pd vcvtsd2si vcvtsd2ss vcvtsi2sd vcvtsi2ss vcvtss2sd vcvtss2si vcvttpd2dq vcvttps2dq vcvttsd2si vcvttss2si vdivpd vdivps vdivsd vdivss vdppd vdpps vextractf128 vextractps vhaddpd vhaddps vhsubpd vhsubps vinsertf128 vinsertps vlddqu vldqqu vldmxcsr vmaskmovdqu vmaskmovps vmaskmovpd vmaxpd vmaxps vmaxsd vmaxss vminpd vminps vminsd vminss vmovapd vmovaps vmovd vmovq vmovddup vmovdqa vmovqqa vmovdqu vmovqqu vmovhlps vmovhpd vmovhps vmovlhps vmovlpd vmovlps vmovmskpd vmovmskps vmovntdq vmovntqq vmovntdqa vmovntpd vmovntps vmovsd vmovshdup vmovsldup vmovss vmovupd vmovups vmpsadbw vmulpd vmulps vmulsd vmulss vorpd vorps vpabsb vpabsw vpabsd vpacksswb vpackssdw vpackuswb vpackusdw vpaddb vpaddw vpaddd vpaddq vpaddsb vpaddsw vpaddusb vpaddusw vpalignr vpand vpandn vpavgb vpavgw vpblendvb vpblendw vpcmpestri vpcmpestrm vpcmpistri vpcmpistrm vpcmpeqb vpcmpeqw vpcmpeqd vpcmpeqq vpcmpgtb vpcmpgtw vpcmpgtd vpcmpgtq vpermilpd vpermilps vperm2f128 vpextrb vpextrw vpextrd vpextrq vphaddw vphaddd vphaddsw vphminposuw vphsubw vphsubd vphsubsw vpinsrb vpinsrw vpinsrd vpinsrq vpmaddwd vpmaddubsw vpmaxsb vpmaxsw vpmaxsd vpmaxub vpmaxuw vpmaxud vpminsb vpminsw vpminsd vpminub vpminuw vpminud vpmovmskb vpmovsxbw vpmovsxbd vpmovsxbq vpmovsxwd vpmovsxwq vpmovsxdq vpmovzxbw vpmovzxbd vpmovzxbq vpmovzxwd vpmovzxwq vpmovzxdq vpmulhuw vpmulhrsw vpmulhw vpmullw vpmulld vpmuludq vpmuldq vpor vpsadbw vpshufb vpshufd vpshufhw vpshuflw vpsignb vpsignw vpsignd vpslldq vpsrldq vpsllw vpslld vpsllq vpsraw vpsrad vpsrlw vpsrld vpsrlq vptest vpsubb vpsubw vpsubd vpsubq vpsubsb vpsubsw vpsubusb vpsubusw vpunpckhbw vpunpckhwd vpunpckhdq vpunpckhqdq vpunpcklbw vpunpcklwd vpunpckldq vpunpcklqdq vpxor vrcpps vrcpss vrsqrtps vrsqrtss vroundpd vroundps vroundsd vroundss vshufpd vshufps vsqrtpd vsqrtps vsqrtsd vsqrtss vstmxcsr vsubpd vsubps vsubsd vsubss vtestps vtestpd vucomisd vucomiss vunpckhpd vunpckhps vunpcklpd vunpcklps vxorpd vxorps vzeroall vzeroupper pclmullqlqdq pclmulhqlqdq pclmullqhqdq pclmulhqhqdq pclmulqdq vpclmullqlqdq vpclmulhqlqdq vpclmullqhqdq vpclmulhqhqdq vpclmulqdq vfmadd132ps vfmadd132pd vfmadd312ps vfmadd312pd vfmadd213ps vfmadd213pd vfmadd123ps vfmadd123pd vfmadd231ps vfmadd231pd vfmadd321ps vfmadd321pd vfmaddsub132ps vfmaddsub132pd vfmaddsub312ps vfmaddsub312pd vfmaddsub213ps vfmaddsub213pd vfmaddsub123ps vfmaddsub123pd vfmaddsub231ps vfmaddsub231pd vfmaddsub321ps vfmaddsub321pd vfmsub132ps vfmsub132pd vfmsub312ps vfmsub312pd vfmsub213ps vfmsub213pd vfmsub123ps vfmsub123pd vfmsub231ps vfmsub231pd vfmsub321ps vfmsub321pd vfmsubadd132ps vfmsubadd132pd vfmsubadd312ps vfmsubadd312pd vfmsubadd213ps vfmsubadd213pd vfmsubadd123ps vfmsubadd123pd vfmsubadd231ps vfmsubadd231pd vfmsubadd321ps vfmsubadd321pd vfnmadd132ps vfnmadd132pd vfnmadd312ps vfnmadd312pd vfnmadd213ps vfnmadd213pd vfnmadd123ps vfnmadd123pd vfnmadd231ps vfnmadd231pd vfnmadd321ps vfnmadd321pd vfnmsub132ps vfnmsub132pd vfnmsub312ps vfnmsub312pd vfnmsub213ps vfnmsub213pd vfnmsub123ps vfnmsub123pd vfnmsub231ps vfnmsub231pd vfnmsub321ps vfnmsub321pd vfmadd132ss vfmadd132sd vfmadd312ss vfmadd312sd vfmadd213ss vfmadd213sd vfmadd123ss vfmadd123sd vfmadd231ss vfmadd231sd vfmadd321ss vfmadd321sd vfmsub132ss vfmsub132sd vfmsub312ss vfmsub312sd vfmsub213ss vfmsub213sd vfmsub123ss vfmsub123sd vfmsub231ss vfmsub231sd vfmsub321ss vfmsub321sd vfnmadd132ss vfnmadd132sd vfnmadd312ss vfnmadd312sd vfnmadd213ss vfnmadd213sd vfnmadd123ss vfnmadd123sd vfnmadd231ss vfnmadd231sd vfnmadd321ss vfnmadd321sd vfnmsub132ss vfnmsub132sd vfnmsub312ss vfnmsub312sd vfnmsub213ss vfnmsub213sd vfnmsub123ss vfnmsub123sd vfnmsub231ss vfnmsub231sd vfnmsub321ss vfnmsub321sd rdfsbase rdgsbase rdrand wrfsbase wrgsbase vcvtph2ps vcvtps2ph adcx adox rdseed clac stac xstore xcryptecb xcryptcbc xcryptctr xcryptcfb xcryptofb montmul xsha1 xsha256 llwpcb slwpcb lwpval lwpins vfmaddpd vfmaddps vfmaddsd vfmaddss vfmaddsubpd vfmaddsubps vfmsubaddpd vfmsubaddps vfmsubpd vfmsubps vfmsubsd vfmsubss vfnmaddpd vfnmaddps vfnmaddsd vfnmaddss vfnmsubpd vfnmsubps vfnmsubsd vfnmsubss vfrczpd vfrczps vfrczsd vfrczss vpcmov vpcomb vpcomd vpcomq vpcomub vpcomud vpcomuq vpcomuw vpcomw vphaddbd vphaddbq vphaddbw vphadddq vphaddubd vphaddubq vphaddubw vphaddudq vphadduwd vphadduwq vphaddwd vphaddwq vphsubbw vphsubdq vphsubwd vpmacsdd vpmacsdqh vpmacsdql vpmacssdd vpmacssdqh vpmacssdql vpmacsswd vpmacssww vpmacswd vpmacsww vpmadcsswd vpmadcswd vpperm vprotb vprotd vprotq vprotw vpshab vpshad vpshaq vpshaw vpshlb vpshld vpshlq vpshlw vbroadcasti128 vpblendd vpbroadcastb vpbroadcastw vpbroadcastd vpbroadcastq vpermd vpermpd vpermps vpermq vperm2i128 vextracti128 vinserti128 vpmaskmovd vpmaskmovq vpsllvd vpsllvq vpsravd vpsrlvd vpsrlvq vgatherdpd vgatherqpd vgatherdps vgatherqps vpgatherdd vpgatherqd vpgatherdq vpgatherqq xabort xbegin xend xtest andn bextr blci blcic blsi blsic blcfill blsfill blcmsk blsmsk blsr blcs bzhi mulx pdep pext rorx sarx shlx shrx tzcnt tzmsk t1mskc valignd valignq vblendmpd vblendmps vbroadcastf32x4 vbroadcastf64x4 vbroadcasti32x4 vbroadcasti64x4 vcompresspd vcompressps vcvtpd2udq vcvtps2udq vcvtsd2usi vcvtss2usi vcvttpd2udq vcvttps2udq vcvttsd2usi vcvttss2usi vcvtudq2pd vcvtudq2ps vcvtusi2sd vcvtusi2ss vexpandpd vexpandps vextractf32x4 vextractf64x4 vextracti32x4 vextracti64x4 vfixupimmpd vfixupimmps vfixupimmsd vfixupimmss vgetexppd vgetexpps vgetexpsd vgetexpss vgetmantpd vgetmantps vgetmantsd vgetmantss vinsertf32x4 vinsertf64x4 vinserti32x4 vinserti64x4 vmovdqa32 vmovdqa64 vmovdqu32 vmovdqu64 vpabsq vpandd vpandnd vpandnq vpandq vpblendmd vpblendmq vpcmpltd vpcmpled vpcmpneqd vpcmpnltd vpcmpnled vpcmpd vpcmpltq vpcmpleq vpcmpneqq vpcmpnltq vpcmpnleq vpcmpq vpcmpequd vpcmpltud vpcmpleud vpcmpnequd vpcmpnltud vpcmpnleud vpcmpud vpcmpequq vpcmpltuq vpcmpleuq vpcmpnequq vpcmpnltuq vpcmpnleuq vpcmpuq vpcompressd vpcompressq vpermi2d vpermi2pd vpermi2ps vpermi2q vpermt2d vpermt2pd vpermt2ps vpermt2q vpexpandd vpexpandq vpmaxsq vpmaxuq vpminsq vpminuq vpmovdb vpmovdw vpmovqb vpmovqd vpmovqw vpmovsdb vpmovsdw vpmovsqb vpmovsqd vpmovsqw vpmovusdb vpmovusdw vpmovusqb vpmovusqd vpmovusqw vpord vporq vprold vprolq vprolvd vprolvq vprord vprorq vprorvd vprorvq vpscatterdd vpscatterdq vpscatterqd vpscatterqq vpsraq vpsravq vpternlogd vpternlogq vptestmd vptestmq vptestnmd vptestnmq vpxord vpxorq vrcp14pd vrcp14ps vrcp14sd vrcp14ss vrndscalepd vrndscaleps vrndscalesd vrndscaless vrsqrt14pd vrsqrt14ps vrsqrt14sd vrsqrt14ss vscalefpd vscalefps vscalefsd vscalefss vscatterdpd vscatterdps vscatterqpd vscatterqps vshuff32x4 vshuff64x2 vshufi32x4 vshufi64x2 kandnw kandw kmovw knotw kortestw korw kshiftlw kshiftrw kunpckbw kxnorw kxorw vpbroadcastmb2q vpbroadcastmw2d vpconflictd vpconflictq vplzcntd vplzcntq vexp2pd vexp2ps vrcp28pd vrcp28ps vrcp28sd vrcp28ss vrsqrt28pd vrsqrt28ps vrsqrt28sd vrsqrt28ss vgatherpf0dpd vgatherpf0dps vgatherpf0qpd vgatherpf0qps vgatherpf1dpd vgatherpf1dps vgatherpf1qpd vgatherpf1qps vscatterpf0dpd vscatterpf0dps vscatterpf0qpd vscatterpf0qps vscatterpf1dpd vscatterpf1dps vscatterpf1qpd vscatterpf1qps prefetchwt1 bndmk bndcl bndcu bndcn bndmov bndldx bndstx sha1rnds4 sha1nexte sha1msg1 sha1msg2 sha256rnds2 sha256msg1 sha256msg2 hint_nop0 hint_nop1 hint_nop2 hint_nop3 hint_nop4 hint_nop5 hint_nop6 hint_nop7 hint_nop8 hint_nop9 hint_nop10 hint_nop11 hint_nop12 hint_nop13 hint_nop14 hint_nop15 hint_nop16 hint_nop17 hint_nop18 hint_nop19 hint_nop20 hint_nop21 hint_nop22 hint_nop23 hint_nop24 hint_nop25 hint_nop26 hint_nop27 hint_nop28 hint_nop29 hint_nop30 hint_nop31 hint_nop32 hint_nop33 hint_nop34 hint_nop35 hint_nop36 hint_nop37 hint_nop38 hint_nop39 hint_nop40 hint_nop41 hint_nop42 hint_nop43 hint_nop44 hint_nop45 hint_nop46 hint_nop47 hint_nop48 hint_nop49 hint_nop50 hint_nop51 hint_nop52 hint_nop53 hint_nop54 hint_nop55 hint_nop56 hint_nop57 hint_nop58 hint_nop59 hint_nop60 hint_nop61 hint_nop62 hint_nop63",literal:"ip eip rip al ah bl bh cl ch dl dh sil dil bpl spl r8b r9b r10b r11b r12b r13b r14b r15b ax bx cx dx si di bp sp r8w r9w r10w r11w r12w r13w r14w r15w eax ebx ecx edx esi edi ebp esp eip r8d r9d r10d r11d r12d r13d r14d r15d rax rbx rcx rdx rsi rdi rbp rsp r8 r9 r10 r11 r12 r13 r14 r15 cs ds es fs gs ss st st0 st1 st2 st3 st4 st5 st6 st7 mm0 mm1 mm2 mm3 mm4 mm5 mm6 mm7 xmm0  xmm1  xmm2  xmm3  xmm4  xmm5  xmm6  xmm7  xmm8  xmm9 xmm10  xmm11 xmm12 xmm13 xmm14 xmm15 xmm16 xmm17 xmm18 xmm19 xmm20 xmm21 xmm22 xmm23 xmm24 xmm25 xmm26 xmm27 xmm28 xmm29 xmm30 xmm31 ymm0  ymm1  ymm2  ymm3  ymm4  ymm5  ymm6  ymm7  ymm8  ymm9 ymm10  ymm11 ymm12 ymm13 ymm14 ymm15 ymm16 ymm17 ymm18 ymm19 ymm20 ymm21 ymm22 ymm23 ymm24 ymm25 ymm26 ymm27 ymm28 ymm29 ymm30 ymm31 zmm0  zmm1  zmm2  zmm3  zmm4  zmm5  zmm6  zmm7  zmm8  zmm9 zmm10  zmm11 zmm12 zmm13 zmm14 zmm15 zmm16 zmm17 zmm18 zmm19 zmm20 zmm21 zmm22 zmm23 zmm24 zmm25 zmm26 zmm27 zmm28 zmm29 zmm30 zmm31 k0 k1 k2 k3 k4 k5 k6 k7 bnd0 bnd1 bnd2 bnd3 cr0 cr1 cr2 cr3 cr4 cr8 dr0 dr1 dr2 dr3 dr8 tr3 tr4 tr5 tr6 tr7 r0 r1 r2 r3 r4 r5 r6 r7 r0b r1b r2b r3b r4b r5b r6b r7b r0w r1w r2w r3w r4w r5w r6w r7w r0d r1d r2d r3d r4d r5d r6d r7d r0h r1h r2h r3h r0l r1l r2l r3l r4l r5l r6l r7l r8l r9l r10l r11l r12l r13l r14l r15l",pseudo:"db dw dd dq dt ddq do dy dz resb resw resd resq rest resdq reso resy resz incbin equ times",preprocessor:"%define %xdefine %+ %undef %defstr %deftok %assign %strcat %strlen %substr %rotate %elif %else %endif %ifmacro %ifctx %ifidn %ifidni %ifid %ifnum %ifstr %iftoken %ifempty %ifenv %error %warning %fatal %rep %endrep %include %push %pop %repl %pathsearch %depend %use %arg %stacksize %local %line %comment %endcomment .nolist byte word dword qword nosplit rel abs seg wrt strict near far a32 ptr __FILE__ __LINE__ __SECT__  __BITS__ __OUTPUT_FORMAT__ __DATE__ __TIME__ __DATE_NUM__ __TIME_NUM__ __UTC_DATE__ __UTC_TIME__ __UTC_DATE_NUM__ __UTC_TIME_NUM__  __PASS__ struc endstruc istruc at iend align alignb sectalign daz nodaz up down zero default option assume public ",built_in:"bits use16 use32 use64 default section segment absolute extern global common cpu float __utf16__ __utf16le__ __utf16be__ __utf32__ __utf32le__ __utf32be__ __float8__ __float16__ __float32__ __float64__ __float80m__ __float80e__ __float128l__ __float128h__ __Infinity__ __QNaN__ __SNaN__ Inf NaN QNaN SNaN float8 float16 float32 float64 float80m float80e float128l float128h __FLOAT_DAZ__ __FLOAT_ROUND__ __FLOAT__"},c:[{cN:"comment",b:";",e:"$",r:0},{cN:"number",b:"\\b(?:([0-9][0-9_]*)?\\.[0-9_]*(?:[eE][+-]?[0-9_]+)?|(0[Xx])?[0-9][0-9_]*\\.?[0-9_]*(?:[pP](?:[+-]?[0-9_]+)?)?)\\b",r:0},{cN:"number",b:"\\$[0-9][0-9A-Fa-f]*",r:0},{cN:"number",b:"\\b(?:[0-9A-Fa-f][0-9A-Fa-f_]*[HhXx]|[0-9][0-9_]*[DdTt]?|[0-7][0-7_]*[QqOo]|[0-1][0-1_]*[BbYy])\\b"},{cN:"number",b:"\\b(?:0[HhXx][0-9A-Fa-f_]+|0[DdTt][0-9_]+|0[QqOo][0-7_]+|0[BbYy][0-1_]+)\\b"},e.QSM,{cN:"string",b:"'",e:"[^\\\\]'",r:0},{cN:"string",b:"`",e:"[^\\\\]`",r:0},{cN:"string",b:"\\.[A-Za-z0-9]+",r:0},{cN:"label",b:"^\\s*[A-Za-z._?][A-Za-z0-9_$#@~.?]*(:|\\s+label)",r:0},{cN:"label",b:"^\\s*%%[A-Za-z0-9_$#@~.?]*:",r:0},{cN:"argument",b:"%[0-9]+",r:0},{cN:"built_in",b:"%!S+",r:0}]}
}),hljs.registerLanguage("xl",function(e){var t="ObjectLoader Animate MovieCredits Slides Filters Shading Materials LensFlare Mapping VLCAudioVideo StereoDecoder PointCloud NetworkAccess RemoteControl RegExp ChromaKey Snowfall NodeJS Speech Charts",r={keyword:"if then else do while until for loop import with is as where when by data constant",literal:"true false nil",type:"integer real text name boolean symbol infix prefix postfix block tree",built_in:"in mod rem and or xor not abs sign floor ceil sqrt sin cos tan asin acos atan exp expm1 log log2 log10 log1p pi at",module:t,id:"text_length text_range text_find text_replace contains page slide basic_slide title_slide title subtitle fade_in fade_out fade_at clear_color color line_color line_width texture_wrap texture_transform texture scale_?x scale_?y scale_?z? translate_?x translate_?y translate_?z? rotate_?x rotate_?y rotate_?z? rectangle circle ellipse sphere path line_to move_to quad_to curve_to theme background contents locally time mouse_?x mouse_?y mouse_buttons"},a={cN:"constant",b:"[A-Z][A-Z_0-9]+",r:0},i={cN:"variable",b:"([A-Z][a-z_0-9]+)+",r:0},n={cN:"id",b:"[a-z][a-z_0-9]+",r:0},o={cN:"string",b:'"',e:'"',i:"\\n"},s={cN:"string",b:"'",e:"'",i:"\\n"},l={cN:"string",b:"<<",e:">>"},c={cN:"number",b:"[0-9]+#[0-9A-Z_]+(\\.[0-9-A-Z_]+)?#?([Ee][+-]?[0-9]+)?",r:10},p={cN:"import",bK:"import",e:"$",k:{keyword:"import",module:t},r:0,c:[o]},d={cN:"function",b:"[a-z].*->"};return{aliases:["tao"],l:/[a-zA-Z][a-zA-Z0-9_?]*/,k:r,c:[e.CLCM,e.CBCM,o,s,l,d,p,a,i,n,c,e.NM]}});

/*global define */

define('jsx!docs/ComponentPage',['require','highlightjs','react.backbone'],function (require) {
  
  var hjs = require('highlightjs');
  var React = require('react.backbone');
  var ExampleRunner = React.createClass({displayName: 'ExampleRunner',
    getInitialState: function () {
      return {
        sourceExpanded: false
      };
    },
    toggleSource: function () {
      this.setState({ sourceExpanded: !this.state.sourceExpanded });
    },
    componentDidUpdate: function () {
      hljs.highlightBlock(this.refs.code.getDOMNode());
    },
    render: function () {
      if (!this.props.name) return React.createElement("div", null);
      var sourceClasses = React.addons.classSet({
        'example-source': true,
        'expanded': this.state.sourceExpanded
      });
      var sourceMessage = this.state.sourceExpanded ? 'Hide Source':'View Source';
      var Example = this.props.component;
      return (
        React.createElement("div", {className: "page-content component-page", key: this.props.name}, 
          React.createElement("h3", null, this.props.name, " Component"), 
          React.createElement("h4", null, "Demo"), 
          React.createElement("div", {className: "component-example"}, 
            React.createElement("a", {className: "docs-button source-toggle", onClick: this.toggleSource}, sourceMessage), 
            React.createElement("div", null, 
              React.createElement(Example, null)
            )
          ), 
          React.createElement("div", {className: "component-docs"}, 
            React.createElement("div", {className: sourceClasses}, 
              React.createElement("pre", null, React.createElement("code", {className: "e4x", ref: "code"}, this.props.source))
            ), 
            React.createElement("h4", null, "Properties"), 
            React.createElement("table", {className: "table table-striped"}, 
              React.createElement("thead", null, 
                React.createElement("tr", null, React.createElement("th", null, "Name"), React.createElement("th", null, "Type"), React.createElement("th", null, "Description"))
              ), 
              React.createElement("tbody", null, 
              _.map(this.props.manifest.properties, function (p) {
                return (
                  React.createElement("tr", {key: p.name}, 
                    React.createElement("td", null, p.name), 
                    React.createElement("td", null, p.type), 
                    React.createElement("td", null, p.description)
                  )
                );
              })
              )
            ), 
            React.createElement("div", {className: "component-content"}, 
              React.createElement("div", {dangerouslySetInnerHTML: {__html: this.props.content}})
            )
          )
        )
      );
    }
  });
  return ExampleRunner;
});

//
// edited original source code to convert API and wrap into
// an AMD module, changes are before/after the wrapped code.
//
// you can replace the markdown converter as long as it
// implements the `makeHtml()` method
//
define('markdownConverter',['require', 'exports'], function(require, exports){
// ======= START WRAP


var Markdown;

if (typeof exports === "object" && typeof require === "function") // we're in a CommonJS (e.g. Node.js) module
    Markdown = exports;
else
    Markdown = {};

// The following text is included for historical reasons, but should
// be taken with a pinch of salt; it's not all true anymore.

//
// Wherever possible, Showdown is a straight, line-by-line port
// of the Perl version of Markdown.
//
// This is not a normal parser design; it's basically just a
// series of string substitutions.  It's hard to read and
// maintain this way,  but keeping Showdown close to the original
// design makes it easier to port new features.
//
// More importantly, Showdown behaves like markdown.pl in most
// edge cases.  So web applications can do client-side preview
// in Javascript, and then build identical HTML on the server.
//
// This port needs the new RegExp functionality of ECMA 262,
// 3rd Edition (i.e. Javascript 1.5).  Most modern web browsers
// should do fine.  Even with the new regular expression features,
// We do a lot of work to emulate Perl's regex functionality.
// The tricky changes in this file mostly have the "attacklab:"
// label.  Major or self-explanatory changes don't.
//
// Smart diff tools like Araxis Merge will be able to match up
// this file with markdown.pl in a useful way.  A little tweaking
// helps: in a copy of markdown.pl, replace "#" with "//" and
// replace "$text" with "text".  Be sure to ignore whitespace
// and line endings.
//


//
// Usage:
//
//   var text = "Markdown *rocks*.";
//
//   var converter = new Markdown.Converter();
//   var html = converter.makeHtml(text);
//
//   alert(html);
//
// Note: move the sample code to the bottom of this
// file before uncommenting it.
//

(function () {

    function identity(x) { return x; }
    function returnFalse(x) { return false; }

    function HookCollection() { }

    HookCollection.prototype = {

        chain: function (hookname, func) {
            var original = this[hookname];
            if (!original)
                throw new Error("unknown hook " + hookname);

            if (original === identity)
                this[hookname] = func;
            else
                this[hookname] = function (x) { return func(original(x)); }
        },
        set: function (hookname, func) {
            if (!this[hookname])
                throw new Error("unknown hook " + hookname);
            this[hookname] = func;
        },
        addNoop: function (hookname) {
            this[hookname] = identity;
        },
        addFalse: function (hookname) {
            this[hookname] = returnFalse;
        }
    };

    Markdown.HookCollection = HookCollection;

    // g_urls and g_titles allow arbitrary user-entered strings as keys. This
    // caused an exception (and hence stopped the rendering) when the user entered
    // e.g. [push] or [__proto__]. Adding a prefix to the actual key prevents this
    // (since no builtin property starts with "s_"). See
    // http://meta.stackoverflow.com/questions/64655/strange-wmd-bug
    // (granted, switching from Array() to Object() alone would have left only __proto__
    // to be a problem)
    function SaveHash() { }
    SaveHash.prototype = {
        set: function (key, value) {
            this["s_" + key] = value;
        },
        get: function (key) {
            return this["s_" + key];
        }
    };

    Markdown.Converter = function () {
        var pluginHooks = this.hooks = new HookCollection();
        pluginHooks.addNoop("plainLinkText");  // given a URL that was encountered by itself (without markup), should return the link text that's to be given to this link
        pluginHooks.addNoop("preConversion");  // called with the orignal text as given to makeHtml. The result of this plugin hook is the actual markdown source that will be cooked
        pluginHooks.addNoop("postConversion"); // called with the final cooked HTML code. The result of this plugin hook is the actual output of makeHtml

        //
        // Private state of the converter instance:
        //

        // Global hashes, used by various utility routines
        var g_urls;
        var g_titles;
        var g_html_blocks;

        // Used to track when we're inside an ordered or unordered list
        // (see _ProcessListItems() for details):
        var g_list_level;

        this.makeHtml = function (text) {

            //
            // Main function. The order in which other subs are called here is
            // essential. Link and image substitutions need to happen before
            // _EscapeSpecialCharsWithinTagAttributes(), so that any *'s or _'s in the <a>
            // and <img> tags get encoded.
            //

            // This will only happen if makeHtml on the same converter instance is called from a plugin hook.
            // Don't do that.
            if (g_urls)
                throw new Error("Recursive call to converter.makeHtml");

            // Create the private state objects.
            g_urls = new SaveHash();
            g_titles = new SaveHash();
            g_html_blocks = [];
            g_list_level = 0;

            text = pluginHooks.preConversion(text);

            // attacklab: Replace ~ with ~T
            // This lets us use tilde as an escape char to avoid md5 hashes
            // The choice of character is arbitray; anything that isn't
            // magic in Markdown will work.
            text = text.replace(/~/g, "~T");

            // attacklab: Replace $ with ~D
            // RegExp interprets $ as a special character
            // when it's in a replacement string
            text = text.replace(/\$/g, "~D");

            // Standardize line endings
            text = text.replace(/\r\n/g, "\n"); // DOS to Unix
            text = text.replace(/\r/g, "\n"); // Mac to Unix

            // Make sure text begins and ends with a couple of newlines:
            text = "\n\n" + text + "\n\n";

            // Convert all tabs to spaces.
            text = _Detab(text);

            // Strip any lines consisting only of spaces and tabs.
            // This makes subsequent regexen easier to write, because we can
            // match consecutive blank lines with /\n+/ instead of something
            // contorted like /[ \t]*\n+/ .
            text = text.replace(/^[ \t]+$/mg, "");

            // Turn block-level HTML blocks into hash entries
            text = _HashHTMLBlocks(text);

            // Strip link definitions, store in hashes.
            text = _StripLinkDefinitions(text);

            text = _RunBlockGamut(text);

            text = _UnescapeSpecialChars(text);

            // attacklab: Restore dollar signs
            text = text.replace(/~D/g, "$$");

            // attacklab: Restore tildes
            text = text.replace(/~T/g, "~");

            text = pluginHooks.postConversion(text);

            g_html_blocks = g_titles = g_urls = null;

            return text;
        };

        function _StripLinkDefinitions(text) {
            //
            // Strips link definitions from text, stores the URLs and titles in
            // hash references.
            //

            // Link defs are in the form: ^[id]: url "optional title"

            /*
            text = text.replace(/
                ^[ ]{0,3}\[(.+)\]:  // id = $1  attacklab: g_tab_width - 1
                [ \t]*
                \n?                 // maybe *one* newline
                [ \t]*
                <?(\S+?)>?          // url = $2
                (?=\s|$)            // lookahead for whitespace instead of the lookbehind removed below
                [ \t]*
                \n?                 // maybe one newline
                [ \t]*
                (                   // (potential) title = $3
                    (\n*)           // any lines skipped = $4 attacklab: lookbehind removed
                    [ \t]+
                    ["(]
                    (.+?)           // title = $5
                    [")]
                    [ \t]*
                )?                  // title is optional
                (?:\n+|$)
            /gm, function(){...});
            */

            text = text.replace(/^[ ]{0,3}\[(.+)\]:[ \t]*\n?[ \t]*<?(\S+?)>?(?=\s|$)[ \t]*\n?[ \t]*((\n*)["(](.+?)[")][ \t]*)?(?:\n+)/gm,
                function (wholeMatch, m1, m2, m3, m4, m5) {
                    m1 = m1.toLowerCase();
                    g_urls.set(m1, _EncodeAmpsAndAngles(m2));  // Link IDs are case-insensitive
                    if (m4) {
                        // Oops, found blank lines, so it's not a title.
                        // Put back the parenthetical statement we stole.
                        return m3;
                    } else if (m5) {
                        g_titles.set(m1, m5.replace(/"/g, "&quot;"));
                    }

                    // Completely remove the definition from the text
                    return "";
                }
            );

            return text;
        }

        function _HashHTMLBlocks(text) {

            // Hashify HTML blocks:
            // We only want to do this for block-level HTML tags, such as headers,
            // lists, and tables. That's because we still want to wrap <p>s around
            // "paragraphs" that are wrapped in non-block-level tags, such as anchors,
            // phrase emphasis, and spans. The list of tags we're looking for is
            // hard-coded:
            var block_tags_a = "p|div|h[1-6]|blockquote|pre|table|dl|ol|ul|script|noscript|form|fieldset|iframe|math|ins|del"
            var block_tags_b = "p|div|h[1-6]|blockquote|pre|table|dl|ol|ul|script|noscript|form|fieldset|iframe|math"

            // First, look for nested blocks, e.g.:
            //   <div>
            //     <div>
            //     tags for inner block must be indented.
            //     </div>
            //   </div>
            //
            // The outermost tags must start at the left margin for this to match, and
            // the inner nested divs must be indented.
            // We need to do this before the next, more liberal match, because the next
            // match will start at the first `<div>` and stop at the first `</div>`.

            // attacklab: This regex can be expensive when it fails.

            /*
            text = text.replace(/
                (                       // save in $1
                    ^                   // start of line  (with /m)
                    <($block_tags_a)    // start tag = $2
                    \b                  // word break
                                        // attacklab: hack around khtml/pcre bug...
                    [^\r]*?\n           // any number of lines, minimally matching
                    </\2>               // the matching end tag
                    [ \t]*              // trailing spaces/tabs
                    (?=\n+)             // followed by a newline
                )                       // attacklab: there are sentinel newlines at end of document
            /gm,function(){...}};
            */
            text = text.replace(/^(<(p|div|h[1-6]|blockquote|pre|table|dl|ol|ul|script|noscript|form|fieldset|iframe|math|ins|del)\b[^\r]*?\n<\/\2>[ \t]*(?=\n+))/gm, hashElement);

            //
            // Now match more liberally, simply from `\n<tag>` to `</tag>\n`
            //

            /*
            text = text.replace(/
                (                       // save in $1
                    ^                   // start of line  (with /m)
                    <($block_tags_b)    // start tag = $2
                    \b                  // word break
                                        // attacklab: hack around khtml/pcre bug...
                    [^\r]*?             // any number of lines, minimally matching
                    .*</\2>             // the matching end tag
                    [ \t]*              // trailing spaces/tabs
                    (?=\n+)             // followed by a newline
                )                       // attacklab: there are sentinel newlines at end of document
            /gm,function(){...}};
            */
            text = text.replace(/^(<(p|div|h[1-6]|blockquote|pre|table|dl|ol|ul|script|noscript|form|fieldset|iframe|math)\b[^\r]*?.*<\/\2>[ \t]*(?=\n+)\n)/gm, hashElement);

            // Special case just for <hr />. It was easier to make a special case than
            // to make the other regex more complicated.

            /*
            text = text.replace(/
                \n                  // Starting after a blank line
                [ ]{0,3}
                (                   // save in $1
                    (<(hr)          // start tag = $2
                        \b          // word break
                        ([^<>])*?
                    \/?>)           // the matching end tag
                    [ \t]*
                    (?=\n{2,})      // followed by a blank line
                )
            /g,hashElement);
            */
            text = text.replace(/\n[ ]{0,3}((<(hr)\b([^<>])*?\/?>)[ \t]*(?=\n{2,}))/g, hashElement);

            // Special case for standalone HTML comments:

            /*
            text = text.replace(/
                \n\n                                            // Starting after a blank line
                [ ]{0,3}                                        // attacklab: g_tab_width - 1
                (                                               // save in $1
                    <!
                    (--(?:|(?:[^>-]|-[^>])(?:[^-]|-[^-])*)--)   // see http://www.w3.org/TR/html-markup/syntax.html#comments and http://meta.stackoverflow.com/q/95256
                    >
                    [ \t]*
                    (?=\n{2,})                                  // followed by a blank line
                )
            /g,hashElement);
            */
            text = text.replace(/\n\n[ ]{0,3}(<!(--(?:|(?:[^>-]|-[^>])(?:[^-]|-[^-])*)--)>[ \t]*(?=\n{2,}))/g, hashElement);

            // PHP and ASP-style processor instructions (<?...?> and <%...%>)

            /*
            text = text.replace(/
                (?:
                    \n\n            // Starting after a blank line
                )
                (                   // save in $1
                    [ ]{0,3}        // attacklab: g_tab_width - 1
                    (?:
                        <([?%])     // $2
                        [^\r]*?
                        \2>
                    )
                    [ \t]*
                    (?=\n{2,})      // followed by a blank line
                )
            /g,hashElement);
            */
            text = text.replace(/(?:\n\n)([ ]{0,3}(?:<([?%])[^\r]*?\2>)[ \t]*(?=\n{2,}))/g, hashElement);

            return text;
        }

        function hashElement(wholeMatch, m1) {
            var blockText = m1;

            // Undo double lines
            blockText = blockText.replace(/^\n+/, "");

            // strip trailing blank lines
            blockText = blockText.replace(/\n+$/g, "");

            // Replace the element text with a marker ("~KxK" where x is its key)
            blockText = "\n\n~K" + (g_html_blocks.push(blockText) - 1) + "K\n\n";

            return blockText;
        }

        function _RunBlockGamut(text, doNotUnhash) {
            //
            // These are all the transformations that form block-level
            // tags like paragraphs, headers, and list items.
            //
            text = _DoHeaders(text);

            // Do Horizontal Rules:
            var replacement = "<hr />\n";
            text = text.replace(/^[ ]{0,2}([ ]?\*[ ]?){3,}[ \t]*$/gm, replacement);
            text = text.replace(/^[ ]{0,2}([ ]?-[ ]?){3,}[ \t]*$/gm, replacement);
            text = text.replace(/^[ ]{0,2}([ ]?_[ ]?){3,}[ \t]*$/gm, replacement);

            text = _DoLists(text);
            text = _DoCodeBlocks(text);
            text = _DoBlockQuotes(text);

            // We already ran _HashHTMLBlocks() before, in Markdown(), but that
            // was to escape raw HTML in the original Markdown source. This time,
            // we're escaping the markup we've just created, so that we don't wrap
            // <p> tags around block-level tags.
            text = _HashHTMLBlocks(text);
            text = _FormParagraphs(text, doNotUnhash);

            return text;
        }

        function _RunSpanGamut(text) {
            //
            // These are all the transformations that occur *within* block-level
            // tags like paragraphs, headers, and list items.
            //

            text = _DoCodeSpans(text);
            text = _EscapeSpecialCharsWithinTagAttributes(text);
            text = _EncodeBackslashEscapes(text);

            // Process anchor and image tags. Images must come first,
            // because ![foo][f] looks like an anchor.
            text = _DoImages(text);
            text = _DoAnchors(text);

            // Make links out of things like `<http://example.com/>`
            // Must come after _DoAnchors(), because you can use < and >
            // delimiters in inline links like [this](<url>).
            text = _DoAutoLinks(text);

            text = text.replace(/~P/g, "://"); // put in place to prevent autolinking; reset now

            text = _EncodeAmpsAndAngles(text);
            text = _DoItalicsAndBold(text);

            // Do hard breaks:
            text = text.replace(/  +\n/g, " <br>\n");

            return text;
        }

        function _EscapeSpecialCharsWithinTagAttributes(text) {
            //
            // Within tags -- meaning between < and > -- encode [\ ` * _] so they
            // don't conflict with their use in Markdown for code, italics and strong.
            //

            // Build a regex to find HTML tags and comments.  See Friedl's
            // "Mastering Regular Expressions", 2nd Ed., pp. 200-201.

            // SE: changed the comment part of the regex

            var regex = /(<[a-z\/!$]("[^"]*"|'[^']*'|[^'">])*>|<!(--(?:|(?:[^>-]|-[^>])(?:[^-]|-[^-])*)--)>)/gi;

            text = text.replace(regex, function (wholeMatch) {
                var tag = wholeMatch.replace(/(.)<\/?code>(?=.)/g, "$1`");
                tag = escapeCharacters(tag, wholeMatch.charAt(1) == "!" ? "\\`*_/" : "\\`*_"); // also escape slashes in comments to prevent autolinking there -- http://meta.stackoverflow.com/questions/95987
                return tag;
            });

            return text;
        }

        function _DoAnchors(text) {
            //
            // Turn Markdown link shortcuts into XHTML <a> tags.
            //
            //
            // First, handle reference-style links: [link text] [id]
            //

            /*
            text = text.replace(/
                (                           // wrap whole match in $1
                    \[
                    (
                        (?:
                            \[[^\]]*\]      // allow brackets nested one level
                            |
                            [^\[]           // or anything else
                        )*
                    )
                    \]

                    [ ]?                    // one optional space
                    (?:\n[ ]*)?             // one optional newline followed by spaces

                    \[
                    (.*?)                   // id = $3
                    \]
                )
                ()()()()                    // pad remaining backreferences
            /g, writeAnchorTag);
            */
            text = text.replace(/(\[((?:\[[^\]]*\]|[^\[\]])*)\][ ]?(?:\n[ ]*)?\[(.*?)\])()()()()/g, writeAnchorTag);

            //
            // Next, inline-style links: [link text](url "optional title")
            //

            /*
            text = text.replace(/
                (                           // wrap whole match in $1
                    \[
                    (
                        (?:
                            \[[^\]]*\]      // allow brackets nested one level
                            |
                            [^\[\]]         // or anything else
                        )*
                    )
                    \]
                    \(                      // literal paren
                    [ \t]*
                    ()                      // no id, so leave $3 empty
                    <?(                     // href = $4
                        (?:
                            \([^)]*\)       // allow one level of (correctly nested) parens (think MSDN)
                            |
                            [^()]
                        )*?
                    )>?
                    [ \t]*
                    (                       // $5
                        (['"])              // quote char = $6
                        (.*?)               // Title = $7
                        \6                  // matching quote
                        [ \t]*              // ignore any spaces/tabs between closing quote and )
                    )?                      // title is optional
                    \)
                )
            /g, writeAnchorTag);
            */

            text = text.replace(/(\[((?:\[[^\]]*\]|[^\[\]])*)\]\([ \t]*()<?((?:\([^)]*\)|[^()])*?)>?[ \t]*((['"])(.*?)\6[ \t]*)?\))/g, writeAnchorTag);

            //
            // Last, handle reference-style shortcuts: [link text]
            // These must come last in case you've also got [link test][1]
            // or [link test](/foo)
            //

            /*
            text = text.replace(/
                (                   // wrap whole match in $1
                    \[
                    ([^\[\]]+)      // link text = $2; can't contain '[' or ']'
                    \]
                )
                ()()()()()          // pad rest of backreferences
            /g, writeAnchorTag);
            */
            text = text.replace(/(\[([^\[\]]+)\])()()()()()/g, writeAnchorTag);

            return text;
        }

        function writeAnchorTag(wholeMatch, m1, m2, m3, m4, m5, m6, m7) {
            if (m7 == undefined) m7 = "";
            var whole_match = m1;
            var link_text = m2.replace(/:\/\//g, "~P"); // to prevent auto-linking withing the link. will be converted back after the auto-linker runs
            var link_id = m3.toLowerCase();
            var url = m4;
            var title = m7;

            if (url == "") {
                if (link_id == "") {
                    // lower-case and turn embedded newlines into spaces
                    link_id = link_text.toLowerCase().replace(/ ?\n/g, " ");
                }
                url = "#" + link_id;

                if (g_urls.get(link_id) != undefined) {
                    url = g_urls.get(link_id);
                    if (g_titles.get(link_id) != undefined) {
                        title = g_titles.get(link_id);
                    }
                }
                else {
                    if (whole_match.search(/\(\s*\)$/m) > -1) {
                        // Special case for explicit empty url
                        url = "";
                    } else {
                        return whole_match;
                    }
                }
            }
            url = encodeProblemUrlChars(url);
            url = escapeCharacters(url, "*_");
            var result = "<a href=\"" + url + "\"";

            if (title != "") {
                title = attributeEncode(title);
                title = escapeCharacters(title, "*_");
                result += " title=\"" + title + "\"";
            }

            result += ">" + link_text + "</a>";

            return result;
        }

        function _DoImages(text) {
            //
            // Turn Markdown image shortcuts into <img> tags.
            //

            //
            // First, handle reference-style labeled images: ![alt text][id]
            //

            /*
            text = text.replace(/
                (                   // wrap whole match in $1
                    !\[
                    (.*?)           // alt text = $2
                    \]

                    [ ]?            // one optional space
                    (?:\n[ ]*)?     // one optional newline followed by spaces

                    \[
                    (.*?)           // id = $3
                    \]
                )
                ()()()()            // pad rest of backreferences
            /g, writeImageTag);
            */
            text = text.replace(/(!\[(.*?)\][ ]?(?:\n[ ]*)?\[(.*?)\])()()()()/g, writeImageTag);

            //
            // Next, handle inline images:  ![alt text](url "optional title")
            // Don't forget: encode * and _

            /*
            text = text.replace(/
                (                   // wrap whole match in $1
                    !\[
                    (.*?)           // alt text = $2
                    \]
                    \s?             // One optional whitespace character
                    \(              // literal paren
                    [ \t]*
                    ()              // no id, so leave $3 empty
                    <?(\S+?)>?      // src url = $4
                    [ \t]*
                    (               // $5
                        (['"])      // quote char = $6
                        (.*?)       // title = $7
                        \6          // matching quote
                        [ \t]*
                    )?              // title is optional
                    \)
                )
            /g, writeImageTag);
            */
            text = text.replace(/(!\[(.*?)\]\s?\([ \t]*()<?(\S+?)>?[ \t]*((['"])(.*?)\6[ \t]*)?\))/g, writeImageTag);

            return text;
        }

        function attributeEncode(text) {
            // unconditionally replace angle brackets here -- what ends up in an attribute (e.g. alt or title)
            // never makes sense to have verbatim HTML in it (and the sanitizer would totally break it)
            return text.replace(/>/g, "&gt;").replace(/</g, "&lt;").replace(/"/g, "&quot;");
        }

        function writeImageTag(wholeMatch, m1, m2, m3, m4, m5, m6, m7) {
            var whole_match = m1;
            var alt_text = m2;
            var link_id = m3.toLowerCase();
            var url = m4;
            var title = m7;

            if (!title) title = "";

            if (url == "") {
                if (link_id == "") {
                    // lower-case and turn embedded newlines into spaces
                    link_id = alt_text.toLowerCase().replace(/ ?\n/g, " ");
                }
                url = "#" + link_id;

                if (g_urls.get(link_id) != undefined) {
                    url = g_urls.get(link_id);
                    if (g_titles.get(link_id) != undefined) {
                        title = g_titles.get(link_id);
                    }
                }
                else {
                    return whole_match;
                }
            }

            alt_text = escapeCharacters(attributeEncode(alt_text), "*_[]()");
            url = escapeCharacters(url, "*_");
            var result = "<img src=\"" + url + "\" alt=\"" + alt_text + "\"";

            // attacklab: Markdown.pl adds empty title attributes to images.
            // Replicate this bug.

            //if (title != "") {
            title = attributeEncode(title);
            title = escapeCharacters(title, "*_");
            result += " title=\"" + title + "\"";
            //}

            result += " />";

            return result;
        }

        function _DoHeaders(text) {

            // Setext-style headers:
            //  Header 1
            //  ========
            //
            //  Header 2
            //  --------
            //
            text = text.replace(/^(.+)[ \t]*\n=+[ \t]*\n+/gm,
                function (wholeMatch, m1) { return "<h1>" + _RunSpanGamut(m1) + "</h1>\n\n"; }
            );

            text = text.replace(/^(.+)[ \t]*\n-+[ \t]*\n+/gm,
                function (matchFound, m1) { return "<h2>" + _RunSpanGamut(m1) + "</h2>\n\n"; }
            );

            // atx-style headers:
            //  # Header 1
            //  ## Header 2
            //  ## Header 2 with closing hashes ##
            //  ...
            //  ###### Header 6
            //

            /*
            text = text.replace(/
                ^(\#{1,6})      // $1 = string of #'s
                [ \t]*
                (.+?)           // $2 = Header text
                [ \t]*
                \#*             // optional closing #'s (not counted)
                \n+
            /gm, function() {...});
            */

            text = text.replace(/^(\#{1,6})[ \t]*(.+?)[ \t]*\#*\n+/gm,
                function (wholeMatch, m1, m2) {
                    var h_level = m1.length;
                    return "<h" + h_level + ">" + _RunSpanGamut(m2) + "</h" + h_level + ">\n\n";
                }
            );

            return text;
        }

        function _DoLists(text) {
            //
            // Form HTML ordered (numbered) and unordered (bulleted) lists.
            //

            // attacklab: add sentinel to hack around khtml/safari bug:
            // http://bugs.webkit.org/show_bug.cgi?id=11231
            text += "~0";

            // Re-usable pattern to match any entirel ul or ol list:

            /*
            var whole_list = /
                (                                   // $1 = whole list
                    (                               // $2
                        [ ]{0,3}                    // attacklab: g_tab_width - 1
                        ([*+-]|\d+[.])              // $3 = first list item marker
                        [ \t]+
                    )
                    [^\r]+?
                    (                               // $4
                        ~0                          // sentinel for workaround; should be $
                        |
                        \n{2,}
                        (?=\S)
                        (?!                         // Negative lookahead for another list item marker
                            [ \t]*
                            (?:[*+-]|\d+[.])[ \t]+
                        )
                    )
                )
            /g
            */
            var whole_list = /^(([ ]{0,3}([*+-]|\d+[.])[ \t]+)[^\r]+?(~0|\n{2,}(?=\S)(?![ \t]*(?:[*+-]|\d+[.])[ \t]+)))/gm;

            if (g_list_level) {
                text = text.replace(whole_list, function (wholeMatch, m1, m2) {
                    var list = m1;
                    var list_type = (m2.search(/[*+-]/g) > -1) ? "ul" : "ol";

                    var result = _ProcessListItems(list, list_type);

                    // Trim any trailing whitespace, to put the closing `</$list_type>`
                    // up on the preceding line, to get it past the current stupid
                    // HTML block parser. This is a hack to work around the terrible
                    // hack that is the HTML block parser.
                    result = result.replace(/\s+$/, "");
                    result = "<" + list_type + ">" + result + "</" + list_type + ">\n";
                    return result;
                });
            } else {
                whole_list = /(\n\n|^\n?)(([ ]{0,3}([*+-]|\d+[.])[ \t]+)[^\r]+?(~0|\n{2,}(?=\S)(?![ \t]*(?:[*+-]|\d+[.])[ \t]+)))/g;
                text = text.replace(whole_list, function (wholeMatch, m1, m2, m3) {
                    var runup = m1;
                    var list = m2;

                    var list_type = (m3.search(/[*+-]/g) > -1) ? "ul" : "ol";
                    var result = _ProcessListItems(list, list_type);
                    result = runup + "<" + list_type + ">\n" + result + "</" + list_type + ">\n";
                    return result;
                });
            }

            // attacklab: strip sentinel
            text = text.replace(/~0/, "");

            return text;
        }

        var _listItemMarkers = { ol: "\\d+[.]", ul: "[*+-]" };

        function _ProcessListItems(list_str, list_type) {
            //
            //  Process the contents of a single ordered or unordered list, splitting it
            //  into individual list items.
            //
            //  list_type is either "ul" or "ol".

            // The $g_list_level global keeps track of when we're inside a list.
            // Each time we enter a list, we increment it; when we leave a list,
            // we decrement. If it's zero, we're not in a list anymore.
            //
            // We do this because when we're not inside a list, we want to treat
            // something like this:
            //
            //    I recommend upgrading to version
            //    8. Oops, now this line is treated
            //    as a sub-list.
            //
            // As a single paragraph, despite the fact that the second line starts
            // with a digit-period-space sequence.
            //
            // Whereas when we're inside a list (or sub-list), that line will be
            // treated as the start of a sub-list. What a kludge, huh? This is
            // an aspect of Markdown's syntax that's hard to parse perfectly
            // without resorting to mind-reading. Perhaps the solution is to
            // change the syntax rules such that sub-lists must start with a
            // starting cardinal number; e.g. "1." or "a.".

            g_list_level++;

            // trim trailing blank lines:
            list_str = list_str.replace(/\n{2,}$/, "\n");

            // attacklab: add sentinel to emulate \z
            list_str += "~0";

            // In the original attacklab showdown, list_type was not given to this function, and anything
            // that matched /[*+-]|\d+[.]/ would just create the next <li>, causing this mismatch:
            //
            //  Markdown          rendered by WMD        rendered by MarkdownSharp
            //  ------------------------------------------------------------------
            //  1. first          1. first               1. first
            //  2. second         2. second              2. second
            //  - third           3. third                   * third
            //
            // We changed this to behave identical to MarkdownSharp. This is the constructed RegEx,
            // with {MARKER} being one of \d+[.] or [*+-], depending on list_type:

            /*
            list_str = list_str.replace(/
                (^[ \t]*)                       // leading whitespace = $1
                ({MARKER}) [ \t]+               // list marker = $2
                ([^\r]+?                        // list item text   = $3
                    (\n+)
                )
                (?=
                    (~0 | \2 ({MARKER}) [ \t]+)
                )
            /gm, function(){...});
            */

            var marker = _listItemMarkers[list_type];
            var re = new RegExp("(^[ \\t]*)(" + marker + ")[ \\t]+([^\\r]+?(\\n+))(?=(~0|\\1(" + marker + ")[ \\t]+))", "gm");
            var last_item_had_a_double_newline = false;
            list_str = list_str.replace(re,
                function (wholeMatch, m1, m2, m3) {
                    var item = m3;
                    var leading_space = m1;
                    var ends_with_double_newline = /\n\n$/.test(item);
                    var contains_double_newline = ends_with_double_newline || item.search(/\n{2,}/) > -1;

                    if (contains_double_newline || last_item_had_a_double_newline) {
                        item = _RunBlockGamut(_Outdent(item), /* doNotUnhash = */true);
                    }
                    else {
                        // Recursion for sub-lists:
                        item = _DoLists(_Outdent(item));
                        item = item.replace(/\n$/, ""); // chomp(item)
                        item = _RunSpanGamut(item);
                    }
                    last_item_had_a_double_newline = ends_with_double_newline;
                    return "<li>" + item + "</li>\n";
                }
            );

            // attacklab: strip sentinel
            list_str = list_str.replace(/~0/g, "");

            g_list_level--;
            return list_str;
        }

        function _DoCodeBlocks(text) {
            //
            //  Process Markdown `<pre><code>` blocks.
            //

            /*
            text = text.replace(/
                (?:\n\n|^)
                (                               // $1 = the code block -- one or more lines, starting with a space/tab
                    (?:
                        (?:[ ]{4}|\t)           // Lines must start with a tab or a tab-width of spaces - attacklab: g_tab_width
                        .*\n+
                    )+
                )
                (\n*[ ]{0,3}[^ \t\n]|(?=~0))    // attacklab: g_tab_width
            /g ,function(){...});
            */

            // attacklab: sentinel workarounds for lack of \A and \Z, safari\khtml bug
            text += "~0";

            text = text.replace(/(?:\n\n|^)((?:(?:[ ]{4}|\t).*\n+)+)(\n*[ ]{0,3}[^ \t\n]|(?=~0))/g,
                function (wholeMatch, m1, m2) {
                    var codeblock = m1;
                    var nextChar = m2;

                    codeblock = _EncodeCode(_Outdent(codeblock));
                    codeblock = _Detab(codeblock);
                    codeblock = codeblock.replace(/^\n+/g, ""); // trim leading newlines
                    codeblock = codeblock.replace(/\n+$/g, ""); // trim trailing whitespace

                    codeblock = "<pre><code>" + codeblock + "\n</code></pre>";

                    return "\n\n" + codeblock + "\n\n" + nextChar;
                }
            );

            // attacklab: strip sentinel
            text = text.replace(/~0/, "");

            return text;
        }

        function hashBlock(text) {
            text = text.replace(/(^\n+|\n+$)/g, "");
            return "\n\n~K" + (g_html_blocks.push(text) - 1) + "K\n\n";
        }

        function _DoCodeSpans(text) {
            //
            // * Backtick quotes are used for <code></code> spans.
            //
            // * You can use multiple backticks as the delimiters if you want to
            //   include literal backticks in the code span. So, this input:
            //
            //      Just type ``foo `bar` baz`` at the prompt.
            //
            //   Will translate to:
            //
            //      <p>Just type <code>foo `bar` baz</code> at the prompt.</p>
            //
            //   There's no arbitrary limit to the number of backticks you
            //   can use as delimters. If you need three consecutive backticks
            //   in your code, use four for delimiters, etc.
            //
            // * You can use spaces to get literal backticks at the edges:
            //
            //      ... type `` `bar` `` ...
            //
            //   Turns to:
            //
            //      ... type <code>`bar`</code> ...
            //

            /*
            text = text.replace(/
                (^|[^\\])       // Character before opening ` can't be a backslash
                (`+)            // $2 = Opening run of `
                (               // $3 = The code block
                    [^\r]*?
                    [^`]        // attacklab: work around lack of lookbehind
                )
                \2              // Matching closer
                (?!`)
            /gm, function(){...});
            */

            text = text.replace(/(^|[^\\])(`+)([^\r]*?[^`])\2(?!`)/gm,
                function (wholeMatch, m1, m2, m3, m4) {
                    var c = m3;
                    c = c.replace(/^([ \t]*)/g, ""); // leading whitespace
                    c = c.replace(/[ \t]*$/g, ""); // trailing whitespace
                    c = _EncodeCode(c);
                    c = c.replace(/:\/\//g, "~P"); // to prevent auto-linking. Not necessary in code *blocks*, but in code spans. Will be converted back after the auto-linker runs.
                    return m1 + "<code>" + c + "</code>";
                }
            );

            return text;
        }

        function _EncodeCode(text) {
            //
            // Encode/escape certain characters inside Markdown code runs.
            // The point is that in code, these characters are literals,
            // and lose their special Markdown meanings.
            //
            // Encode all ampersands; HTML entities are not
            // entities within a Markdown code span.
            text = text.replace(/&/g, "&amp;");

            // Do the angle bracket song and dance:
            text = text.replace(/</g, "&lt;");
            text = text.replace(/>/g, "&gt;");

            // Now, escape characters that are magic in Markdown:
            text = escapeCharacters(text, "\*_{}[]\\", false);

            // jj the line above breaks this:
            //---

            //* Item

            //   1. Subitem

            //            special char: *
            //---

            return text;
        }

        function _DoItalicsAndBold(text) {

            // <strong> must go first:
            text = text.replace(/([\W_]|^)(\*\*|__)(?=\S)([^\r]*?\S[\*_]*)\2([\W_]|$)/g,
            "$1<strong>$3</strong>$4");

            text = text.replace(/([\W_]|^)(\*|_)(?=\S)([^\r\*_]*?\S)\2([\W_]|$)/g,
            "$1<em>$3</em>$4");

            return text;
        }

        function _DoBlockQuotes(text) {

            /*
            text = text.replace(/
                (                           // Wrap whole match in $1
                    (
                        ^[ \t]*>[ \t]?      // '>' at the start of a line
                        .+\n                // rest of the first line
                        (.+\n)*             // subsequent consecutive lines
                        \n*                 // blanks
                    )+
                )
            /gm, function(){...});
            */

            text = text.replace(/((^[ \t]*>[ \t]?.+\n(.+\n)*\n*)+)/gm,
                function (wholeMatch, m1) {
                    var bq = m1;

                    // attacklab: hack around Konqueror 3.5.4 bug:
                    // "----------bug".replace(/^-/g,"") == "bug"

                    bq = bq.replace(/^[ \t]*>[ \t]?/gm, "~0"); // trim one level of quoting

                    // attacklab: clean up hack
                    bq = bq.replace(/~0/g, "");

                    bq = bq.replace(/^[ \t]+$/gm, "");     // trim whitespace-only lines
                    bq = _RunBlockGamut(bq);             // recurse

                    bq = bq.replace(/(^|\n)/g, "$1  ");
                    // These leading spaces screw with <pre> content, so we need to fix that:
                    bq = bq.replace(
                            /(\s*<pre>[^\r]+?<\/pre>)/gm,
                        function (wholeMatch, m1) {
                            var pre = m1;
                            // attacklab: hack around Konqueror 3.5.4 bug:
                            pre = pre.replace(/^  /mg, "~0");
                            pre = pre.replace(/~0/g, "");
                            return pre;
                        });

                    return hashBlock("<blockquote>\n" + bq + "\n</blockquote>");
                }
            );
            return text;
        }

        function _FormParagraphs(text, doNotUnhash) {
            //
            //  Params:
            //    $text - string to process with html <p> tags
            //

            // Strip leading and trailing lines:
            text = text.replace(/^\n+/g, "");
            text = text.replace(/\n+$/g, "");

            var grafs = text.split(/\n{2,}/g);
            var grafsOut = [];

            var markerRe = /~K(\d+)K/;

            //
            // Wrap <p> tags.
            //
            var end = grafs.length;
            for (var i = 0; i < end; i++) {
                var str = grafs[i];

                // if this is an HTML marker, copy it
                if (markerRe.test(str)) {
                    grafsOut.push(str);
                }
                else if (/\S/.test(str)) {
                    str = _RunSpanGamut(str);
                    str = str.replace(/^([ \t]*)/g, "<p>");
                    str += "</p>"
                    grafsOut.push(str);
                }

            }
            //
            // Unhashify HTML blocks
            //
            if (!doNotUnhash) {
                end = grafsOut.length;
                for (var i = 0; i < end; i++) {
                    var foundAny = true;
                    while (foundAny) { // we may need several runs, since the data may be nested
                        foundAny = false;
                        grafsOut[i] = grafsOut[i].replace(/~K(\d+)K/g, function (wholeMatch, id) {
                            foundAny = true;
                            return g_html_blocks[id];
                        });
                    }
                }
            }
            return grafsOut.join("\n\n");
        }

        function _EncodeAmpsAndAngles(text) {
            // Smart processing for ampersands and angle brackets that need to be encoded.

            // Ampersand-encoding based entirely on Nat Irons's Amputator MT plugin:
            //   http://bumppo.net/projects/amputator/
            text = text.replace(/&(?!#?[xX]?(?:[0-9a-fA-F]+|\w+);)/g, "&amp;");

            // Encode naked <'s
            text = text.replace(/<(?![a-z\/?\$!])/gi, "&lt;");

            return text;
        }

        function _EncodeBackslashEscapes(text) {
            //
            //   Parameter:  String.
            //   Returns:    The string, with after processing the following backslash
            //               escape sequences.
            //

            // attacklab: The polite way to do this is with the new
            // escapeCharacters() function:
            //
            //     text = escapeCharacters(text,"\\",true);
            //     text = escapeCharacters(text,"`*_{}[]()>#+-.!",true);
            //
            // ...but we're sidestepping its use of the (slow) RegExp constructor
            // as an optimization for Firefox.  This function gets called a LOT.

            text = text.replace(/\\(\\)/g, escapeCharacters_callback);
            text = text.replace(/\\([`*_{}\[\]()>#+-.!])/g, escapeCharacters_callback);
            return text;
        }

        function _DoAutoLinks(text) {

            // note that at this point, all other URL in the text are already hyperlinked as <a href=""></a>
            // *except* for the <http://www.foo.com> case

            // automatically add < and > around unadorned raw hyperlinks
            // must be preceded by space/BOF and followed by non-word/EOF character
            text = text.replace(/(^|\s)(https?|ftp)(:\/\/[-A-Z0-9+&@#\/%?=~_|\[\]\(\)!:,\.;]*[-A-Z0-9+&@#\/%=~_|\[\]])($|\W)/gi, "$1<$2$3>$4");

            //  autolink anything like <http://example.com>

            var replacer = function (wholematch, m1) { return "<a href=\"" + m1 + "\">" + pluginHooks.plainLinkText(m1) + "</a>"; }
            text = text.replace(/<((https?|ftp):[^'">\s]+)>/gi, replacer);

            // Email addresses: <address@domain.foo>
            /*
            text = text.replace(/
                <
                (?:mailto:)?
                (
                    [-.\w]+
                    \@
                    [-a-z0-9]+(\.[-a-z0-9]+)*\.[a-z]+
                )
                >
            /gi, _DoAutoLinks_callback());
            */

            /* disabling email autolinking, since we don't do that on the server, either
            text = text.replace(/<(?:mailto:)?([-.\w]+\@[-a-z0-9]+(\.[-a-z0-9]+)*\.[a-z]+)>/gi,
                function(wholeMatch,m1) {
                    return _EncodeEmailAddress( _UnescapeSpecialChars(m1) );
                }
            );
            */
            return text;
        }

        function _UnescapeSpecialChars(text) {
            //
            // Swap back in all the special characters we've hidden.
            //
            text = text.replace(/~E(\d+)E/g,
                function (wholeMatch, m1) {
                    var charCodeToReplace = parseInt(m1);
                    return String.fromCharCode(charCodeToReplace);
                }
            );
            return text;
        }

        function _Outdent(text) {
            //
            // Remove one level of line-leading tabs or spaces
            //

            // attacklab: hack around Konqueror 3.5.4 bug:
            // "----------bug".replace(/^-/g,"") == "bug"

            text = text.replace(/^(\t|[ ]{1,4})/gm, "~0"); // attacklab: g_tab_width

            // attacklab: clean up hack
            text = text.replace(/~0/g, "")

            return text;
        }

        function _Detab(text) {
            if (!/\t/.test(text))
                return text;

            var spaces = ["    ", "   ", "  ", " "],
            skew = 0,
            v;

            return text.replace(/[\n\t]/g, function (match, offset) {
                if (match === "\n") {
                    skew = offset + 1;
                    return match;
                }
                v = (offset - skew) % 4;
                skew = offset + 1;
                return spaces[v];
            });
        }

        //
        //  attacklab: Utility functions
        //

        var _problemUrlChars = /(?:["'*()[\]:]|~D)/g;

        // hex-encodes some unusual "problem" chars in URLs to avoid URL detection problems
        function encodeProblemUrlChars(url) {
            if (!url)
                return "";

            var len = url.length;

            return url.replace(_problemUrlChars, function (match, offset) {
                if (match == "~D") // escape for dollar
                    return "%24";
                if (match == ":") {
                    if (offset == len - 1 || /[0-9\/]/.test(url.charAt(offset + 1)))
                        return ":"
                }
                return "%" + match.charCodeAt(0).toString(16);
            });
        }


        function escapeCharacters(text, charsToEscape, afterBackslash) {
            // First we have to escape the escape characters so that
            // we can build a character class out of them
            var regexString = "([" + charsToEscape.replace(/([\[\]\\])/g, "\\$1") + "])";

            if (afterBackslash) {
                regexString = "\\\\" + regexString;
            }

            var regex = new RegExp(regexString, "g");
            text = text.replace(regex, escapeCharacters_callback);

            return text;
        }


        function escapeCharacters_callback(wholeMatch, m1) {
            var charCodeToEscape = m1.charCodeAt(0);
            return "~E" + charCodeToEscape + "E";
        }

    }; // end of the Markdown.Converter constructor

})();


// ======= END WRAP

    // no reason for multiple instances,
    // just call `makeHtml`
    return new Markdown.Converter();
});
;
/** @license
 * RequireJS plugin for loading Markdown files and converting them into HTML.
 * Author: Miller Medeiros
 * Version: 0.1.1 (2012/02/17)
 * Released under the MIT license
 */

// NOTE :: if you don't need to load markdown files in production outside of
// the build, precompile them into modules and set
// `pragmasOnSave.excludeMdown=true`

define(
    'mdown',[
        'text',
        'markdownConverter'
    ],
    function (
        text, markdownConverter
    ) {

        var buildMap = {};

        //API
        return {

            load : function(name, req, onLoad, config) {
                text.get(req.toUrl(name), function(data){
                    data = markdownConverter.makeHtml(data);
                    if (config.isBuild) {
                        buildMap[name] = data;
                        onLoad(data);
                    } else {
                        onLoad(data);
                    }
                });
            },

            //write method based on RequireJS official text plugin by James Burke
            //https://github.com/jrburke/requirejs/blob/master/text.js
            write : function(pluginName, moduleName, write){
                if(moduleName in buildMap){
                    var content = text.jsEscape(buildMap[moduleName]);
                    write.asModule(pluginName + "!" + moduleName,
                                   "define(function () { return '" +
                                       content +
                                   "';});\n");
                }
            }

        };
});


define('mdown!docs/List/Basic.md',[],function () { return '<p>The list component simply takes a Backbone compatible collection as a property, and\ntransforms the collection into an on-screen list.  Note that the list items will obey\nthe typical backbone collection events such as add change update and remove.</p>\n\n<p>Example JSX:</p>\n\n<p><code>\n&lt;List collection={collection} /&gt;\n</code></p>';});


define('text!docs/List/Basic.jsx',[],function () { return '/*global define */\ndefine(function (require) {\n  \'use strict\';\n  var React = require(\'react.backbone\');\n  var List = require(\'jsx!Oui/List/List\');\n  var Users = require(\'../ExampleData/Users\');\n\n  var users = new Users();\n  users.addRandom(2);\n\n  var Row = React.createBackboneClass({\n    render: function () {\n      return <li>{this.getModel().get(\'username\')}</li>;\n    }\n  });\n\n  var BasicListExample = React.createClass({\n    add: function () {\n      users.addRandom();\n    },\n    remove: function () {\n      users.removeRandom();\n    },\n    fetch: function () {\n      users.fakeFetch();\n    },\n    render: function () {\n      return (\n        <div>\n          <List collection={users} row={Row} />\n          <div>\n            <a onClick={this.add} className="docs-button">Add</a>\n            <a onClick={this.remove} className="docs-button">Remove</a>\n            <a onClick={this.fetch} className="docs-button">Simulate Fetch</a>\n          </div>\n        </div>\n      );\n    }\n  });\n  return BasicListExample;\n});\n';});


/*global define */
define('jsx!Oui/List/EmptyMessage',['require','react'],function (require) {
  
  var React = require('react');
  var EmptyMessage = React.createClass({displayName: 'EmptyMessage',
    getDefaultProps: function () {
      return { message: 'No items found' };
    },
    render: function () {
      return React.createElement("div", null, this.props.message);
    }
  });
  return EmptyMessage;
});


/*global define */
define('jsx!Oui/Icon/Icon',['require','react.backbone'],function (require) {

  
  var React = require('react.backbone');

  var Icon = React.createClass({displayName: 'Icon',
    getDefaultProps: function () {
      return { name: 'user' };
    },
    render: function () {
      var className = 'icomoon icomoon-' + this.props.name;
      delete this.props.name;
      return React.createElement("span", React.__spread({},  this.props, {className: className}));
    }
  });
  return Icon;
});


/*global define */
define('jsx!Oui/Loader/Loader',['require','react','jsx!../Icon/Icon'],function (require) {
  
  var React = require('react');
  var Icon = require('jsx!../Icon/Icon');
  var Loader = React.createClass({displayName: 'Loader',
    getDefaultProps: function () {
      return { on: false };
    },
    render: function () {
      var classList = React.addons.classSet({
        'off': !this.props.on,
        'on': this.props.on,
        'oui-loader': true
      });
      return (
        React.createElement("div", {className: classList}, 
          React.createElement("span", {className: "oui-button-icon u-circle text-center"}, 
            React.createElement("span", {className: "a-spin"}, React.createElement(Icon, {name: "refresh"}))
          )
        )
      );
    }
  });
  return Loader;
});

/*global define */

define('Oui/Error/ImproperUse',['require'],function (require) {
  
  function ImproperUse(message, url) {
    this.message = message;
    this.url = url;
  }
  ImproperUse.prototype.toString = function () {
    var err = 'Oui Error [ ImproperUse ] ' + this.message;
    if (this.url) {
       err += ' find out more at ' + this.url;
    }
    return err;
  }
  return ImproperUse;
});


/*global define */

define('jsx!Oui/List/List',['require','underscore','react.backbone','jsx!./EmptyMessage','jsx!../Loader/Loader','../Error/ImproperUse'],function (require) {
  

  var _ = require('underscore');
  var React = require('react.backbone');
  var EmptyMessage = require('jsx!./EmptyMessage');
  var DefaultLoader = require('jsx!../Loader/Loader');
  var ImproperUseError = require('../Error/ImproperUse');

  var Row = React.createBackboneClass({
    render: function () {
      return React.createElement("li", null, "Please customize this row component ", this.getModel().id);
    }
  });

  var List = React.createBackboneClass({
    getInitialState: function () {
      return { loading: false };
    },
    componentWillMount: function () {
      this.startLoadingBind = _.bind(this.startLoading, this);
      this.stopLoadingBind = _.bind(this.stopLoading, this);
      if (typeof this.props.collection === 'undefined') {
        throw new ImproperUseError('List requires a collection property.  Please provide a Backbone compatible collection.');
      }
    },
    bindLoading: function (onOrOff) {
      this.getCollection()[onOrOff]('request', this.startLoadingBind);
      this.getCollection()[onOrOff]('sync error', this.stopLoadingBind);
    },
    componentDidMount: function () {
      this.bindLoading('on');
    },
    componentWillUnmount: function () {
      this.bindLoading('off');
    },
    startLoading: function () {
      this.setState({ loading: true });
    },
    stopLoading: function () {
      this.setState({ loading: false });
    },
    getDefaultProps: function () {
      return { row: Row, empty: EmptyMessage, loader: DefaultLoader };
    },
    renderList: function () {
      var Row = this.props.row;
      return (
        React.createElement("ul", {className: "oui-list"}, 
          this.getCollection().map(function (m) {
            return React.createElement(Row, {key: m.id, model: m});
          })
        )
      );
    },
    render: function () {
      var EmptyElement = this.props.empty;
      var Loader = this.props.loader;
      var listContent = this.getCollection().length ? this.renderList() : React.createElement(EmptyElement, null);
      return (
        React.createElement("div", {className: "oui-list-container"}, 
          React.createElement(Loader, {on: this.state.loading}), 
          listContent
        )
      );
    }
  });

  return List;
});

//  Chance.js 0.7.1
//  http://chancejs.com
//  (c) 2013 Victor Quinn
//  Chance may be freely distributed or modified under the MIT license.

(function () {

    // Constants
    var MAX_INT = 9007199254740992;
    var MIN_INT = -MAX_INT;
    var NUMBERS = '0123456789';
    var CHARS_LOWER = 'abcdefghijklmnopqrstuvwxyz';
    var CHARS_UPPER = CHARS_LOWER.toUpperCase();
    var HEX_POOL  = NUMBERS + "abcdef";

    // Cached array helpers
    var slice = Array.prototype.slice;

    // Constructor
    function Chance (seed) {
        if (!(this instanceof Chance)) {
            return new Chance(seed);
        }

        // if user has provided a function, use that as the generator
        if (typeof seed === 'function') {
            this.random = seed;
            return this;
        }

        var seedling;
        
        if (arguments.length) {
            // set a starting value of zero so we can add to it
            this.seed = 0;
        }
        // otherwise, leave this.seed blank so that MT will recieve a blank

        for (var i = 0; i < arguments.length; i++) {
            seedling = 0;
            if (typeof arguments[i] === 'string') {
                for (var j = 0; j < arguments[i].length; j++) {
                    seedling += (arguments[i].length - j) * arguments[i].charCodeAt(j);
                }
            } else {
                seedling = arguments[i];
            }
            this.seed += (arguments.length - i) * seedling;
        }

        // If no generator function was provided, use our MT
        this.mt = this.mersenne_twister(this.seed);
        this.random = function () {
            return this.mt.random(this.seed);
        };

        return this;
    }

    Chance.prototype.VERSION = "0.7.1";

    // Random helper functions
    function initOptions(options, defaults) {
        options || (options = {});

        if (defaults) {
            for (var i in defaults) {
                if (typeof options[i] === 'undefined') {
                    options[i] = defaults[i];
                }
            }
        }

        return options;
    }

    function testRange(test, errorMessage) {
        if (test) {
            throw new RangeError(errorMessage);
        }
    }

    /**
     * Encode the input string with Base64.
     * @param input
     */
    var base64 = function(input) {
        throw new Error('No Base64 encoder available.');
    };

    // Select proper Base64 encoder.
    (function determineBase64Encoder() {
        if (typeof btoa === 'function') {
            base64 = btoa;
        } else if (typeof Buffer === 'function') {
            base64 = function(input) {
                return new Buffer(input).toString('base64');
            };
        }
    })();

    // -- Basics --

    Chance.prototype.bool = function (options) {

        // likelihood of success (true)
        options = initOptions(options, {likelihood : 50});

        testRange(
            options.likelihood < 0 || options.likelihood > 100,
            "Chance: Likelihood accepts values from 0 to 100."
        );

        return this.random() * 100 < options.likelihood;
    };

    Chance.prototype.character = function (options) {
        options = initOptions(options);

        var symbols = "!@#$%^&*()[]",
            letters, pool;

        testRange(
            options.alpha && options.symbols,
            "Chance: Cannot specify both alpha and symbols."
        );


        if (options.casing === 'lower') {
            letters = CHARS_LOWER;
        } else if (options.casing === 'upper') {
            letters = CHARS_UPPER;
        } else {
            letters = CHARS_LOWER + CHARS_UPPER;
        }

        if (options.pool) {
            pool = options.pool;
        } else if (options.alpha) {
            pool = letters;
        } else if (options.symbols) {
            pool = symbols;
        } else {
            pool = letters + NUMBERS + symbols;
        }

        return pool.charAt(this.natural({max: (pool.length - 1)}));
    };

    // Note, wanted to use "float" or "double" but those are both JS reserved words.

    // Note, fixed means N OR LESS digits after the decimal. This because
    // It could be 14.9000 but in JavaScript, when this is cast as a number,
    // the trailing zeroes are dropped. Left to the consumer if trailing zeroes are
    // needed
    Chance.prototype.floating = function (options) {
        var num;

        options = initOptions(options, {fixed : 4});
        var fixed = Math.pow(10, options.fixed);

        testRange(
            options.fixed && options.precision,
            "Chance: Cannot specify both fixed and precision."
        );

        var max = MAX_INT / fixed;
        var min = -max;

        testRange(
            options.min && options.fixed && options.min < min,
            "Chance: Min specified is out of range with fixed. Min should be, at least, " + min
        );
        testRange(
            options.max && options.fixed && options.max > max,
            "Chance: Max specified is out of range with fixed. Max should be, at most, " + max
        );

        options = initOptions(options, {min : min, max : max});

        // Todo - Make this work!
        // options.precision = (typeof options.precision !== "undefined") ? options.precision : false;

        num = this.integer({min: options.min * fixed, max: options.max * fixed});
        var num_fixed = (num / fixed).toFixed(options.fixed);

        return parseFloat(num_fixed);
    };

    // NOTE the max and min are INCLUDED in the range. So:
    //
    // chance.natural({min: 1, max: 3});
    //
    // would return either 1, 2, or 3.

    Chance.prototype.integer = function (options) {

        // 9007199254740992 (2^53) is the max integer number in JavaScript
        // See: http://vq.io/132sa2j
        options = initOptions(options, {min: MIN_INT, max: MAX_INT});

        testRange(options.min > options.max, "Chance: Min cannot be greater than Max.");

        return Math.floor(this.random() * (options.max - options.min + 1) + options.min);
    };

    Chance.prototype.natural = function (options) {
        options = initOptions(options, {min: 0, max: MAX_INT});
        return this.integer(options);
    };

    Chance.prototype.string = function (options) {
        options = initOptions(options);

        var length = options.length || this.natural({min: 5, max: 20}),
            pool = options.pool,
            text = this.n(this.character, length, {pool: pool});

        return text.join("");
    };

    // -- End Basics --

    // -- Helpers --

    Chance.prototype.capitalize = function (word) {
        return word.charAt(0).toUpperCase() + word.substr(1);
    };

    Chance.prototype.mixin = function (obj) {
        for (var func_name in obj) {
            Chance.prototype[func_name] = obj[func_name];
        }
        return this;
    };

    // Given a function that generates something random and a number of items to generate,
    // return an array of items where none repeat.
    Chance.prototype.unique = function(fn, num, options) {
        options = initOptions(options, {
            // Default comparator to check that val is not already in arr.
            // Should return `false` if item not in array, `true` otherwise
            comparator: function(arr, val) {
                return arr.indexOf(val) !== -1;
            }
        });

        var arr = [], count = 0, result, MAX_DUPLICATES = num * 50, params = slice.call(arguments, 2);

        while (arr.length < num) {
            result = fn.apply(this, params);
            if (!options.comparator(arr, result)) {
                arr.push(result);
                // reset count when unique found
                count = 0;
            }

            if (++count > MAX_DUPLICATES) {
                throw new RangeError("Chance: num is likely too large for sample set");
            }
        }
        return arr;
    };

    /**
     *  Gives an array of n random terms
     *  @param fn the function that generates something random
     *  @param n number of terms to generate
     *  @param options options for the function fn. 
     *  There can be more parameters after these. All additional parameters are provided to the given function
     */
    Chance.prototype.n = function(fn, n, options) {
        var i = n || 1, arr = [], params = slice.call(arguments, 2);
        // Providing a negative count should result in a noop.
        i = Math.max( 0, i );

        for (null; i--; null) {
            arr.push(fn.apply(this, params));
        }

        return arr;
    };

    // H/T to SO for this one: http://vq.io/OtUrZ5
    Chance.prototype.pad = function (number, width, pad) {
        // Default pad to 0 if none provided
        pad = pad || '0';
        // Convert number to a string
        number = number + '';
        return number.length >= width ? number : new Array(width - number.length + 1).join(pad) + number;
    };

    Chance.prototype.pick = function (arr, count) {
        if (arr.length === 0) {
            throw new RangeError("Chance: Cannot pick() from an empty array");
        }
        if (!count || count === 1) {
            return arr[this.natural({max: arr.length - 1})];
        } else {
            return this.shuffle(arr).slice(0, count);
        }
    };

    Chance.prototype.shuffle = function (arr) {
        var old_array = arr.slice(0),
            new_array = [],
            j = 0,
            length = Number(old_array.length);

        for (var i = 0; i < length; i++) {
            // Pick a random index from the array
            j = this.natural({max: old_array.length - 1});
            // Add it to the new array
            new_array[i] = old_array[j];
            // Remove that element from the original array
            old_array.splice(j, 1);
        }

        return new_array;
    };

    // Returns a single item from an array with relative weighting of odds
    Chance.prototype.weighted = function(arr, weights) {
        if (arr.length !== weights.length) {
            throw new RangeError("Chance: length of array and weights must match");
        }

        // If any of the weights are less than 1, we want to scale them up to whole
        //   numbers for the rest of this logic to work
        if (weights.some(function(weight) { return weight < 1; })) {
            var min = weights.reduce(function(min, weight) {
                return (weight < min) ? weight : min;
            }, weights[0]);

            var scaling_factor = 1 / min;

            weights = weights.map(function(weight) {
                return weight * scaling_factor;
            });
        }

        var sum = weights.reduce(function(total, weight) {
            return total + weight;
        }, 0);

        // get an index
        var selected = this.natural({ min: 1, max: sum });

        var total = 0;
        var chosen;
        // Using some() here so we can bail as soon as we get our match
        weights.some(function(weight, index) {
            if (selected <= total + weight) {
                chosen = arr[index];
                return true;
            }
            total += weight;
            return false;
        });

        return chosen;
    };

    // -- End Helpers --

    // -- Text --

    Chance.prototype.paragraph = function (options) {
        options = initOptions(options);

        var sentences = options.sentences || this.natural({min: 3, max: 7}),
            sentence_array = this.n(this.sentence, sentences);

        return sentence_array.join(' ');
    };

    // Could get smarter about this than generating random words and
    // chaining them together. Such as: http://vq.io/1a5ceOh
    Chance.prototype.sentence = function (options) {
        options = initOptions(options);

        var words = options.words || this.natural({min: 12, max: 18}),
            text, word_array = this.n(this.word, words);

        text = word_array.join(' ');

        // Capitalize first letter of sentence, add period at end
        text = this.capitalize(text) + '.';

        return text;
    };

    Chance.prototype.syllable = function (options) {
        options = initOptions(options);

        var length = options.length || this.natural({min: 2, max: 3}),
            consonants = 'bcdfghjklmnprstvwz', // consonants except hard to speak ones
            vowels = 'aeiou', // vowels
            all = consonants + vowels, // all
            text = '',
            chr;

        // I'm sure there's a more elegant way to do this, but this works
        // decently well.
        for (var i = 0; i < length; i++) {
            if (i === 0) {
                // First character can be anything
                chr = this.character({pool: all});
            } else if (consonants.indexOf(chr) === -1) {
                // Last character was a vowel, now we want a consonant
                chr = this.character({pool: consonants});
            } else {
                // Last character was a consonant, now we want a vowel
                chr = this.character({pool: vowels});
            }

            text += chr;
        }

        return text;
    };

    Chance.prototype.word = function (options) {
        options = initOptions(options);

        testRange(
            options.syllables && options.length,
            "Chance: Cannot specify both syllables AND length."
        );

        var syllables = options.syllables || this.natural({min: 1, max: 3}),
            text = '';

        if (options.length) {
            // Either bound word by length
            do {
                text += this.syllable();
            } while (text.length < options.length);
            text = text.substring(0, options.length);
        } else {
            // Or by number of syllables
            for (var i = 0; i < syllables; i++) {
                text += this.syllable();
            }
        }
        return text;
    };

    // -- End Text --

    // -- Person --

    Chance.prototype.age = function (options) {
        options = initOptions(options);
        var ageRange;

        switch (options.type) {
            case 'child':
                ageRange = {min: 1, max: 12};
                break;
            case 'teen':
                ageRange = {min: 13, max: 19};
                break;
            case 'adult':
                ageRange = {min: 18, max: 65};
                break;
            case 'senior':
                ageRange = {min: 65, max: 100};
                break;
            case 'all':
                ageRange = {min: 1, max: 100};
                break;
            default:
                ageRange = {min: 18, max: 65};
                break;
        }

        return this.natural(ageRange);
    };

    Chance.prototype.birthday = function (options) {
        options = initOptions(options, {
            year: (new Date().getFullYear() - this.age(options))
        });

        return this.date(options);
    };

    // CPF; ID to identify taxpayers in Brazil
    Chance.prototype.cpf = function () {
        var n = this.n(this.natural, 9, { max: 9 });
        var d1 = n[8]*2+n[7]*3+n[6]*4+n[5]*5+n[4]*6+n[3]*7+n[2]*8+n[1]*9+n[0]*10;
        d1 = 11 - (d1 % 11);
        if (d1>=10) {
            d1 = 0;
        }
        var d2 = d1*2+n[8]*3+n[7]*4+n[6]*5+n[5]*6+n[4]*7+n[3]*8+n[2]*9+n[1]*10+n[0]*11;
        d2 = 11 - (d2 % 11);
        if (d2>=10) {
            d2 = 0;
        }
        return ''+n[0]+n[1]+n[2]+'.'+n[3]+n[4]+n[5]+'.'+n[6]+n[7]+n[8]+'-'+d1+d2;
    };

    Chance.prototype.first = function (options) {
        options = initOptions(options, {gender: this.gender()});
        return this.pick(this.get("firstNames")[options.gender.toLowerCase()]);
    };

    Chance.prototype.gender = function () {
        return this.pick(['Male', 'Female']);
    };

    Chance.prototype.last = function () {
        return this.pick(this.get("lastNames"));
    };

    Chance.prototype.name = function (options) {
        options = initOptions(options);

        var first = this.first(options),
            last = this.last(),
            name;

        if (options.middle) {
            name = first + ' ' + this.first(options) + ' ' + last;
        } else if (options.middle_initial) {
            name = first + ' ' + this.character({alpha: true, casing: 'upper'}) + '. ' + last;
        } else {
            name = first + ' ' + last;
        }

        if (options.prefix) {
            name = this.prefix(options) + ' ' + name;
        }

        if (options.suffix) {
            name = name + ' ' + this.suffix(options);
        }

        return name;
    };

    // Return the list of available name prefixes based on supplied gender.
    Chance.prototype.name_prefixes = function (gender) {
        gender = gender || "all";
        gender = gender.toLowerCase();

        var prefixes = [
            { name: 'Doctor', abbreviation: 'Dr.' }
        ];

        if (gender === "male" || gender === "all") {
            prefixes.push({ name: 'Mister', abbreviation: 'Mr.' });
        }

        if (gender === "female" || gender === "all") {
            prefixes.push({ name: 'Miss', abbreviation: 'Miss' });
            prefixes.push({ name: 'Misses', abbreviation: 'Mrs.' });
        }

        return prefixes;
    };

    // Alias for name_prefix
    Chance.prototype.prefix = function (options) {
        return this.name_prefix(options);
    };

    Chance.prototype.name_prefix = function (options) {
        options = initOptions(options, { gender: "all" });
        return options.full ?
            this.pick(this.name_prefixes(options.gender)).name :
            this.pick(this.name_prefixes(options.gender)).abbreviation;
    };

    Chance.prototype.ssn = function (options) {
        options = initOptions(options, {ssnFour: false, dashes: true});
        var ssn_pool = "1234567890",
            ssn,
            dash = options.dashes ? '-' : '';

        if(!options.ssnFour) {
            ssn = this.string({pool: ssn_pool, length: 3}) + dash +
            this.string({pool: ssn_pool, length: 2}) + dash +
            this.string({pool: ssn_pool, length: 4});
        } else {
            ssn = this.string({pool: ssn_pool, length: 4});
        }
        return ssn;
    };

    // Return the list of available name suffixes
    Chance.prototype.name_suffixes = function () {
        var suffixes = [
            { name: 'Doctor of Osteopathic Medicine', abbreviation: 'D.O.' },
            { name: 'Doctor of Philosophy', abbreviation: 'Ph.D.' },
            { name: 'Esquire', abbreviation: 'Esq.' },
            { name: 'Junior', abbreviation: 'Jr.' },
            { name: 'Juris Doctor', abbreviation: 'J.D.' },
            { name: 'Master of Arts', abbreviation: 'M.A.' },
            { name: 'Master of Business Administration', abbreviation: 'M.B.A.' },
            { name: 'Master of Science', abbreviation: 'M.S.' },
            { name: 'Medical Doctor', abbreviation: 'M.D.' },
            { name: 'Senior', abbreviation: 'Sr.' },
            { name: 'The Third', abbreviation: 'III' },
            { name: 'The Fourth', abbreviation: 'IV' }
        ];
        return suffixes;
    };

    // Alias for name_suffix
    Chance.prototype.suffix = function (options) {
        return this.name_suffix(options);
    };

    Chance.prototype.name_suffix = function (options) {
        options = initOptions(options);
        return options.full ?
            this.pick(this.name_suffixes()).name :
            this.pick(this.name_suffixes()).abbreviation;
    };

    // -- End Person --

    // -- Mobile --
    // Android GCM Registration ID
    Chance.prototype.android_id = function (options) {
        return "APA91" + this.string({ pool: "0123456789abcefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_", length: 178 });
    };

    // Apple Push Token
    Chance.prototype.apple_token = function (options) {
        return this.string({ pool: "abcdef1234567890", length: 64 });
    };

    // Windows Phone 8 ANID2
    Chance.prototype.wp8_anid2 = function (options) {
        return base64( this.hash( { length : 32 } ) );
    };

    // Windows Phone 7 ANID
    Chance.prototype.wp7_anid = function (options) {
        return 'A=' + this.guid().replace(/-/g, '').toUpperCase() + '&E=' + this.hash({ length:3 }) + '&W=' + this.integer({ min:0, max:9 });
    };

    // BlackBerry Device PIN
    Chance.prototype.bb_pin = function (options) {
        return this.hash({ length: 8 });
    };

    // -- End Mobile --

    // -- Web --
    Chance.prototype.color = function (options) {
        function gray(value, delimiter) {
            return [value, value, value].join(delimiter || '');
        }

        options = initOptions(options, {format: this.pick(['hex', 'shorthex', 'rgb', '0x']), grayscale: false, casing: 'lower'});
        var isGrayscale = options.grayscale;
        var colorValue;

        if (options.format === 'hex') {
            colorValue = '#' + (isGrayscale ? gray(this.hash({length: 2})) : this.hash({length: 6}));

        } else if (options.format === 'shorthex') {
            colorValue = '#' + (isGrayscale ? gray(this.hash({length: 1})) : this.hash({length: 3}));

        } else if (options.format === 'rgb') {
            if (isGrayscale) {
                colorValue = 'rgb(' + gray(this.natural({max: 255}), ',') + ')';
            } else {
                colorValue = 'rgb(' + this.natural({max: 255}) + ',' + this.natural({max: 255}) + ',' + this.natural({max: 255}) + ')';
            }
        } else if (options.format === '0x') {
            colorValue = '0x' + (isGrayscale ? gray(this.hash({length: 2})) : this.hash({length: 6}));
        } else {
            throw new Error('Invalid format provided. Please provide one of "hex", "shorthex", "rgb" or "0x".');
        }

        if (options.casing === 'upper' ) {
            colorValue = colorValue.toUpperCase();
        }

        return colorValue;
    };

    Chance.prototype.domain = function (options) {
        options = initOptions(options);
        return this.word() + '.' + (options.tld || this.tld());
    };

    Chance.prototype.email = function (options) {
        options = initOptions(options);
        return this.word({length: options.length}) + '@' + (options.domain || this.domain());
    };

    Chance.prototype.fbid = function () {
        return parseInt('10000' + this.natural({max: 100000000000}), 10);
    };

    Chance.prototype.google_analytics = function () {
        var account = this.pad(this.natural({max: 999999}), 6);
        var property = this.pad(this.natural({max: 99}), 2);

        return 'UA-' + account + '-' + property;
    };

    Chance.prototype.hashtag = function () {
        return '#' + this.word();
    };

    Chance.prototype.ip = function () {
        // Todo: This could return some reserved IPs. See http://vq.io/137dgYy
        // this should probably be updated to account for that rare as it may be
        return this.natural({max: 255}) + '.' +
               this.natural({max: 255}) + '.' +
               this.natural({max: 255}) + '.' +
               this.natural({max: 255});
    };

    Chance.prototype.ipv6 = function () {
        var ip_addr = this.n(this.hash, 8, {length: 4});

        return ip_addr.join(":");
    };

    Chance.prototype.klout = function () {
        return this.natural({min: 1, max: 99});
    };

    Chance.prototype.tlds = function () {
        return ['com', 'org', 'edu', 'gov', 'co.uk', 'net', 'io'];
    };

    Chance.prototype.tld = function () {
        return this.pick(this.tlds());
    };

    Chance.prototype.twitter = function () {
        return '@' + this.word();
    };

    Chance.prototype.url = function (options) {
        options = initOptions(options, { protocol: "http", domain: this.domain(options), domain_prefix: "", path: this.word(), extensions: []});

        var extension = options.extensions.length > 0 ? "." + this.pick(options.extensions) : "";
        var domain = options.domain_prefix ? options.domain_prefix + "." + options.domain : options.domain;

        return options.protocol + "://" + domain + "/" + options.path + extension;
    };

    // -- End Web --

    // -- Location --

    Chance.prototype.address = function (options) {
        options = initOptions(options);
        return this.natural({min: 5, max: 2000}) + ' ' + this.street(options);
    };

    Chance.prototype.altitude = function (options) {
        options = initOptions(options, {fixed : 5, max: 8848});
        return this.floating({min: 0, max: options.max, fixed: options.fixed});
    };

    Chance.prototype.areacode = function (options) {
        options = initOptions(options, {parens : true});
        // Don't want area codes to start with 1, or have a 9 as the second digit
        var areacode = this.natural({min: 2, max: 9}).toString() +
                this.natural({min: 0, max: 8}).toString() +
                this.natural({min: 0, max: 9}).toString();

        return options.parens ? '(' + areacode + ')' : areacode;
    };

    Chance.prototype.city = function () {
        return this.capitalize(this.word({syllables: 3}));
    };

    Chance.prototype.coordinates = function (options) {
        options = initOptions(options);
        return this.latitude(options) + ', ' + this.longitude(options);
    };

    Chance.prototype.countries = function () {
        return this.get("countries");
    };

    Chance.prototype.country = function (options) {
        options = initOptions(options);
        var country = this.pick(this.countries());
        return options.full ? country.name : country.abbreviation;
    };

    Chance.prototype.depth = function (options) {
        options = initOptions(options, {fixed: 5, min: -2550});
        return this.floating({min: options.min, max: 0, fixed: options.fixed});
    };

    Chance.prototype.geohash = function (options) {
        options = initOptions(options, { length: 7 });
        return this.string({ length: options.length, pool: '0123456789bcdefghjkmnpqrstuvwxyz' });
    };

    Chance.prototype.geojson = function (options) {
        options = initOptions(options);
        return this.latitude(options) + ', ' + this.longitude(options) + ', ' + this.altitude(options);
    };

    Chance.prototype.latitude = function (options) {
        options = initOptions(options, {fixed: 5, min: -90, max: 90});
        return this.floating({min: options.min, max: options.max, fixed: options.fixed});
    };

    Chance.prototype.longitude = function (options) {
        options = initOptions(options, {fixed: 5, min: -180, max: 180});
        return this.floating({min: options.min, max: options.max, fixed: options.fixed});
    };

    Chance.prototype.phone = function (options) {
        var self = this,
            numPick,
            ukNum = function (parts) {
                var section = [];
                //fills the section part of the phone number with random numbers.
                parts.sections.forEach(function(n) {
                    section.push(self.string({ pool: '0123456789', length: n}));
                });
                return parts.area + section.join(' ');
            };
        options = initOptions(options, {
            formatted: true,
            country: 'us',
            mobile: false
        });
        if (!options.formatted) {
            options.parens = false;
        }
        var phone;
        switch (options.country) {
            case 'fr':
                if (!options.mobile) {
                    numPick = this.pick([
                        // Valid zone and département codes.
                        '01' + this.pick(['30', '34', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '53', '55', '56', '58', '60', '64', '69', '70', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83']) + self.string({ pool: '0123456789', length: 6}),
                        '02' + this.pick(['14', '18', '22', '23', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '40', '41', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '56', '57', '61', '62', '69', '72', '76', '77', '78', '85', '90', '96', '97', '98', '99']) + self.string({ pool: '0123456789', length: 6}),
                        '03' + this.pick(['10', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '39', '44', '45', '51', '52', '54', '55', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90']) + self.string({ pool: '0123456789', length: 6}),
                        '04' + this.pick(['11', '13', '15', '20', '22', '26', '27', '30', '32', '34', '37', '42', '43', '44', '50', '56', '57', '63', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '88', '89', '90', '91', '92', '93', '94', '95', '97', '98']) + self.string({ pool: '0123456789', length: 6}),
                        '05' + this.pick(['08', '16', '17', '19', '24', '31', '32', '33', '34', '35', '40', '45', '46', '47', '49', '53', '55', '56', '57', '58', '59', '61', '62', '63', '64', '65', '67', '79', '81', '82', '86', '87', '90', '94']) + self.string({ pool: '0123456789', length: 6}),
                        '09' + self.string({ pool: '0123456789', length: 8}),
                    ]);
                    phone = options.formatted ? numPick.match(/../g).join(' ') : numPick;
                } else {
                    numPick = this.pick(['06', '07']) + self.string({ pool: '0123456789', length: 8});
                    phone = options.formatted ? numPick.match(/../g).join(' ') : numPick;
                }
                break;
            case 'uk':
                if (!options.mobile) {
                    numPick = this.pick([
                        //valid area codes of major cities/counties followed by random numbers in required format.
                        { area: '01' + this.character({ pool: '234569' }) + '1 ', sections: [3,4] },
                        { area: '020 ' + this.character({ pool: '378' }), sections: [3,4] },
                        { area: '023 ' + this.character({ pool: '89' }), sections: [3,4] },
                        { area: '024 7', sections: [3,4] },
                        { area: '028 ' + this.pick(['25','28','37','71','82','90','92','95']), sections: [2,4] },
                        { area: '012' + this.pick(['04','08','54','76','97','98']) + ' ', sections: [5] },
                        { area: '013' + this.pick(['63','64','84','86']) + ' ', sections: [5] },
                        { area: '014' + this.pick(['04','20','60','61','80','88']) + ' ', sections: [5] },
                        { area: '015' + this.pick(['24','27','62','66']) + ' ', sections: [5] },
                        { area: '016' + this.pick(['06','29','35','47','59','95']) + ' ', sections: [5] },
                        { area: '017' + this.pick(['26','44','50','68']) + ' ', sections: [5] },
                        { area: '018' + this.pick(['27','37','84','97']) + ' ', sections: [5] },
                        { area: '019' + this.pick(['00','05','35','46','49','63','95']) + ' ', sections: [5] }
                    ]);
                    phone = options.formatted ? ukNum(numPick) : ukNum(numPick).replace(' ', '', 'g');
                } else {
                    numPick = this.pick([
                        { area: '07' + this.pick(['4','5','7','8','9']), sections: [2,6] },
                        { area: '07624 ', sections: [6] }
                    ]);
                    phone = options.formatted ? ukNum(numPick) : ukNum(numPick).replace(' ', '');
                }
                break;
            case 'us':
                var areacode = this.areacode(options).toString();
                var exchange = this.natural({ min: 2, max: 9 }).toString() +
                    this.natural({ min: 0, max: 9 }).toString() +
                    this.natural({ min: 0, max: 9 }).toString();
                var subscriber = this.natural({ min: 1000, max: 9999 }).toString(); // this could be random [0-9]{4}
                phone = options.formatted ? areacode + ' ' + exchange + '-' + subscriber : areacode + exchange + subscriber;
        }
        return phone;
    };

    Chance.prototype.postal = function () {
        // Postal District
        var pd = this.character({pool: "XVTSRPNKLMHJGECBA"});
        // Forward Sortation Area (FSA)
        var fsa = pd + this.natural({max: 9}) + this.character({alpha: true, casing: "upper"});
        // Local Delivery Unut (LDU)
        var ldu = this.natural({max: 9}) + this.character({alpha: true, casing: "upper"}) + this.natural({max: 9});

        return fsa + " " + ldu;
    };

    Chance.prototype.provinces = function () {
        return this.get("provinces");
    };

    Chance.prototype.province = function (options) {
        return (options && options.full) ?
            this.pick(this.provinces()).name :
            this.pick(this.provinces()).abbreviation;
    };

    Chance.prototype.state = function (options) {
        return (options && options.full) ?
            this.pick(this.states(options)).name :
            this.pick(this.states(options)).abbreviation;
    };

    Chance.prototype.states = function (options) {
        options = initOptions(options);

        var states,
            us_states_and_dc = this.get("us_states_and_dc"),
            territories = this.get("territories"),
            armed_forces = this.get("armed_forces");

        states = us_states_and_dc;

        if (options.territories) {
            states = states.concat(territories);
        }
        if (options.armed_forces) {
            states = states.concat(armed_forces);
        }

        return states;
    };

    Chance.prototype.street = function (options) {
        options = initOptions(options);

        var street = this.word({syllables: 2});
        street = this.capitalize(street);
        street += ' ';
        street += options.short_suffix ?
            this.street_suffix().abbreviation :
            this.street_suffix().name;
        return street;
    };

    Chance.prototype.street_suffix = function () {
        return this.pick(this.street_suffixes());
    };

    Chance.prototype.street_suffixes = function () {
        // These are the most common suffixes.
        return this.get("street_suffixes");
    };

    // Note: only returning US zip codes, internationalization will be a whole
    // other beast to tackle at some point.
    Chance.prototype.zip = function (options) {
        var zip = this.n(this.natural, 5, {max: 9});

        if (options && options.plusfour === true) {
            zip.push('-');
            zip = zip.concat(this.n(this.natural, 4, {max: 9}));
        }

        return zip.join("");
    };

    // -- End Location --

    // -- Time

    Chance.prototype.ampm = function () {
        return this.bool() ? 'am' : 'pm';
    };

    Chance.prototype.date = function (options) {
        var date_string, date;

        // If interval is specified we ignore preset
        if(options && (options.min || options.max)) {
            options = initOptions(options, {
                american: true,
                string: false
            });
            var min = typeof options.min !== "undefined" ? options.min.getTime() : 1;
            // 100,000,000 days measured relative to midnight at the beginning of 01 January, 1970 UTC. http://es5.github.io/#x15.9.1.1
            var max = typeof options.max !== "undefined" ? options.max.getTime() : 8640000000000000;

            date = new Date(this.natural({min: min, max: max}));
        } else {
            var m = this.month({raw: true});

            options = initOptions(options, {
                year: parseInt(this.year(), 10),
                // Necessary to subtract 1 because Date() 0-indexes month but not day or year
                // for some reason.
                month: m.numeric - 1,
                day: this.natural({min: 1, max: m.days}),
                hour: this.hour(),
                minute: this.minute(),
                second: this.second(),
                millisecond: this.millisecond(),
                american: true,
                string: false
            });

            date = new Date(options.year, options.month, options.day, options.hour, options.minute, options.second, options.millisecond);
        }

        if (options.american) {
            // Adding 1 to the month is necessary because Date() 0-indexes
            // months but not day for some odd reason.
            date_string = (date.getMonth() + 1) + '/' + date.getDate() + '/' + date.getFullYear();
        } else {
            date_string = date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear();
        }

        return options.string ? date_string : date;
    };

    Chance.prototype.hammertime = function (options) {
        return this.date(options).getTime();
    };

    Chance.prototype.hour = function (options) {
        options = initOptions(options, {min: 1, max: options && options.twentyfour ? 24 : 12});

        testRange(options.min < 1, "Chance: Min cannot be less than 1.");
        testRange(options.twentyfour && options.max > 24, "Chance: Max cannot be greater than 24 for twentyfour option.");
        testRange(!options.twentyfour && options.max > 12, "Chance: Max cannot be greater than 12.");
        testRange(options.min > options.max, "Chance: Min cannot be greater than Max.");

        return this.natural({min: options.min, max: options.max});
    };

    Chance.prototype.millisecond = function () {
        return this.natural({max: 999});
    };

    Chance.prototype.minute = Chance.prototype.second = function (options) {
        options = initOptions(options, {min: 0, max: 59});

        testRange(options.min < 0, "Chance: Min cannot be less than 0.");
        testRange(options.max > 59, "Chance: Max cannot be greater than 59.");
        testRange(options.min > options.max, "Chance: Min cannot be greater than Max.");

        return this.natural({min: options.min, max: options.max});
    };

    Chance.prototype.month = function (options) {
        options = initOptions(options, {min: 1, max: 12});

        testRange(options.min < 1, "Chance: Min cannot be less than 1.");
        testRange(options.max > 12, "Chance: Max cannot be greater than 12.");
        testRange(options.min > options.max, "Chance: Min cannot be greater than Max.");

        var month = this.pick(this.months().slice(options.min - 1, options.max));
        return options.raw ? month : month.name;
    };

    Chance.prototype.months = function () {
        return this.get("months");
    };

    Chance.prototype.second = function () {
        return this.natural({max: 59});
    };

    Chance.prototype.timestamp = function () {
        return this.natural({min: 1, max: parseInt(new Date().getTime() / 1000, 10)});
    };

    Chance.prototype.year = function (options) {
        // Default to current year as min if none specified
        options = initOptions(options, {min: new Date().getFullYear()});

        // Default to one century after current year as max if none specified
        options.max = (typeof options.max !== "undefined") ? options.max : options.min + 100;

        return this.natural(options).toString();
    };

    // -- End Time

    // -- Finance --

    Chance.prototype.cc = function (options) {
        options = initOptions(options);

        var type, number, to_generate;

        type = (options.type) ?
                    this.cc_type({ name: options.type, raw: true }) :
                    this.cc_type({ raw: true });

        number = type.prefix.split("");
        to_generate = type.length - type.prefix.length - 1;

        // Generates n - 1 digits
        number = number.concat(this.n(this.integer, to_generate, {min: 0, max: 9}));

        // Generates the last digit according to Luhn algorithm
        number.push(this.luhn_calculate(number.join("")));

        return number.join("");
    };

    Chance.prototype.cc_types = function () {
        // http://en.wikipedia.org/wiki/Bank_card_number#Issuer_identification_number_.28IIN.29
        return this.get("cc_types");
    };

    Chance.prototype.cc_type = function (options) {
        options = initOptions(options);
        var types = this.cc_types(),
            type = null;

        if (options.name) {
            for (var i = 0; i < types.length; i++) {
                // Accept either name or short_name to specify card type
                if (types[i].name === options.name || types[i].short_name === options.name) {
                    type = types[i];
                    break;
                }
            }
            if (type === null) {
                throw new Error("Credit card type '" + options.name + "'' is not supported");
            }
        } else {
            type = this.pick(types);
        }

        return options.raw ? type : type.name;
    };

    //return all world currency by ISO 4217
    Chance.prototype.currency_types = function () {
        return this.get("currency_types");
    };

    //return random world currency by ISO 4217
    Chance.prototype.currency = function () {
        return this.pick(this.currency_types());
    };

    //Return random correct currency exchange pair (e.g. EUR/USD) or array of currency code
    Chance.prototype.currency_pair = function (returnAsString) {
        var currencies = this.unique(this.currency, 2, {
            comparator: function(arr, val) {

                return arr.reduce(function(acc, item) {
                    // If a match has been found, short circuit check and just return
                    return acc || (item.code === val.code);
                }, false);
            }
        });

        if (returnAsString) {
            return  currencies[0] + '/' + currencies[1];
        } else {
            return currencies;
        }
    };

    Chance.prototype.dollar = function (options) {
        // By default, a somewhat more sane max for dollar than all available numbers
        options = initOptions(options, {max : 10000, min : 0});

        var dollar = this.floating({min: options.min, max: options.max, fixed: 2}).toString(),
            cents = dollar.split('.')[1];

        if (cents === undefined) {
            dollar += '.00';
        } else if (cents.length < 2) {
            dollar = dollar + '0';
        }

        if (dollar < 0) {
            return '-$' + dollar.replace('-', '');
        } else {
            return '$' + dollar;
        }
    };

    Chance.prototype.exp = function (options) {
        options = initOptions(options);
        var exp = {};

        exp.year = this.exp_year();

        // If the year is this year, need to ensure month is greater than the
        // current month or this expiration will not be valid
        if (exp.year === (new Date().getFullYear())) {
            exp.month = this.exp_month({future: true});
        } else {
            exp.month = this.exp_month();
        }

        return options.raw ? exp : exp.month + '/' + exp.year;
    };

    Chance.prototype.exp_month = function (options) {
        options = initOptions(options);
        var month, month_int,
            curMonth = new Date().getMonth();

        if (options.future) {
            do {
                month = this.month({raw: true}).numeric;
                month_int = parseInt(month, 10);
            } while (month_int < curMonth);
        } else {
            month = this.month({raw: true}).numeric;
        }

        return month;
    };

    Chance.prototype.exp_year = function () {
        return this.year({max: new Date().getFullYear() + 10});
    };

    // -- End Finance

    // -- Miscellaneous --

    // Dice - For all the board game geeks out there, myself included ;)
    function diceFn (range) {
        return function () {
            return this.natural(range);
        };
    }
    Chance.prototype.d4 = diceFn({min: 1, max: 4});
    Chance.prototype.d6 = diceFn({min: 1, max: 6});
    Chance.prototype.d8 = diceFn({min: 1, max: 8});
    Chance.prototype.d10 = diceFn({min: 1, max: 10});
    Chance.prototype.d12 = diceFn({min: 1, max: 12});
    Chance.prototype.d20 = diceFn({min: 1, max: 20});
    Chance.prototype.d30 = diceFn({min: 1, max: 30});
    Chance.prototype.d100 = diceFn({min: 1, max: 100});

    Chance.prototype.rpg = function (thrown, options) {
        options = initOptions(options);
        if (thrown === null) {
            throw new Error("A type of die roll must be included");
        } else {
            var bits = thrown.toLowerCase().split("d"),
                rolls = [];

            if (bits.length !== 2 || !parseInt(bits[0], 10) || !parseInt(bits[1], 10)) {
                throw new Error("Invalid format provided. Please provide #d# where the first # is the number of dice to roll, the second # is the max of each die");
            }
            for (var i = bits[0]; i > 0; i--) {
                rolls[i - 1] = this.natural({min: 1, max: bits[1]});
            }
            return (typeof options.sum !== 'undefined' && options.sum) ? rolls.reduce(function (p, c) { return p + c; }) : rolls;
        }
    };

    // Guid
    Chance.prototype.guid = function (options) {
        options = initOptions(options, { version: 5 });

        var guid_pool = "abcdef1234567890",
            variant_pool = "ab89",
            guid = this.string({ pool: guid_pool, length: 8 }) + '-' +
                   this.string({ pool: guid_pool, length: 4 }) + '-' +
                   // The Version
                   options.version +
                   this.string({ pool: guid_pool, length: 3 }) + '-' +
                   // The Variant
                   this.string({ pool: variant_pool, length: 1 }) +
                   this.string({ pool: guid_pool, length: 3 }) + '-' +
                   this.string({ pool: guid_pool, length: 12 });
        return guid;
    };
    
    // Hash
    Chance.prototype.hash = function (options) {
        options = initOptions(options, {length : 40, casing: 'lower'});
        var pool = options.casing === 'upper' ? HEX_POOL.toUpperCase() : HEX_POOL;
        return this.string({pool: pool, length: options.length});
    };

    Chance.prototype.luhn_check = function (num) {
        var str = num.toString();
        var checkDigit = +str.substring(str.length - 1);
        return checkDigit === this.luhn_calculate(+str.substring(0, str.length - 1));
    };

    Chance.prototype.luhn_calculate = function (num) {
        var digits = num.toString().split("").reverse();
        var sum = 0;
        var digit;

        for (var i = 0, l = digits.length; l > i; ++i) {
            digit = +digits[i];
            if (i % 2 === 0) {
                digit *= 2;
                if (digit > 9) {
                    digit -= 9;
                }
            }
            sum += digit;
        }
        return (sum * 9) % 10;
    };


    var data = {

        firstNames: {
            "male": ["James", "John", "Robert", "Michael", "William", "David", "Richard", "Joseph", "Charles", "Thomas", "Christopher", "Daniel", "Matthew", "George", "Donald", "Anthony", "Paul", "Mark", "Edward", "Steven", "Kenneth", "Andrew", "Brian", "Joshua", "Kevin", "Ronald", "Timothy", "Jason", "Jeffrey", "Frank", "Gary", "Ryan", "Nicholas", "Eric", "Stephen", "Jacob", "Larry", "Jonathan", "Scott", "Raymond", "Justin", "Brandon", "Gregory", "Samuel", "Benjamin", "Patrick", "Jack", "Henry", "Walter", "Dennis", "Jerry", "Alexander", "Peter", "Tyler", "Douglas", "Harold", "Aaron", "Jose", "Adam", "Arthur", "Zachary", "Carl", "Nathan", "Albert", "Kyle", "Lawrence", "Joe", "Willie", "Gerald", "Roger", "Keith", "Jeremy", "Terry", "Harry", "Ralph", "Sean", "Jesse", "Roy", "Louis", "Billy", "Austin", "Bruce", "Eugene", "Christian", "Bryan", "Wayne", "Russell", "Howard", "Fred", "Ethan", "Jordan", "Philip", "Alan", "Juan", "Randy", "Vincent", "Bobby", "Dylan", "Johnny", "Phillip", "Victor", "Clarence", "Ernest", "Martin", "Craig", "Stanley", "Shawn", "Travis", "Bradley", "Leonard", "Earl", "Gabriel", "Jimmy", "Francis", "Todd", "Noah", "Danny", "Dale", "Cody", "Carlos", "Allen", "Frederick", "Logan", "Curtis", "Alex", "Joel", "Luis", "Norman", "Marvin", "Glenn", "Tony", "Nathaniel", "Rodney", "Melvin", "Alfred", "Steve", "Cameron", "Chad", "Edwin", "Caleb", "Evan", "Antonio", "Lee", "Herbert", "Jeffery", "Isaac", "Derek", "Ricky", "Marcus", "Theodore", "Elijah", "Luke", "Jesus", "Eddie", "Troy", "Mike", "Dustin", "Ray", "Adrian", "Bernard", "Leroy", "Angel", "Randall", "Wesley", "Ian", "Jared", "Mason", "Hunter", "Calvin", "Oscar", "Clifford", "Jay", "Shane", "Ronnie", "Barry", "Lucas", "Corey", "Manuel", "Leo", "Tommy", "Warren", "Jackson", "Isaiah", "Connor", "Don", "Dean", "Jon", "Julian", "Miguel", "Bill", "Lloyd", "Charlie", "Mitchell", "Leon", "Jerome", "Darrell", "Jeremiah", "Alvin", "Brett", "Seth", "Floyd", "Jim", "Blake", "Micheal", "Gordon", "Trevor", "Lewis", "Erik", "Edgar", "Vernon", "Devin", "Gavin", "Jayden", "Chris", "Clyde", "Tom", "Derrick", "Mario", "Brent", "Marc", "Herman", "Chase", "Dominic", "Ricardo", "Franklin", "Maurice", "Max", "Aiden", "Owen", "Lester", "Gilbert", "Elmer", "Gene", "Francisco", "Glen", "Cory", "Garrett", "Clayton", "Sam", "Jorge", "Chester", "Alejandro", "Jeff", "Harvey", "Milton", "Cole", "Ivan", "Andre", "Duane", "Landon"],
            "female": ["Mary", "Emma", "Elizabeth", "Minnie", "Margaret", "Ida", "Alice", "Bertha", "Sarah", "Annie", "Clara", "Ella", "Florence", "Cora", "Martha", "Laura", "Nellie", "Grace", "Carrie", "Maude", "Mabel", "Bessie", "Jennie", "Gertrude", "Julia", "Hattie", "Edith", "Mattie", "Rose", "Catherine", "Lillian", "Ada", "Lillie", "Helen", "Jessie", "Louise", "Ethel", "Lula", "Myrtle", "Eva", "Frances", "Lena", "Lucy", "Edna", "Maggie", "Pearl", "Daisy", "Fannie", "Josephine", "Dora", "Rosa", "Katherine", "Agnes", "Marie", "Nora", "May", "Mamie", "Blanche", "Stella", "Ellen", "Nancy", "Effie", "Sallie", "Nettie", "Della", "Lizzie", "Flora", "Susie", "Maud", "Mae", "Etta", "Harriet", "Sadie", "Caroline", "Katie", "Lydia", "Elsie", "Kate", "Susan", "Mollie", "Alma", "Addie", "Georgia", "Eliza", "Lulu", "Nannie", "Lottie", "Amanda", "Belle", "Charlotte", "Rebecca", "Ruth", "Viola", "Olive", "Amelia", "Hannah", "Jane", "Virginia", "Emily", "Matilda", "Irene", "Kathryn", "Esther", "Willie", "Henrietta", "Ollie", "Amy", "Rachel", "Sara", "Estella", "Theresa", "Augusta", "Ora", "Pauline", "Josie", "Lola", "Sophia", "Leona", "Anne", "Mildred", "Ann", "Beulah", "Callie", "Lou", "Delia", "Eleanor", "Barbara", "Iva", "Louisa", "Maria", "Mayme", "Evelyn", "Estelle", "Nina", "Betty", "Marion", "Bettie", "Dorothy", "Luella", "Inez", "Lela", "Rosie", "Allie", "Millie", "Janie", "Cornelia", "Victoria", "Ruby", "Winifred", "Alta", "Celia", "Christine", "Beatrice", "Birdie", "Harriett", "Mable", "Myra", "Sophie", "Tillie", "Isabel", "Sylvia", "Carolyn", "Isabelle", "Leila", "Sally", "Ina", "Essie", "Bertie", "Nell", "Alberta", "Katharine", "Lora", "Rena", "Mina", "Rhoda", "Mathilda", "Abbie", "Eula", "Dollie", "Hettie", "Eunice", "Fanny", "Ola", "Lenora", "Adelaide", "Christina", "Lelia", "Nelle", "Sue", "Johanna", "Lilly", "Lucinda", "Minerva", "Lettie", "Roxie", "Cynthia", "Helena", "Hilda", "Hulda", "Bernice", "Genevieve", "Jean", "Cordelia", "Marian", "Francis", "Jeanette", "Adeline", "Gussie", "Leah", "Lois", "Lura", "Mittie", "Hallie", "Isabella", "Olga", "Phoebe", "Teresa", "Hester", "Lida", "Lina", "Winnie", "Claudia", "Marguerite", "Vera", "Cecelia", "Bess", "Emilie", "John", "Rosetta", "Verna", "Myrtie", "Cecilia", "Elva", "Olivia", "Ophelia", "Georgie", "Elnora", "Violet", "Adele", "Lily", "Linnie", "Loretta", "Madge", "Polly", "Virgie", "Eugenia", "Lucile", "Lucille", "Mabelle", "Rosalie"]
        },

        lastNames: ['Smith', 'Johnson', 'Williams', 'Jones', 'Brown', 'Davis', 'Miller', 'Wilson', 'Moore', 'Taylor', 'Anderson', 'Thomas', 'Jackson', 'White', 'Harris', 'Martin', 'Thompson', 'Garcia', 'Martinez', 'Robinson', 'Clark', 'Rodriguez', 'Lewis', 'Lee', 'Walker', 'Hall', 'Allen', 'Young', 'Hernandez', 'King', 'Wright', 'Lopez', 'Hill', 'Scott', 'Green', 'Adams', 'Baker', 'Gonzalez', 'Nelson', 'Carter', 'Mitchell', 'Perez', 'Roberts', 'Turner', 'Phillips', 'Campbell', 'Parker', 'Evans', 'Edwards', 'Collins', 'Stewart', 'Sanchez', 'Morris', 'Rogers', 'Reed', 'Cook', 'Morgan', 'Bell', 'Murphy', 'Bailey', 'Rivera', 'Cooper', 'Richardson', 'Cox', 'Howard', 'Ward', 'Torres', 'Peterson', 'Gray', 'Ramirez', 'James', 'Watson', 'Brooks', 'Kelly', 'Sanders', 'Price', 'Bennett', 'Wood', 'Barnes', 'Ross', 'Henderson', 'Coleman', 'Jenkins', 'Perry', 'Powell', 'Long', 'Patterson', 'Hughes', 'Flores', 'Washington', 'Butler', 'Simmons', 'Foster', 'Gonzales', 'Bryant', 'Alexander', 'Russell', 'Griffin', 'Diaz', 'Hayes', 'Myers', 'Ford', 'Hamilton', 'Graham', 'Sullivan', 'Wallace', 'Woods', 'Cole', 'West', 'Jordan', 'Owens', 'Reynolds', 'Fisher', 'Ellis', 'Harrison', 'Gibson', 'McDonald', 'Cruz', 'Marshall', 'Ortiz', 'Gomez', 'Murray', 'Freeman', 'Wells', 'Webb', 'Simpson', 'Stevens', 'Tucker', 'Porter', 'Hunter', 'Hicks', 'Crawford', 'Henry', 'Boyd', 'Mason', 'Morales', 'Kennedy', 'Warren', 'Dixon', 'Ramos', 'Reyes', 'Burns', 'Gordon', 'Shaw', 'Holmes', 'Rice', 'Robertson', 'Hunt', 'Black', 'Daniels', 'Palmer', 'Mills', 'Nichols', 'Grant', 'Knight', 'Ferguson', 'Rose', 'Stone', 'Hawkins', 'Dunn', 'Perkins', 'Hudson', 'Spencer', 'Gardner', 'Stephens', 'Payne', 'Pierce', 'Berry', 'Matthews', 'Arnold', 'Wagner', 'Willis', 'Ray', 'Watkins', 'Olson', 'Carroll', 'Duncan', 'Snyder', 'Hart', 'Cunningham', 'Bradley', 'Lane', 'Andrews', 'Ruiz', 'Harper', 'Fox', 'Riley', 'Armstrong', 'Carpenter', 'Weaver', 'Greene', 'Lawrence', 'Elliott', 'Chavez', 'Sims', 'Austin', 'Peters', 'Kelley', 'Franklin', 'Lawson', 'Fields', 'Gutierrez', 'Ryan', 'Schmidt', 'Carr', 'Vasquez', 'Castillo', 'Wheeler', 'Chapman', 'Oliver', 'Montgomery', 'Richards', 'Williamson', 'Johnston', 'Banks', 'Meyer', 'Bishop', 'McCoy', 'Howell', 'Alvarez', 'Morrison', 'Hansen', 'Fernandez', 'Garza', 'Harvey', 'Little', 'Burton', 'Stanley', 'Nguyen', 'George', 'Jacobs', 'Reid', 'Kim', 'Fuller', 'Lynch', 'Dean', 'Gilbert', 'Garrett', 'Romero', 'Welch', 'Larson', 'Frazier', 'Burke', 'Hanson', 'Day', 'Mendoza', 'Moreno', 'Bowman', 'Medina', 'Fowler', 'Brewer', 'Hoffman', 'Carlson', 'Silva', 'Pearson', 'Holland', 'Douglas', 'Fleming', 'Jensen', 'Vargas', 'Byrd', 'Davidson', 'Hopkins', 'May', 'Terry', 'Herrera', 'Wade', 'Soto', 'Walters', 'Curtis', 'Neal', 'Caldwell', 'Lowe', 'Jennings', 'Barnett', 'Graves', 'Jimenez', 'Horton', 'Shelton', 'Barrett', 'Obrien', 'Castro', 'Sutton', 'Gregory', 'McKinney', 'Lucas', 'Miles', 'Craig', 'Rodriquez', 'Chambers', 'Holt', 'Lambert', 'Fletcher', 'Watts', 'Bates', 'Hale', 'Rhodes', 'Pena', 'Beck', 'Newman', 'Haynes', 'McDaniel', 'Mendez', 'Bush', 'Vaughn', 'Parks', 'Dawson', 'Santiago', 'Norris', 'Hardy', 'Love', 'Steele', 'Curry', 'Powers', 'Schultz', 'Barker', 'Guzman', 'Page', 'Munoz', 'Ball', 'Keller', 'Chandler', 'Weber', 'Leonard', 'Walsh', 'Lyons', 'Ramsey', 'Wolfe', 'Schneider', 'Mullins', 'Benson', 'Sharp', 'Bowen', 'Daniel', 'Barber', 'Cummings', 'Hines', 'Baldwin', 'Griffith', 'Valdez', 'Hubbard', 'Salazar', 'Reeves', 'Warner', 'Stevenson', 'Burgess', 'Santos', 'Tate', 'Cross', 'Garner', 'Mann', 'Mack', 'Moss', 'Thornton', 'Dennis', 'McGee', 'Farmer', 'Delgado', 'Aguilar', 'Vega', 'Glover', 'Manning', 'Cohen', 'Harmon', 'Rodgers', 'Robbins', 'Newton', 'Todd', 'Blair', 'Higgins', 'Ingram', 'Reese', 'Cannon', 'Strickland', 'Townsend', 'Potter', 'Goodwin', 'Walton', 'Rowe', 'Hampton', 'Ortega', 'Patton', 'Swanson', 'Joseph', 'Francis', 'Goodman', 'Maldonado', 'Yates', 'Becker', 'Erickson', 'Hodges', 'Rios', 'Conner', 'Adkins', 'Webster', 'Norman', 'Malone', 'Hammond', 'Flowers', 'Cobb', 'Moody', 'Quinn', 'Blake', 'Maxwell', 'Pope', 'Floyd', 'Osborne', 'Paul', 'McCarthy', 'Guerrero', 'Lindsey', 'Estrada', 'Sandoval', 'Gibbs', 'Tyler', 'Gross', 'Fitzgerald', 'Stokes', 'Doyle', 'Sherman', 'Saunders', 'Wise', 'Colon', 'Gill', 'Alvarado', 'Greer', 'Padilla', 'Simon', 'Waters', 'Nunez', 'Ballard', 'Schwartz', 'McBride', 'Houston', 'Christensen', 'Klein', 'Pratt', 'Briggs', 'Parsons', 'McLaughlin', 'Zimmerman', 'French', 'Buchanan', 'Moran', 'Copeland', 'Roy', 'Pittman', 'Brady', 'McCormick', 'Holloway', 'Brock', 'Poole', 'Frank', 'Logan', 'Owen', 'Bass', 'Marsh', 'Drake', 'Wong', 'Jefferson', 'Park', 'Morton', 'Abbott', 'Sparks', 'Patrick', 'Norton', 'Huff', 'Clayton', 'Massey', 'Lloyd', 'Figueroa', 'Carson', 'Bowers', 'Roberson', 'Barton', 'Tran', 'Lamb', 'Harrington', 'Casey', 'Boone', 'Cortez', 'Clarke', 'Mathis', 'Singleton', 'Wilkins', 'Cain', 'Bryan', 'Underwood', 'Hogan', 'McKenzie', 'Collier', 'Luna', 'Phelps', 'McGuire', 'Allison', 'Bridges', 'Wilkerson', 'Nash', 'Summers', 'Atkins'],

        // Data taken from https://github.com/umpirsky/country-list/blob/master/country/cldr/en_US/country.json
        countries: [{"name":"Afghanistan","abbreviation":"AF"},{"name":"Albania","abbreviation":"AL"},{"name":"Algeria","abbreviation":"DZ"},{"name":"American Samoa","abbreviation":"AS"},{"name":"Andorra","abbreviation":"AD"},{"name":"Angola","abbreviation":"AO"},{"name":"Anguilla","abbreviation":"AI"},{"name":"Antarctica","abbreviation":"AQ"},{"name":"Antigua and Barbuda","abbreviation":"AG"},{"name":"Argentina","abbreviation":"AR"},{"name":"Armenia","abbreviation":"AM"},{"name":"Aruba","abbreviation":"AW"},{"name":"Australia","abbreviation":"AU"},{"name":"Austria","abbreviation":"AT"},{"name":"Azerbaijan","abbreviation":"AZ"},{"name":"Bahamas","abbreviation":"BS"},{"name":"Bahrain","abbreviation":"BH"},{"name":"Bangladesh","abbreviation":"BD"},{"name":"Barbados","abbreviation":"BB"},{"name":"Belarus","abbreviation":"BY"},{"name":"Belgium","abbreviation":"BE"},{"name":"Belize","abbreviation":"BZ"},{"name":"Benin","abbreviation":"BJ"},{"name":"Bermuda","abbreviation":"BM"},{"name":"Bhutan","abbreviation":"BT"},{"name":"Bolivia","abbreviation":"BO"},{"name":"Bosnia and Herzegovina","abbreviation":"BA"},{"name":"Botswana","abbreviation":"BW"},{"name":"Bouvet Island","abbreviation":"BV"},{"name":"Brazil","abbreviation":"BR"},{"name":"British Antarctic Territory","abbreviation":"BQ"},{"name":"British Indian Ocean Territory","abbreviation":"IO"},{"name":"British Virgin Islands","abbreviation":"VG"},{"name":"Brunei","abbreviation":"BN"},{"name":"Bulgaria","abbreviation":"BG"},{"name":"Burkina Faso","abbreviation":"BF"},{"name":"Burundi","abbreviation":"BI"},{"name":"Cambodia","abbreviation":"KH"},{"name":"Cameroon","abbreviation":"CM"},{"name":"Canada","abbreviation":"CA"},{"name":"Canton and Enderbury Islands","abbreviation":"CT"},{"name":"Cape Verde","abbreviation":"CV"},{"name":"Cayman Islands","abbreviation":"KY"},{"name":"Central African Republic","abbreviation":"CF"},{"name":"Chad","abbreviation":"TD"},{"name":"Chile","abbreviation":"CL"},{"name":"China","abbreviation":"CN"},{"name":"Christmas Island","abbreviation":"CX"},{"name":"Cocos [Keeling] Islands","abbreviation":"CC"},{"name":"Colombia","abbreviation":"CO"},{"name":"Comoros","abbreviation":"KM"},{"name":"Congo - Brazzaville","abbreviation":"CG"},{"name":"Congo - Kinshasa","abbreviation":"CD"},{"name":"Cook Islands","abbreviation":"CK"},{"name":"Costa Rica","abbreviation":"CR"},{"name":"Croatia","abbreviation":"HR"},{"name":"Cuba","abbreviation":"CU"},{"name":"Cyprus","abbreviation":"CY"},{"name":"Czech Republic","abbreviation":"CZ"},{"name":"Côte d’Ivoire","abbreviation":"CI"},{"name":"Denmark","abbreviation":"DK"},{"name":"Djibouti","abbreviation":"DJ"},{"name":"Dominica","abbreviation":"DM"},{"name":"Dominican Republic","abbreviation":"DO"},{"name":"Dronning Maud Land","abbreviation":"NQ"},{"name":"East Germany","abbreviation":"DD"},{"name":"Ecuador","abbreviation":"EC"},{"name":"Egypt","abbreviation":"EG"},{"name":"El Salvador","abbreviation":"SV"},{"name":"Equatorial Guinea","abbreviation":"GQ"},{"name":"Eritrea","abbreviation":"ER"},{"name":"Estonia","abbreviation":"EE"},{"name":"Ethiopia","abbreviation":"ET"},{"name":"Falkland Islands","abbreviation":"FK"},{"name":"Faroe Islands","abbreviation":"FO"},{"name":"Fiji","abbreviation":"FJ"},{"name":"Finland","abbreviation":"FI"},{"name":"France","abbreviation":"FR"},{"name":"French Guiana","abbreviation":"GF"},{"name":"French Polynesia","abbreviation":"PF"},{"name":"French Southern Territories","abbreviation":"TF"},{"name":"French Southern and Antarctic Territories","abbreviation":"FQ"},{"name":"Gabon","abbreviation":"GA"},{"name":"Gambia","abbreviation":"GM"},{"name":"Georgia","abbreviation":"GE"},{"name":"Germany","abbreviation":"DE"},{"name":"Ghana","abbreviation":"GH"},{"name":"Gibraltar","abbreviation":"GI"},{"name":"Greece","abbreviation":"GR"},{"name":"Greenland","abbreviation":"GL"},{"name":"Grenada","abbreviation":"GD"},{"name":"Guadeloupe","abbreviation":"GP"},{"name":"Guam","abbreviation":"GU"},{"name":"Guatemala","abbreviation":"GT"},{"name":"Guernsey","abbreviation":"GG"},{"name":"Guinea","abbreviation":"GN"},{"name":"Guinea-Bissau","abbreviation":"GW"},{"name":"Guyana","abbreviation":"GY"},{"name":"Haiti","abbreviation":"HT"},{"name":"Heard Island and McDonald Islands","abbreviation":"HM"},{"name":"Honduras","abbreviation":"HN"},{"name":"Hong Kong SAR China","abbreviation":"HK"},{"name":"Hungary","abbreviation":"HU"},{"name":"Iceland","abbreviation":"IS"},{"name":"India","abbreviation":"IN"},{"name":"Indonesia","abbreviation":"ID"},{"name":"Iran","abbreviation":"IR"},{"name":"Iraq","abbreviation":"IQ"},{"name":"Ireland","abbreviation":"IE"},{"name":"Isle of Man","abbreviation":"IM"},{"name":"Israel","abbreviation":"IL"},{"name":"Italy","abbreviation":"IT"},{"name":"Jamaica","abbreviation":"JM"},{"name":"Japan","abbreviation":"JP"},{"name":"Jersey","abbreviation":"JE"},{"name":"Johnston Island","abbreviation":"JT"},{"name":"Jordan","abbreviation":"JO"},{"name":"Kazakhstan","abbreviation":"KZ"},{"name":"Kenya","abbreviation":"KE"},{"name":"Kiribati","abbreviation":"KI"},{"name":"Kuwait","abbreviation":"KW"},{"name":"Kyrgyzstan","abbreviation":"KG"},{"name":"Laos","abbreviation":"LA"},{"name":"Latvia","abbreviation":"LV"},{"name":"Lebanon","abbreviation":"LB"},{"name":"Lesotho","abbreviation":"LS"},{"name":"Liberia","abbreviation":"LR"},{"name":"Libya","abbreviation":"LY"},{"name":"Liechtenstein","abbreviation":"LI"},{"name":"Lithuania","abbreviation":"LT"},{"name":"Luxembourg","abbreviation":"LU"},{"name":"Macau SAR China","abbreviation":"MO"},{"name":"Macedonia","abbreviation":"MK"},{"name":"Madagascar","abbreviation":"MG"},{"name":"Malawi","abbreviation":"MW"},{"name":"Malaysia","abbreviation":"MY"},{"name":"Maldives","abbreviation":"MV"},{"name":"Mali","abbreviation":"ML"},{"name":"Malta","abbreviation":"MT"},{"name":"Marshall Islands","abbreviation":"MH"},{"name":"Martinique","abbreviation":"MQ"},{"name":"Mauritania","abbreviation":"MR"},{"name":"Mauritius","abbreviation":"MU"},{"name":"Mayotte","abbreviation":"YT"},{"name":"Metropolitan France","abbreviation":"FX"},{"name":"Mexico","abbreviation":"MX"},{"name":"Micronesia","abbreviation":"FM"},{"name":"Midway Islands","abbreviation":"MI"},{"name":"Moldova","abbreviation":"MD"},{"name":"Monaco","abbreviation":"MC"},{"name":"Mongolia","abbreviation":"MN"},{"name":"Montenegro","abbreviation":"ME"},{"name":"Montserrat","abbreviation":"MS"},{"name":"Morocco","abbreviation":"MA"},{"name":"Mozambique","abbreviation":"MZ"},{"name":"Myanmar [Burma]","abbreviation":"MM"},{"name":"Namibia","abbreviation":"NA"},{"name":"Nauru","abbreviation":"NR"},{"name":"Nepal","abbreviation":"NP"},{"name":"Netherlands","abbreviation":"NL"},{"name":"Netherlands Antilles","abbreviation":"AN"},{"name":"Neutral Zone","abbreviation":"NT"},{"name":"New Caledonia","abbreviation":"NC"},{"name":"New Zealand","abbreviation":"NZ"},{"name":"Nicaragua","abbreviation":"NI"},{"name":"Niger","abbreviation":"NE"},{"name":"Nigeria","abbreviation":"NG"},{"name":"Niue","abbreviation":"NU"},{"name":"Norfolk Island","abbreviation":"NF"},{"name":"North Korea","abbreviation":"KP"},{"name":"North Vietnam","abbreviation":"VD"},{"name":"Northern Mariana Islands","abbreviation":"MP"},{"name":"Norway","abbreviation":"NO"},{"name":"Oman","abbreviation":"OM"},{"name":"Pacific Islands Trust Territory","abbreviation":"PC"},{"name":"Pakistan","abbreviation":"PK"},{"name":"Palau","abbreviation":"PW"},{"name":"Palestinian Territories","abbreviation":"PS"},{"name":"Panama","abbreviation":"PA"},{"name":"Panama Canal Zone","abbreviation":"PZ"},{"name":"Papua New Guinea","abbreviation":"PG"},{"name":"Paraguay","abbreviation":"PY"},{"name":"People's Democratic Republic of Yemen","abbreviation":"YD"},{"name":"Peru","abbreviation":"PE"},{"name":"Philippines","abbreviation":"PH"},{"name":"Pitcairn Islands","abbreviation":"PN"},{"name":"Poland","abbreviation":"PL"},{"name":"Portugal","abbreviation":"PT"},{"name":"Puerto Rico","abbreviation":"PR"},{"name":"Qatar","abbreviation":"QA"},{"name":"Romania","abbreviation":"RO"},{"name":"Russia","abbreviation":"RU"},{"name":"Rwanda","abbreviation":"RW"},{"name":"Réunion","abbreviation":"RE"},{"name":"Saint Barthélemy","abbreviation":"BL"},{"name":"Saint Helena","abbreviation":"SH"},{"name":"Saint Kitts and Nevis","abbreviation":"KN"},{"name":"Saint Lucia","abbreviation":"LC"},{"name":"Saint Martin","abbreviation":"MF"},{"name":"Saint Pierre and Miquelon","abbreviation":"PM"},{"name":"Saint Vincent and the Grenadines","abbreviation":"VC"},{"name":"Samoa","abbreviation":"WS"},{"name":"San Marino","abbreviation":"SM"},{"name":"Saudi Arabia","abbreviation":"SA"},{"name":"Senegal","abbreviation":"SN"},{"name":"Serbia","abbreviation":"RS"},{"name":"Serbia and Montenegro","abbreviation":"CS"},{"name":"Seychelles","abbreviation":"SC"},{"name":"Sierra Leone","abbreviation":"SL"},{"name":"Singapore","abbreviation":"SG"},{"name":"Slovakia","abbreviation":"SK"},{"name":"Slovenia","abbreviation":"SI"},{"name":"Solomon Islands","abbreviation":"SB"},{"name":"Somalia","abbreviation":"SO"},{"name":"South Africa","abbreviation":"ZA"},{"name":"South Georgia and the South Sandwich Islands","abbreviation":"GS"},{"name":"South Korea","abbreviation":"KR"},{"name":"Spain","abbreviation":"ES"},{"name":"Sri Lanka","abbreviation":"LK"},{"name":"Sudan","abbreviation":"SD"},{"name":"Suriname","abbreviation":"SR"},{"name":"Svalbard and Jan Mayen","abbreviation":"SJ"},{"name":"Swaziland","abbreviation":"SZ"},{"name":"Sweden","abbreviation":"SE"},{"name":"Switzerland","abbreviation":"CH"},{"name":"Syria","abbreviation":"SY"},{"name":"São Tomé and Príncipe","abbreviation":"ST"},{"name":"Taiwan","abbreviation":"TW"},{"name":"Tajikistan","abbreviation":"TJ"},{"name":"Tanzania","abbreviation":"TZ"},{"name":"Thailand","abbreviation":"TH"},{"name":"Timor-Leste","abbreviation":"TL"},{"name":"Togo","abbreviation":"TG"},{"name":"Tokelau","abbreviation":"TK"},{"name":"Tonga","abbreviation":"TO"},{"name":"Trinidad and Tobago","abbreviation":"TT"},{"name":"Tunisia","abbreviation":"TN"},{"name":"Turkey","abbreviation":"TR"},{"name":"Turkmenistan","abbreviation":"TM"},{"name":"Turks and Caicos Islands","abbreviation":"TC"},{"name":"Tuvalu","abbreviation":"TV"},{"name":"U.S. Minor Outlying Islands","abbreviation":"UM"},{"name":"U.S. Miscellaneous Pacific Islands","abbreviation":"PU"},{"name":"U.S. Virgin Islands","abbreviation":"VI"},{"name":"Uganda","abbreviation":"UG"},{"name":"Ukraine","abbreviation":"UA"},{"name":"Union of Soviet Socialist Republics","abbreviation":"SU"},{"name":"United Arab Emirates","abbreviation":"AE"},{"name":"United Kingdom","abbreviation":"GB"},{"name":"United States","abbreviation":"US"},{"name":"Unknown or Invalid Region","abbreviation":"ZZ"},{"name":"Uruguay","abbreviation":"UY"},{"name":"Uzbekistan","abbreviation":"UZ"},{"name":"Vanuatu","abbreviation":"VU"},{"name":"Vatican City","abbreviation":"VA"},{"name":"Venezuela","abbreviation":"VE"},{"name":"Vietnam","abbreviation":"VN"},{"name":"Wake Island","abbreviation":"WK"},{"name":"Wallis and Futuna","abbreviation":"WF"},{"name":"Western Sahara","abbreviation":"EH"},{"name":"Yemen","abbreviation":"YE"},{"name":"Zambia","abbreviation":"ZM"},{"name":"Zimbabwe","abbreviation":"ZW"},{"name":"Åland Islands","abbreviation":"AX"}],

        provinces: [
            {name: 'Alberta', abbreviation: 'AB'},
            {name: 'British Columbia', abbreviation: 'BC'},
            {name: 'Manitoba', abbreviation: 'MB'},
            {name: 'New Brunswick', abbreviation: 'NB'},
            {name: 'Newfoundland and Labrador', abbreviation: 'NL'},
            {name: 'Nova Scotia', abbreviation: 'NS'},
            {name: 'Ontario', abbreviation: 'ON'},
            {name: 'Prince Edward Island', abbreviation: 'PE'},
            {name: 'Quebec', abbreviation: 'QC'},
            {name: 'Saskatchewan', abbreviation: 'SK'},

            // The case could be made that the following are not actually provinces
            // since they are technically considered "territories" however they all
            // look the same on an envelope!
            {name: 'Northwest Territories', abbreviation: 'NT'},
            {name: 'Nunavut', abbreviation: 'NU'},
            {name: 'Yukon', abbreviation: 'YT'}
        ],

        us_states_and_dc: [
            {name: 'Alabama', abbreviation: 'AL'},
            {name: 'Alaska', abbreviation: 'AK'},
            {name: 'Arizona', abbreviation: 'AZ'},
            {name: 'Arkansas', abbreviation: 'AR'},
            {name: 'California', abbreviation: 'CA'},
            {name: 'Colorado', abbreviation: 'CO'},
            {name: 'Connecticut', abbreviation: 'CT'},
            {name: 'Delaware', abbreviation: 'DE'},
            {name: 'District of Columbia', abbreviation: 'DC'},
            {name: 'Florida', abbreviation: 'FL'},
            {name: 'Georgia', abbreviation: 'GA'},
            {name: 'Hawaii', abbreviation: 'HI'},
            {name: 'Idaho', abbreviation: 'ID'},
            {name: 'Illinois', abbreviation: 'IL'},
            {name: 'Indiana', abbreviation: 'IN'},
            {name: 'Iowa', abbreviation: 'IA'},
            {name: 'Kansas', abbreviation: 'KS'},
            {name: 'Kentucky', abbreviation: 'KY'},
            {name: 'Louisiana', abbreviation: 'LA'},
            {name: 'Maine', abbreviation: 'ME'},
            {name: 'Maryland', abbreviation: 'MD'},
            {name: 'Massachusetts', abbreviation: 'MA'},
            {name: 'Michigan', abbreviation: 'MI'},
            {name: 'Minnesota', abbreviation: 'MN'},
            {name: 'Mississippi', abbreviation: 'MS'},
            {name: 'Missouri', abbreviation: 'MO'},
            {name: 'Montana', abbreviation: 'MT'},
            {name: 'Nebraska', abbreviation: 'NE'},
            {name: 'Nevada', abbreviation: 'NV'},
            {name: 'New Hampshire', abbreviation: 'NH'},
            {name: 'New Jersey', abbreviation: 'NJ'},
            {name: 'New Mexico', abbreviation: 'NM'},
            {name: 'New York', abbreviation: 'NY'},
            {name: 'North Carolina', abbreviation: 'NC'},
            {name: 'North Dakota', abbreviation: 'ND'},
            {name: 'Ohio', abbreviation: 'OH'},
            {name: 'Oklahoma', abbreviation: 'OK'},
            {name: 'Oregon', abbreviation: 'OR'},
            {name: 'Pennsylvania', abbreviation: 'PA'},
            {name: 'Rhode Island', abbreviation: 'RI'},
            {name: 'South Carolina', abbreviation: 'SC'},
            {name: 'South Dakota', abbreviation: 'SD'},
            {name: 'Tennessee', abbreviation: 'TN'},
            {name: 'Texas', abbreviation: 'TX'},
            {name: 'Utah', abbreviation: 'UT'},
            {name: 'Vermont', abbreviation: 'VT'},
            {name: 'Virginia', abbreviation: 'VA'},
            {name: 'Washington', abbreviation: 'WA'},
            {name: 'West Virginia', abbreviation: 'WV'},
            {name: 'Wisconsin', abbreviation: 'WI'},
            {name: 'Wyoming', abbreviation: 'WY'}
        ],

        territories: [
            {name: 'American Samoa', abbreviation: 'AS'},
            {name: 'Federated States of Micronesia', abbreviation: 'FM'},
            {name: 'Guam', abbreviation: 'GU'},
            {name: 'Marshall Islands', abbreviation: 'MH'},
            {name: 'Northern Mariana Islands', abbreviation: 'MP'},
            {name: 'Puerto Rico', abbreviation: 'PR'},
            {name: 'Virgin Islands, U.S.', abbreviation: 'VI'}
        ],

        armed_forces: [
            {name: 'Armed Forces Europe', abbreviation: 'AE'},
            {name: 'Armed Forces Pacific', abbreviation: 'AP'},
            {name: 'Armed Forces the Americas', abbreviation: 'AA'}
        ],

        street_suffixes: [
            {name: 'Avenue', abbreviation: 'Ave'},
            {name: 'Boulevard', abbreviation: 'Blvd'},
            {name: 'Center', abbreviation: 'Ctr'},
            {name: 'Circle', abbreviation: 'Cir'},
            {name: 'Court', abbreviation: 'Ct'},
            {name: 'Drive', abbreviation: 'Dr'},
            {name: 'Extension', abbreviation: 'Ext'},
            {name: 'Glen', abbreviation: 'Gln'},
            {name: 'Grove', abbreviation: 'Grv'},
            {name: 'Heights', abbreviation: 'Hts'},
            {name: 'Highway', abbreviation: 'Hwy'},
            {name: 'Junction', abbreviation: 'Jct'},
            {name: 'Key', abbreviation: 'Key'},
            {name: 'Lane', abbreviation: 'Ln'},
            {name: 'Loop', abbreviation: 'Loop'},
            {name: 'Manor', abbreviation: 'Mnr'},
            {name: 'Mill', abbreviation: 'Mill'},
            {name: 'Park', abbreviation: 'Park'},
            {name: 'Parkway', abbreviation: 'Pkwy'},
            {name: 'Pass', abbreviation: 'Pass'},
            {name: 'Path', abbreviation: 'Path'},
            {name: 'Pike', abbreviation: 'Pike'},
            {name: 'Place', abbreviation: 'Pl'},
            {name: 'Plaza', abbreviation: 'Plz'},
            {name: 'Point', abbreviation: 'Pt'},
            {name: 'Ridge', abbreviation: 'Rdg'},
            {name: 'River', abbreviation: 'Riv'},
            {name: 'Road', abbreviation: 'Rd'},
            {name: 'Square', abbreviation: 'Sq'},
            {name: 'Street', abbreviation: 'St'},
            {name: 'Terrace', abbreviation: 'Ter'},
            {name: 'Trail', abbreviation: 'Trl'},
            {name: 'Turnpike', abbreviation: 'Tpke'},
            {name: 'View', abbreviation: 'Vw'},
            {name: 'Way', abbreviation: 'Way'}
        ],

        months: [
            {name: 'January', short_name: 'Jan', numeric: '01', days: 31},
            // Not messing with leap years...
            {name: 'February', short_name: 'Feb', numeric: '02', days: 28},
            {name: 'March', short_name: 'Mar', numeric: '03', days: 31},
            {name: 'April', short_name: 'Apr', numeric: '04', days: 30},
            {name: 'May', short_name: 'May', numeric: '05', days: 31},
            {name: 'June', short_name: 'Jun', numeric: '06', days: 30},
            {name: 'July', short_name: 'Jul', numeric: '07', days: 31},
            {name: 'August', short_name: 'Aug', numeric: '08', days: 31},
            {name: 'September', short_name: 'Sep', numeric: '09', days: 30},
            {name: 'October', short_name: 'Oct', numeric: '10', days: 31},
            {name: 'November', short_name: 'Nov', numeric: '11', days: 30},
            {name: 'December', short_name: 'Dec', numeric: '12', days: 31}
        ],

        // http://en.wikipedia.org/wiki/Bank_card_number#Issuer_identification_number_.28IIN.29
        cc_types: [
            {name: "American Express", short_name: 'amex', prefix: '34', length: 15},
            {name: "Bankcard", short_name: 'bankcard', prefix: '5610', length: 16},
            {name: "China UnionPay", short_name: 'chinaunion', prefix: '62', length: 16},
            {name: "Diners Club Carte Blanche", short_name: 'dccarte', prefix: '300', length: 14},
            {name: "Diners Club enRoute", short_name: 'dcenroute', prefix: '2014', length: 15},
            {name: "Diners Club International", short_name: 'dcintl', prefix: '36', length: 14},
            {name: "Diners Club United States & Canada", short_name: 'dcusc', prefix: '54', length: 16},
            {name: "Discover Card", short_name: 'discover', prefix: '6011', length: 16},
            {name: "InstaPayment", short_name: 'instapay', prefix: '637', length: 16},
            {name: "JCB", short_name: 'jcb', prefix: '3528', length: 16},
            {name: "Laser", short_name: 'laser', prefix: '6304', length: 16},
            {name: "Maestro", short_name: 'maestro', prefix: '5018', length: 16},
            {name: "Mastercard", short_name: 'mc', prefix: '51', length: 16},
            {name: "Solo", short_name: 'solo', prefix: '6334', length: 16},
            {name: "Switch", short_name: 'switch', prefix: '4903', length: 16},
            {name: "Visa", short_name: 'visa', prefix: '4', length: 16},
            {name: "Visa Electron", short_name: 'electron', prefix: '4026', length: 16}
        ],

        //return all world currency by ISO 4217
        currency_types: [
            {'code' : 'AED', 'name' : 'United Arab Emirates Dirham'},
            {'code' : 'AFN', 'name' : 'Afghanistan Afghani'},
            {'code' : 'ALL', 'name' : 'Albania Lek'},
            {'code' : 'AMD', 'name' : 'Armenia Dram'},
            {'code' : 'ANG', 'name' : 'Netherlands Antilles Guilder'},
            {'code' : 'AOA', 'name' : 'Angola Kwanza'},
            {'code' : 'ARS', 'name' : 'Argentina Peso'},
            {'code' : 'AUD', 'name' : 'Australia Dollar'},
            {'code' : 'AWG', 'name' : 'Aruba Guilder'},
            {'code' : 'AZN', 'name' : 'Azerbaijan New Manat'},
            {'code' : 'BAM', 'name' : 'Bosnia and Herzegovina Convertible Marka'},
            {'code' : 'BBD', 'name' : 'Barbados Dollar'},
            {'code' : 'BDT', 'name' : 'Bangladesh Taka'},
            {'code' : 'BGN', 'name' : 'Bulgaria Lev'},
            {'code' : 'BHD', 'name' : 'Bahrain Dinar'},
            {'code' : 'BIF', 'name' : 'Burundi Franc'},
            {'code' : 'BMD', 'name' : 'Bermuda Dollar'},
            {'code' : 'BND', 'name' : 'Brunei Darussalam Dollar'},
            {'code' : 'BOB', 'name' : 'Bolivia Boliviano'},
            {'code' : 'BRL', 'name' : 'Brazil Real'},
            {'code' : 'BSD', 'name' : 'Bahamas Dollar'},
            {'code' : 'BTN', 'name' : 'Bhutan Ngultrum'},
            {'code' : 'BWP', 'name' : 'Botswana Pula'},
            {'code' : 'BYR', 'name' : 'Belarus Ruble'},
            {'code' : 'BZD', 'name' : 'Belize Dollar'},
            {'code' : 'CAD', 'name' : 'Canada Dollar'},
            {'code' : 'CDF', 'name' : 'Congo/Kinshasa Franc'},
            {'code' : 'CHF', 'name' : 'Switzerland Franc'},
            {'code' : 'CLP', 'name' : 'Chile Peso'},
            {'code' : 'CNY', 'name' : 'China Yuan Renminbi'},
            {'code' : 'COP', 'name' : 'Colombia Peso'},
            {'code' : 'CRC', 'name' : 'Costa Rica Colon'},
            {'code' : 'CUC', 'name' : 'Cuba Convertible Peso'},
            {'code' : 'CUP', 'name' : 'Cuba Peso'},
            {'code' : 'CVE', 'name' : 'Cape Verde Escudo'},
            {'code' : 'CZK', 'name' : 'Czech Republic Koruna'},
            {'code' : 'DJF', 'name' : 'Djibouti Franc'},
            {'code' : 'DKK', 'name' : 'Denmark Krone'},
            {'code' : 'DOP', 'name' : 'Dominican Republic Peso'},
            {'code' : 'DZD', 'name' : 'Algeria Dinar'},
            {'code' : 'EGP', 'name' : 'Egypt Pound'},
            {'code' : 'ERN', 'name' : 'Eritrea Nakfa'},
            {'code' : 'ETB', 'name' : 'Ethiopia Birr'},
            {'code' : 'EUR', 'name' : 'Euro Member Countries'},
            {'code' : 'FJD', 'name' : 'Fiji Dollar'},
            {'code' : 'FKP', 'name' : 'Falkland Islands (Malvinas) Pound'},
            {'code' : 'GBP', 'name' : 'United Kingdom Pound'},
            {'code' : 'GEL', 'name' : 'Georgia Lari'},
            {'code' : 'GGP', 'name' : 'Guernsey Pound'},
            {'code' : 'GHS', 'name' : 'Ghana Cedi'},
            {'code' : 'GIP', 'name' : 'Gibraltar Pound'},
            {'code' : 'GMD', 'name' : 'Gambia Dalasi'},
            {'code' : 'GNF', 'name' : 'Guinea Franc'},
            {'code' : 'GTQ', 'name' : 'Guatemala Quetzal'},
            {'code' : 'GYD', 'name' : 'Guyana Dollar'},
            {'code' : 'HKD', 'name' : 'Hong Kong Dollar'},
            {'code' : 'HNL', 'name' : 'Honduras Lempira'},
            {'code' : 'HRK', 'name' : 'Croatia Kuna'},
            {'code' : 'HTG', 'name' : 'Haiti Gourde'},
            {'code' : 'HUF', 'name' : 'Hungary Forint'},
            {'code' : 'IDR', 'name' : 'Indonesia Rupiah'},
            {'code' : 'ILS', 'name' : 'Israel Shekel'},
            {'code' : 'IMP', 'name' : 'Isle of Man Pound'},
            {'code' : 'INR', 'name' : 'India Rupee'},
            {'code' : 'IQD', 'name' : 'Iraq Dinar'},
            {'code' : 'IRR', 'name' : 'Iran Rial'},
            {'code' : 'ISK', 'name' : 'Iceland Krona'},
            {'code' : 'JEP', 'name' : 'Jersey Pound'},
            {'code' : 'JMD', 'name' : 'Jamaica Dollar'},
            {'code' : 'JOD', 'name' : 'Jordan Dinar'},
            {'code' : 'JPY', 'name' : 'Japan Yen'},
            {'code' : 'KES', 'name' : 'Kenya Shilling'},
            {'code' : 'KGS', 'name' : 'Kyrgyzstan Som'},
            {'code' : 'KHR', 'name' : 'Cambodia Riel'},
            {'code' : 'KMF', 'name' : 'Comoros Franc'},
            {'code' : 'KPW', 'name' : 'Korea (North) Won'},
            {'code' : 'KRW', 'name' : 'Korea (South) Won'},
            {'code' : 'KWD', 'name' : 'Kuwait Dinar'},
            {'code' : 'KYD', 'name' : 'Cayman Islands Dollar'},
            {'code' : 'KZT', 'name' : 'Kazakhstan Tenge'},
            {'code' : 'LAK', 'name' : 'Laos Kip'},
            {'code' : 'LBP', 'name' : 'Lebanon Pound'},
            {'code' : 'LKR', 'name' : 'Sri Lanka Rupee'},
            {'code' : 'LRD', 'name' : 'Liberia Dollar'},
            {'code' : 'LSL', 'name' : 'Lesotho Loti'},
            {'code' : 'LTL', 'name' : 'Lithuania Litas'},
            {'code' : 'LYD', 'name' : 'Libya Dinar'},
            {'code' : 'MAD', 'name' : 'Morocco Dirham'},
            {'code' : 'MDL', 'name' : 'Moldova Leu'},
            {'code' : 'MGA', 'name' : 'Madagascar Ariary'},
            {'code' : 'MKD', 'name' : 'Macedonia Denar'},
            {'code' : 'MMK', 'name' : 'Myanmar (Burma) Kyat'},
            {'code' : 'MNT', 'name' : 'Mongolia Tughrik'},
            {'code' : 'MOP', 'name' : 'Macau Pataca'},
            {'code' : 'MRO', 'name' : 'Mauritania Ouguiya'},
            {'code' : 'MUR', 'name' : 'Mauritius Rupee'},
            {'code' : 'MVR', 'name' : 'Maldives (Maldive Islands) Rufiyaa'},
            {'code' : 'MWK', 'name' : 'Malawi Kwacha'},
            {'code' : 'MXN', 'name' : 'Mexico Peso'},
            {'code' : 'MYR', 'name' : 'Malaysia Ringgit'},
            {'code' : 'MZN', 'name' : 'Mozambique Metical'},
            {'code' : 'NAD', 'name' : 'Namibia Dollar'},
            {'code' : 'NGN', 'name' : 'Nigeria Naira'},
            {'code' : 'NIO', 'name' : 'Nicaragua Cordoba'},
            {'code' : 'NOK', 'name' : 'Norway Krone'},
            {'code' : 'NPR', 'name' : 'Nepal Rupee'},
            {'code' : 'NZD', 'name' : 'New Zealand Dollar'},
            {'code' : 'OMR', 'name' : 'Oman Rial'},
            {'code' : 'PAB', 'name' : 'Panama Balboa'},
            {'code' : 'PEN', 'name' : 'Peru Nuevo Sol'},
            {'code' : 'PGK', 'name' : 'Papua New Guinea Kina'},
            {'code' : 'PHP', 'name' : 'Philippines Peso'},
            {'code' : 'PKR', 'name' : 'Pakistan Rupee'},
            {'code' : 'PLN', 'name' : 'Poland Zloty'},
            {'code' : 'PYG', 'name' : 'Paraguay Guarani'},
            {'code' : 'QAR', 'name' : 'Qatar Riyal'},
            {'code' : 'RON', 'name' : 'Romania New Leu'},
            {'code' : 'RSD', 'name' : 'Serbia Dinar'},
            {'code' : 'RUB', 'name' : 'Russia Ruble'},
            {'code' : 'RWF', 'name' : 'Rwanda Franc'},
            {'code' : 'SAR', 'name' : 'Saudi Arabia Riyal'},
            {'code' : 'SBD', 'name' : 'Solomon Islands Dollar'},
            {'code' : 'SCR', 'name' : 'Seychelles Rupee'},
            {'code' : 'SDG', 'name' : 'Sudan Pound'},
            {'code' : 'SEK', 'name' : 'Sweden Krona'},
            {'code' : 'SGD', 'name' : 'Singapore Dollar'},
            {'code' : 'SHP', 'name' : 'Saint Helena Pound'},
            {'code' : 'SLL', 'name' : 'Sierra Leone Leone'},
            {'code' : 'SOS', 'name' : 'Somalia Shilling'},
            {'code' : 'SPL', 'name' : 'Seborga Luigino'},
            {'code' : 'SRD', 'name' : 'Suriname Dollar'},
            {'code' : 'STD', 'name' : 'São Tomé and Príncipe Dobra'},
            {'code' : 'SVC', 'name' : 'El Salvador Colon'},
            {'code' : 'SYP', 'name' : 'Syria Pound'},
            {'code' : 'SZL', 'name' : 'Swaziland Lilangeni'},
            {'code' : 'THB', 'name' : 'Thailand Baht'},
            {'code' : 'TJS', 'name' : 'Tajikistan Somoni'},
            {'code' : 'TMT', 'name' : 'Turkmenistan Manat'},
            {'code' : 'TND', 'name' : 'Tunisia Dinar'},
            {'code' : 'TOP', 'name' : 'Tonga Pa\'anga'},
            {'code' : 'TRY', 'name' : 'Turkey Lira'},
            {'code' : 'TTD', 'name' : 'Trinidad and Tobago Dollar'},
            {'code' : 'TVD', 'name' : 'Tuvalu Dollar'},
            {'code' : 'TWD', 'name' : 'Taiwan New Dollar'},
            {'code' : 'TZS', 'name' : 'Tanzania Shilling'},
            {'code' : 'UAH', 'name' : 'Ukraine Hryvnia'},
            {'code' : 'UGX', 'name' : 'Uganda Shilling'},
            {'code' : 'USD', 'name' : 'United States Dollar'},
            {'code' : 'UYU', 'name' : 'Uruguay Peso'},
            {'code' : 'UZS', 'name' : 'Uzbekistan Som'},
            {'code' : 'VEF', 'name' : 'Venezuela Bolivar'},
            {'code' : 'VND', 'name' : 'Viet Nam Dong'},
            {'code' : 'VUV', 'name' : 'Vanuatu Vatu'},
            {'code' : 'WST', 'name' : 'Samoa Tala'},
            {'code' : 'XAF', 'name' : 'Communauté Financière Africaine (BEAC) CFA Franc BEAC'},
            {'code' : 'XCD', 'name' : 'East Caribbean Dollar'},
            {'code' : 'XDR', 'name' : 'International Monetary Fund (IMF) Special Drawing Rights'},
            {'code' : 'XOF', 'name' : 'Communauté Financière Africaine (BCEAO) Franc'},
            {'code' : 'XPF', 'name' : 'Comptoirs Français du Pacifique (CFP) Franc'},
            {'code' : 'YER', 'name' : 'Yemen Rial'},
            {'code' : 'ZAR', 'name' : 'South Africa Rand'},
            {'code' : 'ZMW', 'name' : 'Zambia Kwacha'},
            {'code' : 'ZWD', 'name' : 'Zimbabwe Dollar'}
        ]
    };

    var o_hasOwnProperty = Object.prototype.hasOwnProperty;
    var o_keys = (Object.keys || function(obj) {
      var result = [];
      for (var key in obj) {
        if (o_hasOwnProperty.call(obj, key)) {
          result.push(key);
        }
      }

      return result;
    });

    function _copyObject(source, target) {
      var keys = o_keys(source);

      for (var i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        target[key] = source[key] || target[key];
      }
    }

    function _copyArray(source, target) {
      for (var i = 0, l = source.length; i < l; i++) {
        target[i] = source[i];
      }
    }

    function copyObject(source, _target) {
        var isArray = Array.isArray(source);
        var target = _target || (isArray ? new Array(source.length) : {});

        if (isArray) {
          _copyArray(source, target);
        } else {
          _copyObject(source, target);
        }

        return target;
    }

    /** Get the data based on key**/
    Chance.prototype.get = function (name) {
        return copyObject(data[name]);
    };

    // Mac Address
    Chance.prototype.mac_address = function(options){
        // typically mac addresses are separated by ":"
        // however they can also be separated by "-"
        // the network variant uses a dot every fourth byte

        options = initOptions(options);
        if(!options.separator) {
            options.separator =  options.networkVersion ? "." : ":";
        }

        var mac_pool="ABCDEF1234567890",
            mac = "";
        if(!options.networkVersion) {
            mac = this.n(this.string, 6, { pool: mac_pool, length:2 }).join(options.separator);
        } else {
            mac = this.n(this.string, 3, { pool: mac_pool, length:4 }).join(options.separator);
        }

        return mac;
    };

    Chance.prototype.normal = function (options) {
        options = initOptions(options, {mean : 0, dev : 1});

        // The Marsaglia Polar method
        var s, u, v, norm,
            mean = options.mean,
            dev = options.dev;

        do {
            // U and V are from the uniform distribution on (-1, 1)
            u = this.random() * 2 - 1;
            v = this.random() * 2 - 1;

            s = u * u + v * v;
        } while (s >= 1);

        // Compute the standard normal variate
        norm = u * Math.sqrt(-2 * Math.log(s) / s);

        // Shape and scale
        return dev * norm + mean;
    };

    Chance.prototype.radio = function (options) {
        // Initial Letter (Typically Designated by Side of Mississippi River)
        options = initOptions(options, {side : "?"});
        var fl = "";
        switch (options.side.toLowerCase()) {
        case "east":
        case "e":
            fl = "W";
            break;
        case "west":
        case "w":
            fl = "K";
            break;
        default:
            fl = this.character({pool: "KW"});
            break;
        }

        return fl + this.character({alpha: true, casing: "upper"}) +
                this.character({alpha: true, casing: "upper"}) +
                this.character({alpha: true, casing: "upper"});
    };

    // Set the data as key and data or the data map
    Chance.prototype.set = function (name, values) {
        if (typeof name === "string") {
            data[name] = values;
        } else {
            data = copyObject(name, data);
        }
    };

    Chance.prototype.tv = function (options) {
        return this.radio(options);
    };

    // ID number for Brazil companies
    Chance.prototype.cnpj = function () {
        var n = this.n(this.natural, 8, { max: 9 });
        var d1 = 2+n[7]*6+n[6]*7+n[5]*8+n[4]*9+n[3]*2+n[2]*3+n[1]*4+n[0]*5;
        d1 = 11 - (d1 % 11);
        if (d1>=10){
            d1 = 0;
        }
        var d2 = d1*2+3+n[7]*7+n[6]*8+n[5]*9+n[4]*2+n[3]*3+n[2]*4+n[1]*5+n[0]*6;
        d2 = 11 - (d2 % 11);
        if (d2>=10){
            d2 = 0;
        }
        return ''+n[0]+n[1]+'.'+n[2]+n[3]+n[4]+'.'+n[5]+n[6]+n[7]+'/0001-'+d1+d2;
    };

    // -- End Miscellaneous --

    Chance.prototype.mersenne_twister = function (seed) {
        return new MersenneTwister(seed);
    };

    // Mersenne Twister from https://gist.github.com/banksean/300494
    var MersenneTwister = function (seed) {
        if (seed === undefined) {
            seed = new Date().getTime();
        }
        /* Period parameters */
        this.N = 624;
        this.M = 397;
        this.MATRIX_A = 0x9908b0df;   /* constant vector a */
        this.UPPER_MASK = 0x80000000; /* most significant w-r bits */
        this.LOWER_MASK = 0x7fffffff; /* least significant r bits */

        this.mt = new Array(this.N); /* the array for the state vector */
        this.mti = this.N + 1; /* mti==N + 1 means mt[N] is not initialized */

        this.init_genrand(seed);
    };

    /* initializes mt[N] with a seed */
    MersenneTwister.prototype.init_genrand = function (s) {
        this.mt[0] = s >>> 0;
        for (this.mti = 1; this.mti < this.N; this.mti++) {
            s = this.mt[this.mti - 1] ^ (this.mt[this.mti - 1] >>> 30);
            this.mt[this.mti] = (((((s & 0xffff0000) >>> 16) * 1812433253) << 16) + (s & 0x0000ffff) * 1812433253) + this.mti;
            /* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */
            /* In the previous versions, MSBs of the seed affect   */
            /* only MSBs of the array mt[].                        */
            /* 2002/01/09 modified by Makoto Matsumoto             */
            this.mt[this.mti] >>>= 0;
            /* for >32 bit machines */
        }
    };

    /* initialize by an array with array-length */
    /* init_key is the array for initializing keys */
    /* key_length is its length */
    /* slight change for C++, 2004/2/26 */
    MersenneTwister.prototype.init_by_array = function (init_key, key_length) {
        var i = 1, j = 0, k, s;
        this.init_genrand(19650218);
        k = (this.N > key_length ? this.N : key_length);
        for (; k; k--) {
            s = this.mt[i - 1] ^ (this.mt[i - 1] >>> 30);
            this.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1664525) << 16) + ((s & 0x0000ffff) * 1664525))) + init_key[j] + j; /* non linear */
            this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */
            i++;
            j++;
            if (i >= this.N) { this.mt[0] = this.mt[this.N - 1]; i = 1; }
            if (j >= key_length) { j = 0; }
        }
        for (k = this.N - 1; k; k--) {
            s = this.mt[i - 1] ^ (this.mt[i - 1] >>> 30);
            this.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1566083941) << 16) + (s & 0x0000ffff) * 1566083941)) - i; /* non linear */
            this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */
            i++;
            if (i >= this.N) { this.mt[0] = this.mt[this.N - 1]; i = 1; }
        }

        this.mt[0] = 0x80000000; /* MSB is 1; assuring non-zero initial array */
    };

    /* generates a random number on [0,0xffffffff]-interval */
    MersenneTwister.prototype.genrand_int32 = function () {
        var y;
        var mag01 = new Array(0x0, this.MATRIX_A);
        /* mag01[x] = x * MATRIX_A  for x=0,1 */

        if (this.mti >= this.N) { /* generate N words at one time */
            var kk;

            if (this.mti === this.N + 1) {   /* if init_genrand() has not been called, */
                this.init_genrand(5489); /* a default initial seed is used */
            }
            for (kk = 0; kk < this.N - this.M; kk++) {
                y = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk + 1]&this.LOWER_MASK);
                this.mt[kk] = this.mt[kk + this.M] ^ (y >>> 1) ^ mag01[y & 0x1];
            }
            for (;kk < this.N - 1; kk++) {
                y = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk + 1]&this.LOWER_MASK);
                this.mt[kk] = this.mt[kk + (this.M - this.N)] ^ (y >>> 1) ^ mag01[y & 0x1];
            }
            y = (this.mt[this.N - 1]&this.UPPER_MASK)|(this.mt[0]&this.LOWER_MASK);
            this.mt[this.N - 1] = this.mt[this.M - 1] ^ (y >>> 1) ^ mag01[y & 0x1];

            this.mti = 0;
        }

        y = this.mt[this.mti++];

        /* Tempering */
        y ^= (y >>> 11);
        y ^= (y << 7) & 0x9d2c5680;
        y ^= (y << 15) & 0xefc60000;
        y ^= (y >>> 18);

        return y >>> 0;
    };

    /* generates a random number on [0,0x7fffffff]-interval */
    MersenneTwister.prototype.genrand_int31 = function () {
        return (this.genrand_int32() >>> 1);
    };

    /* generates a random number on [0,1]-real-interval */
    MersenneTwister.prototype.genrand_real1 = function () {
        return this.genrand_int32() * (1.0 / 4294967295.0);
        /* divided by 2^32-1 */
    };

    /* generates a random number on [0,1)-real-interval */
    MersenneTwister.prototype.random = function () {
        return this.genrand_int32() * (1.0 / 4294967296.0);
        /* divided by 2^32 */
    };

    /* generates a random number on (0,1)-real-interval */
    MersenneTwister.prototype.genrand_real3 = function () {
        return (this.genrand_int32() + 0.5) * (1.0 / 4294967296.0);
        /* divided by 2^32 */
    };

    /* generates a random number on [0,1) with 53-bit resolution*/
    MersenneTwister.prototype.genrand_res53 = function () {
        var a = this.genrand_int32()>>>5, b = this.genrand_int32()>>>6;
        return (a * 67108864.0 + b) * (1.0 / 9007199254740992.0);
    };


    // CommonJS module
    if (typeof exports !== 'undefined') {
        if (typeof module !== 'undefined' && module.exports) {
            exports = module.exports = Chance;
        }
        exports.Chance = Chance;
    }

    // Register as an anonymous AMD module
    if (typeof define === 'function' && define.amd) {
        define('chance',[], function () {
            return Chance;
        });
    }

    // if there is a importsScrips object define chance for worker
    if (typeof importScripts !== 'undefined') {
        chance = new Chance();
    }

    // If there is a window object, that at least has a document property,
    // instantiate and define chance on the window
    if (typeof window === "object" && typeof window.document === "object") {
        window.Chance = Chance;
        window.chance = new Chance();
    }
})();

/*global define */

define('docs/ExampleData/Users',['require','backbone','chance'],function (require) {
  
  var Backbone = require('backbone');
  var Chance = require('chance');


  var chance = new Chance();
  var autoinc = 1;


  var Users = Backbone.Collection.extend({
    url: '/fake/users',
    addRandom: function (count) {
      count = count || 1;
      for (var i = 0; i < count; i++) {
        this.add({ id: autoinc, username: chance.name() });
        autoinc++;
      }
    },
    removeRandom: function () {
      this.remove(this.sample());
    },
    fakeFetch: function (time) {
      var self = this;
      time = time || 500;
      this.trigger('request');
      setTimeout(function () {
        self.addRandom(2);
        self.trigger('sync');
      }, time);
    }
  });
  return Users;
});


/*global define */
define('jsx!docs/List/Basic',['require','react.backbone','jsx!Oui/List/List','../ExampleData/Users'],function (require) {
  
  var React = require('react.backbone');
  var List = require('jsx!Oui/List/List');
  var Users = require('../ExampleData/Users');

  var users = new Users();
  users.addRandom(2);

  var Row = React.createBackboneClass({
    render: function () {
      return React.createElement("li", null, this.getModel().get('username'));
    }
  });

  var BasicListExample = React.createClass({displayName: 'BasicListExample',
    add: function () {
      users.addRandom();
    },
    remove: function () {
      users.removeRandom();
    },
    fetch: function () {
      users.fakeFetch();
    },
    render: function () {
      return (
        React.createElement("div", null, 
          React.createElement(List, {collection: users, row: Row}), 
          React.createElement("div", null, 
            React.createElement("a", {onClick: this.add, className: "docs-button"}, "Add"), 
            React.createElement("a", {onClick: this.remove, className: "docs-button"}, "Remove"), 
            React.createElement("a", {onClick: this.fetch, className: "docs-button"}, "Simulate Fetch")
          )
        )
      );
    }
  });
  return BasicListExample;
});

/** @license
 * RequireJS plugin for loading JSON files
 * - depends on Text plugin and it was HEAVILY "inspired" by it as well.
 * Author: Miller Medeiros
 * Version: 0.4.0 (2014/04/10)
 * Released under the MIT license
 */
define('json',['text'], function(text){

    var CACHE_BUST_QUERY_PARAM = 'bust',
        CACHE_BUST_FLAG = '!bust',
        jsonParse = (typeof JSON !== 'undefined' && typeof JSON.parse === 'function')? JSON.parse : function(val){
            return eval('('+ val +')'); //quick and dirty
        },
        buildMap = {};

    function cacheBust(url){
        url = url.replace(CACHE_BUST_FLAG, '');
        url += (url.indexOf('?') < 0)? '?' : '&';
        return url + CACHE_BUST_QUERY_PARAM +'='+ Math.round(2147483647 * Math.random());
    }

    //API
    return {

        load : function(name, req, onLoad, config) {
            if (( config.isBuild && (config.inlineJSON === false || name.indexOf(CACHE_BUST_QUERY_PARAM +'=') !== -1)) || (req.toUrl(name).indexOf('empty:') === 0)) {
                //avoid inlining cache busted JSON or if inlineJSON:false
                //and don't inline files marked as empty!
                onLoad(null);
            } else {
                text.get(req.toUrl(name), function(data){
                    if (config.isBuild) {
                        buildMap[name] = data;
                        onLoad(data);
                    } else {
                        onLoad(jsonParse(data));
                    }
                },
                    onLoad.error, {
                        accept: 'application/json'
                    }
                );
            }
        },

        normalize : function (name, normalize) {
            // used normalize to avoid caching references to a "cache busted" request
            if (name.indexOf(CACHE_BUST_FLAG) !== -1) {
                name = cacheBust(name);
            }
            // resolve any relative paths
            return normalize(name);
        },

        //write method based on RequireJS official text plugin by James Burke
        //https://github.com/jrburke/requirejs/blob/master/text.js
        write : function(pluginName, moduleName, write){
            if(moduleName in buildMap){
                var content = buildMap[moduleName];
                write('define("'+ pluginName +'!'+ moduleName +'", function(){ return '+ content +';});\n');
            }
        }

    };
});


define("json!docs/List/manifest.json", function(){ return {
  "properties": [
    {
      "name": "collection",
      "type": "Backbone.Collection",
      "required": true,
      "description": "Collection over which to iterate, drives row data"
    },{
      "name": "row",
      "type": "ReactBackbone",
      "required": false,
      "description": "Customized row element, (view for each model)"
    },{
      "name": "empty",
      "type": "React Class",
      "required": false,
      "description": "Empty message element to display in the case that the list is empty."
    },{
      "name": "loader",
      "type": "React Class",
      "required": false,
      "description": "Loader element to display when content is being fetched from the server"
    }
  ]
}
;});


define('mdown!docs/Icon/Icon.md',[],function () { return '<p>Use Icon elements when you need to display an affordance to the user, but are too limited on space to include text.</p>\n\n<p>If the Icon should be a button, make sure to include a title to enhance accessibility</p>\n\n<p>The icons themselves are built from a file in this repository, <code>assets/icomoon/selection.json</code>.  You can modify this selection of icons using the <a href="https://icomoon.io/">icomoon app</a></p>';});


define('text!docs/Icon/Icon.jsx',[],function () { return '/*global define */\ndefine(function (require) {\n\n  \'use strict\';\n  var React = require(\'react.backbone\');\n  var Icon = require(\'jsx!Oui/Icon/Icon\');\n  var Icons = require(\'../ExampleData/Icons\');\n\n  var IconInfo = React.createBackboneClass({\n    getInitialState: function () {\n      return { expanded: false };\n    },\n    handleOver: function () {\n      this.setState({ expanded: true });\n    },\n    handleOut: function () {\n      this.setState({ expanded: false });\n    },\n    render: function () {\n      var name = this.getModel().get(\'name\');\n      var classSet = React.addons.classSet({ \'icon-info\': true, \'expanded\': this.state.expanded });\n      var iconStyle = { color: this.state.expanded ? \'#7AA8D9\' : \'#999999\'}\n      return (\n        <div className="icon-example" onMouseOver={this.handleOver} onMouseOut={this.handleOut}>\n          <Icon style={iconStyle} name={name} />\n          <div className={classSet}>{name}</div>\n        </div>\n      );\n    }\n  });\n\n  var IconList = React.createBackboneClass({\n    render: function () {\n      return (\n        <div className="icon-examples clearfix">\n          {this.getCollection().map(function (icon) {\n            return <IconInfo model={icon} key={icon.id} />;\n          })}\n        </div>\n      );\n    }\n  });\n  return React.createClass({\n    render: function () {\n      return <IconList collection={Icons} />;\n    }\n  });\n});\n';});


define("json!docs/../../assets/icomoon/selection.json", function(){ return {
	"IcoMoonType": "selection",
	"icons": [
		{
			"icon": {
				"paths": [
					"M512 85.333c47.147 0 85.333 38.187 85.333 85.333s-38.187 85.333-85.333 85.333-85.333-38.187-85.333-85.333 38.187-85.333 85.333-85.333zM896 384h-256v554.667h-85.333v-256h-85.333v256h-85.333v-554.667h-256v-85.333h768v85.333z"
				],
				"attrs": [],
				"tags": [
					"accessibility"
				],
				"grid": 24
			},
			"attrs": [],
			"properties": {
				"id": 1,
				"order": 491,
				"prevSize": 24,
				"code": 58880,
				"name": "accessibility"
			},
			"setIdx": 0,
			"iconIdx": 0
		},
		{
			"icon": {
				"paths": [
					"M626.987 729.813c-31.787 24.533-72.533 38.187-114.987 38.187s-83.2-13.653-114.987-38.187c-9.173-7.253-22.613-5.547-29.867 3.84s-5.547 22.613 3.84 29.867c39.040 30.293 89.173 47.147 141.013 47.147s101.973-16.853 141.013-47.147c9.387-7.253 11.093-20.693 3.84-29.867-7.253-9.387-20.693-11.093-29.867-3.84z",
					"M405.333 533.333c0 23.564-19.103 42.667-42.667 42.667s-42.667-19.103-42.667-42.667c0-23.564 19.103-42.667 42.667-42.667s42.667 19.103 42.667 42.667z",
					"M512 0c-282.667 0-512 229.333-512 512s229.333 512 512 512 512-229.333 512-512-229.333-512-512-512zM851.627 632.32c-46.507 159.573-182.187 275.413-343.040 275.413-161.067 0-296.96-116.267-343.253-276.267-50.773-4.267-90.667-50.347-90.667-107.093 0-54.187 36.48-98.773 83.84-106.453v-0.213c89.173-62.507 162.347-148.907 174.72-215.467l0.213 0.213v-0.64c57.813 112 268.8 221.44 504.533 215.893 4.267-0.64 8.32-1.493 12.587-1.493 54.4 0 98.56 48.427 98.56 108.16 0.213 59.307-43.52 107.52-97.493 107.947z",
					"M704 533.333c0 23.564-19.103 42.667-42.667 42.667s-42.667-19.103-42.667-42.667c0-23.564 19.103-42.667 42.667-42.667s42.667 19.103 42.667 42.667z"
				],
				"attrs": [],
				"tags": [
					"face-unlock"
				],
				"grid": 24
			},
			"attrs": [],
			"properties": {
				"id": 41,
				"order": 490,
				"prevSize": 24,
				"code": 58881,
				"name": "face-unlock"
			},
			"setIdx": 0,
			"iconIdx": 1
		},
		{
			"icon": {
				"paths": [
					"M810.667 128h-42.667v-85.333h-85.333v85.333h-341.333v-85.333h-85.333v85.333h-42.667c-47.147 0-85.333 38.187-85.333 85.333v597.333c0 47.147 38.187 85.333 85.333 85.333h597.333c47.147 0 85.333-38.187 85.333-85.333v-597.333c0-47.147-38.187-85.333-85.333-85.333zM512 256c70.613 0 128 57.387 128 128 0 70.827-57.387 128-128 128s-128-57.173-128-128c0-70.613 57.387-128 128-128zM768 768h-512v-42.667c0-85.333 170.667-132.267 256-132.267s256 46.933 256 132.267v42.667z"
				],
				"attrs": [],
				"tags": [
					"perm-contact-cal"
				],
				"grid": 24
			},
			"attrs": [],
			"properties": {
				"id": 77,
				"order": 489,
				"prevSize": 24,
				"code": 58882,
				"name": "perm-contact-cal"
			},
			"setIdx": 0,
			"iconIdx": 2
		},
		{
			"icon": {
				"paths": [
					"M128 640h768v-85.333h-768v85.333zM128 810.667h768v-85.333h-768v85.333zM128 469.333h768v-85.333h-768v85.333zM128 213.333v85.333h768v-85.333h-768z"
				],
				"attrs": [],
				"tags": [
					"reorder"
				],
				"grid": 24
			},
			"attrs": [],
			"properties": {
				"id": 91,
				"order": 497,
				"prevSize": 24,
				"code": 58883,
				"name": "reorder"
			},
			"setIdx": 0,
			"iconIdx": 3
		},
		{
			"icon": {
				"paths": [
					"M853.333 0h-682.667v85.333h682.667v-85.333zM170.667 1024h682.667v-85.333h-682.667v85.333zM853.333 170.667h-682.667c-47.147 0-85.333 38.187-85.333 85.333v512c0 47.147 38.187 85.333 85.333 85.333h682.667c47.147 0 85.333-38.187 85.333-85.333v-512c0-47.147-38.187-85.333-85.333-85.333zM512 288c52.907 0 96 43.093 96 96 0 53.12-43.093 96-96 96s-96-42.88-96-96c0-52.907 43.093-96 96-96zM725.333 725.333h-426.667v-64c0-71.040 142.293-106.667 213.333-106.667s213.333 35.627 213.333 106.667v64z"
				],
				"attrs": [],
				"tags": [
					"contacts"
				],
				"grid": 24
			},
			"attrs": [],
			"properties": {
				"id": 225,
				"order": 492,
				"prevSize": 24,
				"code": 58884,
				"name": "contacts"
			},
			"setIdx": 0,
			"iconIdx": 4
		},
		{
			"icon": {
				"paths": [
					"M938.667 128h-853.333c-47.147 0-85.333 38.187-85.333 85.333v597.333c0 47.147 38.187 85.333 85.333 85.333h853.333c47.147 0 84.907-38.187 84.907-85.333l0.427-597.333c0-47.147-38.187-85.333-85.333-85.333zM341.333 256c70.613 0 128 57.387 128 128 0 70.827-57.387 128-128 128s-128-57.173-128-128c0-70.613 57.387-128 128-128zM597.333 768h-512v-42.667c0-85.333 170.667-132.267 256-132.267s256 46.933 256 132.267v42.667zM761.6 597.333h69.973l64.427 85.333-85.12 85.12c-55.68-41.813-97.28-101.333-116.48-170.453-7.467-27.307-11.733-55.68-11.733-85.333s4.267-58.027 11.947-85.333c18.987-69.12 60.587-128.64 116.48-170.453l84.907 85.12-64.427 85.333h-69.973c-9.387 26.667-14.933 55.467-14.933 85.333s5.333 58.667 14.933 85.333z"
				],
				"attrs": [],
				"tags": [
					"quick-contacts-dialer"
				],
				"grid": 24
			},
			"attrs": [],
			"properties": {
				"id": 242,
				"order": 493,
				"prevSize": 24,
				"code": 58885,
				"name": "quick-contacts-dialer"
			},
			"setIdx": 0,
			"iconIdx": 5
		},
		{
			"icon": {
				"paths": [
					"M896 341.333v-42.667l-128 85.333-128-85.333v42.667l128 85.333 128-85.333zM938.667 128h-853.333c-47.147 0-85.333 38.187-85.333 85.333v597.333c0 47.147 38.187 85.333 85.333 85.333h853.333c47.147 0 84.907-38.187 84.907-85.333l0.427-597.333c0-47.147-38.187-85.333-85.333-85.333zM341.333 256c70.613 0 128 57.387 128 128 0 70.827-57.387 128-128 128s-128-57.173-128-128c0-70.613 57.387-128 128-128zM597.333 768h-512v-42.667c0-85.333 170.667-132.267 256-132.267s256 46.933 256 132.267v42.667zM938.667 512h-341.333v-256h341.333v256z"
				],
				"attrs": [],
				"tags": [
					"quick-contacts-mail"
				],
				"grid": 24
			},
			"attrs": [],
			"properties": {
				"id": 243,
				"order": 494,
				"prevSize": 24,
				"code": 58886,
				"name": "quick-contacts-mail"
			},
			"setIdx": 0,
			"iconIdx": 6
		},
		{
			"icon": {
				"paths": [
					"M810.667 554.667h-256v256h-85.333v-256h-256v-85.333h256v-256h85.333v256h256v85.333z"
				],
				"attrs": [],
				"tags": [
					"add"
				],
				"grid": 24
			},
			"attrs": [],
			"properties": {
				"id": 253,
				"order": 496,
				"prevSize": 24,
				"code": 58887,
				"name": "add"
			},
			"setIdx": 0,
			"iconIdx": 7
		},
		{
			"icon": {
				"paths": [
					"M810.667 273.707l-60.373-60.373-238.293 238.293-238.293-238.293-60.373 60.373 238.293 238.293-238.293 238.293 60.373 60.373 238.293-238.293 238.293 238.293 60.373-60.373-238.293-238.293z"
				],
				"attrs": [],
				"tags": [
					"clear"
				],
				"grid": 24
			},
			"attrs": [],
			"properties": {
				"id": 260,
				"order": 483,
				"prevSize": 24,
				"code": 58888,
				"name": "clear"
			},
			"setIdx": 0,
			"iconIdx": 8
		},
		{
			"icon": {
				"paths": [
					"M256 426.667c-47.147 0-85.333 38.187-85.333 85.333s38.187 85.333 85.333 85.333 85.333-38.187 85.333-85.333-38.187-85.333-85.333-85.333zM768 426.667c-47.147 0-85.333 38.187-85.333 85.333s38.187 85.333 85.333 85.333 85.333-38.187 85.333-85.333-38.187-85.333-85.333-85.333zM512 426.667c-47.147 0-85.333 38.187-85.333 85.333s38.187 85.333 85.333 85.333 85.333-38.187 85.333-85.333-38.187-85.333-85.333-85.333z"
				],
				"attrs": [],
				"tags": [
					"keyboard-control"
				],
				"grid": 24
			},
			"attrs": [],
			"properties": {
				"id": 455,
				"order": 495,
				"prevSize": 24,
				"code": 58889,
				"name": "keyboard-control"
			},
			"setIdx": 0,
			"iconIdx": 9
		},
		{
			"icon": {
				"paths": [
					"M282.667 460.587c61.44 120.747 160.213 219.52 281.173 280.96l93.867-94.080c11.733-11.733 28.587-15.147 43.307-10.453 47.787 15.787 99.2 24.32 152.32 24.32 23.68 0 42.667 18.987 42.667 42.667v149.333c0 23.68-18.987 42.667-42.667 42.667-400.64 0-725.333-324.693-725.333-725.333 0-23.68 19.2-42.667 42.667-42.667h149.333c23.68 0 42.667 18.987 42.667 42.667 0 53.12 8.533 104.533 24.32 152.32 4.693 14.72 1.28 31.573-10.453 43.307l-93.867 94.293z"
				],
				"attrs": [],
				"tags": [
					"local-phone"
				],
				"grid": 24
			},
			"attrs": [],
			"properties": {
				"id": 650,
				"order": 488,
				"prevSize": 24,
				"code": 58890,
				"name": "local-phone"
			},
			"setIdx": 0,
			"iconIdx": 10
		},
		{
			"icon": {
				"paths": [
					"M810.667 128h-597.333c-47.36 0-85.333 38.4-85.333 85.333v597.333c0 46.933 37.973 85.333 85.333 85.333h597.333c47.36 0 85.333-38.4 85.333-85.333v-597.333c0-46.933-37.973-85.333-85.333-85.333zM426.667 725.333l-213.333-213.333 60.16-60.16 153.173 152.747 323.84-323.84 60.16 60.587-384 384z"
				],
				"attrs": [],
				"tags": [
					"check-box"
				],
				"grid": 24
			},
			"attrs": [],
			"properties": {
				"id": 750,
				"order": 487,
				"prevSize": 24,
				"code": 58891,
				"name": "check-box"
			},
			"setIdx": 0,
			"iconIdx": 11
		},
		{
			"icon": {
				"paths": [
					"M810.667 213.333v597.333h-597.333v-597.333h597.333zM810.667 128h-597.333c-46.933 0-85.333 38.4-85.333 85.333v597.333c0 46.933 38.4 85.333 85.333 85.333h597.333c46.933 0 85.333-38.4 85.333-85.333v-597.333c0-46.933-38.4-85.333-85.333-85.333z"
				],
				"attrs": [],
				"tags": [
					"check-box-outline-blank"
				],
				"grid": 24
			},
			"attrs": [],
			"properties": {
				"id": 751,
				"order": 486,
				"prevSize": 24,
				"code": 58892,
				"name": "check-box-outline-blank"
			},
			"setIdx": 0,
			"iconIdx": 12
		},
		{
			"icon": {
				"paths": [
					"M512 85.333c-235.52 0-426.667 191.147-426.667 426.667s191.147 426.667 426.667 426.667 426.667-191.147 426.667-426.667-191.147-426.667-426.667-426.667zM512 853.333c-188.587 0-341.333-152.747-341.333-341.333s152.747-341.333 341.333-341.333 341.333 152.747 341.333 341.333-152.747 341.333-341.333 341.333z"
				],
				"attrs": [],
				"tags": [
					"radio-button-off"
				],
				"grid": 24
			},
			"attrs": [],
			"properties": {
				"id": 752,
				"order": 484,
				"prevSize": 24,
				"code": 58893,
				"name": "radio-button-off"
			},
			"setIdx": 0,
			"iconIdx": 13
		},
		{
			"icon": {
				"paths": [
					"M512 298.667c-117.76 0-213.333 95.573-213.333 213.333s95.573 213.333 213.333 213.333 213.333-95.573 213.333-213.333-95.573-213.333-213.333-213.333zM512 85.333c-235.52 0-426.667 191.147-426.667 426.667s191.147 426.667 426.667 426.667 426.667-191.147 426.667-426.667-191.147-426.667-426.667-426.667zM512 853.333c-188.587 0-341.333-152.747-341.333-341.333s152.747-341.333 341.333-341.333 341.333 152.747 341.333 341.333-152.747 341.333-341.333 341.333z"
				],
				"attrs": [],
				"tags": [
					"radio-button-on"
				],
				"grid": 24
			},
			"attrs": [],
			"properties": {
				"id": 753,
				"order": 485,
				"prevSize": 24,
				"code": 58894,
				"name": "radio-button-on"
			},
			"setIdx": 0,
			"iconIdx": 14
		},
		{
			"icon": {
				"paths": [
					"M972.512 405.76l-98.048-19.648c-4.928-14.176-10.752-27.936-17.184-41.248l55.552-83.328c16.928-25.376 13.568-59.2-8-80.736l-61.568-61.568c-12.384-12.384-28.736-18.752-45.312-18.752-12.256 0-24.64 3.52-35.424 10.752l-83.328 55.52c-13.376-6.464-27.136-12.224-41.312-17.152l-19.648-98.080c-5.952-29.952-32.256-51.456-62.752-51.456h-87.040c-30.496 0-56.768 21.536-62.752 51.456l-19.648 98.080c-14.176 4.928-27.936 10.72-41.248 17.152l-83.296-55.52c-10.848-7.232-23.2-10.752-35.488-10.752-16.544 0-32.896 6.368-45.28 18.752l-61.536 61.568c-21.568 21.568-24.928 55.36-8 80.736l55.52 83.328c-6.464 13.344-12.224 27.104-17.152 41.28l-98.112 19.616c-29.92 5.984-51.456 32.256-51.456 62.752v87.040c0 30.496 21.536 56.8 51.456 62.752l98.080 19.68c4.928 14.176 10.72 27.936 17.152 41.248l-55.488 83.328c-16.928 25.376-13.568 59.2 8 80.736l61.568 61.568c12.384 12.384 28.736 18.752 45.28 18.752 12.288 0 24.672-3.552 35.456-10.752l83.328-55.552c13.344 6.496 27.104 12.256 41.28 17.184l19.616 98.048c5.984 29.952 32.256 51.488 62.752 51.488h87.040c30.496 0 56.8-21.568 62.752-51.488l19.68-98.048c14.176-4.928 27.936-10.752 41.248-17.184l83.328 55.552c10.816 7.2 23.2 10.752 35.424 10.752 16.576 0 32.928-6.368 45.312-18.752l61.568-61.568c21.568-21.568 24.928-55.36 8-80.736l-55.552-83.328c6.496-13.376 12.256-27.136 17.184-41.312l98.048-19.616c29.92-5.92 51.488-32.256 51.488-62.752v-87.040c0-30.496-21.568-56.768-51.488-62.752zM861.888 575.2c-22.24 4.448-40.448 20.32-47.872 41.76-4.128 11.808-8.928 23.264-14.304 34.368-9.952 20.448-8.256 44.576 4.32 63.424l55.552 83.328-61.568 61.568-83.328-55.552c-10.688-7.136-23.072-10.752-35.488-10.752-9.504 0-19.072 2.112-27.872 6.368-11.136 5.376-22.56 10.24-34.432 14.368-21.376 7.424-37.248 25.632-41.696 47.872l-19.68 98.112h-87.040l-19.616-98.112c-4.448-22.24-20.32-40.448-41.728-47.872-11.808-4.128-23.296-8.928-34.4-14.304-8.832-4.32-18.368-6.432-27.904-6.432-12.448 0-24.8 3.616-35.488 10.752l-83.328 55.552-61.568-61.568 55.52-83.328c12.576-18.88 14.208-43.008 4.384-63.36-5.376-11.136-10.208-22.56-14.336-34.432-7.424-21.376-25.664-37.248-47.872-41.696l-98.080-19.68-0.064-87.072 98.112-19.616c22.208-4.448 40.448-20.32 47.872-41.728 4.128-11.808 8.896-23.296 14.304-34.4 9.92-20.416 8.256-44.544-4.352-63.392l-55.488-83.328 61.536-61.568 83.328 55.52c10.688 7.136 23.072 10.752 35.488 10.752 9.504 0 19.040-2.112 27.872-6.368 11.104-5.376 22.56-10.208 34.4-14.336 21.408-7.424 37.28-25.664 41.728-47.872l19.648-98.080 87.040-0.032 19.616 98.112c4.448 22.208 20.32 40.448 41.76 47.872 11.808 4.128 23.264 8.896 34.368 14.304 8.864 4.288 18.368 6.4 27.936 6.4 12.448 0 24.8-3.616 35.488-10.752l83.328-55.52 61.568 61.568-55.552 83.328c-12.576 18.88-14.176 42.976-4.384 63.36 5.376 11.104 10.24 22.56 14.368 34.4 7.424 21.408 25.632 37.28 47.872 41.728l98.048 19.648 0.096 87.040-98.112 19.648zM512 288.032c-123.68 0-224 100.32-224 224 0 123.712 100.32 224 224 224s224-100.32 224-224c0-123.68-100.32-224-224-224zM512 708.064c-108.224 0-196-87.808-196-196 0-108.224 87.776-196 196-196 108.192 0 196 87.776 196 196 0 108.192-87.808 196-196 196zM512 384.032c-70.72 0-128 57.28-128 128 0 70.688 57.28 128 128 128 70.688 0 128-57.312 128-128s-57.312-128-128-128zM512 608.064c-52.992 0-96-43.008-96-96s43.008-96 96-96 96 43.008 96 96c0 52.992-43.008 96-96 96z"
				],
				"attrs": [],
				"tags": [
					"settings",
					"cog",
					"preferences"
				],
				"grid": 32
			},
			"attrs": [],
			"properties": {
				"id": 10,
				"order": 480,
				"prevSize": 32,
				"code": 58895,
				"name": "settings"
			},
			"setIdx": 0,
			"iconIdx": 15
		},
		{
			"icon": {
				"paths": [
					"M256 192.672v-96.672c0-52.928-43.072-96-96-96s-96 43.072-96 96v96.672c-38.656 29.28-64 75.136-64 127.328s25.344 98.048 64 127.264v480.736c0 52.928 43.072 96 96 96s96-43.072 96-96v-480.736c38.656-29.184 64-75.072 64-127.264s-25.344-98.048-64-127.328zM128 96c0-17.696 14.304-32 32-32s32 14.304 32 32v67.2c-10.336-2.080-21.024-3.2-32-3.2s-21.664 1.12-32 3.2v-67.2zM192 928c0 17.696-14.304 32-32 32s-32-14.304-32-32v-451.264c10.336 2.144 21.024 3.264 32 3.264s21.664-1.12 32-3.264v451.264zM251.68 346.88c-0.512 1.696-0.96 3.36-1.568 5.056-3.040 8.448-6.944 16.448-12.096 23.552-0.128 0.192-0.32 0.32-0.448 0.512-5.568 7.616-12.192 14.368-19.712 20.064-0.128 0.128-0.224 0.192-0.32 0.256-7.712 5.824-16.32 10.496-25.568 13.76-10.016 3.616-20.672 5.92-31.968 5.92s-21.952-2.304-32-5.952c-9.248-3.264-17.856-7.936-25.568-13.76-0.096-0.064-0.192-0.128-0.32-0.256-7.52-5.696-14.144-12.448-19.712-20.064-0.128-0.192-0.32-0.32-0.448-0.512-5.152-7.136-9.056-15.136-12.096-23.552-0.608-1.696-1.056-3.36-1.568-5.056-2.528-8.544-4.288-17.472-4.288-26.848 0-9.44 1.76-18.368 4.32-26.944 0.512-1.696 0.96-3.36 1.568-4.992 3.008-8.448 6.912-16.448 12.096-23.616 0.128-0.192 0.32-0.32 0.448-0.512 5.568-7.552 12.192-14.368 19.712-20.064 0.128-0.064 0.224-0.192 0.32-0.256 7.68-5.728 16.288-10.432 25.536-13.728 10.048-3.584 20.704-5.888 32-5.888s21.952 2.304 32 5.888c9.248 3.328 17.856 8 25.568 13.76 0.096 0.064 0.192 0.192 0.32 0.256 7.52 5.696 14.144 12.512 19.712 20.064 0.128 0.192 0.32 0.32 0.448 0.512 5.152 7.136 9.056 15.136 12.064 23.584 0.608 1.632 1.088 3.296 1.568 4.992 2.56 8.576 4.32 17.504 4.32 26.944 0 9.376-1.76 18.304-4.32 26.88zM960 192.672v-96.672c0-52.928-43.072-96-96-96s-96 43.072-96 96v96.672c-38.688 29.28-64 75.136-64 127.328s25.312 98.048 64 127.264v480.736c0 52.928 43.072 96 96 96s96-43.072 96-96v-480.736c38.624-29.184 64-75.072 64-127.264s-25.376-98.048-64-127.328zM832 96c0-17.696 14.304-32 32-32s32 14.304 32 32v67.2c-10.368-2.080-21.056-3.2-32-3.2-11.008 0-21.696 1.12-32 3.2v-67.2zM896 928c0 17.696-14.304 32-32 32s-32-14.304-32-32v-451.264c10.304 2.144 20.992 3.264 32 3.264 10.944 0 21.632-1.12 32-3.264v451.264zM955.68 346.88c-0.512 1.696-0.992 3.36-1.568 5.056-3.072 8.448-6.944 16.448-12.128 23.552-0.128 0.192-0.32 0.32-0.448 0.512-5.568 7.616-12.192 14.368-19.68 20.064-0.128 0.128-0.256 0.192-0.32 0.256-7.744 5.824-16.32 10.496-25.568 13.76-10.016 3.616-20.704 5.92-31.968 5.92-11.328 0-21.952-2.304-32-5.952-9.248-3.264-17.888-7.936-25.568-13.76-0.128-0.064-0.192-0.128-0.32-0.256-7.552-5.696-14.176-12.448-19.744-20.064-0.128-0.192-0.32-0.32-0.448-0.512-5.12-7.136-9.056-15.136-12.064-23.552-0.64-1.696-1.056-3.36-1.568-5.056-2.528-8.544-4.288-17.472-4.288-26.848 0-9.44 1.76-18.368 4.32-26.944 0.512-1.696 0.928-3.36 1.568-4.992 3.008-8.448 6.944-16.448 12.064-23.616 0.128-0.192 0.32-0.32 0.448-0.512 5.568-7.552 12.192-14.368 19.744-20.064 0.128-0.064 0.192-0.192 0.32-0.256 7.68-5.76 16.32-10.432 25.568-13.76 10.016-3.552 20.64-5.856 31.968-5.856 11.264 0 21.952 2.304 32 5.888 9.248 3.328 17.824 8 25.568 13.76 0.064 0.064 0.192 0.192 0.32 0.256 7.488 5.696 14.112 12.512 19.68 20.064 0.128 0.192 0.32 0.32 0.448 0.512 5.184 7.2 9.056 15.2 12.128 23.616 0.576 1.632 1.056 3.328 1.568 4.992 2.528 8.544 4.288 17.472 4.288 26.912 0 9.376-1.76 18.304-4.32 26.88zM608 576.672v-480.672c0-52.928-43.072-96-96-96s-96 43.072-96 96v480.672c-38.656 29.248-64 75.136-64 127.328s25.344 98.048 64 127.264v96.736c0 52.928 43.072 96 96 96s96-43.072 96-96v-96.736c38.624-29.184 64-75.072 64-127.264s-25.376-98.048-64-127.328zM480 96c0-17.696 14.304-32 32-32s32 14.304 32 32v451.2c-10.368-2.048-21.056-3.2-32-3.2-10.976 0-21.664 1.12-32 3.2v-451.2zM544 928c0 17.696-14.304 32-32 32s-32-14.304-32-32v-67.264c10.336 2.144 21.024 3.264 32 3.264 10.944 0 21.632-1.12 32-3.264v67.264zM603.68 730.88c-0.512 1.696-0.992 3.36-1.568 5.056-3.072 8.448-6.944 16.448-12.128 23.552-0.128 0.192-0.32 0.32-0.448 0.512-5.568 7.616-12.192 14.368-19.68 20.064-0.128 0.128-0.256 0.192-0.32 0.256-7.744 5.824-16.32 10.496-25.568 13.76-10.016 3.616-20.704 5.92-31.968 5.92-11.296 0-21.952-2.304-32-5.952-9.248-3.264-17.856-7.936-25.568-13.76-0.096-0.064-0.192-0.128-0.32-0.256-7.52-5.696-14.144-12.448-19.712-20.064-0.128-0.192-0.32-0.32-0.448-0.512-5.152-7.136-9.056-15.136-12.096-23.552-0.608-1.696-1.056-3.36-1.568-5.056-2.528-8.544-4.288-17.472-4.288-26.848 0-9.44 1.76-18.368 4.32-26.944 0.512-1.696 0.96-3.36 1.568-4.992 3.040-8.448 6.944-16.448 12.096-23.616 0.128-0.192 0.32-0.32 0.448-0.512 5.568-7.552 12.192-14.368 19.712-20.064 0.128-0.064 0.224-0.192 0.32-0.256 7.712-5.76 16.32-10.432 25.568-13.76 10.016-3.552 20.672-5.856 31.968-5.856 11.264 0 21.952 2.304 32 5.888 9.248 3.328 17.824 8 25.568 13.76 0.064 0.064 0.192 0.192 0.32 0.256 7.488 5.696 14.112 12.512 19.68 20.064 0.128 0.192 0.32 0.32 0.448 0.512 5.184 7.2 9.056 15.2 12.128 23.616 0.576 1.632 1.056 3.328 1.568 4.992 2.528 8.544 4.288 17.472 4.288 26.912 0 9.376-1.76 18.304-4.32 26.88z"
				],
				"attrs": [],
				"tags": [
					"params",
					"equalizer",
					"preferences",
					"settings",
					"options"
				],
				"grid": 32
			},
			"attrs": [],
			"properties": {
				"id": 31,
				"order": 482,
				"prevSize": 32,
				"code": 58896,
				"name": "params"
			},
			"setIdx": 0,
			"iconIdx": 16
		},
		{
			"icon": {
				"paths": [
					"M512 0c-215.808 0-448 65.056-448 208v608c0 142.88 232.192 208 448 208 215.776 0 448-65.12 448-208v-608c0-142.944-232.256-208-448-208zM896 816c0 79.488-171.936 144-384 144-212.096 0-384-64.512-384-144v-119.552c66.112 68.128 225.6 103.552 384 103.552s317.888-35.424 384-103.552v119.552zM896 624h-0.128c0 0.32 0.128 0.672 0.128 0.992 0 79.008-171.936 143.008-384 143.008s-384-64-384-143.008c0-0.32 0.128-0.672 0.128-0.992h-0.128v-119.552c66.112 68.128 225.6 103.552 384 103.552s317.888-35.424 384-103.552v119.552zM896 432h-0.128c0 0.32 0.128 0.672 0.128 0.992 0 79.008-171.936 143.008-384 143.008s-384-64-384-143.008c0-0.32 0.128-0.672 0.128-0.992h-0.128v-109.952c83.872 63.904 237.6 93.952 384 93.952s300.128-30.048 384-93.952v109.952zM512 352c-212.096 0-384-64.512-384-144 0-79.552 171.904-144 384-144 212.064 0 384 64.448 384 144 0 79.488-171.936 144-384 144zM768 832c0-17.673 14.327-32 32-32s32 14.327 32 32c0 17.673-14.327 32-32 32s-32-14.327-32-32zM768 640c0-17.673 14.327-32 32-32s32 14.327 32 32c0 17.673-14.327 32-32 32s-32-14.327-32-32zM768 448c0-17.673 14.327-32 32-32s32 14.327 32 32c0 17.673-14.327 32-32 32s-32-14.327-32-32z"
				],
				"attrs": [],
				"tags": [
					"data",
					"database",
					"storage"
				],
				"grid": 32
			},
			"attrs": [],
			"properties": {
				"id": 33,
				"order": 481,
				"prevSize": 32,
				"code": 58897,
				"name": "data"
			},
			"setIdx": 0,
			"iconIdx": 17
		},
		{
			"icon": {
				"paths": [
					"M970.857 106.286q0 20-24.571 44.571l-361.143 361.143v438.857h182.857q14.857 0 25.714 10.857t10.857 25.714-10.857 25.714-25.714 10.857h-512q-14.857 0-25.714-10.857t-10.857-25.714 10.857-25.714 25.714-10.857h182.857v-438.857l-361.143-361.143q-24.571-24.571-24.571-44.571 0-13.143 10.286-20.857t21.714-10 24.571-2.286h804.571q13.143 0 24.571 2.286t21.714 10 10.286 20.857z"
				],
				"attrs": [],
				"tags": [
					"glass"
				],
				"defaultCode": 61440,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 0,
				"order": 1,
				"prevSize": 28,
				"code": 61440,
				"name": "glass"
			},
			"setIdx": 0,
			"iconIdx": 18
		},
		{
			"icon": {
				"paths": [
					"M877.714 128v640q0 28.571-19.429 50.857t-49.143 34.571-59.143 18.286-55.143 6-55.143-6-59.143-18.286-49.143-34.571-19.429-50.857 19.429-50.857 49.143-34.571 59.143-18.286 55.143-6q60 0 109.714 22.286v-306.857l-438.857 135.429v405.143q0 28.571-19.429 50.857t-49.143 34.571-59.143 18.286-55.143 6-55.143-6-59.143-18.286-49.143-34.571-19.429-50.857 19.429-50.857 49.143-34.571 59.143-18.286 55.143-6q60 0 109.714 22.286v-552.571q0-17.714 10.857-32.286t28-20.286l475.429-146.286q6.857-2.286 16-2.286 22.857 0 38.857 16t16 38.857z"
				],
				"attrs": [],
				"tags": [
					"music"
				],
				"defaultCode": 61441,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 1,
				"order": 2,
				"prevSize": 28,
				"code": 61441,
				"name": "music"
			},
			"setIdx": 0,
			"iconIdx": 19
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M658.286 475.429q0-105.714-75.143-180.857t-180.857-75.143-180.857 75.143-75.143 180.857 75.143 180.857 180.857 75.143 180.857-75.143 75.143-180.857zM950.857 950.857q0 29.714-21.714 51.429t-51.429 21.714q-30.857 0-51.429-21.714l-196-195.429q-102.286 70.857-228 70.857-81.714 0-156.286-31.714t-128.571-85.714-85.714-128.571-31.714-156.286 31.714-156.286 85.714-128.571 128.571-85.714 156.286-31.714 156.286 31.714 128.571 85.714 85.714 128.571 31.714 156.286q0 125.714-70.857 228l196 196q21.143 21.143 21.143 51.429z"
				],
				"attrs": [],
				"tags": [
					"search"
				],
				"defaultCode": 61442,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 2,
				"order": 3,
				"prevSize": 28,
				"code": 61442,
				"name": "search"
			},
			"setIdx": 0,
			"iconIdx": 20
		},
		{
			"icon": {
				"paths": [
					"M950.857 859.429v-438.857q-18.286 20.571-39.429 37.714-153.143 117.714-243.429 193.143-29.143 24.571-47.429 38.286t-49.429 27.714-58.571 14h-1.143q-27.429 0-58.571-14t-49.429-27.714-47.429-38.286q-90.286-75.429-243.429-193.143-21.143-17.143-39.429-37.714v438.857q0 7.429 5.429 12.857t12.857 5.429h841.143q7.429 0 12.857-5.429t5.429-12.857zM950.857 258.857v-14t-0.286-7.429-1.714-7.143-3.143-5.143-5.143-4.286-8-1.429h-841.143q-7.429 0-12.857 5.429t-5.429 12.857q0 96 84 162.286 110.286 86.857 229.143 181.143 3.429 2.857 20 16.857t26.286 21.429 25.429 18 28.857 15.714 24.571 5.143h1.143q11.429 0 24.571-5.143t28.857-15.714 25.429-18 26.286-21.429 20-16.857q118.857-94.286 229.143-181.143 30.857-24.571 57.429-66t26.571-75.143zM1024 237.714v621.714q0 37.714-26.857 64.571t-64.571 26.857h-841.143q-37.714 0-64.571-26.857t-26.857-64.571v-621.714q0-37.714 26.857-64.571t64.571-26.857h841.143q37.714 0 64.571 26.857t26.857 64.571z"
				],
				"attrs": [],
				"tags": [
					"envelope-o"
				],
				"defaultCode": 61443,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 3,
				"order": 4,
				"prevSize": 28,
				"code": 61443,
				"name": "envelope-o"
			},
			"setIdx": 0,
			"iconIdx": 21
		},
		{
			"icon": {
				"paths": [
					"M512 950.857q-14.857 0-25.143-10.286l-356.571-344q-5.714-4.571-15.714-14.857t-31.714-37.429-38.857-55.714-30.571-69.143-13.429-78.857q0-125.714 72.571-196.571t200.571-70.857q35.429 0 72.286 12.286t68.571 33.143 54.571 39.143 43.429 38.857q20.571-20.571 43.429-38.857t54.571-39.143 68.571-33.143 72.286-12.286q128 0 200.571 70.857t72.571 196.571q0 126.286-130.857 257.143l-356 342.857q-10.286 10.286-25.143 10.286z"
				],
				"attrs": [],
				"tags": [
					"heart"
				],
				"defaultCode": 61444,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 4,
				"order": 5,
				"prevSize": 28,
				"code": 61444,
				"name": "heart"
			},
			"setIdx": 0,
			"iconIdx": 22
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M950.857 369.714q0 12.571-14.857 27.429l-207.429 202.286 49.143 285.714q0.571 4 0.571 11.429 0 12-6 20.286t-17.429 8.286q-10.857 0-22.857-6.857l-256.571-134.857-256.571 134.857q-12.571 6.857-22.857 6.857-12 0-18-8.286t-6-20.286q0-3.429 1.143-11.429l49.143-285.714-208-202.286q-14.286-15.429-14.286-27.429 0-21.143 32-26.286l286.857-41.714 128.571-260q10.857-23.429 28-23.429t28 23.429l128.571 260 286.857 41.714q32 5.143 32 26.286z"
				],
				"attrs": [],
				"tags": [
					"star"
				],
				"defaultCode": 61445,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 5,
				"order": 6,
				"prevSize": 28,
				"code": 61445,
				"name": "star"
			},
			"setIdx": 0,
			"iconIdx": 23
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M649.714 573.714l174.857-169.714-241.143-35.429-108-218.286-108 218.286-241.143 35.429 174.857 169.714-41.714 240.571 216-113.714 215.429 113.714zM950.857 369.714q0 12.571-14.857 27.429l-207.429 202.286 49.143 285.714q0.571 4 0.571 11.429 0 28.571-23.429 28.571-10.857 0-22.857-6.857l-256.571-134.857-256.571 134.857q-12.571 6.857-22.857 6.857-12 0-18-8.286t-6-20.286q0-3.429 1.143-11.429l49.143-285.714-208-202.286q-14.286-15.429-14.286-27.429 0-21.143 32-26.286l286.857-41.714 128.571-260q10.857-23.429 28-23.429t28 23.429l128.571 260 286.857 41.714q32 5.143 32 26.286z"
				],
				"attrs": [],
				"tags": [
					"star-o"
				],
				"defaultCode": 61446,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 6,
				"order": 7,
				"prevSize": 28,
				"code": 61446,
				"name": "star-o"
			},
			"setIdx": 0,
			"iconIdx": 24
		},
		{
			"icon": {
				"width": 805,
				"paths": [
					"M804.571 802.857q0 68.571-41.714 108.286t-110.857 39.714h-499.429q-69.143 0-110.857-39.714t-41.714-108.286q0-30.286 2-59.143t8-62.286 15.143-62 24.571-55.714 35.429-46.286 48.857-30.571 63.714-11.429q5.143 0 24 12.286t42.571 27.429 61.714 27.429 76.286 12.286 76.286-12.286 61.714-27.429 42.571-27.429 24-12.286q34.857 0 63.714 11.429t48.857 30.571 35.429 46.286 24.571 55.714 15.143 62 8 62.286 2 59.143zM621.714 292.571q0 90.857-64.286 155.143t-155.143 64.286-155.143-64.286-64.286-155.143 64.286-155.143 155.143-64.286 155.143 64.286 64.286 155.143z"
				],
				"attrs": [],
				"tags": [
					"user"
				],
				"defaultCode": 61447,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 7,
				"order": 8,
				"prevSize": 28,
				"code": 61447,
				"name": "user"
			},
			"setIdx": 0,
			"iconIdx": 25
		},
		{
			"icon": {
				"width": 1097,
				"paths": [
					"M219.429 914.286v-73.143q0-14.857-10.857-25.714t-25.714-10.857h-73.143q-14.857 0-25.714 10.857t-10.857 25.714v73.143q0 14.857 10.857 25.714t25.714 10.857h73.143q14.857 0 25.714-10.857t10.857-25.714zM219.429 694.857v-73.143q0-14.857-10.857-25.714t-25.714-10.857h-73.143q-14.857 0-25.714 10.857t-10.857 25.714v73.143q0 14.857 10.857 25.714t25.714 10.857h73.143q14.857 0 25.714-10.857t10.857-25.714zM219.429 475.429v-73.143q0-14.857-10.857-25.714t-25.714-10.857h-73.143q-14.857 0-25.714 10.857t-10.857 25.714v73.143q0 14.857 10.857 25.714t25.714 10.857h73.143q14.857 0 25.714-10.857t10.857-25.714zM804.571 914.286v-292.571q0-14.857-10.857-25.714t-25.714-10.857h-438.857q-14.857 0-25.714 10.857t-10.857 25.714v292.571q0 14.857 10.857 25.714t25.714 10.857h438.857q14.857 0 25.714-10.857t10.857-25.714zM219.429 256v-73.143q0-14.857-10.857-25.714t-25.714-10.857h-73.143q-14.857 0-25.714 10.857t-10.857 25.714v73.143q0 14.857 10.857 25.714t25.714 10.857h73.143q14.857 0 25.714-10.857t10.857-25.714zM1024 914.286v-73.143q0-14.857-10.857-25.714t-25.714-10.857h-73.143q-14.857 0-25.714 10.857t-10.857 25.714v73.143q0 14.857 10.857 25.714t25.714 10.857h73.143q14.857 0 25.714-10.857t10.857-25.714zM804.571 475.429v-292.571q0-14.857-10.857-25.714t-25.714-10.857h-438.857q-14.857 0-25.714 10.857t-10.857 25.714v292.571q0 14.857 10.857 25.714t25.714 10.857h438.857q14.857 0 25.714-10.857t10.857-25.714zM1024 694.857v-73.143q0-14.857-10.857-25.714t-25.714-10.857h-73.143q-14.857 0-25.714 10.857t-10.857 25.714v73.143q0 14.857 10.857 25.714t25.714 10.857h73.143q14.857 0 25.714-10.857t10.857-25.714zM1024 475.429v-73.143q0-14.857-10.857-25.714t-25.714-10.857h-73.143q-14.857 0-25.714 10.857t-10.857 25.714v73.143q0 14.857 10.857 25.714t25.714 10.857h73.143q14.857 0 25.714-10.857t10.857-25.714zM1024 256v-73.143q0-14.857-10.857-25.714t-25.714-10.857h-73.143q-14.857 0-25.714 10.857t-10.857 25.714v73.143q0 14.857 10.857 25.714t25.714 10.857h73.143q14.857 0 25.714-10.857t10.857-25.714zM1097.143 164.571v768q0 37.714-26.857 64.571t-64.571 26.857h-914.286q-37.714 0-64.571-26.857t-26.857-64.571v-768q0-37.714 26.857-64.571t64.571-26.857h914.286q37.714 0 64.571 26.857t26.857 64.571z"
				],
				"attrs": [],
				"tags": [
					"film"
				],
				"defaultCode": 61448,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 8,
				"order": 9,
				"prevSize": 28,
				"code": 61448,
				"name": "film"
			},
			"setIdx": 0,
			"iconIdx": 26
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M438.857 585.143v219.429q0 29.714-21.714 51.429t-51.429 21.714h-292.571q-29.714 0-51.429-21.714t-21.714-51.429v-219.429q0-29.714 21.714-51.429t51.429-21.714h292.571q29.714 0 51.429 21.714t21.714 51.429zM438.857 146.286v219.429q0 29.714-21.714 51.429t-51.429 21.714h-292.571q-29.714 0-51.429-21.714t-21.714-51.429v-219.429q0-29.714 21.714-51.429t51.429-21.714h292.571q29.714 0 51.429 21.714t21.714 51.429zM950.857 585.143v219.429q0 29.714-21.714 51.429t-51.429 21.714h-292.571q-29.714 0-51.429-21.714t-21.714-51.429v-219.429q0-29.714 21.714-51.429t51.429-21.714h292.571q29.714 0 51.429 21.714t21.714 51.429zM950.857 146.286v219.429q0 29.714-21.714 51.429t-51.429 21.714h-292.571q-29.714 0-51.429-21.714t-21.714-51.429v-219.429q0-29.714 21.714-51.429t51.429-21.714h292.571q29.714 0 51.429 21.714t21.714 51.429z"
				],
				"attrs": [],
				"tags": [
					"th-large"
				],
				"defaultCode": 61449,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 9,
				"order": 10,
				"prevSize": 28,
				"code": 61449,
				"name": "th-large"
			},
			"setIdx": 0,
			"iconIdx": 27
		},
		{
			"icon": {
				"paths": [
					"M292.571 713.143v109.714q0 22.857-16 38.857t-38.857 16h-182.857q-22.857 0-38.857-16t-16-38.857v-109.714q0-22.857 16-38.857t38.857-16h182.857q22.857 0 38.857 16t16 38.857zM292.571 420.571v109.714q0 22.857-16 38.857t-38.857 16h-182.857q-22.857 0-38.857-16t-16-38.857v-109.714q0-22.857 16-38.857t38.857-16h182.857q22.857 0 38.857 16t16 38.857zM658.286 713.143v109.714q0 22.857-16 38.857t-38.857 16h-182.857q-22.857 0-38.857-16t-16-38.857v-109.714q0-22.857 16-38.857t38.857-16h182.857q22.857 0 38.857 16t16 38.857zM292.571 128v109.714q0 22.857-16 38.857t-38.857 16h-182.857q-22.857 0-38.857-16t-16-38.857v-109.714q0-22.857 16-38.857t38.857-16h182.857q22.857 0 38.857 16t16 38.857zM658.286 420.571v109.714q0 22.857-16 38.857t-38.857 16h-182.857q-22.857 0-38.857-16t-16-38.857v-109.714q0-22.857 16-38.857t38.857-16h182.857q22.857 0 38.857 16t16 38.857zM1024 713.143v109.714q0 22.857-16 38.857t-38.857 16h-182.857q-22.857 0-38.857-16t-16-38.857v-109.714q0-22.857 16-38.857t38.857-16h182.857q22.857 0 38.857 16t16 38.857zM658.286 128v109.714q0 22.857-16 38.857t-38.857 16h-182.857q-22.857 0-38.857-16t-16-38.857v-109.714q0-22.857 16-38.857t38.857-16h182.857q22.857 0 38.857 16t16 38.857zM1024 420.571v109.714q0 22.857-16 38.857t-38.857 16h-182.857q-22.857 0-38.857-16t-16-38.857v-109.714q0-22.857 16-38.857t38.857-16h182.857q22.857 0 38.857 16t16 38.857zM1024 128v109.714q0 22.857-16 38.857t-38.857 16h-182.857q-22.857 0-38.857-16t-16-38.857v-109.714q0-22.857 16-38.857t38.857-16h182.857q22.857 0 38.857 16t16 38.857z"
				],
				"attrs": [],
				"tags": [
					"th"
				],
				"defaultCode": 61450,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 10,
				"order": 11,
				"prevSize": 28,
				"code": 61450,
				"name": "th"
			},
			"setIdx": 0,
			"iconIdx": 28
		},
		{
			"icon": {
				"paths": [
					"M292.571 713.143v109.714q0 22.857-16 38.857t-38.857 16h-182.857q-22.857 0-38.857-16t-16-38.857v-109.714q0-22.857 16-38.857t38.857-16h182.857q22.857 0 38.857 16t16 38.857zM292.571 420.571v109.714q0 22.857-16 38.857t-38.857 16h-182.857q-22.857 0-38.857-16t-16-38.857v-109.714q0-22.857 16-38.857t38.857-16h182.857q22.857 0 38.857 16t16 38.857zM1024 713.143v109.714q0 22.857-16 38.857t-38.857 16h-548.571q-22.857 0-38.857-16t-16-38.857v-109.714q0-22.857 16-38.857t38.857-16h548.571q22.857 0 38.857 16t16 38.857zM292.571 128v109.714q0 22.857-16 38.857t-38.857 16h-182.857q-22.857 0-38.857-16t-16-38.857v-109.714q0-22.857 16-38.857t38.857-16h182.857q22.857 0 38.857 16t16 38.857zM1024 420.571v109.714q0 22.857-16 38.857t-38.857 16h-548.571q-22.857 0-38.857-16t-16-38.857v-109.714q0-22.857 16-38.857t38.857-16h548.571q22.857 0 38.857 16t16 38.857zM1024 128v109.714q0 22.857-16 38.857t-38.857 16h-548.571q-22.857 0-38.857-16t-16-38.857v-109.714q0-22.857 16-38.857t38.857-16h548.571q22.857 0 38.857 16t16 38.857z"
				],
				"attrs": [],
				"tags": [
					"th-list"
				],
				"defaultCode": 61451,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 11,
				"order": 12,
				"prevSize": 28,
				"code": 61451,
				"name": "th-list"
			},
			"setIdx": 0,
			"iconIdx": 29
		},
		{
			"icon": {
				"paths": [
					"M954.857 323.429q0 22.857-16 38.857l-491.429 491.429q-16 16-38.857 16t-38.857-16l-284.571-284.571q-16-16-16-38.857t16-38.857l77.714-77.714q16-16 38.857-16t38.857 16l168 168.571 374.857-375.429q16-16 38.857-16t38.857 16l77.714 77.714q16 16 16 38.857z"
				],
				"attrs": [],
				"tags": [
					"check"
				],
				"defaultCode": 61452,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 12,
				"order": 13,
				"prevSize": 28,
				"code": 61452,
				"name": "check"
			},
			"setIdx": 0,
			"iconIdx": 30
		},
		{
			"icon": {
				"width": 805,
				"paths": [
					"M741.714 755.429q0 22.857-16 38.857l-77.714 77.714q-16 16-38.857 16t-38.857-16l-168-168-168 168q-16 16-38.857 16t-38.857-16l-77.714-77.714q-16-16-16-38.857t16-38.857l168-168-168-168q-16-16-16-38.857t16-38.857l77.714-77.714q16-16 38.857-16t38.857 16l168 168 168-168q16-16 38.857-16t38.857 16l77.714 77.714q16 16 16 38.857t-16 38.857l-168 168 168 168q16 16 16 38.857z"
				],
				"attrs": [],
				"tags": [
					"close",
					"remove",
					"times"
				],
				"defaultCode": 61453,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 13,
				"order": 14,
				"prevSize": 28,
				"code": 61453,
				"name": "close"
			},
			"setIdx": 0,
			"iconIdx": 31
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M585.143 457.143v36.571q0 7.429-5.429 12.857t-12.857 5.429h-128v128q0 7.429-5.429 12.857t-12.857 5.429h-36.571q-7.429 0-12.857-5.429t-5.429-12.857v-128h-128q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h128v-128q0-7.429 5.429-12.857t12.857-5.429h36.571q7.429 0 12.857 5.429t5.429 12.857v128h128q7.429 0 12.857 5.429t5.429 12.857zM658.286 475.429q0-105.714-75.143-180.857t-180.857-75.143-180.857 75.143-75.143 180.857 75.143 180.857 180.857 75.143 180.857-75.143 75.143-180.857zM950.857 950.857q0 30.286-21.429 51.714t-51.714 21.429q-30.857 0-51.429-21.714l-196-195.429q-102.286 70.857-228 70.857-81.714 0-156.286-31.714t-128.571-85.714-85.714-128.571-31.714-156.286 31.714-156.286 85.714-128.571 128.571-85.714 156.286-31.714 156.286 31.714 128.571 85.714 85.714 128.571 31.714 156.286q0 125.714-70.857 228l196 196q21.143 21.143 21.143 51.429z"
				],
				"attrs": [],
				"tags": [
					"search-plus"
				],
				"defaultCode": 61454,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 14,
				"order": 15,
				"prevSize": 28,
				"code": 61454,
				"name": "search-plus"
			},
			"setIdx": 0,
			"iconIdx": 32
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M585.143 457.143v36.571q0 7.429-5.429 12.857t-12.857 5.429h-329.143q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h329.143q7.429 0 12.857 5.429t5.429 12.857zM658.286 475.429q0-105.714-75.143-180.857t-180.857-75.143-180.857 75.143-75.143 180.857 75.143 180.857 180.857 75.143 180.857-75.143 75.143-180.857zM950.857 950.857q0 30.286-21.429 51.714t-51.714 21.429q-30.857 0-51.429-21.714l-196-195.429q-102.286 70.857-228 70.857-81.714 0-156.286-31.714t-128.571-85.714-85.714-128.571-31.714-156.286 31.714-156.286 85.714-128.571 128.571-85.714 156.286-31.714 156.286 31.714 128.571 85.714 85.714 128.571 31.714 156.286q0 125.714-70.857 228l196 196q21.143 21.143 21.143 51.429z"
				],
				"attrs": [],
				"tags": [
					"search-minus"
				],
				"defaultCode": 61456,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 15,
				"order": 16,
				"prevSize": 28,
				"code": 61456,
				"name": "search-minus"
			},
			"setIdx": 0,
			"iconIdx": 33
		},
		{
			"icon": {
				"paths": [
					"M877.714 512q0 89.143-34.857 170.286t-93.714 140-140 93.714-170.286 34.857-170.286-34.857-140-93.714-93.714-140-34.857-170.286q0-104 46-196t129.429-154.286q24.571-18.286 54.571-14.286t47.714 28.571q18.286 24 14 54t-28.286 48.286q-56 42.286-86.571 103.429t-30.571 130.286q0 59.429 23.143 113.429t62.571 93.429 93.429 62.571 113.429 23.143 113.429-23.143 93.429-62.571 62.571-93.429 23.143-113.429q0-69.143-30.571-130.286t-86.571-103.429q-24-18.286-28.286-48.286t14-54q17.714-24.571 48-28.571t54.286 14.286q83.429 62.286 129.429 154.286t46 196zM512 73.143v365.714q0 29.714-21.714 51.429t-51.429 21.714-51.429-21.714-21.714-51.429v-365.714q0-29.714 21.714-51.429t51.429-21.714 51.429 21.714 21.714 51.429z"
				],
				"attrs": [],
				"tags": [
					"power-off"
				],
				"defaultCode": 61457,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 16,
				"order": 17,
				"prevSize": 28,
				"code": 61457,
				"name": "power-off"
			},
			"setIdx": 0,
			"iconIdx": 34
		},
		{
			"icon": {
				"paths": [
					"M146.286 822.857v109.714q0 8-5.143 13.143t-13.143 5.143h-109.714q-8 0-13.143-5.143t-5.143-13.143v-109.714q0-8 5.143-13.143t13.143-5.143h109.714q8 0 13.143 5.143t5.143 13.143zM365.714 749.714v182.857q0 8-5.143 13.143t-13.143 5.143h-109.714q-8 0-13.143-5.143t-5.143-13.143v-182.857q0-8 5.143-13.143t13.143-5.143h109.714q8 0 13.143 5.143t5.143 13.143zM585.143 603.429v329.143q0 8-5.143 13.143t-13.143 5.143h-109.714q-8 0-13.143-5.143t-5.143-13.143v-329.143q0-8 5.143-13.143t13.143-5.143h109.714q8 0 13.143 5.143t5.143 13.143zM804.571 384v548.571q0 8-5.143 13.143t-13.143 5.143h-109.714q-8 0-13.143-5.143t-5.143-13.143v-548.571q0-8 5.143-13.143t13.143-5.143h109.714q8 0 13.143 5.143t5.143 13.143zM1024 91.429v841.143q0 8-5.143 13.143t-13.143 5.143h-109.714q-8 0-13.143-5.143t-5.143-13.143v-841.143q0-8 5.143-13.143t13.143-5.143h109.714q8 0 13.143 5.143t5.143 13.143z"
				],
				"attrs": [],
				"tags": [
					"signal"
				],
				"defaultCode": 61458,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 17,
				"order": 18,
				"prevSize": 28,
				"code": 61458,
				"name": "signal"
			},
			"setIdx": 0,
			"iconIdx": 35
		},
		{
			"icon": {
				"paths": [
					"M585.143 512q0-60.571-42.857-103.429t-103.429-42.857-103.429 42.857-42.857 103.429 42.857 103.429 103.429 42.857 103.429-42.857 42.857-103.429zM877.714 449.714v126.857q0 6.857-4.571 13.143t-11.429 7.429l-105.714 16q-10.857 30.857-22.286 52 20 28.571 61.143 78.857 5.714 6.857 5.714 14.286t-5.143 13.143q-15.429 21.143-56.571 61.714t-53.714 40.571q-6.857 0-14.857-5.143l-78.857-61.714q-25.143 13.143-52 21.714-9.143 77.714-16.571 106.286-4 16-20.571 16h-126.857q-8 0-14-4.857t-6.571-12.286l-16-105.143q-28-9.143-51.429-21.143l-80.571 61.143q-5.714 5.143-14.286 5.143-8 0-14.286-6.286-72-65.143-94.286-96-4-5.714-4-13.143 0-6.857 4.571-13.143 8.571-12 29.143-38t30.857-40.286q-15.429-28.571-23.429-56.571l-104.571-15.429q-7.429-1.143-12-7.143t-4.571-13.429v-126.857q0-6.857 4.571-13.143t10.857-7.429l106.286-16q8-26.286 22.286-52.571-22.857-32.571-61.143-78.857-5.714-6.857-5.714-13.714 0-5.714 5.143-13.143 14.857-20.571 56.286-61.429t54-40.857q7.429 0 14.857 5.714l78.857 61.143q25.143-13.143 52-21.714 9.143-77.714 16.571-106.286 4-16 20.571-16h126.857q8 0 14 4.857t6.571 12.286l16 105.143q28 9.143 51.429 21.143l81.143-61.143q5.143-5.143 13.714-5.143 7.429 0 14.286 5.714 73.714 68 94.286 97.143 4 4.571 4 12.571 0 6.857-4.571 13.143-8.571 12-29.143 38t-30.857 40.286q14.857 28.571 23.429 56l104.571 16q7.429 1.143 12 7.143t4.571 13.429z"
				],
				"attrs": [],
				"tags": [
					"cog",
					"gear"
				],
				"defaultCode": 61459,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 18,
				"order": 19,
				"prevSize": 28,
				"code": 61459,
				"name": "cog"
			},
			"setIdx": 0,
			"iconIdx": 36
		},
		{
			"icon": {
				"width": 805,
				"paths": [
					"M292.571 420.571v329.143q0 8-5.143 13.143t-13.143 5.143h-36.571q-8 0-13.143-5.143t-5.143-13.143v-329.143q0-8 5.143-13.143t13.143-5.143h36.571q8 0 13.143 5.143t5.143 13.143zM438.857 420.571v329.143q0 8-5.143 13.143t-13.143 5.143h-36.571q-8 0-13.143-5.143t-5.143-13.143v-329.143q0-8 5.143-13.143t13.143-5.143h36.571q8 0 13.143 5.143t5.143 13.143zM585.143 420.571v329.143q0 8-5.143 13.143t-13.143 5.143h-36.571q-8 0-13.143-5.143t-5.143-13.143v-329.143q0-8 5.143-13.143t13.143-5.143h36.571q8 0 13.143 5.143t5.143 13.143zM658.286 834.286v-541.714h-512v541.714q0 12.571 4 23.143t8.286 15.429 6 4.857h475.429q1.714 0 6-4.857t8.286-15.429 4-23.143zM274.286 219.429h256l-27.429-66.857q-4-5.143-9.714-6.286h-181.143q-5.714 1.143-9.714 6.286zM804.571 237.714v36.571q0 8-5.143 13.143t-13.143 5.143h-54.857v541.714q0 47.429-26.857 82t-64.571 34.571h-475.429q-37.714 0-64.571-33.429t-26.857-80.857v-544h-54.857q-8 0-13.143-5.143t-5.143-13.143v-36.571q0-8 5.143-13.143t13.143-5.143h176.571l40-95.429q8.571-21.143 30.857-36t45.143-14.857h182.857q22.857 0 45.143 14.857t30.857 36l40 95.429h176.571q8 0 13.143 5.143t5.143 13.143z"
				],
				"attrs": [],
				"tags": [
					"trash-o"
				],
				"defaultCode": 61460,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 19,
				"order": 20,
				"prevSize": 28,
				"code": 61460,
				"name": "trash-o"
			},
			"setIdx": 0,
			"iconIdx": 37
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M804.571 566.857v274.286q0 14.857-10.857 25.714t-25.714 10.857h-219.429v-219.429h-146.286v219.429h-219.429q-14.857 0-25.714-10.857t-10.857-25.714v-274.286q0-0.571 0.286-1.714t0.286-1.714l328.571-270.857 328.571 270.857q0.571 1.143 0.571 3.429zM932 527.429l-35.429 42.286q-4.571 5.143-12 6.286h-1.714q-7.429 0-12-4l-395.429-329.714-395.429 329.714q-6.857 4.571-13.714 4-7.429-1.143-12-6.286l-35.429-42.286q-4.571-5.714-4-13.429t6.286-12.286l410.857-342.286q18.286-14.857 43.429-14.857t43.429 14.857l139.429 116.571v-111.429q0-8 5.143-13.143t13.143-5.143h109.714q8 0 13.143 5.143t5.143 13.143v233.143l125.143 104q5.714 4.571 6.286 12.286t-4 13.429z"
				],
				"attrs": [],
				"tags": [
					"home"
				],
				"defaultCode": 61461,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 20,
				"order": 21,
				"prevSize": 28,
				"code": 61461,
				"name": "home"
			},
			"setIdx": 0,
			"iconIdx": 38
		},
		{
			"icon": {
				"paths": [
					"M838.857 217.143q16 16 27.429 43.429t11.429 50.286v658.286q0 22.857-16 38.857t-38.857 16h-768q-22.857 0-38.857-16t-16-38.857v-914.286q0-22.857 16-38.857t38.857-16h512q22.857 0 50.286 11.429t43.429 27.429zM585.143 77.714v214.857h214.857q-5.714-16.571-12.571-23.429l-178.857-178.857q-6.857-6.857-23.429-12.571zM804.571 950.857v-585.143h-237.714q-22.857 0-38.857-16t-16-38.857v-237.714h-438.857v877.714h731.429z"
				],
				"attrs": [],
				"tags": [
					"file-o"
				],
				"defaultCode": 61462,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 21,
				"order": 22,
				"prevSize": 28,
				"code": 61462,
				"name": "file-o"
			},
			"setIdx": 0,
			"iconIdx": 39
		},
		{
			"icon": {
				"paths": [
					"M512 310.857v256q0 8-5.143 13.143t-13.143 5.143h-182.857q-8 0-13.143-5.143t-5.143-13.143v-36.571q0-8 5.143-13.143t13.143-5.143h128v-201.143q0-8 5.143-13.143t13.143-5.143h36.571q8 0 13.143 5.143t5.143 13.143zM749.714 512q0-84.571-41.714-156t-113.143-113.143-156-41.714-156 41.714-113.143 113.143-41.714 156 41.714 156 113.143 113.143 156 41.714 156-41.714 113.143-113.143 41.714-156zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"clock-o"
				],
				"defaultCode": 61463,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 22,
				"order": 23,
				"prevSize": 28,
				"code": 61463,
				"name": "clock-o"
			},
			"setIdx": 0,
			"iconIdx": 40
		},
		{
			"icon": {
				"width": 1097,
				"paths": [
					"M634.857 569.143v-2.286l-13.714-182.857q-0.571-7.429-6.286-12.857t-13.143-5.429h-106.286q-7.429 0-13.143 5.429t-6.286 12.857l-13.714 182.857v2.286q-0.571 6.857 4.571 11.429t12 4.571h139.429q6.857 0 12-4.571t4.571-11.429zM1068.571 836q0 41.714-26.286 41.714h-402.286q7.429 0 12.571-5.429t4.571-12.857l-11.429-146.286q-0.571-7.429-6.286-12.857t-13.143-5.429h-155.429q-7.429 0-13.143 5.429t-6.286 12.857l-11.429 146.286q-0.571 7.429 4.571 12.857t12.571 5.429h-402.286q-26.286 0-26.286-41.714 0-30.857 14.857-66.286l238.286-596.571q4.571-10.857 14.857-18.857t21.714-8h193.714q-7.429 0-13.143 5.429t-6.286 12.857l-8.571 109.714q-0.571 8 4.571 13.143t12.571 5.143h94.857q7.429 0 12.571-5.143t4.571-13.143l-8.571-109.714q-0.571-7.429-6.286-12.857t-13.143-5.429h193.714q11.429 0 21.714 8t14.857 18.857l238.286 596.571q14.857 35.429 14.857 66.286z"
				],
				"attrs": [],
				"tags": [
					"road"
				],
				"defaultCode": 61464,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 23,
				"order": 24,
				"prevSize": 28,
				"code": 61464,
				"name": "road"
			},
			"setIdx": 0,
			"iconIdx": 41
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M731.429 768q0-14.857-10.857-25.714t-25.714-10.857-25.714 10.857-10.857 25.714 10.857 25.714 25.714 10.857 25.714-10.857 10.857-25.714zM877.714 768q0-14.857-10.857-25.714t-25.714-10.857-25.714 10.857-10.857 25.714 10.857 25.714 25.714 10.857 25.714-10.857 10.857-25.714zM950.857 640v182.857q0 22.857-16 38.857t-38.857 16h-841.143q-22.857 0-38.857-16t-16-38.857v-182.857q0-22.857 16-38.857t38.857-16h265.714l77.143 77.714q33.143 32 77.714 32t77.714-32l77.714-77.714h265.143q22.857 0 38.857 16t16 38.857zM765.143 314.857q9.714 23.429-8 40l-256 256q-10.286 10.857-25.714 10.857t-25.714-10.857l-256-256q-17.714-16.571-8-40 9.714-22.286 33.714-22.286h146.286v-256q0-14.857 10.857-25.714t25.714-10.857h146.286q14.857 0 25.714 10.857t10.857 25.714v256h146.286q24 0 33.714 22.286z"
				],
				"attrs": [],
				"tags": [
					"download"
				],
				"defaultCode": 61465,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 24,
				"order": 25,
				"prevSize": 28,
				"code": 61465,
				"name": "download"
			},
			"setIdx": 0,
			"iconIdx": 42
		},
		{
			"icon": {
				"paths": [
					"M640 530.286q0 6.857-5.714 13.714l-182.286 182.286q-6.286 5.143-13.143 5.143t-13.143-5.143l-182.857-182.857q-8.571-9.143-4-20 4.571-11.429 17.143-11.429h109.714v-201.143q0-8 5.143-13.143t13.143-5.143h109.714q8 0 13.143 5.143t5.143 13.143v201.143h109.714q8 0 13.143 5.143t5.143 13.143zM438.857 201.143q-84.571 0-156 41.714t-113.143 113.143-41.714 156 41.714 156 113.143 113.143 156 41.714 156-41.714 113.143-113.143 41.714-156-41.714-156-113.143-113.143-156-41.714zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"arrow-circle-o-down"
				],
				"defaultCode": 61466,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 25,
				"order": 26,
				"prevSize": 28,
				"code": 61466,
				"name": "arrow-circle-o-down"
			},
			"setIdx": 0,
			"iconIdx": 43
		},
		{
			"icon": {
				"paths": [
					"M638.857 500.571q-4.571 11.429-17.143 11.429h-109.714v201.143q0 8-5.143 13.143t-13.143 5.143h-109.714q-8 0-13.143-5.143t-5.143-13.143v-201.143h-109.714q-8 0-13.143-5.143t-5.143-13.143q0-6.857 5.714-13.714l182.286-182.286q6.286-5.143 13.143-5.143t13.143 5.143l182.857 182.857q8.571 9.143 4 20zM438.857 201.143q-84.571 0-156 41.714t-113.143 113.143-41.714 156 41.714 156 113.143 113.143 156 41.714 156-41.714 113.143-113.143 41.714-156-41.714-156-113.143-113.143-156-41.714zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"arrow-circle-o-up"
				],
				"defaultCode": 61467,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 26,
				"order": 27,
				"prevSize": 28,
				"code": 61467,
				"name": "arrow-circle-o-up"
			},
			"setIdx": 0,
			"iconIdx": 44
		},
		{
			"icon": {
				"paths": [
					"M584.571 548.571h180.571q-0.571-1.714-1.429-4.571t-1.429-4.571l-121.143-283.429h-404.571l-121.143 283.429q-0.571 1.143-1.429 4.571t-1.429 4.571h180.571l54.286 109.714h182.857zM877.714 565.714v275.429q0 14.857-10.857 25.714t-25.714 10.857h-804.571q-14.857 0-25.714-10.857t-10.857-25.714v-275.429q0-35.429 14.286-70.286l136-315.429q5.714-14.286 20.857-24t30-9.714h475.429q14.857 0 30 9.714t20.857 24l136 315.429q14.286 34.857 14.286 70.286z"
				],
				"attrs": [],
				"tags": [
					"inbox"
				],
				"defaultCode": 61468,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 27,
				"order": 28,
				"prevSize": 28,
				"code": 61468,
				"name": "inbox"
			},
			"setIdx": 0,
			"iconIdx": 45
		},
		{
			"icon": {
				"paths": [
					"M676.571 512q0 21.143-18.286 31.429l-310.857 182.857q-8.571 5.143-18.286 5.143-9.143 0-18.286-4.571-18.286-10.857-18.286-32v-365.714q0-21.143 18.286-32 18.857-10.286 36.571 0.571l310.857 182.857q18.286 10.286 18.286 31.429zM749.714 512q0-84.571-41.714-156t-113.143-113.143-156-41.714-156 41.714-113.143 113.143-41.714 156 41.714 156 113.143 113.143 156 41.714 156-41.714 113.143-113.143 41.714-156zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"play-circle-o"
				],
				"defaultCode": 61469,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 28,
				"order": 29,
				"prevSize": 28,
				"code": 61469,
				"name": "play-circle-o"
			},
			"setIdx": 0,
			"iconIdx": 46
		},
		{
			"icon": {
				"paths": [
					"M877.714 146.286v256q0 14.857-10.857 25.714t-25.714 10.857h-256q-24 0-33.714-22.857-9.714-22.286 8-39.429l78.857-78.857q-84.571-78.286-199.429-78.286-59.429 0-113.429 23.143t-93.429 62.571-62.571 93.429-23.143 113.429 23.143 113.429 62.571 93.429 93.429 62.571 113.429 23.143q68 0 128.571-29.714t102.286-84q4-5.714 13.143-6.857 8 0 14.286 5.143l78.286 78.857q5.143 4.571 5.429 11.714t-4.286 12.857q-62.286 75.429-150.857 116.857t-186.857 41.429q-89.143 0-170.286-34.857t-140-93.714-93.714-140-34.857-170.286 34.857-170.286 93.714-140 140-93.714 170.286-34.857q84 0 162.571 31.714t139.714 89.429l74.286-73.714q16.571-17.714 40-8 22.286 9.714 22.286 33.714z"
				],
				"attrs": [],
				"tags": [
					"repeat",
					"rotate-right"
				],
				"defaultCode": 61470,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 29,
				"order": 30,
				"prevSize": 28,
				"code": 61470,
				"name": "repeat"
			},
			"setIdx": 0,
			"iconIdx": 47
		},
		{
			"icon": {
				"paths": [
					"M863.429 603.429q0 2.857-0.571 4-36.571 153.143-153.143 248.286t-273.143 95.143q-83.429 0-161.429-31.429t-139.143-89.714l-73.714 73.714q-10.857 10.857-25.714 10.857t-25.714-10.857-10.857-25.714v-256q0-14.857 10.857-25.714t25.714-10.857h256q14.857 0 25.714 10.857t10.857 25.714-10.857 25.714l-78.286 78.286q40.571 37.714 92 58.286t106.857 20.571q76.571 0 142.857-37.143t106.286-102.286q6.286-9.714 30.286-66.857 4.571-13.143 17.143-13.143h109.714q7.429 0 12.857 5.429t5.429 12.857zM877.714 146.286v256q0 14.857-10.857 25.714t-25.714 10.857h-256q-14.857 0-25.714-10.857t-10.857-25.714 10.857-25.714l78.857-78.857q-84.571-78.286-199.429-78.286-76.571 0-142.857 37.143t-106.286 102.286q-6.286 9.714-30.286 66.857-4.571 13.143-17.143 13.143h-113.714q-7.429 0-12.857-5.429t-5.429-12.857v-4q37.143-153.143 154.286-248.286t274.286-95.143q83.429 0 162.286 31.714t140 89.429l74.286-73.714q10.857-10.857 25.714-10.857t25.714 10.857 10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"refresh"
				],
				"defaultCode": 61473,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 30,
				"order": 31,
				"prevSize": 28,
				"code": 61473,
				"name": "refresh"
			},
			"setIdx": 0,
			"iconIdx": 48
		},
		{
			"icon": {
				"paths": [
					"M219.429 676.571v36.571q0 7.429-5.429 12.857t-12.857 5.429h-36.571q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h36.571q7.429 0 12.857 5.429t5.429 12.857zM219.429 530.286v36.571q0 7.429-5.429 12.857t-12.857 5.429h-36.571q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h36.571q7.429 0 12.857 5.429t5.429 12.857zM219.429 384v36.571q0 7.429-5.429 12.857t-12.857 5.429h-36.571q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h36.571q7.429 0 12.857 5.429t5.429 12.857zM877.714 676.571v36.571q0 7.429-5.429 12.857t-12.857 5.429h-548.571q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h548.571q7.429 0 12.857 5.429t5.429 12.857zM877.714 530.286v36.571q0 7.429-5.429 12.857t-12.857 5.429h-548.571q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h548.571q7.429 0 12.857 5.429t5.429 12.857zM877.714 384v36.571q0 7.429-5.429 12.857t-12.857 5.429h-548.571q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h548.571q7.429 0 12.857 5.429t5.429 12.857zM950.857 786.286v-475.429q0-7.429-5.429-12.857t-12.857-5.429h-841.143q-7.429 0-12.857 5.429t-5.429 12.857v475.429q0 7.429 5.429 12.857t12.857 5.429h841.143q7.429 0 12.857-5.429t5.429-12.857zM1024 164.571v621.714q0 37.714-26.857 64.571t-64.571 26.857h-841.143q-37.714 0-64.571-26.857t-26.857-64.571v-621.714q0-37.714 26.857-64.571t64.571-26.857h841.143q37.714 0 64.571 26.857t26.857 64.571z"
				],
				"attrs": [],
				"tags": [
					"list-alt"
				],
				"defaultCode": 61474,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 31,
				"order": 32,
				"prevSize": 28,
				"code": 61474,
				"name": "list-alt"
			},
			"setIdx": 0,
			"iconIdx": 49
		},
		{
			"icon": {
				"width": 658,
				"paths": [
					"M182.857 438.857h292.571v-109.714q0-60.571-42.857-103.429t-103.429-42.857-103.429 42.857-42.857 103.429v109.714zM658.286 493.714v329.143q0 22.857-16 38.857t-38.857 16h-548.571q-22.857 0-38.857-16t-16-38.857v-329.143q0-22.857 16-38.857t38.857-16h18.286v-109.714q0-105.143 75.429-180.571t180.571-75.429 180.571 75.429 75.429 180.571v109.714h18.286q22.857 0 38.857 16t16 38.857z"
				],
				"attrs": [],
				"tags": [
					"lock"
				],
				"defaultCode": 61475,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 32,
				"order": 33,
				"prevSize": 28,
				"code": 61475,
				"name": "lock"
			},
			"setIdx": 0,
			"iconIdx": 50
		},
		{
			"icon": {
				"paths": [
					"M182.857 146.286q0 41.143-36.571 62.857v723.429q0 7.429-5.429 12.857t-12.857 5.429h-36.571q-7.429 0-12.857-5.429t-5.429-12.857v-723.429q-36.571-21.714-36.571-62.857 0-30.286 21.429-51.714t51.714-21.429 51.714 21.429 21.429 51.714zM1024 182.857v436q0 14.286-7.143 22t-22.571 15.714q-122.857 66.286-210.857 66.286-34.857 0-70.571-12.571t-62-27.429-66-27.429-81.429-12.571q-109.714 0-265.143 83.429-9.714 5.143-18.857 5.143-14.857 0-25.714-10.857t-10.857-25.714v-424q0-18.286 17.714-31.429 12-8 45.143-24.571 134.857-68.571 240.571-68.571 61.143 0 114.286 16.571t125.143 50.286q21.714 10.857 50.286 10.857 30.857 0 67.143-12t62.857-26.857 50.286-26.857 31.143-12q14.857 0 25.714 10.857t10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"flag"
				],
				"defaultCode": 61476,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 33,
				"order": 34,
				"prevSize": 28,
				"code": 61476,
				"name": "flag"
			},
			"setIdx": 0,
			"iconIdx": 51
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M950.857 506.286q0 94.857-34.286 179.429l-11.429 28-105.714 18.857q-12.571 47.429-51.714 78t-89.429 30.571v18.286q0 8-5.143 13.143t-13.143 5.143h-36.571q-8 0-13.143-5.143t-5.143-13.143v-329.143q0-8 5.143-13.143t13.143-5.143h36.571q8 0 13.143 5.143t5.143 13.143v18.286q40.571 0 74.286 20.286t53.143 54.571l38.857-6.857q16.571-54.286 16.571-110.286 0-84.571-50.286-159.429t-135.143-119.429-180.286-44.571-180.286 44.571-135.143 119.429-50.286 159.429q0 56 16.571 110.286l38.857 6.857q19.429-34.286 53.143-54.571t74.286-20.286v-18.286q0-8 5.143-13.143t13.143-5.143h36.571q8 0 13.143 5.143t5.143 13.143v329.143q0 8-5.143 13.143t-13.143 5.143h-36.571q-8 0-13.143-5.143t-5.143-13.143v-18.286q-50.286 0-89.429-30.571t-51.714-78l-105.714-18.857-11.429-28q-34.286-84.571-34.286-179.429 0-86.286 38.286-166.286t102.286-138.571 152-93.429 182.857-34.857 182.857 34.857 152 93.429 102.286 138.571 38.286 166.286z"
				],
				"attrs": [],
				"tags": [
					"headphones"
				],
				"defaultCode": 61477,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 34,
				"order": 35,
				"prevSize": 28,
				"code": 61477,
				"name": "headphones"
			},
			"setIdx": 0,
			"iconIdx": 52
		},
		{
			"icon": {
				"width": 439,
				"paths": [
					"M438.857 201.143v621.714q0 14.857-10.857 25.714t-25.714 10.857-25.714-10.857l-190.286-190.286h-149.714q-14.857 0-25.714-10.857t-10.857-25.714v-219.429q0-14.857 10.857-25.714t25.714-10.857h149.714l190.286-190.286q10.857-10.857 25.714-10.857t25.714 10.857 10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"volume-off"
				],
				"defaultCode": 61478,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 35,
				"order": 36,
				"prevSize": 28,
				"code": 61478,
				"name": "volume-off"
			},
			"setIdx": 0,
			"iconIdx": 53
		},
		{
			"icon": {
				"width": 658,
				"paths": [
					"M438.857 201.143v621.714q0 14.857-10.857 25.714t-25.714 10.857-25.714-10.857l-190.286-190.286h-149.714q-14.857 0-25.714-10.857t-10.857-25.714v-219.429q0-14.857 10.857-25.714t25.714-10.857h149.714l190.286-190.286q10.857-10.857 25.714-10.857t25.714 10.857 10.857 25.714zM658.286 512q0 43.429-24.286 80.857t-64.286 53.429q-5.714 2.857-14.286 2.857-14.857 0-25.714-10.571t-10.857-26q0-12 6.857-20.286t16.571-14.286 19.429-13.143 16.571-20.286 6.857-32.571-6.857-32.571-16.571-20.286-19.429-13.143-16.571-14.286-6.857-20.286q0-15.429 10.857-26t25.714-10.571q8.571 0 14.286 2.857 40 15.429 64.286 53.143t24.286 81.143z"
				],
				"attrs": [],
				"tags": [
					"volume-down"
				],
				"defaultCode": 61479,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 36,
				"order": 37,
				"prevSize": 28,
				"code": 61479,
				"name": "volume-down"
			},
			"setIdx": 0,
			"iconIdx": 54
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M438.857 201.143v621.714q0 14.857-10.857 25.714t-25.714 10.857-25.714-10.857l-190.286-190.286h-149.714q-14.857 0-25.714-10.857t-10.857-25.714v-219.429q0-14.857 10.857-25.714t25.714-10.857h149.714l190.286-190.286q10.857-10.857 25.714-10.857t25.714 10.857 10.857 25.714zM658.286 512q0 43.429-24.286 80.857t-64.286 53.429q-5.714 2.857-14.286 2.857-14.857 0-25.714-10.571t-10.857-26q0-12 6.857-20.286t16.571-14.286 19.429-13.143 16.571-20.286 6.857-32.571-6.857-32.571-16.571-20.286-19.429-13.143-16.571-14.286-6.857-20.286q0-15.429 10.857-26t25.714-10.571q8.571 0 14.286 2.857 40 15.429 64.286 53.143t24.286 81.143zM804.571 512q0 87.429-48.571 161.429t-128.571 107.714q-7.429 2.857-14.286 2.857-15.429 0-26.286-10.857t-10.857-25.714q0-22.286 22.286-33.714 32-16.571 43.429-25.143 42.286-30.857 66-77.429t23.714-99.143-23.714-99.143-66-77.429q-11.429-8.571-43.429-25.143-22.286-11.429-22.286-33.714 0-14.857 10.857-25.714t25.714-10.857q7.429 0 14.857 2.857 80 33.714 128.571 107.714t48.571 161.429zM950.857 512q0 131.429-72.571 241.429t-193.143 162q-7.429 2.857-14.857 2.857-14.857 0-25.714-10.857t-10.857-25.714q0-20.571 22.286-33.714 4-2.286 12.857-6t12.857-6q26.286-14.286 46.857-29.143 70.286-52 109.714-129.714t39.429-165.143-39.429-165.143-109.714-129.714q-20.571-14.857-46.857-29.143-4-2.286-12.857-6t-12.857-6q-22.286-13.143-22.286-33.714 0-14.857 10.857-25.714t25.714-10.857q7.429 0 14.857 2.857 120.571 52 193.143 162t72.571 241.429z"
				],
				"attrs": [],
				"tags": [
					"volume-up"
				],
				"defaultCode": 61480,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 37,
				"order": 38,
				"prevSize": 28,
				"code": 61480,
				"name": "volume-up"
			},
			"setIdx": 0,
			"iconIdx": 55
		},
		{
			"icon": {
				"width": 805,
				"paths": [
					"M219.429 658.286v73.143h-73.143v-73.143h73.143zM219.429 219.429v73.143h-73.143v-73.143h73.143zM658.286 219.429v73.143h-73.143v-73.143h73.143zM73.143 804h219.429v-218.857h-219.429v218.857zM73.143 365.714h219.429v-219.429h-219.429v219.429zM512 365.714h219.429v-219.429h-219.429v219.429zM365.714 512v365.714h-365.714v-365.714h365.714zM658.286 804.571v73.143h-73.143v-73.143h73.143zM804.571 804.571v73.143h-73.143v-73.143h73.143zM804.571 512v219.429h-219.429v-73.143h-73.143v219.429h-73.143v-365.714h219.429v73.143h73.143v-73.143h73.143zM365.714 73.143v365.714h-365.714v-365.714h365.714zM804.571 73.143v365.714h-365.714v-365.714h365.714z"
				],
				"attrs": [],
				"tags": [
					"qrcode"
				],
				"defaultCode": 61481,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 38,
				"order": 39,
				"prevSize": 28,
				"code": 61481,
				"name": "qrcode"
			},
			"setIdx": 0,
			"iconIdx": 56
		},
		{
			"icon": {
				"paths": [
					"M36 877.714h-36v-804.571h36v804.571zM72 877.143h-18.286v-804h18.286v804zM125.714 877.143h-17.714v-804h17.714v804zM215.429 877.143h-17.714v-804h17.714v804zM305.143 877.143h-35.429v-804h35.429v804zM377.143 877.143h-17.714v-804h17.714v804zM413.143 877.143h-17.714v-804h17.714v804zM449.143 877.143h-17.714v-804h17.714v804zM538.857 877.143h-36v-804h36v804zM628.571 877.143h-36v-804h36v804zM700.571 877.143h-36v-804h36v804zM772.571 877.143h-36v-804h36v804zM826.286 877.143h-36v-804h36v804zM934.286 877.143h-53.714v-804h53.714v804zM970.286 877.143h-18.286v-804h18.286v804zM1024 877.714h-36v-804.571h36v804.571z"
				],
				"attrs": [],
				"tags": [
					"barcode"
				],
				"defaultCode": 61482,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 39,
				"order": 40,
				"prevSize": 28,
				"code": 61482,
				"name": "barcode"
			},
			"setIdx": 0,
			"iconIdx": 57
		},
		{
			"icon": {
				"paths": [
					"M256 256q0-30.286-21.429-51.714t-51.714-21.429-51.714 21.429-21.429 51.714 21.429 51.714 51.714 21.429 51.714-21.429 21.429-51.714zM865.714 585.143q0 30.286-21.143 51.429l-280.571 281.143q-22.286 21.143-52 21.143-30.286 0-51.429-21.143l-408.571-409.143q-21.714-21.143-36.857-57.714t-15.143-66.857v-237.714q0-29.714 21.714-51.429t51.429-21.714h237.714q30.286 0 66.857 15.143t58.286 36.857l408.571 408q21.143 22.286 21.143 52z"
				],
				"attrs": [],
				"tags": [
					"tag"
				],
				"defaultCode": 61483,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 40,
				"order": 41,
				"prevSize": 28,
				"code": 61483,
				"name": "tag"
			},
			"setIdx": 0,
			"iconIdx": 58
		},
		{
			"icon": {
				"width": 1097,
				"paths": [
					"M256 256q0-30.286-21.429-51.714t-51.714-21.429-51.714 21.429-21.429 51.714 21.429 51.714 51.714 21.429 51.714-21.429 21.429-51.714zM865.714 585.143q0 30.286-21.143 51.429l-280.571 281.143q-22.286 21.143-52 21.143-30.286 0-51.429-21.143l-408.571-409.143q-21.714-21.143-36.857-57.714t-15.143-66.857v-237.714q0-29.714 21.714-51.429t51.429-21.714h237.714q30.286 0 66.857 15.143t58.286 36.857l408.571 408q21.143 22.286 21.143 52zM1085.143 585.143q0 30.286-21.143 51.429l-280.571 281.143q-22.286 21.143-52 21.143-20.571 0-33.714-8t-30.286-25.714l268.571-268.571q21.143-21.143 21.143-51.429 0-29.714-21.143-52l-408.571-408q-21.714-21.714-58.286-36.857t-66.857-15.143h128q30.286 0 66.857 15.143t58.286 36.857l408.571 408q21.143 22.286 21.143 52z"
				],
				"attrs": [],
				"tags": [
					"tags"
				],
				"defaultCode": 61484,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 41,
				"order": 42,
				"prevSize": 28,
				"code": 61484,
				"name": "tags"
			},
			"setIdx": 0,
			"iconIdx": 59
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M936.571 273.143q22.857 32.571 10.286 73.714l-157.143 517.714q-10.857 36.571-43.714 61.429t-70 24.857h-527.429q-44 0-84.857-30.571t-56.857-75.143q-13.714-38.286-1.143-72.571 0-2.286 1.714-15.429t2.286-21.143q0.571-4.571-1.714-12.286t-1.714-11.143q1.143-6.286 4.571-12t9.429-13.429 9.429-13.429q13.143-21.714 25.714-52.286t17.143-52.286q1.714-5.714 0.286-17.143t-0.286-16q1.714-6.286 9.714-16t9.714-13.143q12-20.571 24-52.571t14.286-51.429q0.571-5.143-1.429-18.286t0.286-16q2.286-7.429 12.571-17.429t12.571-12.857q10.857-14.857 24.286-48.286t15.714-55.143q0.571-4.571-1.714-14.571t-1.143-15.143q1.143-4.571 5.143-10.286t10.286-13.143 9.714-12q4.571-6.857 9.429-17.429t8.571-20 9.143-20.571 11.143-18.286 15.143-13.429 20.571-6.571 27.143 3.143l-0.571 1.714q21.714-5.143 29.143-5.143h434.857q42.286 0 65.143 32t10.286 74.286l-156.571 517.714q-20.571 68-40.857 87.714t-73.429 19.714h-496.571q-15.429 0-21.714 8.571-6.286 9.143-0.571 24.571 13.714 40 82.286 40h527.429q16.571 0 32-8.857t20-23.714l171.429-564q4-12.571 2.857-32.571 21.714 8.571 33.714 24.571zM328.571 274.286q-2.286 7.429 1.143 12.857t11.429 5.429h347.429q7.429 0 14.571-5.429t9.429-12.857l12-36.571q2.286-7.429-1.143-12.857t-11.429-5.429h-347.429q-7.429 0-14.571 5.429t-9.429 12.857zM281.143 420.571q-2.286 7.429 1.143 12.857t11.429 5.429h347.429q7.429 0 14.571-5.429t9.429-12.857l12-36.571q2.286-7.429-1.143-12.857t-11.429-5.429h-347.429q-7.429 0-14.571 5.429t-9.429 12.857z"
				],
				"attrs": [],
				"tags": [
					"book"
				],
				"defaultCode": 61485,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 42,
				"order": 43,
				"prevSize": 28,
				"code": 61485,
				"name": "book"
			},
			"setIdx": 0,
			"iconIdx": 60
		},
		{
			"icon": {
				"width": 731,
				"paths": [
					"M665.143 73.143q13.143 0 25.143 5.143 18.857 7.429 30 23.429t11.143 35.429v736.571q0 19.429-11.143 35.429t-30 23.429q-10.857 4.571-25.143 4.571-27.429 0-47.429-18.286l-252-242.286-252 242.286q-20.571 18.857-47.429 18.857-13.143 0-25.143-5.143-18.857-7.429-30-23.429t-11.143-35.429v-736.571q0-19.429 11.143-35.429t30-23.429q12-5.143 25.143-5.143h598.857z"
				],
				"attrs": [],
				"tags": [
					"bookmark"
				],
				"defaultCode": 61486,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 43,
				"order": 44,
				"prevSize": 28,
				"code": 61486,
				"name": "bookmark"
			},
			"setIdx": 0,
			"iconIdx": 61
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M219.429 877.714h512v-146.286h-512v146.286zM219.429 512h512v-219.429h-91.429q-22.857 0-38.857-16t-16-38.857v-91.429h-365.714v365.714zM877.714 548.571q0-14.857-10.857-25.714t-25.714-10.857-25.714 10.857-10.857 25.714 10.857 25.714 25.714 10.857 25.714-10.857 10.857-25.714zM950.857 548.571v237.714q0 7.429-5.429 12.857t-12.857 5.429h-128v91.429q0 22.857-16 38.857t-38.857 16h-548.571q-22.857 0-38.857-16t-16-38.857v-91.429h-128q-7.429 0-12.857-5.429t-5.429-12.857v-237.714q0-45.143 32.286-77.429t77.429-32.286h36.571v-310.857q0-22.857 16-38.857t38.857-16h384q22.857 0 50.286 11.429t43.429 27.429l86.857 86.857q16 16 27.429 43.429t11.429 50.286v146.286h36.571q45.143 0 77.429 32.286t32.286 77.429z"
				],
				"attrs": [],
				"tags": [
					"print"
				],
				"defaultCode": 61487,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 44,
				"order": 45,
				"prevSize": 28,
				"code": 61487,
				"name": "print"
			},
			"setIdx": 0,
			"iconIdx": 62
		},
		{
			"icon": {
				"width": 1097,
				"paths": [
					"M548.571 384q68 0 116.286 48.286t48.286 116.286-48.286 116.286-116.286 48.286-116.286-48.286-48.286-116.286 48.286-116.286 116.286-48.286zM950.857 146.286q60.571 0 103.429 42.857t42.857 103.429v512q0 60.571-42.857 103.429t-103.429 42.857h-804.571q-60.571 0-103.429-42.857t-42.857-103.429v-512q0-60.571 42.857-103.429t103.429-42.857h128l29.143-77.714q10.857-28 39.714-48.286t59.143-20.286h292.571q30.286 0 59.143 20.286t39.714 48.286l29.143 77.714h128zM548.571 804.571q105.714 0 180.857-75.143t75.143-180.857-75.143-180.857-180.857-75.143-180.857 75.143-75.143 180.857 75.143 180.857 180.857 75.143z"
				],
				"attrs": [],
				"tags": [
					"camera"
				],
				"defaultCode": 61488,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 45,
				"order": 46,
				"prevSize": 28,
				"code": 61488,
				"name": "camera"
			},
			"setIdx": 0,
			"iconIdx": 63
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M414.286 319.429l-97.143 257.143q18.857 0 78 1.143t91.714 1.143q10.857 0 32.571-1.143-49.714-144.571-105.143-258.286zM0 950.857l1.143-45.143q13.143-4 32-7.143t32.571-6 28.286-8.286 25.429-16.571 17.714-28.857l135.429-352 160-413.714h73.143q4.571 8 6.286 12l117.143 274.286q18.857 44.571 60.571 147.143t65.143 156.857q8.571 19.429 33.143 82.571t41.143 96.286q11.429 25.714 20 32.571 10.857 8.571 50.286 16.857t48 11.714q3.429 21.714 3.429 32.571 0 2.286-0.286 7.429t-0.286 7.429q-36 0-108.571-4.571t-109.143-4.571q-43.429 0-122.857 4t-101.714 4.571q0-24.571 2.286-44.571l74.857-16q0.571 0 7.143-1.429t8.857-2 8.286-2.571 8.571-3.714 6.286-4.571 5.143-6.286 1.429-8q0-9.143-17.714-55.143t-41.143-101.429-24-57.143l-257.143-1.143q-14.857 33.143-43.714 111.714t-28.857 92.857q0 12.571 8 21.429t24.857 14 27.714 7.714 32.571 4.857 23.429 2.286q0.571 10.857 0.571 33.143 0 5.143-1.143 15.429-33.143 0-99.714-5.714t-99.714-5.714q-4.571 0-15.143 2.286t-12.286 2.286q-45.714 8-107.429 8z"
				],
				"attrs": [],
				"tags": [
					"font"
				],
				"defaultCode": 61489,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 46,
				"order": 47,
				"prevSize": 28,
				"code": 61489,
				"name": "font"
			},
			"setIdx": 0,
			"iconIdx": 64
		},
		{
			"icon": {
				"width": 805,
				"paths": [
					"M317.143 869.143q42.286 18.286 80 18.286 214.857 0 214.857-191.429 0-65.143-23.429-102.857-15.429-25.143-35.143-42.286t-38.571-26.571-46-14.286-48-6-54-1.143q-41.714 0-57.714 5.714 0 30.286-0.286 90.857t-0.286 90.286q0 4.571-0.571 38.571t-0.286 55.143 2.571 47.714 6.857 38zM309.143 442.857q24 4 62.286 4 46.857 0 81.714-7.429t62.857-25.429 42.571-51.143 14.571-81.143q0-40-16.571-70t-45.143-46.857-61.714-24.857-70.857-8q-28.571 0-74.286 7.429 0 28.571 2.286 86.286t2.286 86.857q0 15.429-0.286 45.714t-0.286 45.143q0 26.286 0.571 39.429zM0 950.857l1.143-53.714q8.571-2.286 48.571-9.143t60.571-15.429q4-6.857 7.143-15.429t4.857-19.143 3.143-18.571 1.714-21.429 0.286-19.429v-37.429q0-561.143-12.571-585.714-2.286-4.571-12.571-8.286t-25.429-6.286-28.286-4-27.714-2.571-17.429-1.714l-2.286-47.429q56-1.143 194.286-6.571t213.143-5.429q13.143 0 39.143 0.286t38.571 0.286q40 0 78 7.429t73.429 24 61.714 40.571 42.286 59.714 16 78.571q0 29.714-9.429 54.571t-22.286 41.143-36.857 32.857-41.714 25.714-48 22.857q88 20 146.571 76.571t58.571 141.714q0 57.143-20 102.571t-53.429 74.571-78.857 48.857-93.429 27.714-100.571 8q-25.143 0-75.429-1.714t-75.429-1.714q-60.571 0-175.429 6.286t-132 6.857z"
				],
				"attrs": [],
				"tags": [
					"bold"
				],
				"defaultCode": 61490,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 47,
				"order": 48,
				"prevSize": 28,
				"code": 61490,
				"name": "bold"
			},
			"setIdx": 0,
			"iconIdx": 65
		},
		{
			"icon": {
				"width": 585,
				"paths": [
					"M0 949.714l9.714-48.571q3.429-1.143 46.571-12.286t63.714-21.429q16-20 23.429-57.714 0.571-4 35.429-165.143t65.143-310.571 29.714-169.429v-14.286q-13.714-7.429-31.143-10.571t-39.714-4.571-33.143-3.143l10.857-58.857q18.857 1.143 68.571 3.714t85.429 4 68.857 1.429q27.429 0 56.286-1.429t69.143-4 56.286-3.714q-2.857 22.286-10.857 50.857-17.143 5.714-58 16.286t-62 19.143q-4.571 10.857-8 24.286t-5.143 22.857-4.286 26-3.714 24q-15.429 84.571-50 239.714t-44.286 203.143q-1.143 5.143-7.429 33.143t-11.429 51.429-9.143 47.714-3.429 32.857l0.571 10.286q9.714 2.286 105.714 17.714-1.714 25.143-9.143 56.571-6.286 0-18.571 0.857t-18.571 0.857q-16.571 0-49.714-5.714t-49.143-5.714q-78.857-1.143-117.714-1.143-29.143 0-81.714 5.143t-69.143 6.286z"
				],
				"attrs": [],
				"tags": [
					"italic"
				],
				"defaultCode": 61491,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 48,
				"order": 49,
				"prevSize": 28,
				"code": 61491,
				"name": "italic"
			},
			"setIdx": 0,
			"iconIdx": 66
		},
		{
			"icon": {
				"paths": [
					"M996.571 804.571q18.857 0 24 10.571t-6.286 25.429l-72 92.571q-11.429 14.857-28 14.857t-28-14.857l-72-92.571q-11.429-14.857-6.286-25.429t24-10.571h45.714v-585.143h-45.714q-18.857 0-24-10.571t6.286-25.429l72-92.571q11.429-14.857 28-14.857t28 14.857l72 92.571q11.429 14.857 6.286 25.429t-24 10.571h-45.714v585.143h45.714zM46.286 73.714l30.857 15.429q6.857 2.857 120.571 2.857 25.143 0 75.429-1.143t75.429-1.143q20.571 0 61.429 0.286t61.429 0.286h167.429q3.429 0 12 0.286t11.714 0 9.143-1.714 10-5.143 8.571-10l24-0.571q2.286 0 8 0.286t8 0.286q1.143 64 1.143 192 0 45.714-2.857 62.286-22.286 8-38.857 10.286-14.286-25.143-30.857-73.143-1.714-5.143-6.286-27.429t-8.286-42-4.286-20.286q-3.429-4.571-6.857-7.143t-8.857-3.429-7.429-1.429-10.286-0.286-9.429 0.286q-9.714 0-38-0.286t-42.571-0.286-36.571 1.143-40.571 3.429q-5.143 46.286-4.571 77.714 0 53.714 1.143 221.714t1.143 260q0 9.143-1.429 40.857t0 52.286 7.143 39.429q22.857 12 70.857 24.286t68.571 21.429q2.857 22.857 2.857 28.571 0 8-1.714 16.571l-19.429 0.571q-43.429 1.143-124.571-4.571t-118.286-5.714q-28.571 0-86.286 5.143t-86.857 5.143q-1.714-29.143-1.714-29.714v-5.143q9.714-15.429 35.143-24.571t56.286-16.571 44.571-15.429q10.857-24 10.857-218.857 0-57.714-1.714-173.143t-1.714-173.143v-66.857q0-1.143 0.286-8.857t0.286-14.286-0.571-14.571-1.714-13.714-2.857-8q-6.286-6.857-92.571-6.857-18.857 0-53.143 6.857t-45.714 14.857q-10.857 7.429-19.429 41.429t-18 63.429-24.286 30.571q-24-14.857-32-25.143v-218.857z"
				],
				"attrs": [],
				"tags": [
					"text-height"
				],
				"defaultCode": 61492,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 49,
				"order": 50,
				"prevSize": 28,
				"code": 61492,
				"name": "text-height"
			},
			"setIdx": 0,
			"iconIdx": 67
		},
		{
			"icon": {
				"paths": [
					"M46.286 73.714l30.857 15.429q6.857 2.857 120.571 2.857 25.143 0 75.429-1.143t75.429-1.143q40 0 140.857-0.571t174-0.286 141.143 2.571q18.857 0.571 32-17.714l24-0.571q2.286 0 8 0.286t8 0.286q1.143 64 1.143 192 0 45.714-2.857 62.286-22.286 8-38.857 10.286-14.286-25.143-30.857-73.143-1.714-5.143-6.286-27.143t-8.571-42-4-20.571q-5.714-7.429-15.429-10.857-2.857-1.143-37.714-1.143-17.143 0-53.143-0.571t-58.857-0.571-53.714 1.143-54.857 4q-5.143 46.286-4.571 77.714l0.571 86.857v-29.714q0 31.429 0.571 88t0.857 102.857 0.286 87.429q0 9.143-1.429 40.857t0 52.286 7.143 39.429q22.857 12 70.857 24.286t68.571 21.429q2.857 22.857 2.857 28.571 0 8-1.714 16.571l-19.429 0.571q-43.429 1.143-124.571-4.571t-118.286-5.714q-28.571 0-86.286 5.143t-86.857 5.143q-1.714-29.143-1.714-29.714v-5.143q9.714-15.429 35.143-24.571t56.286-16.571 44.571-15.429q4-9.143 6.571-42.286t3.429-83.143 0.857-88.571-0.286-87.714-0.286-50.857q0-4-1.429-12.286t-1.429-12.857q0-4 0.286-25.143t0.571-41.714 0-43.714-1.714-38.571-3.714-18.286q-6.286-6.857-92.571-6.857-23.429 0-93.143 7.714t-78.857 14q-10.857 6.857-19.429 40.857t-18 63.714-24.286 30.857q-24-14.857-32-25.143v-218.857zM748.571 806.286q6.857 0 24 11.143t32.857 23.714 34 28 20.571 17.143q14.857 12 14.857 28t-14.857 28q-2.286 1.714-20.571 17.143t-34 28-32.857 23.714-24 11.143q-7.429 0-11.714-6t-5.714-16.286-1.429-19.143 0.857-18.857 0.857-11.143h-585.143q0 1.143 0.857 11.143t0.857 18.857-1.429 19.143-5.714 16.286-11.714 6q-6.857 0-24-11.143t-32.857-23.714-34-28-20.571-17.143q-14.857-12-14.857-28t14.857-28q2.286-1.714 20.571-17.143t34-28 32.857-23.714 24-11.143q7.429 0 11.714 6t5.714 16.286 1.429 19.143-0.857 18.857-0.857 11.143h585.143q0-1.143-0.857-11.143t-0.857-18.857 1.429-19.143 5.714-16.286 11.714-6z"
				],
				"attrs": [],
				"tags": [
					"text-width"
				],
				"defaultCode": 61493,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 50,
				"order": 51,
				"prevSize": 28,
				"code": 61493,
				"name": "text-width"
			},
			"setIdx": 0,
			"iconIdx": 68
		},
		{
			"icon": {
				"paths": [
					"M1024 768v73.143q0 14.857-10.857 25.714t-25.714 10.857h-950.857q-14.857 0-25.714-10.857t-10.857-25.714v-73.143q0-14.857 10.857-25.714t25.714-10.857h950.857q14.857 0 25.714 10.857t10.857 25.714zM804.571 548.571v73.143q0 14.857-10.857 25.714t-25.714 10.857h-731.429q-14.857 0-25.714-10.857t-10.857-25.714v-73.143q0-14.857 10.857-25.714t25.714-10.857h731.429q14.857 0 25.714 10.857t10.857 25.714zM950.857 329.143v73.143q0 14.857-10.857 25.714t-25.714 10.857h-877.714q-14.857 0-25.714-10.857t-10.857-25.714v-73.143q0-14.857 10.857-25.714t25.714-10.857h877.714q14.857 0 25.714 10.857t10.857 25.714zM731.429 109.714v73.143q0 14.857-10.857 25.714t-25.714 10.857h-658.286q-14.857 0-25.714-10.857t-10.857-25.714v-73.143q0-14.857 10.857-25.714t25.714-10.857h658.286q14.857 0 25.714 10.857t10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"align-left"
				],
				"defaultCode": 61494,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 51,
				"order": 52,
				"prevSize": 28,
				"code": 61494,
				"name": "align-left"
			},
			"setIdx": 0,
			"iconIdx": 69
		},
		{
			"icon": {
				"paths": [
					"M1024 768v73.143q0 14.857-10.857 25.714t-25.714 10.857h-950.857q-14.857 0-25.714-10.857t-10.857-25.714v-73.143q0-14.857 10.857-25.714t25.714-10.857h950.857q14.857 0 25.714 10.857t10.857 25.714zM804.571 548.571v73.143q0 14.857-10.857 25.714t-25.714 10.857h-512q-14.857 0-25.714-10.857t-10.857-25.714v-73.143q0-14.857 10.857-25.714t25.714-10.857h512q14.857 0 25.714 10.857t10.857 25.714zM950.857 329.143v73.143q0 14.857-10.857 25.714t-25.714 10.857h-804.571q-14.857 0-25.714-10.857t-10.857-25.714v-73.143q0-14.857 10.857-25.714t25.714-10.857h804.571q14.857 0 25.714 10.857t10.857 25.714zM731.429 109.714v73.143q0 14.857-10.857 25.714t-25.714 10.857h-365.714q-14.857 0-25.714-10.857t-10.857-25.714v-73.143q0-14.857 10.857-25.714t25.714-10.857h365.714q14.857 0 25.714 10.857t10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"align-center"
				],
				"defaultCode": 61495,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 52,
				"order": 53,
				"prevSize": 28,
				"code": 61495,
				"name": "align-center"
			},
			"setIdx": 0,
			"iconIdx": 70
		},
		{
			"icon": {
				"paths": [
					"M1024 768v73.143q0 14.857-10.857 25.714t-25.714 10.857h-950.857q-14.857 0-25.714-10.857t-10.857-25.714v-73.143q0-14.857 10.857-25.714t25.714-10.857h950.857q14.857 0 25.714 10.857t10.857 25.714zM1024 548.571v73.143q0 14.857-10.857 25.714t-25.714 10.857h-731.429q-14.857 0-25.714-10.857t-10.857-25.714v-73.143q0-14.857 10.857-25.714t25.714-10.857h731.429q14.857 0 25.714 10.857t10.857 25.714zM1024 329.143v73.143q0 14.857-10.857 25.714t-25.714 10.857h-877.714q-14.857 0-25.714-10.857t-10.857-25.714v-73.143q0-14.857 10.857-25.714t25.714-10.857h877.714q14.857 0 25.714 10.857t10.857 25.714zM1024 109.714v73.143q0 14.857-10.857 25.714t-25.714 10.857h-658.286q-14.857 0-25.714-10.857t-10.857-25.714v-73.143q0-14.857 10.857-25.714t25.714-10.857h658.286q14.857 0 25.714 10.857t10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"align-right"
				],
				"defaultCode": 61496,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 53,
				"order": 54,
				"prevSize": 28,
				"code": 61496,
				"name": "align-right"
			},
			"setIdx": 0,
			"iconIdx": 71
		},
		{
			"icon": {
				"paths": [
					"M1024 768v73.143q0 14.857-10.857 25.714t-25.714 10.857h-950.857q-14.857 0-25.714-10.857t-10.857-25.714v-73.143q0-14.857 10.857-25.714t25.714-10.857h950.857q14.857 0 25.714 10.857t10.857 25.714zM1024 548.571v73.143q0 14.857-10.857 25.714t-25.714 10.857h-950.857q-14.857 0-25.714-10.857t-10.857-25.714v-73.143q0-14.857 10.857-25.714t25.714-10.857h950.857q14.857 0 25.714 10.857t10.857 25.714zM1024 329.143v73.143q0 14.857-10.857 25.714t-25.714 10.857h-950.857q-14.857 0-25.714-10.857t-10.857-25.714v-73.143q0-14.857 10.857-25.714t25.714-10.857h950.857q14.857 0 25.714 10.857t10.857 25.714zM1024 109.714v73.143q0 14.857-10.857 25.714t-25.714 10.857h-950.857q-14.857 0-25.714-10.857t-10.857-25.714v-73.143q0-14.857 10.857-25.714t25.714-10.857h950.857q14.857 0 25.714 10.857t10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"align-justify"
				],
				"defaultCode": 61497,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 54,
				"order": 55,
				"prevSize": 28,
				"code": 61497,
				"name": "align-justify"
			},
			"setIdx": 0,
			"iconIdx": 72
		},
		{
			"icon": {
				"paths": [
					"M146.286 749.714v109.714q0 7.429-5.429 12.857t-12.857 5.429h-109.714q-7.429 0-12.857-5.429t-5.429-12.857v-109.714q0-7.429 5.429-12.857t12.857-5.429h109.714q7.429 0 12.857 5.429t5.429 12.857zM146.286 530.286v109.714q0 7.429-5.429 12.857t-12.857 5.429h-109.714q-7.429 0-12.857-5.429t-5.429-12.857v-109.714q0-7.429 5.429-12.857t12.857-5.429h109.714q7.429 0 12.857 5.429t5.429 12.857zM146.286 310.857v109.714q0 7.429-5.429 12.857t-12.857 5.429h-109.714q-7.429 0-12.857-5.429t-5.429-12.857v-109.714q0-7.429 5.429-12.857t12.857-5.429h109.714q7.429 0 12.857 5.429t5.429 12.857zM1024 749.714v109.714q0 7.429-5.429 12.857t-12.857 5.429h-768q-7.429 0-12.857-5.429t-5.429-12.857v-109.714q0-7.429 5.429-12.857t12.857-5.429h768q7.429 0 12.857 5.429t5.429 12.857zM146.286 91.429v109.714q0 7.429-5.429 12.857t-12.857 5.429h-109.714q-7.429 0-12.857-5.429t-5.429-12.857v-109.714q0-7.429 5.429-12.857t12.857-5.429h109.714q7.429 0 12.857 5.429t5.429 12.857zM1024 530.286v109.714q0 7.429-5.429 12.857t-12.857 5.429h-768q-7.429 0-12.857-5.429t-5.429-12.857v-109.714q0-7.429 5.429-12.857t12.857-5.429h768q7.429 0 12.857 5.429t5.429 12.857zM1024 310.857v109.714q0 7.429-5.429 12.857t-12.857 5.429h-768q-7.429 0-12.857-5.429t-5.429-12.857v-109.714q0-7.429 5.429-12.857t12.857-5.429h768q7.429 0 12.857 5.429t5.429 12.857zM1024 91.429v109.714q0 7.429-5.429 12.857t-12.857 5.429h-768q-7.429 0-12.857-5.429t-5.429-12.857v-109.714q0-7.429 5.429-12.857t12.857-5.429h768q7.429 0 12.857 5.429t5.429 12.857z"
				],
				"attrs": [],
				"tags": [
					"list"
				],
				"defaultCode": 61498,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 55,
				"order": 56,
				"prevSize": 28,
				"code": 61498,
				"name": "list"
			},
			"setIdx": 0,
			"iconIdx": 73
		},
		{
			"icon": {
				"paths": [
					"M219.429 310.857v329.143q0 7.429-5.429 12.857t-12.857 5.429q-8 0-13.143-5.143l-164.571-164.571q-5.143-5.143-5.143-13.143t5.143-13.143l164.571-164.571q5.143-5.143 13.143-5.143 7.429 0 12.857 5.429t5.429 12.857zM1024 749.714v109.714q0 7.429-5.429 12.857t-12.857 5.429h-987.429q-7.429 0-12.857-5.429t-5.429-12.857v-109.714q0-7.429 5.429-12.857t12.857-5.429h987.429q7.429 0 12.857 5.429t5.429 12.857zM1024 530.286v109.714q0 7.429-5.429 12.857t-12.857 5.429h-621.714q-7.429 0-12.857-5.429t-5.429-12.857v-109.714q0-7.429 5.429-12.857t12.857-5.429h621.714q7.429 0 12.857 5.429t5.429 12.857zM1024 310.857v109.714q0 7.429-5.429 12.857t-12.857 5.429h-621.714q-7.429 0-12.857-5.429t-5.429-12.857v-109.714q0-7.429 5.429-12.857t12.857-5.429h621.714q7.429 0 12.857 5.429t5.429 12.857zM1024 91.429v109.714q0 7.429-5.429 12.857t-12.857 5.429h-987.429q-7.429 0-12.857-5.429t-5.429-12.857v-109.714q0-7.429 5.429-12.857t12.857-5.429h987.429q7.429 0 12.857 5.429t5.429 12.857z"
				],
				"attrs": [],
				"tags": [
					"dedent",
					"outdent"
				],
				"defaultCode": 61499,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 56,
				"order": 57,
				"prevSize": 28,
				"code": 61499,
				"name": "dedent"
			},
			"setIdx": 0,
			"iconIdx": 74
		},
		{
			"icon": {
				"paths": [
					"M201.143 475.429q0 8-5.143 13.143l-164.571 164.571q-5.143 5.143-13.143 5.143-7.429 0-12.857-5.429t-5.429-12.857v-329.143q0-7.429 5.429-12.857t12.857-5.429q8 0 13.143 5.143l164.571 164.571q5.143 5.143 5.143 13.143zM1024 749.714v109.714q0 7.429-5.429 12.857t-12.857 5.429h-987.429q-7.429 0-12.857-5.429t-5.429-12.857v-109.714q0-7.429 5.429-12.857t12.857-5.429h987.429q7.429 0 12.857 5.429t5.429 12.857zM1024 530.286v109.714q0 7.429-5.429 12.857t-12.857 5.429h-621.714q-7.429 0-12.857-5.429t-5.429-12.857v-109.714q0-7.429 5.429-12.857t12.857-5.429h621.714q7.429 0 12.857 5.429t5.429 12.857zM1024 310.857v109.714q0 7.429-5.429 12.857t-12.857 5.429h-621.714q-7.429 0-12.857-5.429t-5.429-12.857v-109.714q0-7.429 5.429-12.857t12.857-5.429h621.714q7.429 0 12.857 5.429t5.429 12.857zM1024 91.429v109.714q0 7.429-5.429 12.857t-12.857 5.429h-987.429q-7.429 0-12.857-5.429t-5.429-12.857v-109.714q0-7.429 5.429-12.857t12.857-5.429h987.429q7.429 0 12.857 5.429t5.429 12.857z"
				],
				"attrs": [],
				"tags": [
					"indent"
				],
				"defaultCode": 61500,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 57,
				"order": 58,
				"prevSize": 28,
				"code": 61500,
				"name": "indent"
			},
			"setIdx": 0,
			"iconIdx": 75
		},
		{
			"icon": {
				"paths": [
					"M1024 201.143v621.714q0 24-22.286 33.714-7.429 2.857-14.286 2.857-15.429 0-25.714-10.857l-230.286-230.286v94.857q0 68-48.286 116.286t-116.286 48.286h-402.286q-68 0-116.286-48.286t-48.286-116.286v-402.286q0-68 48.286-116.286t116.286-48.286h402.286q68 0 116.286 48.286t48.286 116.286v94.286l230.286-229.714q10.286-10.857 25.714-10.857 6.857 0 14.286 2.857 22.286 9.714 22.286 33.714z"
				],
				"attrs": [],
				"tags": [
					"video-camera"
				],
				"defaultCode": 61501,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 58,
				"order": 59,
				"prevSize": 28,
				"code": 61501,
				"name": "video-camera"
			},
			"setIdx": 0,
			"iconIdx": 76
		},
		{
			"icon": {
				"width": 1097,
				"paths": [
					"M365.714 329.143q0 45.714-32 77.714t-77.714 32-77.714-32-32-77.714 32-77.714 77.714-32 77.714 32 32 77.714zM950.857 548.571v256h-804.571v-109.714l182.857-182.857 91.429 91.429 292.571-292.571zM1005.714 146.286h-914.286q-7.429 0-12.857 5.429t-5.429 12.857v694.857q0 7.429 5.429 12.857t12.857 5.429h914.286q7.429 0 12.857-5.429t5.429-12.857v-694.857q0-7.429-5.429-12.857t-12.857-5.429zM1097.143 164.571v694.857q0 37.714-26.857 64.571t-64.571 26.857h-914.286q-37.714 0-64.571-26.857t-26.857-64.571v-694.857q0-37.714 26.857-64.571t64.571-26.857h914.286q37.714 0 64.571 26.857t26.857 64.571z"
				],
				"attrs": [],
				"tags": [
					"image",
					"photo",
					"picture-o"
				],
				"defaultCode": 61502,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 59,
				"order": 60,
				"prevSize": 28,
				"code": 61502,
				"name": "image"
			},
			"setIdx": 0,
			"iconIdx": 77
		},
		{
			"icon": {
				"paths": [
					"M207.429 877.714l52-52-134.286-134.286-52 52v61.143h73.143v73.143h61.143zM506.286 347.429q0-12.571-12.571-12.571-5.714 0-9.714 4l-309.714 309.714q-4 4-4 9.714 0 12.571 12.571 12.571 5.714 0 9.714-4l309.714-309.714q4-4 4-9.714zM475.429 237.714l237.714 237.714-475.429 475.429h-237.714v-237.714zM865.714 292.571q0 30.286-21.143 51.429l-94.857 94.857-237.714-237.714 94.857-94.286q20.571-21.714 51.429-21.714 30.286 0 52 21.714l134.286 133.714q21.143 22.286 21.143 52z"
				],
				"attrs": [],
				"tags": [
					"pencil"
				],
				"defaultCode": 61504,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 60,
				"order": 61,
				"prevSize": 28,
				"code": 61504,
				"name": "pencil"
			},
			"setIdx": 0,
			"iconIdx": 78
		},
		{
			"icon": {
				"width": 585,
				"paths": [
					"M438.857 365.714q0-60.571-42.857-103.429t-103.429-42.857-103.429 42.857-42.857 103.429 42.857 103.429 103.429 42.857 103.429-42.857 42.857-103.429zM585.143 365.714q0 62.286-18.857 102.286l-208 442.286q-9.143 18.857-27.143 29.714t-38.571 10.857-38.571-10.857-26.571-29.714l-208.571-442.286q-18.857-40-18.857-102.286 0-121.143 85.714-206.857t206.857-85.714 206.857 85.714 85.714 206.857z"
				],
				"attrs": [],
				"tags": [
					"map-marker"
				],
				"defaultCode": 61505,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 61,
				"order": 62,
				"prevSize": 28,
				"code": 61505,
				"name": "map-marker"
			},
			"setIdx": 0,
			"iconIdx": 79
		},
		{
			"icon": {
				"paths": [
					"M438.857 822.857v-621.714q-84.571 0-156 41.714t-113.143 113.143-41.714 156 41.714 156 113.143 113.143 156 41.714zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"adjust"
				],
				"defaultCode": 61506,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 62,
				"order": 63,
				"prevSize": 28,
				"code": 61506,
				"name": "adjust"
			},
			"setIdx": 0,
			"iconIdx": 80
		},
		{
			"icon": {
				"width": 585,
				"paths": [
					"M292.571 658.286q0-20.571-11.429-39.429-0.571-0.571-8.857-12.857t-14.571-21.714-14.286-25.143-12-28.857q-2.286-9.143-12-9.143t-12 9.143q-4 13.143-12 28.857t-14.286 25.143-14.571 21.714-8.857 12.857q-11.429 18.857-11.429 39.429 0 30.286 21.429 51.714t51.714 21.429 51.714-21.429 21.429-51.714zM585.143 585.143q0 121.143-85.714 206.857t-206.857 85.714-206.857-85.714-85.714-206.857q0-82.857 46.286-157.143 3.429-5.143 35.714-51.714t57.714-86.286 56.857-101.714 47.429-115.143q5.143-17.143 19.429-26.857t29.143-9.714 29.429 9.714 19.143 26.857q16 53.143 47.429 115.143t56.857 101.714 57.714 86.286 35.714 51.714q46.286 72.571 46.286 157.143z"
				],
				"attrs": [],
				"tags": [
					"tint"
				],
				"defaultCode": 61507,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 63,
				"order": 64,
				"prevSize": 28,
				"code": 61507,
				"name": "tint"
			},
			"setIdx": 0,
			"iconIdx": 81
		},
		{
			"icon": {
				"paths": [
					"M507.429 676.571l66.286-66.286-86.857-86.857-66.286 66.286v32h54.857v54.857h32zM758.857 265.143q-9.143-9.143-18.857 0.571l-200 200q-9.714 9.714-0.571 18.857t18.857-0.571l200-200q9.714-9.714 0.571-18.857zM804.571 604.571v108.571q0 68-48.286 116.286t-116.286 48.286h-475.429q-68 0-116.286-48.286t-48.286-116.286v-475.429q0-68 48.286-116.286t116.286-48.286h475.429q36 0 66.857 14.286 8.571 4 10.286 13.143 1.714 9.714-5.143 16.571l-28 28q-8 8-18.286 4.571-13.143-3.429-25.714-3.429h-475.429q-37.714 0-64.571 26.857t-26.857 64.571v475.429q0 37.714 26.857 64.571t64.571 26.857h475.429q37.714 0 64.571-26.857t26.857-64.571v-72q0-7.429 5.143-12.571l36.571-36.571q8.571-8.571 20-4t11.429 16.571zM749.714 182.857l164.571 164.571-384 384h-164.571v-164.571zM1003.429 258.286l-52.571 52.571-164.571-164.571 52.571-52.571q16-16 38.857-16t38.857 16l86.857 86.857q16 16 16 38.857t-16 38.857z"
				],
				"attrs": [],
				"tags": [
					"edit",
					"pencil-square-o"
				],
				"defaultCode": 61508,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 64,
				"order": 65,
				"prevSize": 28,
				"code": 61508,
				"name": "edit"
			},
			"setIdx": 0,
			"iconIdx": 82
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M804.571 565.143v148q0 68-48.286 116.286t-116.286 48.286h-475.429q-68 0-116.286-48.286t-48.286-116.286v-475.429q0-68 48.286-116.286t116.286-48.286h145.714q7.429 0 12.857 5.429t5.429 12.857q0 15.429-14.857 18.286-44 14.857-76 34.286-5.714 2.286-9.143 2.286h-64q-37.714 0-64.571 26.857t-26.857 64.571v475.429q0 37.714 26.857 64.571t64.571 26.857h475.429q37.714 0 64.571-26.857t26.857-64.571v-122.286q0-10.857 10.286-16.571 16-7.429 30.857-21.143 9.143-9.143 20-4.571 12 5.143 12 16.571zM940 281.714l-219.429 219.429q-10.286 10.857-25.714 10.857-6.857 0-14.286-2.857-22.286-9.714-22.286-33.714v-109.714h-91.429q-184.571 0-250.286 74.857-68 78.286-42.286 270.286 1.714 13.143-11.429 19.429-4.571 1.143-6.857 1.143-9.143 0-14.857-7.429-5.714-8-12-17.714t-22.571-39.143-28.286-56.857-22-65.143-10-69.714q0-28 2-52t8-51.429 16-50.286 26.857-46.571 39.143-42.286 54-35.143 71.143-27.714 91.143-17.429 112.286-6.286h91.429v-109.714q0-24 22.286-33.714 7.429-2.857 14.286-2.857 14.857 0 25.714 10.857l219.429 219.429q10.857 10.857 10.857 25.714t-10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"share-square-o"
				],
				"defaultCode": 61509,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 65,
				"order": 66,
				"prevSize": 28,
				"code": 61509,
				"name": "share-square-o"
			},
			"setIdx": 0,
			"iconIdx": 83
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M804.571 531.429v181.714q0 68-48.286 116.286t-116.286 48.286h-475.429q-68 0-116.286-48.286t-48.286-116.286v-475.429q0-68 48.286-116.286t116.286-48.286h475.429q36 0 66.857 14.286 8.571 4 10.286 13.143 1.714 9.714-5.143 16.571l-28 28q-5.714 5.714-13.143 5.714-1.714 0-5.143-1.143-13.143-3.429-25.714-3.429h-475.429q-37.714 0-64.571 26.857t-26.857 64.571v475.429q0 37.714 26.857 64.571t64.571 26.857h475.429q37.714 0 64.571-26.857t26.857-64.571v-145.143q0-7.429 5.143-12.571l36.571-36.571q5.714-5.714 13.143-5.714 3.429 0 6.857 1.714 11.429 4.571 11.429 16.571zM936.571 252l-465.143 465.143q-13.714 13.714-32.571 13.714t-32.571-13.714l-245.714-245.714q-13.714-13.714-13.714-32.571t13.714-32.571l62.857-62.857q13.714-13.714 32.571-13.714t32.571 13.714l150.286 150.286 369.714-369.714q13.714-13.714 32.571-13.714t32.571 13.714l62.857 62.857q13.714 13.714 13.714 32.571t-13.714 32.571z"
				],
				"attrs": [],
				"tags": [
					"check-square-o"
				],
				"defaultCode": 61510,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 66,
				"order": 67,
				"prevSize": 28,
				"code": 61510,
				"name": "check-square-o"
			},
			"setIdx": 0,
			"iconIdx": 84
		},
		{
			"icon": {
				"paths": [
					"M1024 512q0 14.857-10.857 25.714l-146.286 146.286q-10.857 10.857-25.714 10.857t-25.714-10.857-10.857-25.714v-73.143h-219.429v219.429h73.143q14.857 0 25.714 10.857t10.857 25.714-10.857 25.714l-146.286 146.286q-10.857 10.857-25.714 10.857t-25.714-10.857l-146.286-146.286q-10.857-10.857-10.857-25.714t10.857-25.714 25.714-10.857h73.143v-219.429h-219.429v73.143q0 14.857-10.857 25.714t-25.714 10.857-25.714-10.857l-146.286-146.286q-10.857-10.857-10.857-25.714t10.857-25.714l146.286-146.286q10.857-10.857 25.714-10.857t25.714 10.857 10.857 25.714v73.143h219.429v-219.429h-73.143q-14.857 0-25.714-10.857t-10.857-25.714 10.857-25.714l146.286-146.286q10.857-10.857 25.714-10.857t25.714 10.857l146.286 146.286q10.857 10.857 10.857 25.714t-10.857 25.714-25.714 10.857h-73.143v219.429h219.429v-73.143q0-14.857 10.857-25.714t25.714-10.857 25.714 10.857l146.286 146.286q10.857 10.857 10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"arrows"
				],
				"defaultCode": 61511,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 67,
				"order": 68,
				"prevSize": 28,
				"code": 61511,
				"name": "arrows"
			},
			"setIdx": 0,
			"iconIdx": 85
		},
		{
			"icon": {
				"width": 585,
				"paths": [
					"M559.429 80.571q10.857-10.857 18.286-7.429t7.429 18.286v841.143q0 14.857-7.429 18.286t-18.286-7.429l-405.714-405.714q-5.143-5.143-7.429-10.857v387.429q0 14.857-10.857 25.714t-25.714 10.857h-73.143q-14.857 0-25.714-10.857t-10.857-25.714v-804.571q0-14.857 10.857-25.714t25.714-10.857h73.143q14.857 0 25.714 10.857t10.857 25.714v387.429q2.286-6.286 7.429-10.857z"
				],
				"attrs": [],
				"tags": [
					"step-backward"
				],
				"defaultCode": 61512,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 68,
				"order": 69,
				"prevSize": 28,
				"code": 61512,
				"name": "step-backward"
			},
			"setIdx": 0,
			"iconIdx": 86
		},
		{
			"icon": {
				"paths": [
					"M998.286 80.571q10.857-10.857 18.286-7.429t7.429 18.286v841.143q0 14.857-7.429 18.286t-18.286-7.429l-405.714-405.714q-5.143-5.143-7.429-10.857v405.714q0 14.857-7.429 18.286t-18.286-7.429l-405.714-405.714q-5.143-5.143-7.429-10.857v387.429q0 14.857-10.857 25.714t-25.714 10.857h-73.143q-14.857 0-25.714-10.857t-10.857-25.714v-804.571q0-14.857 10.857-25.714t25.714-10.857h73.143q14.857 0 25.714 10.857t10.857 25.714v387.429q2.286-6.286 7.429-10.857l405.714-405.714q10.857-10.857 18.286-7.429t7.429 18.286v405.714q2.286-6.286 7.429-10.857z"
				],
				"attrs": [],
				"tags": [
					"fast-backward"
				],
				"defaultCode": 61513,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 69,
				"order": 70,
				"prevSize": 28,
				"code": 61513,
				"name": "fast-backward"
			},
			"setIdx": 0,
			"iconIdx": 87
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M925.143 80.571q10.857-10.857 18.286-7.429t7.429 18.286v841.143q0 14.857-7.429 18.286t-18.286-7.429l-405.714-405.714q-4.571-5.143-7.429-10.857v405.714q0 14.857-7.429 18.286t-18.286-7.429l-405.714-405.714q-10.857-10.857-10.857-25.714t10.857-25.714l405.714-405.714q10.857-10.857 18.286-7.429t7.429 18.286v405.714q2.857-6.286 7.429-10.857z"
				],
				"attrs": [],
				"tags": [
					"backward"
				],
				"defaultCode": 61514,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 70,
				"order": 71,
				"prevSize": 28,
				"code": 61514,
				"name": "backward"
			},
			"setIdx": 0,
			"iconIdx": 88
		},
		{
			"icon": {
				"width": 805,
				"paths": [
					"M790.857 529.714l-758.857 421.714q-13.143 7.429-22.571 1.714t-9.429-20.571v-841.143q0-14.857 9.429-20.571t22.571 1.714l758.857 421.714q13.143 7.429 13.143 17.714t-13.143 17.714z"
				],
				"attrs": [],
				"tags": [
					"play"
				],
				"defaultCode": 61515,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 71,
				"order": 72,
				"prevSize": 28,
				"code": 61515,
				"name": "play"
			},
			"setIdx": 0,
			"iconIdx": 89
		},
		{
			"icon": {
				"paths": [
					"M877.714 109.714v804.571q0 14.857-10.857 25.714t-25.714 10.857h-292.571q-14.857 0-25.714-10.857t-10.857-25.714v-804.571q0-14.857 10.857-25.714t25.714-10.857h292.571q14.857 0 25.714 10.857t10.857 25.714zM365.714 109.714v804.571q0 14.857-10.857 25.714t-25.714 10.857h-292.571q-14.857 0-25.714-10.857t-10.857-25.714v-804.571q0-14.857 10.857-25.714t25.714-10.857h292.571q14.857 0 25.714 10.857t10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"pause"
				],
				"defaultCode": 61516,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 72,
				"order": 73,
				"prevSize": 28,
				"code": 61516,
				"name": "pause"
			},
			"setIdx": 0,
			"iconIdx": 90
		},
		{
			"icon": {
				"paths": [
					"M877.714 109.714v804.571q0 14.857-10.857 25.714t-25.714 10.857h-804.571q-14.857 0-25.714-10.857t-10.857-25.714v-804.571q0-14.857 10.857-25.714t25.714-10.857h804.571q14.857 0 25.714 10.857t10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"stop"
				],
				"defaultCode": 61517,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 73,
				"order": 74,
				"prevSize": 28,
				"code": 61517,
				"name": "stop"
			},
			"setIdx": 0,
			"iconIdx": 91
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M25.714 943.429q-10.857 10.857-18.286 7.429t-7.429-18.286v-841.143q0-14.857 7.429-18.286t18.286 7.429l405.714 405.714q4.571 4.571 7.429 10.857v-405.714q0-14.857 7.429-18.286t18.286 7.429l405.714 405.714q10.857 10.857 10.857 25.714t-10.857 25.714l-405.714 405.714q-10.857 10.857-18.286 7.429t-7.429-18.286v-405.714q-2.857 5.714-7.429 10.857z"
				],
				"attrs": [],
				"tags": [
					"forward"
				],
				"defaultCode": 61518,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 74,
				"order": 75,
				"prevSize": 28,
				"code": 61518,
				"name": "forward"
			},
			"setIdx": 0,
			"iconIdx": 92
		},
		{
			"icon": {
				"paths": [
					"M25.714 943.429q-10.857 10.857-18.286 7.429t-7.429-18.286v-841.143q0-14.857 7.429-18.286t18.286 7.429l405.714 405.714q4.571 4.571 7.429 10.857v-405.714q0-14.857 7.429-18.286t18.286 7.429l405.714 405.714q4.571 4.571 7.429 10.857v-387.429q0-14.857 10.857-25.714t25.714-10.857h73.143q14.857 0 25.714 10.857t10.857 25.714v804.571q0 14.857-10.857 25.714t-25.714 10.857h-73.143q-14.857 0-25.714-10.857t-10.857-25.714v-387.429q-2.857 5.714-7.429 10.857l-405.714 405.714q-10.857 10.857-18.286 7.429t-7.429-18.286v-405.714q-2.857 5.714-7.429 10.857z"
				],
				"attrs": [],
				"tags": [
					"fast-forward"
				],
				"defaultCode": 61520,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 75,
				"order": 76,
				"prevSize": 28,
				"code": 61520,
				"name": "fast-forward"
			},
			"setIdx": 0,
			"iconIdx": 93
		},
		{
			"icon": {
				"width": 585,
				"paths": [
					"M25.714 943.429q-10.857 10.857-18.286 7.429t-7.429-18.286v-841.143q0-14.857 7.429-18.286t18.286 7.429l405.714 405.714q4.571 4.571 7.429 10.857v-387.429q0-14.857 10.857-25.714t25.714-10.857h73.143q14.857 0 25.714 10.857t10.857 25.714v804.571q0 14.857-10.857 25.714t-25.714 10.857h-73.143q-14.857 0-25.714-10.857t-10.857-25.714v-387.429q-2.857 5.714-7.429 10.857z"
				],
				"attrs": [],
				"tags": [
					"step-forward"
				],
				"defaultCode": 61521,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 76,
				"order": 77,
				"prevSize": 28,
				"code": 61521,
				"name": "step-forward"
			},
			"setIdx": 0,
			"iconIdx": 94
		},
		{
			"icon": {
				"width": 879,
				"paths": [
					"M8 559.429l405.714-405.714q10.857-10.857 25.714-10.857t25.714 10.857l405.714 405.714q10.857 10.857 7.429 18.286t-18.286 7.429h-841.143q-14.857 0-18.286-7.429t7.429-18.286zM841.714 877.714h-804.571q-14.857 0-25.714-10.857t-10.857-25.714v-146.286q0-14.857 10.857-25.714t25.714-10.857h804.571q14.857 0 25.714 10.857t10.857 25.714v146.286q0 14.857-10.857 25.714t-25.714 10.857z"
				],
				"attrs": [],
				"tags": [
					"eject"
				],
				"defaultCode": 61522,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 77,
				"order": 78,
				"prevSize": 28,
				"code": 61522,
				"name": "eject"
			},
			"setIdx": 0,
			"iconIdx": 95
		},
		{
			"icon": {
				"width": 731,
				"paths": [
					"M669.143 172l-303.429 303.429 303.429 303.429q10.857 10.857 10.857 25.714t-10.857 25.714l-94.857 94.857q-10.857 10.857-25.714 10.857t-25.714-10.857l-424-424q-10.857-10.857-10.857-25.714t10.857-25.714l424-424q10.857-10.857 25.714-10.857t25.714 10.857l94.857 94.857q10.857 10.857 10.857 25.714t-10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"chevron-left"
				],
				"defaultCode": 61523,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 78,
				"order": 79,
				"prevSize": 28,
				"code": 61523,
				"name": "chevron-left"
			},
			"setIdx": 0,
			"iconIdx": 96
		},
		{
			"icon": {
				"width": 731,
				"paths": [
					"M632.571 501.143l-424 424q-10.857 10.857-25.714 10.857t-25.714-10.857l-94.857-94.857q-10.857-10.857-10.857-25.714t10.857-25.714l303.429-303.429-303.429-303.429q-10.857-10.857-10.857-25.714t10.857-25.714l94.857-94.857q10.857-10.857 25.714-10.857t25.714 10.857l424 424q10.857 10.857 10.857 25.714t-10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"chevron-right"
				],
				"defaultCode": 61524,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 79,
				"order": 80,
				"prevSize": 28,
				"code": 61524,
				"name": "chevron-right"
			},
			"setIdx": 0,
			"iconIdx": 97
		},
		{
			"icon": {
				"paths": [
					"M694.857 548.571v-73.143q0-14.857-10.857-25.714t-25.714-10.857h-146.286v-146.286q0-14.857-10.857-25.714t-25.714-10.857h-73.143q-14.857 0-25.714 10.857t-10.857 25.714v146.286h-146.286q-14.857 0-25.714 10.857t-10.857 25.714v73.143q0 14.857 10.857 25.714t25.714 10.857h146.286v146.286q0 14.857 10.857 25.714t25.714 10.857h73.143q14.857 0 25.714-10.857t10.857-25.714v-146.286h146.286q14.857 0 25.714-10.857t10.857-25.714zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"plus-circle"
				],
				"defaultCode": 61525,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 80,
				"order": 81,
				"prevSize": 28,
				"code": 61525,
				"name": "plus-circle"
			},
			"setIdx": 0,
			"iconIdx": 98
		},
		{
			"icon": {
				"paths": [
					"M694.857 548.571v-73.143q0-14.857-10.857-25.714t-25.714-10.857h-438.857q-14.857 0-25.714 10.857t-10.857 25.714v73.143q0 14.857 10.857 25.714t25.714 10.857h438.857q14.857 0 25.714-10.857t10.857-25.714zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"minus-circle"
				],
				"defaultCode": 61526,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 81,
				"order": 82,
				"prevSize": 28,
				"code": 61526,
				"name": "minus-circle"
			},
			"setIdx": 0,
			"iconIdx": 99
		},
		{
			"icon": {
				"paths": [
					"M656.571 641.143q0-14.857-10.857-25.714l-103.429-103.429 103.429-103.429q10.857-10.857 10.857-25.714 0-15.429-10.857-26.286l-51.429-51.429q-10.857-10.857-26.286-10.857-14.857 0-25.714 10.857l-103.429 103.429-103.429-103.429q-10.857-10.857-25.714-10.857-15.429 0-26.286 10.857l-51.429 51.429q-10.857 10.857-10.857 26.286 0 14.857 10.857 25.714l103.429 103.429-103.429 103.429q-10.857 10.857-10.857 25.714 0 15.429 10.857 26.286l51.429 51.429q10.857 10.857 26.286 10.857 14.857 0 25.714-10.857l103.429-103.429 103.429 103.429q10.857 10.857 25.714 10.857 15.429 0 26.286-10.857l51.429-51.429q10.857-10.857 10.857-26.286zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"times-circle"
				],
				"defaultCode": 61527,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 82,
				"order": 83,
				"prevSize": 28,
				"code": 61527,
				"name": "times-circle"
			},
			"setIdx": 0,
			"iconIdx": 100
		},
		{
			"icon": {
				"paths": [
					"M733.714 419.429q0-16-10.286-26.286l-52-51.429q-10.857-10.857-25.714-10.857t-25.714 10.857l-233.143 232.571-129.143-129.143q-10.857-10.857-25.714-10.857t-25.714 10.857l-52 51.429q-10.286 10.286-10.286 26.286 0 15.429 10.286 25.714l206.857 206.857q10.857 10.857 25.714 10.857 15.429 0 26.286-10.857l310.286-310.286q10.286-10.286 10.286-25.714zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"check-circle"
				],
				"defaultCode": 61528,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 83,
				"order": 84,
				"prevSize": 28,
				"code": 61528,
				"name": "check-circle"
			},
			"setIdx": 0,
			"iconIdx": 101
		},
		{
			"icon": {
				"paths": [
					"M512 786.286v-109.714q0-8-5.143-13.143t-13.143-5.143h-109.714q-8 0-13.143 5.143t-5.143 13.143v109.714q0 8 5.143 13.143t13.143 5.143h109.714q8 0 13.143-5.143t5.143-13.143zM658.286 402.286q0-50.286-31.714-93.143t-79.143-66.286-97.143-23.429q-138.857 0-212 121.714-8.571 13.714 4.571 24l75.429 57.143q4 3.429 10.857 3.429 9.143 0 14.286-6.857 30.286-38.857 49.143-52.571 19.429-13.714 49.143-13.714 27.429 0 48.857 14.857t21.429 33.714q0 21.714-11.429 34.857t-38.857 25.714q-36 16-66 49.429t-30 71.714v20.571q0 8 5.143 13.143t13.143 5.143h109.714q8 0 13.143-5.143t5.143-13.143q0-10.857 12.286-28.286t31.143-28.286q18.286-10.286 28-16.286t26.286-20 25.429-27.429 16-34.571 7.143-46.286zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"question-circle"
				],
				"defaultCode": 61529,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 84,
				"order": 85,
				"prevSize": 28,
				"code": 61529,
				"name": "question-circle"
			},
			"setIdx": 0,
			"iconIdx": 102
		},
		{
			"icon": {
				"paths": [
					"M585.143 786.286v-91.429q0-8-5.143-13.143t-13.143-5.143h-54.857v-292.571q0-8-5.143-13.143t-13.143-5.143h-182.857q-8 0-13.143 5.143t-5.143 13.143v91.429q0 8 5.143 13.143t13.143 5.143h54.857v182.857h-54.857q-8 0-13.143 5.143t-5.143 13.143v91.429q0 8 5.143 13.143t13.143 5.143h256q8 0 13.143-5.143t5.143-13.143zM512 274.286v-91.429q0-8-5.143-13.143t-13.143-5.143h-109.714q-8 0-13.143 5.143t-5.143 13.143v91.429q0 8 5.143 13.143t13.143 5.143h109.714q8 0 13.143-5.143t5.143-13.143zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"info-circle"
				],
				"defaultCode": 61530,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 85,
				"order": 86,
				"prevSize": 28,
				"code": 61530,
				"name": "info-circle"
			},
			"setIdx": 0,
			"iconIdx": 103
		},
		{
			"icon": {
				"paths": [
					"M684 585.143h-62.286q-14.857 0-25.714-10.857t-10.857-25.714v-73.143q0-14.857 10.857-25.714t25.714-10.857h62.286q-18.286-61.714-64.286-107.714t-107.714-64.286v62.286q0 14.857-10.857 25.714t-25.714 10.857h-73.143q-14.857 0-25.714-10.857t-10.857-25.714v-62.286q-61.714 18.286-107.714 64.286t-64.286 107.714h62.286q14.857 0 25.714 10.857t10.857 25.714v73.143q0 14.857-10.857 25.714t-25.714 10.857h-62.286q18.286 61.714 64.286 107.714t107.714 64.286v-62.286q0-14.857 10.857-25.714t25.714-10.857h73.143q14.857 0 25.714 10.857t10.857 25.714v62.286q61.714-18.286 107.714-64.286t64.286-107.714zM877.714 475.429v73.143q0 14.857-10.857 25.714t-25.714 10.857h-81.714q-21.143 92-88.286 159.143t-159.143 88.286v81.714q0 14.857-10.857 25.714t-25.714 10.857h-73.143q-14.857 0-25.714-10.857t-10.857-25.714v-81.714q-92-21.143-159.143-88.286t-88.286-159.143h-81.714q-14.857 0-25.714-10.857t-10.857-25.714v-73.143q0-14.857 10.857-25.714t25.714-10.857h81.714q21.143-92 88.286-159.143t159.143-88.286v-81.714q0-14.857 10.857-25.714t25.714-10.857h73.143q14.857 0 25.714 10.857t10.857 25.714v81.714q92 21.143 159.143 88.286t88.286 159.143h81.714q14.857 0 25.714 10.857t10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"crosshairs"
				],
				"defaultCode": 61531,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 86,
				"order": 87,
				"prevSize": 28,
				"code": 61531,
				"name": "crosshairs"
			},
			"setIdx": 0,
			"iconIdx": 104
		},
		{
			"icon": {
				"paths": [
					"M626.857 616.571l-83.429 83.429q-5.714 5.714-13.143 5.714t-13.143-5.714l-78.286-78.286-78.286 78.286q-5.714 5.714-13.143 5.714t-13.143-5.714l-83.429-83.429q-5.714-5.714-5.714-13.143t5.714-13.143l78.286-78.286-78.286-78.286q-5.714-5.714-5.714-13.143t5.714-13.143l83.429-83.429q5.714-5.714 13.143-5.714t13.143 5.714l78.286 78.286 78.286-78.286q5.714-5.714 13.143-5.714t13.143 5.714l83.429 83.429q5.714 5.714 5.714 13.143t-5.714 13.143l-78.286 78.286 78.286 78.286q5.714 5.714 5.714 13.143t-5.714 13.143zM749.714 512q0-84.571-41.714-156t-113.143-113.143-156-41.714-156 41.714-113.143 113.143-41.714 156 41.714 156 113.143 113.143 156 41.714 156-41.714 113.143-113.143 41.714-156zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"times-circle-o"
				],
				"defaultCode": 61532,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 87,
				"order": 88,
				"prevSize": 28,
				"code": 61532,
				"name": "times-circle-o"
			},
			"setIdx": 0,
			"iconIdx": 105
		},
		{
			"icon": {
				"paths": [
					"M669.143 464.571l-241.143 241.143q-10.857 10.857-25.714 10.857t-25.714-10.857l-168-168q-10.857-10.857-10.857-25.714t10.857-25.714l58.286-58.286q10.857-10.857 25.714-10.857t25.714 10.857l84 84 157.143-157.143q10.857-10.857 25.714-10.857t25.714 10.857l58.286 58.286q10.857 10.857 10.857 25.714t-10.857 25.714zM749.714 512q0-84.571-41.714-156t-113.143-113.143-156-41.714-156 41.714-113.143 113.143-41.714 156 41.714 156 113.143 113.143 156 41.714 156-41.714 113.143-113.143 41.714-156zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"check-circle-o"
				],
				"defaultCode": 61533,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 88,
				"order": 89,
				"prevSize": 28,
				"code": 61533,
				"name": "check-circle-o"
			},
			"setIdx": 0,
			"iconIdx": 106
		},
		{
			"icon": {
				"paths": [
					"M749.714 510.286q0-92-49.714-168.571l-430.857 430.286q78.286 50.857 169.714 50.857 63.429 0 120.857-24.857t99.143-66.571 66.286-99.714 24.571-121.429zM178.857 681.143l431.429-430.857q-77.143-52-171.429-52-84.571 0-156 41.714t-113.143 113.714-41.714 156.571q0 92.571 50.857 170.857zM877.714 510.286q0 89.714-34.857 171.429t-93.429 140.571-140 93.714-170.571 34.857-170.571-34.857-140-93.714-93.429-140.571-34.857-171.429 34.857-171.143 93.429-140.286 140-93.714 170.571-34.857 170.571 34.857 140 93.714 93.429 140.286 34.857 171.143z"
				],
				"attrs": [],
				"tags": [
					"ban"
				],
				"defaultCode": 61534,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 89,
				"order": 90,
				"prevSize": 28,
				"code": 61534,
				"name": "ban"
			},
			"setIdx": 0,
			"iconIdx": 107
		},
		{
			"icon": {
				"paths": [
					"M877.714 512v73.143q0 30.286-18.571 51.714t-48.286 21.429h-402.286l167.429 168q21.714 20.571 21.714 51.429t-21.714 51.429l-42.857 43.429q-21.143 21.143-51.429 21.143-29.714 0-52-21.143l-372-372.571q-21.143-21.143-21.143-51.429 0-29.714 21.143-52l372-371.429q21.714-21.714 52-21.714 29.714 0 51.429 21.714l42.857 42.286q21.714 21.714 21.714 52t-21.714 52l-167.429 167.429h402.286q29.714 0 48.286 21.429t18.571 51.714z"
				],
				"attrs": [],
				"tags": [
					"arrow-left"
				],
				"defaultCode": 61536,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 90,
				"order": 91,
				"prevSize": 28,
				"code": 61536,
				"name": "arrow-left"
			},
			"setIdx": 0,
			"iconIdx": 108
		},
		{
			"icon": {
				"paths": [
					"M841.143 548.571q0 30.857-21.143 52l-372 372q-22.286 21.143-52 21.143-29.143 0-51.429-21.143l-42.857-42.857q-21.714-21.714-21.714-52t21.714-52l167.429-167.429h-402.286q-29.714 0-48.286-21.429t-18.571-51.714v-73.143q0-30.286 18.571-51.714t48.286-21.429h402.286l-167.429-168q-21.714-20.571-21.714-51.429t21.714-51.429l42.857-42.857q21.714-21.714 51.429-21.714 30.286 0 52 21.714l372 372q21.143 20 21.143 51.429z"
				],
				"attrs": [],
				"tags": [
					"arrow-right"
				],
				"defaultCode": 61537,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 91,
				"order": 92,
				"prevSize": 28,
				"code": 61537,
				"name": "arrow-right"
			},
			"setIdx": 0,
			"iconIdx": 109
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M920.571 554.857q0 29.143-21.143 51.429l-42.857 42.857q-21.714 21.714-52 21.714-30.857 0-51.429-21.714l-168-167.429v402.286q0 29.714-21.429 48.286t-51.714 18.571h-73.143q-30.286 0-51.714-18.571t-21.429-48.286v-402.286l-168 167.429q-20.571 21.714-51.429 21.714t-51.429-21.714l-42.857-42.857q-21.714-21.714-21.714-51.429 0-30.286 21.714-52l372-372q20-21.143 51.429-21.143 30.857 0 52 21.143l372 372q21.143 22.286 21.143 52z"
				],
				"attrs": [],
				"tags": [
					"arrow-up"
				],
				"defaultCode": 61538,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 92,
				"order": 93,
				"prevSize": 28,
				"code": 61538,
				"name": "arrow-up"
			},
			"setIdx": 0,
			"iconIdx": 110
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M920.571 475.429q0 30.286-21.143 51.429l-372 372.571q-22.286 21.143-52 21.143-30.286 0-51.429-21.143l-372-372.571q-21.714-20.571-21.714-51.429 0-30.286 21.714-52l42.286-42.857q22.286-21.143 52-21.143 30.286 0 51.429 21.143l168 168v-402.286q0-29.714 21.714-51.429t51.429-21.714h73.143q29.714 0 51.429 21.714t21.714 51.429v402.286l168-168q21.143-21.143 51.429-21.143 29.714 0 52 21.143l42.857 42.857q21.143 22.286 21.143 52z"
				],
				"attrs": [],
				"tags": [
					"arrow-down"
				],
				"defaultCode": 61539,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 93,
				"order": 94,
				"prevSize": 28,
				"code": 61539,
				"name": "arrow-down"
			},
			"setIdx": 0,
			"iconIdx": 111
		},
		{
			"icon": {
				"paths": [
					"M1024 365.714q0 14.857-10.857 25.714l-292.571 292.571q-10.857 10.857-25.714 10.857t-25.714-10.857-10.857-25.714v-146.286h-128q-56 0-100.286 3.429t-88 12.286-76 24.286-60.286 39.714-45.714 57.714-27.714 79.143-10 103.429q0 31.429 2.857 70.286 0 3.429 1.429 13.429t1.429 15.143q0 8.571-4.857 14.286t-13.429 5.714q-9.143 0-16-9.714-4-5.143-7.429-12.571t-7.714-17.143-6-13.714q-72.571-162.857-72.571-257.714 0-113.714 30.286-190.286 92.571-230.286 500-230.286h128v-146.286q0-14.857 10.857-25.714t25.714-10.857 25.714 10.857l292.571 292.571q10.857 10.857 10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"mail-forward",
					"share"
				],
				"defaultCode": 61540,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 94,
				"order": 95,
				"prevSize": 28,
				"code": 61540,
				"name": "mail-forward"
			},
			"setIdx": 0,
			"iconIdx": 112
		},
		{
			"icon": {
				"paths": [
					"M431.429 603.429q0 7.429-5.714 13.143l-189.714 189.714 82.286 82.286q10.857 10.857 10.857 25.714t-10.857 25.714-25.714 10.857h-256q-14.857 0-25.714-10.857t-10.857-25.714v-256q0-14.857 10.857-25.714t25.714-10.857 25.714 10.857l82.286 82.286 189.714-189.714q5.714-5.714 13.143-5.714t13.143 5.714l65.143 65.143q5.714 5.714 5.714 13.143zM877.714 109.714v256q0 14.857-10.857 25.714t-25.714 10.857-25.714-10.857l-82.286-82.286-189.714 189.714q-5.714 5.714-13.143 5.714t-13.143-5.714l-65.143-65.143q-5.714-5.714-5.714-13.143t5.714-13.143l189.714-189.714-82.286-82.286q-10.857-10.857-10.857-25.714t10.857-25.714 25.714-10.857h256q14.857 0 25.714 10.857t10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"expand"
				],
				"defaultCode": 61541,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 95,
				"order": 96,
				"prevSize": 28,
				"code": 61541,
				"name": "expand"
			},
			"setIdx": 0,
			"iconIdx": 113
		},
		{
			"icon": {
				"paths": [
					"M438.857 548.571v256q0 14.857-10.857 25.714t-25.714 10.857-25.714-10.857l-82.286-82.286-189.714 189.714q-5.714 5.714-13.143 5.714t-13.143-5.714l-65.143-65.143q-5.714-5.714-5.714-13.143t5.714-13.143l189.714-189.714-82.286-82.286q-10.857-10.857-10.857-25.714t10.857-25.714 25.714-10.857h256q14.857 0 25.714 10.857t10.857 25.714zM870.286 164.571q0 7.429-5.714 13.143l-189.714 189.714 82.286 82.286q10.857 10.857 10.857 25.714t-10.857 25.714-25.714 10.857h-256q-14.857 0-25.714-10.857t-10.857-25.714v-256q0-14.857 10.857-25.714t25.714-10.857 25.714 10.857l82.286 82.286 189.714-189.714q5.714-5.714 13.143-5.714t13.143 5.714l65.143 65.143q5.714 5.714 5.714 13.143z"
				],
				"attrs": [],
				"tags": [
					"compress"
				],
				"defaultCode": 61542,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 96,
				"order": 97,
				"prevSize": 28,
				"code": 61542,
				"name": "compress"
			},
			"setIdx": 0,
			"iconIdx": 114
		},
		{
			"icon": {
				"width": 805,
				"paths": [
					"M804.571 420.571v109.714q0 22.857-16 38.857t-38.857 16h-237.714v237.714q0 22.857-16 38.857t-38.857 16h-109.714q-22.857 0-38.857-16t-16-38.857v-237.714h-237.714q-22.857 0-38.857-16t-16-38.857v-109.714q0-22.857 16-38.857t38.857-16h237.714v-237.714q0-22.857 16-38.857t38.857-16h109.714q22.857 0 38.857 16t16 38.857v237.714h237.714q22.857 0 38.857 16t16 38.857z"
				],
				"attrs": [],
				"tags": [
					"plus"
				],
				"defaultCode": 61543,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 97,
				"order": 98,
				"prevSize": 28,
				"code": 61543,
				"name": "plus"
			},
			"setIdx": 0,
			"iconIdx": 115
		},
		{
			"icon": {
				"width": 805,
				"paths": [
					"M804.571 420.571v109.714q0 22.857-16 38.857t-38.857 16h-694.857q-22.857 0-38.857-16t-16-38.857v-109.714q0-22.857 16-38.857t38.857-16h694.857q22.857 0 38.857 16t16 38.857z"
				],
				"attrs": [],
				"tags": [
					"minus"
				],
				"defaultCode": 61544,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 98,
				"order": 99,
				"prevSize": 28,
				"code": 61544,
				"name": "minus"
			},
			"setIdx": 0,
			"iconIdx": 116
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M846.857 600q26.286 14.857 34 44.286t-7.143 55.714l-36.571 62.857q-14.857 26.286-44.286 34t-55.714-7.143l-152-87.429v175.429q0 29.714-21.714 51.429t-51.429 21.714h-73.143q-29.714 0-51.429-21.714t-21.714-51.429v-175.429l-152 87.429q-26.286 14.857-55.714 7.143t-44.286-34l-36.571-62.857q-14.857-26.286-7.143-55.714t34-44.286l152-88-152-88q-26.286-14.857-34-44.286t7.143-55.714l36.571-62.857q14.857-26.286 44.286-34t55.714 7.143l152 87.429v-175.429q0-29.714 21.714-51.429t51.429-21.714h73.143q29.714 0 51.429 21.714t21.714 51.429v175.429l152-87.429q26.286-14.857 55.714-7.143t44.286 34l36.571 62.857q14.857 26.286 7.143 55.714t-34 44.286l-152 88z"
				],
				"attrs": [],
				"tags": [
					"asterisk"
				],
				"defaultCode": 61545,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 99,
				"order": 100,
				"prevSize": 28,
				"code": 61545,
				"name": "asterisk"
			},
			"setIdx": 0,
			"iconIdx": 117
		},
		{
			"icon": {
				"paths": [
					"M438.857 73.143q119.429 0 220.286 58.857t159.714 159.714 58.857 220.286-58.857 220.286-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857zM512 785.714v-108.571q0-8-5.143-13.429t-12.571-5.429h-109.714q-7.429 0-13.143 5.714t-5.714 13.143v108.571q0 7.429 5.714 13.143t13.143 5.714h109.714q7.429 0 12.571-5.429t5.143-13.429zM510.857 589.143l10.286-354.857q0-6.857-5.714-10.286-5.714-4.571-13.714-4.571h-125.714q-8 0-13.714 4.571-5.714 3.429-5.714 10.286l9.714 354.857q0 5.714 5.714 10t13.714 4.286h105.714q8 0 13.429-4.286t6-10z"
				],
				"attrs": [],
				"tags": [
					"exclamation-circle"
				],
				"defaultCode": 61546,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 100,
				"order": 101,
				"prevSize": 28,
				"code": 61546,
				"name": "exclamation-circle"
			},
			"setIdx": 0,
			"iconIdx": 118
		},
		{
			"icon": {
				"paths": [
					"M530.286 774.857v-409.143h-182.857v409.143q0 14.286 10.286 22t26.286 7.714h109.714q16 0 26.286-7.714t10.286-22zM269.714 292.571h111.429l-72-92q-14.857-17.714-39.429-17.714-22.857 0-38.857 16t-16 38.857 16 38.857 38.857 16zM662.857 237.714q0-22.857-16-38.857t-38.857-16q-24.571 0-39.429 17.714l-71.429 92h110.857q22.857 0 38.857-16t16-38.857zM877.714 384v182.857q0 8-5.143 13.143t-13.143 5.143h-54.857v237.714q0 22.857-16 38.857t-38.857 16h-621.714q-22.857 0-38.857-16t-16-38.857v-237.714h-54.857q-8 0-13.143-5.143t-5.143-13.143v-182.857q0-8 5.143-13.143t13.143-5.143h251.429q-53.143 0-90.571-37.429t-37.429-90.571 37.429-90.571 90.571-37.429q61.143 0 96 44l73.143 94.286 73.143-94.286q34.857-44 96-44 53.143 0 90.571 37.429t37.429 90.571-37.429 90.571-90.571 37.429h251.429q8 0 13.143 5.143t5.143 13.143z"
				],
				"attrs": [],
				"tags": [
					"gift"
				],
				"defaultCode": 61547,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 101,
				"order": 102,
				"prevSize": 28,
				"code": 61547,
				"name": "gift"
			},
			"setIdx": 0,
			"iconIdx": 119
		},
		{
			"icon": {
				"paths": [
					"M731.429 402.286q0-14.857-10.857-25.714t-25.714-10.857q-98.286 0-181.714 28.286t-148.286 76.571-134.571 125.429q-10.857 12-10.857 25.714 0 14.857 10.857 25.714t25.714 10.857q13.714 0 25.714-10.857 15.429-13.714 42.286-40.571t38.286-37.714q78.286-70.857 153.429-100.571t179.143-29.714q14.857 0 25.714-10.857t10.857-25.714zM1024 289.143q0 54.286-11.429 110.286-26.286 128-105.429 218.857t-204.286 153.143q-122.286 61.714-250.286 61.714-84.571 0-163.429-26.857-8.571-2.857-50.286-24t-54.857-21.143q-9.143 0-22.571 18.286t-25.714 40-30 40-34.286 18.286q-17.143 0-29.143-6.286t-17.714-13.714-15.429-24q-1.143-2.286-3.429-6.286t-3.143-5.714-1.714-5.429-0.857-7.714q0-20 17.714-42t38.857-37.429 38.857-32 17.714-27.429q0-2.286-8-21.714t-9.143-25.143q-5.143-29.143-5.143-59.429 0-65.714 24.857-125.714t68-105.429 97.429-79.429 116.571-54.571q31.429-10.286 82.857-14.571t102.571-5.143 102-3.429 93.429-13.714 64.857-32.286l16.857-16.857t16.857-16 15.429-11.429 20.857-9.143 24.857-2.571q22.286 0 40.286 26.286t27.143 64 13.714 70.857 4.571 54.857z"
				],
				"attrs": [],
				"tags": [
					"leaf"
				],
				"defaultCode": 61548,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 102,
				"order": 103,
				"prevSize": 28,
				"code": 61548,
				"name": "leaf"
			},
			"setIdx": 0,
			"iconIdx": 120
		},
		{
			"icon": {
				"width": 805,
				"paths": [
					"M804.571 969.143v36.571q0 7.429-5.429 12.857t-12.857 5.429h-768q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h768q7.429 0 12.857 5.429t5.429 12.857zM658.286 365.714q0 44.571-14 82.286t-36.571 64.286-50 50.286-54.857 44.286-50 41.143-36.571 46.571-14 55.143q0 54.857 38.286 128l-2.286-0.571 0.571 0.571q-51.429-23.429-91.429-47.429t-79.143-57.143-64.857-70-41.429-86-15.714-105.143q0-44.571 14-82.286t36.571-64.286 50-50.286 54.857-44.286 50-41.143 36.571-46.571 14-55.143q0-53.714-37.714-128l1.714 0.571-0.571-0.571q51.429 23.429 91.429 47.429t79.143 57.143 64.857 70 41.429 86 15.714 105.143z"
				],
				"attrs": [],
				"tags": [
					"fire"
				],
				"defaultCode": 61549,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 103,
				"order": 104,
				"prevSize": 28,
				"code": 61549,
				"name": "fire"
			},
			"setIdx": 0,
			"iconIdx": 121
		},
		{
			"icon": {
				"paths": [
					"M950.857 548.571q-86.857-134.857-217.714-201.714 34.857 59.429 34.857 128.571 0 105.714-75.143 180.857t-180.857 75.143-180.857-75.143-75.143-180.857q0-69.143 34.857-128.571-130.857 66.857-217.714 201.714 76 117.143 190.571 186.571t248.286 69.429 248.286-69.429 190.571-186.571zM539.429 329.143q0-11.429-8-19.429t-19.429-8q-71.429 0-122.571 51.143t-51.143 122.571q0 11.429 8 19.429t19.429 8 19.429-8 8-19.429q0-49.143 34.857-84t84-34.857q11.429 0 19.429-8t8-19.429zM1024 548.571q0 19.429-11.429 39.429-80 131.429-215.143 210.571t-285.429 79.143-285.429-79.429-215.143-210.286q-11.429-20-11.429-39.429t11.429-39.429q80-130.857 215.143-210.286t285.429-79.429 285.429 79.429 215.143 210.286q11.429 20 11.429 39.429z"
				],
				"attrs": [],
				"tags": [
					"eye"
				],
				"defaultCode": 61550,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 104,
				"order": 105,
				"prevSize": 28,
				"code": 61550,
				"name": "eye"
			},
			"setIdx": 0,
			"iconIdx": 122
		},
		{
			"icon": {
				"paths": [
					"M317.143 762.857l44.571-80.571q-49.714-36-77.714-90.857t-28-116q0-69.143 34.857-128.571-130.857 66.857-217.714 201.714 95.429 147.429 244 214.286zM539.429 329.143q0-11.429-8-19.429t-19.429-8q-71.429 0-122.571 51.143t-51.143 122.571q0 11.429 8 19.429t19.429 8 19.429-8 8-19.429q0-49.143 34.857-84t84-34.857q11.429 0 19.429-8t8-19.429zM746.857 220q0 4-0.571 5.143-60 107.429-180 323.429t-180.571 324l-28 50.857q-5.714 9.143-16 9.143-6.857 0-76.571-40-9.143-5.714-9.143-16 0-6.857 25.143-49.714-81.714-37.143-150.571-98.857t-119.143-140q-11.429-17.714-11.429-39.429t11.429-39.429q87.429-134.286 217.143-212t283.429-77.714q50.857 0 102.857 9.714l30.857-55.429q5.714-9.143 16-9.143 2.857 0 10.286 3.429t17.714 8.857 18.857 10.571 18 10.571 11.143 6.571q9.143 5.714 9.143 15.429zM768 475.429q0 79.429-45.143 144.857t-119.429 94l160-286.857q4.571 25.714 4.571 48zM1024 548.571q0 20-11.429 39.429-22.286 36.571-62.286 82.857-85.714 98.286-198.571 152.571t-239.714 54.286l42.286-75.429q121.143-10.286 224.286-78.286t172.286-175.429q-65.714-102.286-161.143-168l36-64q54.286 36.571 104.286 87.429t82.571 105.143q11.429 19.429 11.429 39.429z"
				],
				"attrs": [],
				"tags": [
					"eye-slash"
				],
				"defaultCode": 61552,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 105,
				"order": 106,
				"prevSize": 28,
				"code": 61552,
				"name": "eye-slash"
			},
			"setIdx": 0,
			"iconIdx": 123
		},
		{
			"icon": {
				"paths": [
					"M585.143 785.714v-108.571q0-8-5.429-13.429t-12.857-5.429h-109.714q-7.429 0-12.857 5.429t-5.429 13.429v108.571q0 8 5.429 13.429t12.857 5.429h109.714q7.429 0 12.857-5.429t5.429-13.429zM584 572l10.286-262.286q0-6.857-5.714-10.857-7.429-6.286-13.714-6.286h-125.714q-6.286 0-13.714 6.286-5.714 4-5.714 12l9.714 261.143q0 5.714 5.714 9.429t13.714 3.714h105.714q8 0 13.429-3.714t6-9.429zM576 38.286l438.857 804.571q20 36-1.143 72-9.714 16.571-26.571 26.286t-36.286 9.714h-877.714q-19.429 0-36.286-9.714t-26.571-26.286q-21.143-36-1.143-72l438.857-804.571q9.714-17.714 26.857-28t37.143-10.286 37.143 10.286 26.857 28z"
				],
				"attrs": [],
				"tags": [
					"exclamation-triangle",
					"warning"
				],
				"defaultCode": 61553,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 106,
				"order": 107,
				"prevSize": 28,
				"code": 61553,
				"name": "exclamation-triangle"
			},
			"setIdx": 0,
			"iconIdx": 124
		},
		{
			"icon": {
				"width": 805,
				"paths": [
					"M786.286 91.429q25.143 29.714 6.857 84.571t-61.714 98.286l-92 92 91.429 397.714q2.857 10.857-6.857 18.857l-73.143 54.857q-4 3.429-10.857 3.429-2.286 0-4-0.571-8.571-1.714-12-9.143l-159.429-290.286-148 148 30.286 110.857q2.857 9.714-4.571 17.714l-54.857 54.857q-5.143 5.143-13.143 5.143h-1.143q-8.571-1.143-13.714-7.429l-108-144-144-108q-6.286-4-7.429-13.143-0.571-7.429 5.143-14.286l54.857-55.429q5.143-5.143 13.143-5.143 3.429 0 4.571 0.571l110.857 30.286 148-148-290.286-159.429q-8-4.571-9.714-13.714-1.143-9.143 5.143-15.429l73.143-73.143q8-7.429 17.143-4.571l380 90.857 91.429-91.429q43.429-43.429 98.286-61.714t84.571 6.857z"
				],
				"attrs": [],
				"tags": [
					"plane"
				],
				"defaultCode": 61554,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 107,
				"order": 108,
				"prevSize": 28,
				"code": 61554,
				"name": "plane"
			},
			"setIdx": 0,
			"iconIdx": 125
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M73.143 950.857h164.571v-164.571h-164.571v164.571zM274.286 950.857h182.857v-164.571h-182.857v164.571zM73.143 749.714h164.571v-182.857h-164.571v182.857zM274.286 749.714h182.857v-182.857h-182.857v182.857zM73.143 530.286h164.571v-164.571h-164.571v164.571zM493.714 950.857h182.857v-164.571h-182.857v164.571zM274.286 530.286h182.857v-164.571h-182.857v164.571zM713.143 950.857h164.571v-164.571h-164.571v164.571zM493.714 749.714h182.857v-182.857h-182.857v182.857zM292.571 256v-164.571q0-7.429-5.429-12.857t-12.857-5.429h-36.571q-7.429 0-12.857 5.429t-5.429 12.857v164.571q0 7.429 5.429 12.857t12.857 5.429h36.571q7.429 0 12.857-5.429t5.429-12.857zM713.143 749.714h164.571v-182.857h-164.571v182.857zM493.714 530.286h182.857v-164.571h-182.857v164.571zM713.143 530.286h164.571v-164.571h-164.571v164.571zM731.429 256v-164.571q0-7.429-5.429-12.857t-12.857-5.429h-36.571q-7.429 0-12.857 5.429t-5.429 12.857v164.571q0 7.429 5.429 12.857t12.857 5.429h36.571q7.429 0 12.857-5.429t5.429-12.857zM950.857 219.429v731.429q0 29.714-21.714 51.429t-51.429 21.714h-804.571q-29.714 0-51.429-21.714t-21.714-51.429v-731.429q0-29.714 21.714-51.429t51.429-21.714h73.143v-54.857q0-37.714 26.857-64.571t64.571-26.857h36.571q37.714 0 64.571 26.857t26.857 64.571v54.857h219.429v-54.857q0-37.714 26.857-64.571t64.571-26.857h36.571q37.714 0 64.571 26.857t26.857 64.571v54.857h73.143q29.714 0 51.429 21.714t21.714 51.429z"
				],
				"attrs": [],
				"tags": [
					"calendar"
				],
				"defaultCode": 61555,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 108,
				"order": 109,
				"prevSize": 28,
				"code": 61555,
				"name": "calendar"
			},
			"setIdx": 0,
			"iconIdx": 126
		},
		{
			"icon": {
				"paths": [
					"M380.571 274.857q-34.286 52.571-78.286 156-12.571-25.714-21.143-41.429t-23.143-36.286-29.143-32.286-36-20-46.571-8.286h-128q-8 0-13.143-5.143t-5.143-13.143v-109.714q0-8 5.143-13.143t13.143-5.143h128q142.857 0 234.286 128.571zM1024 731.429q0 8-5.143 13.143l-182.857 182.857q-5.143 5.143-13.143 5.143-7.429 0-12.857-5.429t-5.429-12.857v-109.714q-18.286 0-48.571 0.286t-46.286 0.571-41.714-0.571-40.571-2.857-36.571-6-36-10.571-33.143-16.286-33.714-22.857-31.429-30.571-32-39.714q33.714-53.143 77.714-156 12.571 25.714 21.143 41.429t23.143 36.286 29.143 32.286 36 20 46.571 8.286h146.286v-109.714q0-8 5.143-13.143t13.143-5.143q6.857 0 13.714 5.714l182.286 182.286q5.143 5.143 5.143 13.143zM1024 219.429q0 8-5.143 13.143l-182.857 182.857q-5.143 5.143-13.143 5.143-7.429 0-12.857-5.429t-5.429-12.857v-109.714h-146.286q-27.429 0-49.714 8.571t-39.429 25.714-29.143 35.143-25.714 44.286q-18.286 35.429-44.571 97.714-16.571 37.714-28.286 63.429t-30.857 60-36.571 57.143-42.286 47.429-51.429 39.143-60.857 24-73.143 9.429h-128q-8 0-13.143-5.143t-5.143-13.143v-109.714q0-8 5.143-13.143t13.143-5.143h128q27.429 0 49.714-8.571t39.429-25.714 29.143-35.143 25.714-44.286q18.286-35.429 44.571-97.714 16.571-37.714 28.286-63.429t30.857-60 36.571-57.143 42.286-47.429 51.429-39.143 60.857-24 73.143-9.429h146.286v-109.714q0-8 5.143-13.143t13.143-5.143q6.857 0 13.714 5.714l182.286 182.286q5.143 5.143 5.143 13.143z"
				],
				"attrs": [],
				"tags": [
					"random"
				],
				"defaultCode": 61556,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 109,
				"order": 110,
				"prevSize": 28,
				"code": 61556,
				"name": "random"
			},
			"setIdx": 0,
			"iconIdx": 127
		},
		{
			"icon": {
				"paths": [
					"M1024 512q0 99.429-68.571 183.714t-186.286 133.143-257.143 48.857q-40 0-82.857-4.571-113.143 100-262.857 138.286-28 8-65.143 12.571-9.714 1.143-17.429-5.143t-10-16.571v-0.571q-1.714-2.286-0.286-6.857t1.143-5.714 2.571-5.429l3.429-5.143t4-4.857 4.571-5.143q4-4.571 17.714-19.714t19.714-21.714 17.714-22.571 18.571-29.143 15.429-33.714 14.857-43.429q-89.714-50.857-141.429-125.714t-51.714-160.571q0-74.286 40.571-142t109.143-116.857 163.429-78 198.857-28.857q139.429 0 257.143 48.857t186.286 133.143 68.571 183.714z"
				],
				"attrs": [],
				"tags": [
					"comment"
				],
				"defaultCode": 61557,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 110,
				"order": 111,
				"prevSize": 28,
				"code": 61557,
				"name": "comment"
			},
			"setIdx": 0,
			"iconIdx": 128
		},
		{
			"icon": {
				"paths": [
					"M877.714 475.429v73.143q0 114.857-56.286 206.857t-156.571 143.714-226 51.714-226-51.714-156.571-143.714-56.286-206.857v-73.143q0-14.857 10.857-25.714t25.714-10.857h219.429q14.857 0 25.714 10.857t10.857 25.714v73.143q0 29.714 13.429 51.429t30.571 32.571 40.571 17.143 36.571 7.429 25.143 1.143 25.143-1.143 36.571-7.429 40.571-17.143 30.571-32.571 13.429-51.429v-73.143q0-14.857 10.857-25.714t25.714-10.857h219.429q14.857 0 25.714 10.857t10.857 25.714zM292.571 109.714v219.429q0 14.857-10.857 25.714t-25.714 10.857h-219.429q-14.857 0-25.714-10.857t-10.857-25.714v-219.429q0-14.857 10.857-25.714t25.714-10.857h219.429q14.857 0 25.714 10.857t10.857 25.714zM877.714 109.714v219.429q0 14.857-10.857 25.714t-25.714 10.857h-219.429q-14.857 0-25.714-10.857t-10.857-25.714v-219.429q0-14.857 10.857-25.714t25.714-10.857h219.429q14.857 0 25.714 10.857t10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"magnet"
				],
				"defaultCode": 61558,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 111,
				"order": 112,
				"prevSize": 28,
				"code": 61558,
				"name": "magnet"
			},
			"setIdx": 0,
			"iconIdx": 129
		},
		{
			"icon": {
				"paths": [
					"M961.714 760.571l-94.857 94.286q-10.857 10.857-25.714 10.857t-25.714-10.857l-303.429-303.429-303.429 303.429q-10.857 10.857-25.714 10.857t-25.714-10.857l-94.857-94.286q-10.857-10.857-10.857-26t10.857-26l424-423.429q10.857-10.857 25.714-10.857t25.714 10.857l424 423.429q10.857 10.857 10.857 26t-10.857 26z"
				],
				"attrs": [],
				"tags": [
					"chevron-up"
				],
				"defaultCode": 61559,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 112,
				"order": 113,
				"prevSize": 28,
				"code": 61559,
				"name": "chevron-up"
			},
			"setIdx": 0,
			"iconIdx": 130
		},
		{
			"icon": {
				"paths": [
					"M961.714 461.714l-424 423.429q-10.857 10.857-25.714 10.857t-25.714-10.857l-424-423.429q-10.857-10.857-10.857-26t10.857-26l94.857-94.286q10.857-10.857 25.714-10.857t25.714 10.857l303.429 303.429 303.429-303.429q10.857-10.857 25.714-10.857t25.714 10.857l94.857 94.286q10.857 10.857 10.857 26t-10.857 26z"
				],
				"attrs": [],
				"tags": [
					"chevron-down"
				],
				"defaultCode": 61560,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 113,
				"order": 114,
				"prevSize": 28,
				"code": 61560,
				"name": "chevron-down"
			},
			"setIdx": 0,
			"iconIdx": 131
		},
		{
			"icon": {
				"width": 1097,
				"paths": [
					"M731.429 859.429q0 7.429-5.429 12.857t-12.857 5.429h-548.571q-4.571 0-7.714-1.143t-5.143-4-3.143-4.571-1.714-6.571-0.571-6.571v-342.857h-109.714q-14.857 0-25.714-10.857t-10.857-25.714q0-13.714 8.571-23.429l182.857-219.429q10.857-12.571 28-12.571t28 12.571l182.857 219.429q8.571 9.714 8.571 23.429 0 14.857-10.857 25.714t-25.714 10.857h-109.714v219.429h329.143q9.143 0 14.286 6.286l91.429 109.714q4 6.286 4 12zM1097.143 621.714q0 13.714-8.571 23.429l-182.857 219.429q-11.429 13.143-28 13.143t-28-13.143l-182.857-219.429q-8.571-9.714-8.571-23.429 0-14.857 10.857-25.714t25.714-10.857h109.714v-219.429h-329.143q-9.143 0-14.286-6.857l-91.429-109.714q-4-5.143-4-11.429 0-7.429 5.429-12.857t12.857-5.429h548.571q4.571 0 7.714 1.143t5.143 4 3.143 4.571 1.714 6.571 0.571 6.571v342.857h109.714q14.857 0 25.714 10.857t10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"retweet"
				],
				"defaultCode": 61561,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 114,
				"order": 115,
				"prevSize": 28,
				"code": 61561,
				"name": "retweet"
			},
			"setIdx": 0,
			"iconIdx": 132
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M365.714 877.714q0 30.286-21.429 51.714t-51.714 21.429-51.714-21.429-21.429-51.714 21.429-51.714 51.714-21.429 51.714 21.429 21.429 51.714zM877.714 877.714q0 30.286-21.429 51.714t-51.714 21.429-51.714-21.429-21.429-51.714 21.429-51.714 51.714-21.429 51.714 21.429 21.429 51.714zM950.857 256v292.571q0 13.714-9.143 24.286t-23.429 12.286l-596.571 69.714q0.571 4 2.571 12.286t3.429 15.143 1.429 12.571q0 9.143-13.714 36.571h525.714q14.857 0 25.714 10.857t10.857 25.714-10.857 25.714-25.714 10.857h-585.143q-14.857 0-25.714-10.857t-10.857-25.714q0-8 6.286-22.571t16.857-34 11.714-21.714l-101.143-470.286h-116.571q-14.857 0-25.714-10.857t-10.857-25.714 10.857-25.714 25.714-10.857h146.286q9.143 0 16.286 3.714t11.429 8.857 7.429 14 4.286 15.143 3.143 16.857 2.571 14.571h686.286q14.857 0 25.714 10.857t10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"shopping-cart"
				],
				"defaultCode": 61562,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 115,
				"order": 116,
				"prevSize": 28,
				"code": 61562,
				"name": "shopping-cart"
			},
			"setIdx": 0,
			"iconIdx": 133
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M950.857 347.429v402.286q0 52.571-37.714 90.286t-90.286 37.714h-694.857q-52.571 0-90.286-37.714t-37.714-90.286v-548.571q0-52.571 37.714-90.286t90.286-37.714h182.857q52.571 0 90.286 37.714t37.714 90.286v18.286h384q52.571 0 90.286 37.714t37.714 90.286z"
				],
				"attrs": [],
				"tags": [
					"folder"
				],
				"defaultCode": 61563,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 116,
				"order": 117,
				"prevSize": 28,
				"code": 61563,
				"name": "folder"
			},
			"setIdx": 0,
			"iconIdx": 134
		},
		{
			"icon": {
				"width": 1097,
				"paths": [
					"M1073.714 544q0 17.714-17.714 37.714l-192 226.286q-24.571 29.143-68.857 49.429t-82 20.286h-621.714q-19.429 0-34.571-7.429t-15.143-24.571q0-17.714 17.714-37.714l192-226.286q24.571-29.143 68.857-49.429t82-20.286h621.714q19.429 0 34.571 7.429t15.143 24.571zM877.714 347.429v91.429h-475.429q-53.714 0-112.571 27.143t-93.714 68.286l-195.429 229.714q0-2.286-0.286-7.143t-0.286-7.143v-548.571q0-52.571 37.714-90.286t90.286-37.714h182.857q52.571 0 90.286 37.714t37.714 90.286v18.286h310.857q52.571 0 90.286 37.714t37.714 90.286z"
				],
				"attrs": [],
				"tags": [
					"folder-open"
				],
				"defaultCode": 61564,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 117,
				"order": 118,
				"prevSize": 28,
				"code": 61564,
				"name": "folder-open"
			},
			"setIdx": 0,
			"iconIdx": 135
		},
		{
			"icon": {
				"width": 439,
				"paths": [
					"M402.286 182.857q0 14.857-10.857 25.714t-25.714 10.857h-73.143v585.143h73.143q14.857 0 25.714 10.857t10.857 25.714-10.857 25.714l-146.286 146.286q-10.857 10.857-25.714 10.857t-25.714-10.857l-146.286-146.286q-10.857-10.857-10.857-25.714t10.857-25.714 25.714-10.857h73.143v-585.143h-73.143q-14.857 0-25.714-10.857t-10.857-25.714 10.857-25.714l146.286-146.286q10.857-10.857 25.714-10.857t25.714 10.857l146.286 146.286q10.857 10.857 10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"arrows-v"
				],
				"defaultCode": 61565,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 118,
				"order": 119,
				"prevSize": 28,
				"code": 61565,
				"name": "arrows-v"
			},
			"setIdx": 0,
			"iconIdx": 136
		},
		{
			"icon": {
				"paths": [
					"M1024 512q0 14.857-10.857 25.714l-146.286 146.286q-10.857 10.857-25.714 10.857t-25.714-10.857-10.857-25.714v-73.143h-585.143v73.143q0 14.857-10.857 25.714t-25.714 10.857-25.714-10.857l-146.286-146.286q-10.857-10.857-10.857-25.714t10.857-25.714l146.286-146.286q10.857-10.857 25.714-10.857t25.714 10.857 10.857 25.714v73.143h585.143v-73.143q0-14.857 10.857-25.714t25.714-10.857 25.714 10.857l146.286 146.286q10.857 10.857 10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"arrows-h"
				],
				"defaultCode": 61566,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 119,
				"order": 120,
				"prevSize": 28,
				"code": 61566,
				"name": "arrows-h"
			},
			"setIdx": 0,
			"iconIdx": 137
		},
		{
			"icon": {
				"width": 1170,
				"paths": [
					"M365.714 512v292.571h-146.286v-292.571h146.286zM585.143 219.429v585.143h-146.286v-585.143h146.286zM1170.286 877.714v73.143h-1170.286v-877.714h73.143v804.571h1097.143zM804.571 365.714v438.857h-146.286v-438.857h146.286zM1024 146.286v658.286h-146.286v-658.286h146.286z"
				],
				"attrs": [],
				"tags": [
					"bar-chart",
					"bar-chart-o"
				],
				"defaultCode": 61568,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 120,
				"order": 121,
				"prevSize": 28,
				"code": 61568,
				"name": "bar-chart"
			},
			"setIdx": 0,
			"iconIdx": 138
		},
		{
			"icon": {
				"paths": [
					"M731.429 348.571q-32 14.286-69.143 19.429 38.857-22.857 53.143-66.857-37.143 21.714-76.571 29.143-34.857-37.714-87.429-37.714-49.714 0-84.857 35.143t-35.143 84.857q0 16.571 2.857 27.429-73.714-4-138.286-37.143t-109.714-88.571q-16.571 28.571-16.571 60.571 0 65.143 52 100-26.857-0.571-57.143-14.857v1.143q0 42.857 28.571 76.286t70.286 41.429q-16.571 4.571-29.143 4.571-7.429 0-22.286-2.286 12 36 42.571 59.429t69.429 24q-66.286 51.429-149.143 51.429-14.857 0-28.571-1.714 84.571 53.714 184 53.714 64 0 120-20.286t96-54.286 68.857-78.286 42.857-92.571 14-96.286q0-10.286-0.571-15.429 36-25.714 60-62.286zM877.714 237.714v548.571q0 68-48.286 116.286t-116.286 48.286h-548.571q-68 0-116.286-48.286t-48.286-116.286v-548.571q0-68 48.286-116.286t116.286-48.286h548.571q68 0 116.286 48.286t48.286 116.286z"
				],
				"attrs": [],
				"tags": [
					"twitter-square"
				],
				"defaultCode": 61569,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 121,
				"order": 122,
				"prevSize": 28,
				"code": 61569,
				"name": "twitter-square"
			},
			"setIdx": 0,
			"iconIdx": 139
		},
		{
			"icon": {
				"paths": [
					"M877.714 786.286q0 68-48.286 116.286t-116.286 48.286h-109.714v-347.429h116l17.143-128h-133.143v-81.714q0-30.857 16-47.429t54.857-16.571l75.429-0.571v-118.286q-54.857-5.143-102.857-5.143-77.714 0-124.571 46t-46.857 128.857v94.857h-128v128h128v347.429h-310.857q-68 0-116.286-48.286t-48.286-116.286v-548.571q0-68 48.286-116.286t116.286-48.286h548.571q68 0 116.286 48.286t48.286 116.286v548.571z"
				],
				"attrs": [],
				"tags": [
					"facebook-square"
				],
				"defaultCode": 61570,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 122,
				"order": 123,
				"prevSize": 28,
				"code": 61570,
				"name": "facebook-square"
			},
			"setIdx": 0,
			"iconIdx": 140
		},
		{
			"icon": {
				"paths": [
					"M530.286 475.429q0-8-5.143-13.143t-13.143-5.143q-37.714 0-64.571 26.857t-26.857 64.571q0 8 5.143 13.143t13.143 5.143 13.143-5.143 5.143-13.143q0-22.857 16-38.857t38.857-16q8 0 13.143-5.143t5.143-13.143zM658.286 549.714q0 60.571-42.857 103.429t-103.429 42.857-103.429-42.857-42.857-103.429 42.857-103.429 103.429-42.857 103.429 42.857 42.857 103.429zM73.143 877.714h877.714v-73.143h-877.714v73.143zM731.429 549.714q0-90.857-64.286-155.143t-155.143-64.286-155.143 64.286-64.286 155.143 64.286 155.143 155.143 64.286 155.143-64.286 64.286-155.143zM146.286 182.857h219.429v-73.143h-219.429v73.143zM73.143 292.571h877.714v-146.286h-473.143l-36.571 73.143h-368v73.143zM1024 146.286v731.429q0 30.286-21.429 51.714t-51.714 21.429h-877.714q-30.286 0-51.714-21.429t-21.429-51.714v-731.429q0-30.286 21.429-51.714t51.714-21.429h877.714q30.286 0 51.714 21.429t21.429 51.714z"
				],
				"attrs": [],
				"tags": [
					"camera-retro"
				],
				"defaultCode": 61571,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 123,
				"order": 124,
				"prevSize": 28,
				"code": 61571,
				"name": "camera-retro"
			},
			"setIdx": 0,
			"iconIdx": 141
		},
		{
			"icon": {
				"paths": [
					"M475.429 292.571q0-45.714-32-77.714t-77.714-32-77.714 32-32 77.714q0 24 10.857 47.429-23.429-10.857-47.429-10.857-45.714 0-77.714 32t-32 77.714 32 77.714 77.714 32 77.714-32 32-77.714q0-24-10.857-47.429 23.429 10.857 47.429 10.857 45.714 0 77.714-32t32-77.714zM961.714 694.857q0 9.714-28 37.714t-37.714 28q-5.143 0-16.286-9.143t-20.857-18.857-22-22.857-14-14.857l-54.857 54.857 125.714 125.714q16 16 16 38.857 0 24-22.286 46.286t-46.286 22.286q-22.857 0-38.857-16l-383.429-383.429q-100.571 74.857-208.571 74.857-93.143 0-151.714-58.571t-58.571-151.714q0-91.429 54.286-178.857t141.714-141.714 178.857-54.286q93.143 0 151.714 58.571t58.571 151.714q0 108-74.857 208.571l202.857 202.857 54.857-54.857q-1.714-1.714-14.857-14t-22.857-22-18.857-20.857-9.143-16.286q0-9.714 28-37.714t37.714-28q7.429 0 13.143 5.714 3.429 3.429 26.286 25.429t46.857 45.429 49.429 49.143 41.714 44.571 16.286 23.429z"
				],
				"attrs": [],
				"tags": [
					"key"
				],
				"defaultCode": 61572,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 124,
				"order": 125,
				"prevSize": 28,
				"code": 61572,
				"name": "key"
			},
			"setIdx": 0,
			"iconIdx": 142
		},
		{
			"icon": {
				"width": 1097,
				"paths": [
					"M512 512q0-60.571-42.857-103.429t-103.429-42.857-103.429 42.857-42.857 103.429 42.857 103.429 103.429 42.857 103.429-42.857 42.857-103.429zM950.857 804.571q0-29.714-21.714-51.429t-51.429-21.714-51.429 21.714-21.714 51.429q0 30.286 21.429 51.714t51.714 21.429 51.714-21.429 21.429-51.714zM950.857 219.429q0-29.714-21.714-51.429t-51.429-21.714-51.429 21.714-21.714 51.429q0 30.286 21.429 51.714t51.714 21.429 51.714-21.429 21.429-51.714zM731.429 460v105.714q0 5.714-4 11.143t-9.143 6l-88.571 13.714q-6.286 20-18.286 43.429 19.429 27.429 51.429 65.714 4 5.714 4 11.429 0 6.857-4 10.857-13.143 17.143-47.143 51.143t-44.857 34q-6.286 0-12-4l-65.714-51.429q-21.143 10.857-44 17.714-6.286 61.714-13.143 88.571-4 13.714-17.143 13.714h-106.286q-6.286 0-11.429-4.286t-5.714-10l-13.143-87.429q-19.429-5.714-42.857-17.714l-67.429 50.857q-4 4-11.429 4-6.286 0-12-4.571-82.286-76-82.286-91.429 0-5.143 4-10.857 5.714-8 23.429-30.286t26.857-34.857q-13.143-25.143-20-46.857l-86.857-13.714q-5.714-0.571-9.714-5.429t-4-11.143v-105.714q0-5.714 4-11.143t9.143-6l88.571-13.714q6.286-20 18.286-43.429-19.429-27.429-51.429-65.714-4-6.286-4-11.429 0-6.857 4-11.429 12.571-17.143 46.857-50.857t45.143-33.714q6.286 0 12 4l65.714 51.429q19.429-10.286 44-18.286 6.286-61.714 13.143-88 4-13.714 17.143-13.714h106.286q6.286 0 11.429 4.286t5.714 10l13.143 87.429q19.429 5.714 42.857 17.714l67.429-50.857q4.571-4 11.429-4 6.286 0 12 4.571 82.286 76 82.286 91.429 0 5.143-4 10.857-6.857 9.143-24 30.857t-25.714 34.286q13.143 27.429 19.429 46.857l86.857 13.143q5.714 1.143 9.714 6t4 11.143zM1097.143 764.571v80q0 9.143-85.143 17.714-6.857 15.429-17.143 29.714 29.143 64.571 29.143 78.857 0 2.286-2.286 4-69.714 40.571-70.857 40.571-4.571 0-26.286-26.857t-29.714-38.857q-11.429 1.143-17.143 1.143t-17.143-1.143q-8 12-29.714 38.857t-26.286 26.857q-1.143 0-70.857-40.571-2.286-1.714-2.286-4 0-14.286 29.143-78.857-10.286-14.286-17.143-29.714-85.143-8.571-85.143-17.714v-80q0-9.143 85.143-17.714 7.429-16.571 17.143-29.714-29.143-64.571-29.143-78.857 0-2.286 2.286-4 2.286-1.143 20-11.429t33.714-19.429 17.143-9.143q4.571 0 26.286 26.571t29.714 38.571q11.429-1.143 17.143-1.143t17.143 1.143q29.143-40.571 52.571-64l3.429-1.143q2.286 0 70.857 40 2.286 1.714 2.286 4 0 14.286-29.143 78.857 9.714 13.143 17.143 29.714 85.143 8.571 85.143 17.714zM1097.143 179.429v80q0 9.143-85.143 17.714-6.857 15.429-17.143 29.714 29.143 64.571 29.143 78.857 0 2.286-2.286 4-69.714 40.571-70.857 40.571-4.571 0-26.286-26.857t-29.714-38.857q-11.429 1.143-17.143 1.143t-17.143-1.143q-8 12-29.714 38.857t-26.286 26.857q-1.143 0-70.857-40.571-2.286-1.714-2.286-4 0-14.286 29.143-78.857-10.286-14.286-17.143-29.714-85.143-8.571-85.143-17.714v-80q0-9.143 85.143-17.714 7.429-16.571 17.143-29.714-29.143-64.571-29.143-78.857 0-2.286 2.286-4 2.286-1.143 20-11.429t33.714-19.429 17.143-9.143q4.571 0 26.286 26.571t29.714 38.571q11.429-1.143 17.143-1.143t17.143 1.143q29.143-40.571 52.571-64l3.429-1.143q2.286 0 70.857 40 2.286 1.714 2.286 4 0 14.286-29.143 78.857 9.714 13.143 17.143 29.714 85.143 8.571 85.143 17.714z"
				],
				"attrs": [],
				"tags": [
					"cogs",
					"gears"
				],
				"defaultCode": 61573,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 125,
				"order": 126,
				"prevSize": 28,
				"code": 61573,
				"name": "cogs"
			},
			"setIdx": 0,
			"iconIdx": 143
		},
		{
			"icon": {
				"paths": [
					"M804.571 438.857q0 79.429-53.714 146.857t-146.571 106.571-202 39.143q-49.143 0-100.571-9.143-70.857 50.286-158.857 73.143-20.571 5.143-49.143 9.143h-1.714q-6.286 0-11.714-4.571t-6.571-12q-0.571-1.714-0.571-3.714t0.286-3.714 1.143-3.429l1.429-2.857t2-3.143 2.286-2.857 2.571-2.857 2.286-2.571q2.857-3.429 13.143-14.286t14.857-16.857 12.857-16.571 14.286-22 11.714-25.143q-70.857-41.143-111.429-101.143t-40.571-128q0-79.429 53.714-146.857t146.571-106.571 202-39.143 202 39.143 146.571 106.571 53.714 146.857zM1024 585.143q0 68.571-40.571 128.286t-111.429 100.857q5.714 13.714 11.714 25.143t14.286 22 12.857 16.571 14.857 16.857 13.143 14.286q0.571 0.571 2.286 2.571t2.571 2.857 2.286 2.857 2 3.143l1.429 2.857t1.143 3.429 0.286 3.714-0.571 3.714q-1.714 8-7.429 12.571t-12.571 4q-28.571-4-49.143-9.143-88-22.857-158.857-73.143-51.429 9.143-100.571 9.143-154.857 0-269.714-75.429 33.143 2.286 50.286 2.286 92 0 176.571-25.714t150.857-73.714q71.429-52.571 109.714-121.143t38.286-145.143q0-44-13.143-86.857 73.714 40.571 116.571 101.714t42.857 131.429z"
				],
				"attrs": [],
				"tags": [
					"comments"
				],
				"defaultCode": 61574,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 126,
				"order": 127,
				"prevSize": 28,
				"code": 61574,
				"name": "comments"
			},
			"setIdx": 0,
			"iconIdx": 144
		},
		{
			"icon": {
				"paths": [
					"M146.286 768q0-14.857-10.857-25.714t-25.714-10.857-25.714 10.857-10.857 25.714 10.857 25.714 25.714 10.857 25.714-10.857 10.857-25.714zM804.571 438.857q0-29.143-22.286-51.143t-50.857-22h-201.143q0-33.143 27.429-91.143t27.429-91.714q0-56-18.286-82.857t-73.143-26.857q-14.857 14.857-21.714 48.571t-17.429 71.714-34 62.571q-12.571 13.143-44 52-2.286 2.857-13.143 17.143t-18 23.429-19.714 24.286-22.857 25.143-22 20.286-22.857 15.429-20.286 5.143h-18.286v365.714h18.286q7.429 0 18 1.714t18.857 3.714 21.714 6.286 20 6.571 20.286 7.143 16.571 6q120.571 41.714 195.429 41.714h69.143q109.714 0 109.714-95.429 0-14.857-2.857-32 17.143-9.143 27.143-30t10-42-10.286-39.429q30.286-28.571 30.286-68 0-14.286-5.714-31.714t-14.286-27.143q18.286-0.571 30.571-26.857t12.286-46.286zM877.714 438.286q0 50.857-28 93.143 5.143 18.857 5.143 39.429 0 44-21.714 82.286 1.714 12 1.714 24.571 0 57.714-34.286 101.714 0.571 79.429-48.571 125.429t-129.714 46h-73.714q-54.857 0-108.286-12.857t-123.714-37.429q-66.286-22.857-78.857-22.857h-164.571q-30.286 0-51.714-21.429t-21.429-51.714v-365.714q0-30.286 21.429-51.714t51.714-21.429h156.571q20.571-13.714 78.286-88.571 33.143-42.857 61.143-73.143 13.714-14.286 20.286-48.857t17.429-72.286 35.429-61.714q22.286-21.143 51.429-21.143 48 0 86.286 18.571t58.286 58 20 106.286q0 53.143-27.429 109.714h100.571q59.429 0 102.857 43.429t43.429 102.286z"
				],
				"attrs": [],
				"tags": [
					"thumbs-o-up"
				],
				"defaultCode": 61575,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 127,
				"order": 128,
				"prevSize": 28,
				"code": 61575,
				"name": "thumbs-o-up"
			},
			"setIdx": 0,
			"iconIdx": 145
		},
		{
			"icon": {
				"paths": [
					"M146.286 256q0-14.857-10.857-25.714t-25.714-10.857-25.714 10.857-10.857 25.714 10.857 25.714 25.714 10.857 25.714-10.857 10.857-25.714zM804.571 585.143q0-20-12.286-46.286t-30.571-26.857q8.571-9.714 14.286-27.143t5.714-31.714q0-39.429-30.286-68 10.286-18.286 10.286-39.429t-10-42-27.143-30q2.857-17.143 2.857-32 0-48.571-28-72t-77.714-23.429h-73.143q-74.857 0-195.429 41.714-2.857 1.143-16.571 6t-20.286 7.143-20 6.571-21.714 6.286-18.857 3.714-18 1.714h-18.286v365.714h18.286q9.143 0 20.286 5.143t22.857 15.429 22 20.286 22.857 25.143 19.714 24.286 18 23.429 13.143 17.143q31.429 38.857 44 52 23.429 24.571 34 62.571t17.429 71.714 21.714 48.571q54.857 0 73.143-26.857t18.286-82.857q0-33.714-27.429-91.714t-27.429-91.143h201.143q28.571 0 50.857-22t22.286-51.143zM877.714 585.714q0 58.857-43.429 102.286t-102.857 43.429h-100.571q27.429 56.571 27.429 109.714 0 67.429-20 106.286-20 39.429-58.286 58t-86.286 18.571q-29.143 0-51.429-21.143-19.429-18.857-30.857-46.857t-14.571-51.714-10-48.286-17.714-36.571q-27.429-28.571-61.143-72.571-57.714-74.857-78.286-88.571h-156.571q-30.286 0-51.714-21.429t-21.429-51.714v-365.714q0-30.286 21.429-51.714t51.714-21.429h164.571q12.571 0 78.857-22.857 73.143-25.143 127.429-37.714t114.286-12.571h64q80 0 129.429 45.143t48.857 123.429v2.857q34.286 44 34.286 101.714 0 12.571-1.714 24.571 21.714 38.286 21.714 82.286 0 20.571-5.143 39.429 28 42.286 28 93.143z"
				],
				"attrs": [],
				"tags": [
					"thumbs-o-down"
				],
				"defaultCode": 61576,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 128,
				"order": 129,
				"prevSize": 28,
				"code": 61576,
				"name": "thumbs-o-down"
			},
			"setIdx": 0,
			"iconIdx": 146
		},
		{
			"icon": {
				"width": 512,
				"paths": [
					"M475.429 18.286v765.143l-256.571 134.857q-12.571 6.857-22.857 6.857-12 0-18-8.286t-6-20.286q0-3.429 1.143-11.429l49.143-285.714-208-202.286q-14.286-15.429-14.286-27.429 0-21.143 32-26.286l286.857-41.714 128.571-260q10.857-23.429 28-23.429z"
				],
				"attrs": [],
				"tags": [
					"star-half"
				],
				"defaultCode": 61577,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 129,
				"order": 130,
				"prevSize": 28,
				"code": 61577,
				"name": "star-half"
			},
			"setIdx": 0,
			"iconIdx": 147
		},
		{
			"icon": {
				"paths": [
					"M950.857 340.571q0-46.286-12.286-81.714t-31.429-56.286-46.571-34-53.714-17.714-56-4.571-64 14.571-63.143 36.571-49.429 41.143-34.286 35.143q-10.286 12.571-28 12.571t-28-12.571q-13.714-16-34.286-35.143t-49.429-41.143-63.143-36.571-64-14.571-56 4.571-53.714 17.714-46.571 34-31.429 56.286-12.286 81.714q0 96 106.857 202.857l332 320 331.429-319.429q107.429-107.429 107.429-203.429zM1024 340.571q0 126.286-130.857 257.143l-356 342.857q-10.286 10.286-25.143 10.286t-25.143-10.286l-356.571-344q-5.714-4.571-15.714-14.857t-31.714-37.429-38.857-55.714-30.571-69.143-13.429-78.857q0-125.714 72.571-196.571t200.571-70.857q35.429 0 72.286 12.286t68.571 33.143 54.571 39.143 43.429 38.857q20.571-20.571 43.429-38.857t54.571-39.143 68.571-33.143 72.286-12.286q128 0 200.571 70.857t72.571 196.571z"
				],
				"attrs": [],
				"tags": [
					"heart-o"
				],
				"defaultCode": 61578,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 130,
				"order": 131,
				"prevSize": 28,
				"code": 61578,
				"name": "heart-o"
			},
			"setIdx": 0,
			"iconIdx": 148
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M365.714 822.857q0 2.286 0.571 11.429t0.286 15.143-1.714 13.429-5.714 11.143-11.714 3.714h-182.857q-68 0-116.286-48.286t-48.286-116.286v-402.286q0-68 48.286-116.286t116.286-48.286h182.857q7.429 0 12.857 5.429t5.429 12.857q0 2.286 0.571 11.429t0.286 15.143-1.714 13.429-5.714 11.143-11.714 3.714h-182.857q-37.714 0-64.571 26.857t-26.857 64.571v402.286q0 37.714 26.857 64.571t64.571 26.857h178.286t6.571 0.571 6.571 1.714 4.571 3.143 4 5.143 1.143 7.714zM896 512q0 14.857-10.857 25.714l-310.857 310.857q-10.857 10.857-25.714 10.857t-25.714-10.857-10.857-25.714v-164.571h-256q-14.857 0-25.714-10.857t-10.857-25.714v-219.429q0-14.857 10.857-25.714t25.714-10.857h256v-164.571q0-14.857 10.857-25.714t25.714-10.857 25.714 10.857l310.857 310.857q10.857 10.857 10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"sign-out"
				],
				"defaultCode": 61579,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 131,
				"order": 132,
				"prevSize": 28,
				"code": 61579,
				"name": "sign-out"
			},
			"setIdx": 0,
			"iconIdx": 149
		},
		{
			"icon": {
				"paths": [
					"M135.429 808h132v-396.571h-132v396.571zM276 289.143q-0.571-29.714-20.571-49.143t-53.143-19.429-54 19.429-20.857 49.143q0 29.143 20.286 48.857t52.857 19.714h0.571q33.714 0 54.286-19.714t20.571-48.857zM610.286 808h132v-227.429q0-88-41.714-133.143t-110.286-45.143q-77.714 0-119.429 66.857h1.143v-57.714h-132q1.714 37.714 0 396.571h132v-221.714q0-21.714 4-32 8.571-20 25.714-34t42.286-14q66.286 0 66.286 89.714v212zM877.714 237.714v548.571q0 68-48.286 116.286t-116.286 48.286h-548.571q-68 0-116.286-48.286t-48.286-116.286v-548.571q0-68 48.286-116.286t116.286-48.286h548.571q68 0 116.286 48.286t48.286 116.286z"
				],
				"attrs": [],
				"tags": [
					"linkedin-square"
				],
				"defaultCode": 61580,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 132,
				"order": 133,
				"prevSize": 28,
				"code": 61580,
				"name": "linkedin-square"
			},
			"setIdx": 0,
			"iconIdx": 150
		},
		{
			"icon": {
				"width": 658,
				"paths": [
					"M274.286 493.714v-256q0-8-5.143-13.143t-13.143-5.143-13.143 5.143-5.143 13.143v256q0 8 5.143 13.143t13.143 5.143 13.143-5.143 5.143-13.143zM658.286 694.857q0 14.857-10.857 25.714t-25.714 10.857h-245.143l-29.143 276q-1.143 6.857-6 11.714t-11.714 4.857h-0.571q-15.429 0-18.286-15.429l-43.429-277.143h-230.857q-14.857 0-25.714-10.857t-10.857-25.714q0-70.286 44.857-126.571t101.429-56.286v-292.571q-29.714 0-51.429-21.714t-21.714-51.429 21.714-51.429 51.429-21.714h365.714q29.714 0 51.429 21.714t21.714 51.429-21.714 51.429-51.429 21.714v292.571q56.571 0 101.429 56.286t44.857 126.571z"
				],
				"attrs": [],
				"tags": [
					"thumb-tack"
				],
				"defaultCode": 61581,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 133,
				"order": 134,
				"prevSize": 28,
				"code": 61581,
				"name": "thumb-tack"
			},
			"setIdx": 0,
			"iconIdx": 151
		},
		{
			"icon": {
				"paths": [
					"M804.571 530.286v182.857q0 68-48.286 116.286t-116.286 48.286h-475.429q-68 0-116.286-48.286t-48.286-116.286v-475.429q0-68 48.286-116.286t116.286-48.286h402.286q8 0 13.143 5.143t5.143 13.143v36.571q0 8-5.143 13.143t-13.143 5.143h-402.286q-37.714 0-64.571 26.857t-26.857 64.571v475.429q0 37.714 26.857 64.571t64.571 26.857h475.429q37.714 0 64.571-26.857t26.857-64.571v-182.857q0-8 5.143-13.143t13.143-5.143h36.571q8 0 13.143 5.143t5.143 13.143zM1024 36.571v292.571q0 14.857-10.857 25.714t-25.714 10.857-25.714-10.857l-100.571-100.571-372.571 372.571q-5.714 5.714-13.143 5.714t-13.143-5.714l-65.143-65.143q-5.714-5.714-5.714-13.143t5.714-13.143l372.571-372.571-100.571-100.571q-10.857-10.857-10.857-25.714t10.857-25.714 25.714-10.857h292.571q14.857 0 25.714 10.857t10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"external-link"
				],
				"defaultCode": 61582,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 134,
				"order": 135,
				"prevSize": 28,
				"code": 61582,
				"name": "external-link"
			},
			"setIdx": 0,
			"iconIdx": 152
		},
		{
			"icon": {
				"paths": [
					"M676.571 512q0 14.857-10.857 25.714l-310.857 310.857q-10.857 10.857-25.714 10.857t-25.714-10.857-10.857-25.714v-164.571h-256q-14.857 0-25.714-10.857t-10.857-25.714v-219.429q0-14.857 10.857-25.714t25.714-10.857h256v-164.571q0-14.857 10.857-25.714t25.714-10.857 25.714 10.857l310.857 310.857q10.857 10.857 10.857 25.714zM877.714 310.857v402.286q0 68-48.286 116.286t-116.286 48.286h-182.857q-7.429 0-12.857-5.429t-5.429-12.857q0-2.286-0.571-11.429t-0.286-15.143 1.714-13.429 5.714-11.143 11.714-3.714h182.857q37.714 0 64.571-26.857t26.857-64.571v-402.286q0-37.714-26.857-64.571t-64.571-26.857h-178.286t-6.571-0.571-6.571-1.714-4.571-3.143-4-5.143-1.143-7.714q0-2.286-0.571-11.429t-0.286-15.143 1.714-13.429 5.714-11.143 11.714-3.714h182.857q68 0 116.286 48.286t48.286 116.286z"
				],
				"attrs": [],
				"tags": [
					"sign-in"
				],
				"defaultCode": 61584,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 135,
				"order": 136,
				"prevSize": 28,
				"code": 61584,
				"name": "sign-in"
			},
			"setIdx": 0,
			"iconIdx": 153
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M261.714 504.571q-42.286-92.571-42.286-212h-146.286v54.857q0 44.571 54 92.571t134.571 64.571zM877.714 347.429v-54.857h-146.286q0 119.429-42.286 212 80.571-16.571 134.571-64.571t54-92.571zM950.857 274.286v73.143q0 40.571-23.714 81.714t-64 74.286-98.857 55.714-123.143 25.429q-24 30.857-54.286 54.286-21.714 19.429-30 41.429t-8.286 51.143q0 30.857 17.429 52t55.714 21.143q42.857 0 76.286 26t33.429 65.429v36.571q0 8-5.143 13.143t-13.143 5.143h-475.429q-8 0-13.143-5.143t-5.143-13.143v-36.571q0-39.429 33.429-65.429t76.286-26q38.286 0 55.714-21.143t17.429-52q0-29.143-8.286-51.143t-30-41.429q-30.286-23.429-54.286-54.286-64.571-2.857-123.143-25.429t-98.857-55.714-64-74.286-23.714-81.714v-73.143q0-22.857 16-38.857t38.857-16h164.571v-54.857q0-37.714 26.857-64.571t64.571-26.857h329.143q37.714 0 64.571 26.857t26.857 64.571v54.857h164.571q22.857 0 38.857 16t16 38.857z"
				],
				"attrs": [],
				"tags": [
					"trophy"
				],
				"defaultCode": 61585,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 136,
				"order": 137,
				"prevSize": 28,
				"code": 61585,
				"name": "trophy"
			},
			"setIdx": 0,
			"iconIdx": 154
		},
		{
			"icon": {
				"paths": [
					"M225.143 772.571q-4.571 5.143-11.429-1.714-7.429-6.286-2.286-10.857 4.571-5.143 11.429 1.714 6.857 6.286 2.286 10.857zM201.143 737.714q5.143 6.857 0 10.857-4.571 3.429-9.714-4t0-10.286q5.143-4 9.714 3.429zM166.286 703.429q-2.857 4-7.429 1.143-5.714-2.857-4-6.857 1.714-2.857 7.429-1.143 5.714 2.857 4 6.857zM184 722.857q-3.429 4-9.143-1.714-5.143-6.286-1.143-9.143 3.429-3.429 9.143 1.714 5.143 6.286 1.143 9.143zM257.714 786.857q-2.286 6.857-10.857 3.429-9.714-2.286-7.429-8.571t10.857-4q9.143 2.857 7.429 9.143zM293.714 789.714q0 6.286-9.143 6.286-9.714 1.143-9.714-6.286 0-6.286 9.143-6.286 9.714-1.143 9.714 6.286zM326.857 784q1.143 5.714-8 8t-10.286-4.571 8-8.571q9.143-1.143 10.286 5.143zM877.714 237.714v548.571q0 68-48.286 116.286t-116.286 48.286h-128q-9.143 0-14-0.571t-11.143-2.857-9.143-8.286-2.857-15.714v-136.571q0-55.429-29.714-81.143 32.571-3.429 58.571-10.286t53.714-22.286 46.286-38 30.286-60 11.714-86q0-69.143-45.143-117.714 21.143-52-4.571-116.571-16-5.143-46.286 6.286t-52.571 25.143l-21.714 13.714q-53.143-14.857-109.714-14.857t-109.714 14.857q-9.143-6.286-24.286-15.429t-47.714-22-49.143-7.714q-25.143 64.571-4 116.571-45.143 48.571-45.143 117.714 0 48.571 11.714 85.714t30 60 46 38.286 53.714 22.286 58.571 10.286q-22.857 20.571-28 58.857-12 5.714-25.714 8.571t-32.571 2.857-37.429-12.286-31.714-35.714q-10.857-18.286-27.714-29.714t-28.286-13.714l-11.429-1.714q-12 0-16.571 2.571t-2.857 6.571 5.143 8 7.429 6.857l4 2.857q12.571 5.714 24.857 21.714t18 29.143l5.714 13.143q7.429 21.714 25.143 35.143t38.286 17.143 39.714 4 31.714-2l13.143-2.286q0 21.714 0.286 58.857t0.286 38.857q0 12.571-6.286 19.143t-12.571 7.429-18.857 0.857h-128q-68 0-116.286-48.286t-48.286-116.286v-548.571q0-68 48.286-116.286t116.286-48.286h548.571q68 0 116.286 48.286t48.286 116.286z"
				],
				"attrs": [],
				"tags": [
					"github-square"
				],
				"defaultCode": 61586,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 137,
				"order": 138,
				"prevSize": 28,
				"code": 61586,
				"name": "github-square"
			},
			"setIdx": 0,
			"iconIdx": 155
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M731.429 841.143q0-14.857-10.857-25.714t-25.714-10.857-25.714 10.857-10.857 25.714 10.857 25.714 25.714 10.857 25.714-10.857 10.857-25.714zM877.714 841.143q0-14.857-10.857-25.714t-25.714-10.857-25.714 10.857-10.857 25.714 10.857 25.714 25.714 10.857 25.714-10.857 10.857-25.714zM950.857 713.143v182.857q0 22.857-16 38.857t-38.857 16h-841.143q-22.857 0-38.857-16t-16-38.857v-182.857q0-22.857 16-38.857t38.857-16h244q12 32 40.286 52.571t63.143 20.571h146.286q34.857 0 63.143-20.571t40.286-52.571h244q22.857 0 38.857 16t16 38.857zM765.143 342.857q-9.714 22.857-33.714 22.857h-146.286v256q0 14.857-10.857 25.714t-25.714 10.857h-146.286q-14.857 0-25.714-10.857t-10.857-25.714v-256h-146.286q-24 0-33.714-22.857-9.714-22.286 8-39.429l256-256q10.286-10.857 25.714-10.857t25.714 10.857l256 256q17.714 17.143 8 39.429z"
				],
				"attrs": [],
				"tags": [
					"upload"
				],
				"defaultCode": 61587,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 138,
				"order": 139,
				"prevSize": 28,
				"code": 61587,
				"name": "upload"
			},
			"setIdx": 0,
			"iconIdx": 156
		},
		{
			"icon": {
				"paths": [
					"M804 472q0-25.143-4-64.857t-10.286-55.143q-6.857-17.143-9.714-25.143t-5.143-20.857-2.286-27.714q0-13.143 2.857-39.143t2.857-38.571q0-21.143-5.714-31.429-2.286-0.571-7.429-0.571-10.857 0-33.143 2.571t-33.714 2.571q-34.286 0-100.571-13.714t-100-13.714q-24.571 0-54 6.571t-48.571 13.429-51.143 19.429q-78.286 30.857-115.429 58.857-54.857 41.714-91.143 108.286t-50.286 134.857-14 142q0 22.857 7.143 68.571t7.143 69.143q0 13.143-6.286 38t-6.286 37.429 6.857 20.857 19.429 8.286q13.714 0 41.429-6.286t42-6.286q32.571 0 96.857 8.857t96.857 8.857q103.429 0 162.286-20.571 73.714-25.714 134.571-87.143t94.857-140.286 34-157.143zM877.143 470.857q0 94.286-40 187.143t-112 164.571-160.571 103.143q-70.857 25.143-186.286 25.143-32.571 0-97.143-8.286t-96.571-8.286q-13.714 0-41.429 8.286t-42 8.286q-41.714 0-70.571-31.714t-28.857-73.429q0-13.714 6.286-38.857t6.286-38.286q0-22.857-7.143-68.857t-7.143-69.429q0-63.429 10.286-124.286t31.143-119.714 57.429-110.857 85.714-89.143q44.571-33.714 132.571-68.571 110.857-44.571 180.571-44.571 34.286 0 100.286 13.714t99.143 13.714q10.857 0 32.571-2.857t33.143-2.857q46.286 0 67.429 28.857t21.143 76.857q0 13.143-2.857 38.857t-2.857 38.857q0 5.714 0.571 10.571t1.714 9.714 2.286 7.714 3.714 9.143 3.714 9.714q9.143 22.857 14.286 67.714t5.143 78z"
				],
				"attrs": [],
				"tags": [
					"lemon-o"
				],
				"defaultCode": 61588,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 139,
				"order": 140,
				"prevSize": 28,
				"code": 61588,
				"name": "lemon-o"
			},
			"setIdx": 0,
			"iconIdx": 157
		},
		{
			"icon": {
				"width": 805,
				"paths": [
					"M804.571 708.571q0 15.429-5.714 40.286t-12 39.143q-12 28.571-69.714 60.571-53.714 29.143-106.286 29.143-15.429 0-30-2t-32.857-7.143-27.143-8.286-31.714-11.714-28-10.286q-56-20-100-47.429-73.143-45.143-151.143-123.143t-123.143-151.143q-27.429-44-47.429-100-1.714-5.143-10.286-28t-11.714-31.714-8.286-27.143-7.143-32.857-2-30q0-52.571 29.143-106.286 32-57.714 60.571-69.714 14.286-6.286 39.143-12t40.286-5.714q8 0 12 1.714 10.286 3.429 30.286 43.429 6.286 10.857 17.143 30.857t20 36.286 17.714 30.571q1.714 2.286 10 14.286t12.286 20.286 4 16.286q0 11.429-16.286 28.571t-35.429 31.429-35.429 30.286-16.286 26.286q0 5.143 2.857 12.857t4.857 11.714 8 13.714 6.571 10.857q43.429 78.286 99.429 134.286t134.286 99.429q1.143 0.571 10.857 6.571t13.714 8 11.714 4.857 12.857 2.857q10.286 0 26.286-16.286t30.286-35.429 31.429-35.429 28.571-16.286q8 0 16.286 4t20.286 12.286 14.286 10q14.286 8.571 30.571 17.714t36.286 20 30.857 17.143q40 20 43.429 30.286 1.714 4 1.714 12z"
				],
				"attrs": [],
				"tags": [
					"phone"
				],
				"defaultCode": 61589,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 140,
				"order": 141,
				"prevSize": 28,
				"code": 61589,
				"name": "phone"
			},
			"setIdx": 0,
			"iconIdx": 158
		},
		{
			"icon": {
				"width": 805,
				"paths": [
					"M640 146.286h-475.429q-37.714 0-64.571 26.857t-26.857 64.571v475.429q0 37.714 26.857 64.571t64.571 26.857h475.429q37.714 0 64.571-26.857t26.857-64.571v-475.429q0-37.714-26.857-64.571t-64.571-26.857zM804.571 237.714v475.429q0 68-48.286 116.286t-116.286 48.286h-475.429q-68 0-116.286-48.286t-48.286-116.286v-475.429q0-68 48.286-116.286t116.286-48.286h475.429q68 0 116.286 48.286t48.286 116.286z"
				],
				"attrs": [],
				"tags": [
					"square-o"
				],
				"defaultCode": 61590,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 141,
				"order": 142,
				"prevSize": 28,
				"code": 61590,
				"name": "square-o"
			},
			"setIdx": 0,
			"iconIdx": 159
		},
		{
			"icon": {
				"width": 731,
				"paths": [
					"M658.286 146.286h-585.143v709.714l292.571-280.571 50.857 48.571 241.714 232v-709.714zM665.143 73.143q13.143 0 25.143 5.143 18.857 7.429 30 23.429t11.143 35.429v736.571q0 19.429-11.143 35.429t-30 23.429q-10.857 4.571-25.143 4.571-27.429 0-47.429-18.286l-252-242.286-252 242.286q-20.571 18.857-47.429 18.857-13.143 0-25.143-5.143-18.857-7.429-30-23.429t-11.143-35.429v-736.571q0-19.429 11.143-35.429t30-23.429q12-5.143 25.143-5.143h598.857z"
				],
				"attrs": [],
				"tags": [
					"bookmark-o"
				],
				"defaultCode": 61591,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 142,
				"order": 143,
				"prevSize": 28,
				"code": 61591,
				"name": "bookmark-o"
			},
			"setIdx": 0,
			"iconIdx": 160
		},
		{
			"icon": {
				"paths": [
					"M731.429 681.714q0-6.286-1.143-9.143-1.714-4.571-22-16.857t-50.571-28.286l-30.286-16.571q-2.857-1.714-10.857-7.429t-14.286-8.571-12-2.857q-10.286 0-26.857 18.571t-32.571 37.429-25.143 18.857q-4 0-9.429-2t-8.857-3.714-9.714-5.429-8-4.857q-56.571-31.429-97.429-72.286t-72.286-97.429q-1.143-1.714-4.857-8t-5.429-9.714-3.714-8.857-2-9.429q0-7.429 11.714-19.143t25.714-22 25.714-22.571 11.714-20.857q0-5.714-2.857-12t-8.571-14.286-7.429-10.857q-1.714-3.429-8.571-16.286t-14.286-26-15.143-27.143-14.286-23.143-9.429-10.286-9.143-1.143q-27.429 0-57.714 12.571-26.286 12-45.714 54t-19.429 74.571q0 9.143 1.429 19.429t2.857 17.429 5.143 18.857 5.714 16.857 7.143 18.857 6.286 17.143q34.286 93.714 123.714 183.143t183.143 123.714q3.429 1.143 17.143 6.286t18.857 7.143 16.857 5.714 18.857 5.143 17.429 2.857 19.429 1.429q32.571 0 74.571-19.429t54-45.714q12.571-30.286 12.571-57.714zM877.714 237.714v548.571q0 68-48.286 116.286t-116.286 48.286h-548.571q-68 0-116.286-48.286t-48.286-116.286v-548.571q0-68 48.286-116.286t116.286-48.286h548.571q68 0 116.286 48.286t48.286 116.286z"
				],
				"attrs": [],
				"tags": [
					"phone-square"
				],
				"defaultCode": 61592,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 143,
				"order": 144,
				"prevSize": 28,
				"code": 61592,
				"name": "phone-square"
			},
			"setIdx": 0,
			"iconIdx": 161
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M925.714 233.143q-38.286 56-92.571 95.429 0.571 8 0.571 24 0 74.286-21.714 148.286t-66 142-105.429 120.286-147.429 83.429-184.571 31.143q-154.857 0-283.429-82.857 20 2.286 44.571 2.286 128.571 0 229.143-78.857-60-1.143-107.429-36.857t-65.143-91.143q18.857 2.857 34.857 2.857 24.571 0 48.571-6.286-64-13.143-106-63.714t-42-117.429v-2.286q38.857 21.714 83.429 23.429-37.714-25.143-60-65.714t-22.286-88q0-50.286 25.143-93.143 69.143 85.143 168.286 136.286t212.286 56.857q-4.571-21.714-4.571-42.286 0-76.571 54-130.571t130.571-54q80 0 134.857 58.286 62.286-12 117.143-44.571-21.143 65.714-81.143 101.714 53.143-5.714 106.286-28.571z"
				],
				"attrs": [],
				"tags": [
					"twitter"
				],
				"defaultCode": 61593,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 144,
				"order": 145,
				"prevSize": 28,
				"code": 61593,
				"name": "twitter"
			},
			"setIdx": 0,
			"iconIdx": 162
		},
		{
			"icon": {
				"width": 585,
				"paths": [
					"M548 6.857v150.857h-89.714q-49.143 0-66.286 20.571t-17.143 61.714v108h167.429l-22.286 169.143h-145.143v433.714h-174.857v-433.714h-145.714v-169.143h145.714v-124.571q0-106.286 59.429-164.857t158.286-58.571q84 0 130.286 6.857z"
				],
				"attrs": [],
				"tags": [
					"facebook"
				],
				"defaultCode": 61594,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 145,
				"order": 146,
				"prevSize": 28,
				"code": 61594,
				"name": "facebook"
			},
			"setIdx": 0,
			"iconIdx": 163
		},
		{
			"icon": {
				"paths": [
					"M877.714 512q0 143.429-83.714 258t-216.286 158.571q-15.429 2.857-22.571-4t-7.143-17.143v-120.571q0-55.429-29.714-81.143 32.571-3.429 58.571-10.286t53.714-22.286 46.286-38 30.286-60 11.714-86q0-69.143-45.143-117.714 21.143-52-4.571-116.571-16-5.143-46.286 6.286t-52.571 25.143l-21.714 13.714q-53.143-14.857-109.714-14.857t-109.714 14.857q-9.143-6.286-24.286-15.429t-47.714-22-49.143-7.714q-25.143 64.571-4 116.571-45.143 48.571-45.143 117.714 0 48.571 11.714 85.714t30 60 46 38.286 53.714 22.286 58.571 10.286q-22.857 20.571-28 58.857-12 5.714-25.714 8.571t-32.571 2.857-37.429-12.286-31.714-35.714q-10.857-18.286-27.714-29.714t-28.286-13.714l-11.429-1.714q-12 0-16.571 2.571t-2.857 6.571 5.143 8 7.429 6.857l4 2.857q12.571 5.714 24.857 21.714t18 29.143l5.714 13.143q7.429 21.714 25.143 35.143t38.286 17.143 39.714 4 31.714-2l13.143-2.286q0 21.714 0.286 50.857t0.286 30.857q0 10.286-7.429 17.143t-22.857 4q-132.571-44-216.286-158.571t-83.714-258q0-119.429 58.857-220.286t159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"github"
				],
				"defaultCode": 61595,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 146,
				"order": 147,
				"prevSize": 28,
				"code": 61595,
				"name": "github"
			},
			"setIdx": 0,
			"iconIdx": 164
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M950.857 329.143v146.286q0 14.857-10.857 25.714t-25.714 10.857h-36.571q-14.857 0-25.714-10.857t-10.857-25.714v-146.286q0-60.571-42.857-103.429t-103.429-42.857-103.429 42.857-42.857 103.429v109.714h54.857q22.857 0 38.857 16t16 38.857v329.143q0 22.857-16 38.857t-38.857 16h-548.571q-22.857 0-38.857-16t-16-38.857v-329.143q0-22.857 16-38.857t38.857-16h384v-109.714q0-105.714 75.143-180.857t180.857-75.143 180.857 75.143 75.143 180.857z"
				],
				"attrs": [],
				"tags": [
					"unlock"
				],
				"defaultCode": 61596,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 147,
				"order": 148,
				"prevSize": 28,
				"code": 61596,
				"name": "unlock"
			},
			"setIdx": 0,
			"iconIdx": 165
		},
		{
			"icon": {
				"width": 1097,
				"paths": [
					"M1005.714 73.143q37.714 0 64.571 26.857t26.857 64.571v694.857q0 37.714-26.857 64.571t-64.571 26.857h-914.286q-37.714 0-64.571-26.857t-26.857-64.571v-694.857q0-37.714 26.857-64.571t64.571-26.857h914.286zM91.429 146.286q-7.429 0-12.857 5.429t-5.429 12.857v128h950.857v-128q0-7.429-5.429-12.857t-12.857-5.429h-914.286zM1005.714 877.714q7.429 0 12.857-5.429t5.429-12.857v-347.429h-950.857v347.429q0 7.429 5.429 12.857t12.857 5.429h914.286zM146.286 804.571v-73.143h146.286v73.143h-146.286zM365.714 804.571v-73.143h219.429v73.143h-219.429z"
				],
				"attrs": [],
				"tags": [
					"credit-card"
				],
				"defaultCode": 61597,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 148,
				"order": 149,
				"prevSize": 28,
				"code": 61597,
				"name": "credit-card"
			},
			"setIdx": 0,
			"iconIdx": 166
		},
		{
			"icon": {
				"width": 805,
				"paths": [
					"M219.429 768q0 45.714-32 77.714t-77.714 32-77.714-32-32-77.714 32-77.714 77.714-32 77.714 32 32 77.714zM512 838.286q1.143 16-9.714 27.429-10.286 12-26.857 12h-77.143q-14.286 0-24.571-9.429t-11.429-23.714q-12.571-130.857-105.429-223.714t-223.714-105.429q-14.286-1.143-23.714-11.429t-9.429-24.571v-77.143q0-16.571 12-26.857 9.714-9.714 24.571-9.714h2.857q91.429 7.429 174.857 46t148 103.714q65.143 64.571 103.714 148t46 174.857zM804.571 839.429q1.143 15.429-10.286 26.857-10.286 11.429-26.286 11.429h-81.714q-14.857 0-25.429-10t-11.143-24.286q-6.857-122.857-57.714-233.429t-132.286-192-192-132.286-233.429-58.286q-14.286-0.571-24.286-11.143t-10-24.857v-81.714q0-16 11.429-26.286 10.286-10.286 25.143-10.286h1.714q149.714 7.429 286.571 68.571t243.143 168q106.857 106.286 168 243.143t68.571 286.571z"
				],
				"attrs": [],
				"tags": [
					"rss"
				],
				"defaultCode": 61598,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 149,
				"order": 150,
				"prevSize": 28,
				"code": 61598,
				"name": "rss"
			},
			"setIdx": 0,
			"iconIdx": 167
		},
		{
			"icon": {
				"paths": [
					"M594.286 694.857q0 18.857-13.429 32.286t-32.286 13.429-32.286-13.429-13.429-32.286 13.429-32.286 32.286-13.429 32.286 13.429 13.429 32.286zM740.571 694.857q0 18.857-13.429 32.286t-32.286 13.429-32.286-13.429-13.429-32.286 13.429-32.286 32.286-13.429 32.286 13.429 13.429 32.286zM804.571 786.286v-182.857q0-7.429-5.429-12.857t-12.857-5.429h-694.857q-7.429 0-12.857 5.429t-5.429 12.857v182.857q0 7.429 5.429 12.857t12.857 5.429h694.857q7.429 0 12.857-5.429t5.429-12.857zM101.714 512h674.286l-89.714-275.429q-2.286-7.429-9.143-12.286t-14.857-4.857h-446.857q-8 0-14.857 4.857t-9.143 12.286zM877.714 603.429v182.857q0 37.714-26.857 64.571t-64.571 26.857h-694.857q-37.714 0-64.571-26.857t-26.857-64.571v-182.857q0-14.286 9.143-42.857l112.571-346.286q9.714-30.286 36-49.143t57.714-18.857h446.857q31.429 0 57.714 18.857t36 49.143l112.571 346.286q9.143 28.571 9.143 42.857z"
				],
				"attrs": [],
				"tags": [
					"hdd-o"
				],
				"defaultCode": 61600,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 150,
				"order": 151,
				"prevSize": 28,
				"code": 61600,
				"name": "hdd-o"
			},
			"setIdx": 0,
			"iconIdx": 168
		},
		{
			"icon": {
				"paths": [
					"M950.857 365.714q30.286 0 51.714 21.429t21.429 51.714-21.429 51.714-51.714 21.429v219.429q0 29.714-21.714 51.429t-51.429 21.714q-238.286-198.286-464-217.143-33.143 10.857-52 37.714t-17.714 57.429 22.857 52.857q-11.429 18.857-13.143 37.429t3.429 33.143 19.143 31.429 27.429 28.571 35.143 28.857q-16.571 33.143-63.714 47.429t-96.286 6.571-75.429-31.714q-4-13.143-16.857-50t-18.286-54-13.143-50.857-8.571-57.714 2-56.286 12.571-63.143h-69.714q-37.714 0-64.571-26.857t-26.857-64.571v-109.714q0-37.714 26.857-64.571t64.571-26.857h274.286q248.571 0 512-219.429 29.714 0 51.429 21.714t21.714 51.429v219.429zM877.714 710.857v-545.143q-225.143 172.571-438.857 196v154.286q215.429 24 438.857 194.857z"
				],
				"attrs": [],
				"tags": [
					"bullhorn"
				],
				"defaultCode": 61601,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 151,
				"order": 152,
				"prevSize": 28,
				"code": 61601,
				"name": "bullhorn"
			},
			"setIdx": 0,
			"iconIdx": 169
		},
		{
			"icon": {
				"paths": [
					"M521.143 969.143q0-9.143-9.143-9.143-33.714 0-58-24.286t-24.286-58q0-9.143-9.143-9.143t-9.143 9.143q0 41.714 29.429 71.143t71.143 29.429q9.143 0 9.143-9.143zM140.571 804.571h742.857q-152-171.429-152-475.429 0-29.143-13.714-60t-39.429-58.857-69.429-46-96.857-18-96.857 18-69.429 46-39.429 58.857-13.714 60q0 304-152 475.429zM987.429 804.571q0 29.714-21.714 51.429t-51.429 21.714h-256q0 60.571-42.857 103.429t-103.429 42.857-103.429-42.857-42.857-103.429h-256q-29.714 0-51.429-21.714t-21.714-51.429q28.571-24 52-50.286t48.571-68.286 42.571-90.571 28.571-117.714 11.143-148.571q0-86.857 66.857-161.429t175.429-90.571q-4.571-10.857-4.571-22.286 0-22.857 16-38.857t38.857-16 38.857 16 16 38.857q0 11.429-4.571 22.286 108.571 16 175.429 90.571t66.857 161.429q0 79.429 11.143 148.571t28.571 117.714 42.571 90.571 48.571 68.286 52 50.286z"
				],
				"attrs": [],
				"tags": [
					"bell-o"
				],
				"defaultCode": 61602,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 152,
				"order": 153,
				"prevSize": 28,
				"code": 61602,
				"name": "bell-o"
			},
			"setIdx": 0,
			"iconIdx": 170
		},
		{
			"icon": {
				"paths": [
					"M786.286 512l78.857 77.143q17.143 16 11.429 40-6.857 23.429-29.714 29.143l-107.429 27.429 30.286 106.286q6.857 23.429-10.857 40-16.571 17.714-40 10.857l-106.286-30.286-27.429 107.429q-5.714 22.857-29.143 29.714-6.857 1.143-10.857 1.143-17.714 0-29.143-12.571l-77.143-78.857-77.143 78.857q-16 17.143-40 11.429-23.429-6.286-29.143-29.714l-27.429-107.429-106.286 30.286q-23.429 6.857-40-10.857-17.714-16.571-10.857-40l30.286-106.286-107.429-27.429q-22.857-5.714-29.714-29.143-5.714-24 11.429-40l78.857-77.143-78.857-77.143q-17.143-16-11.429-40 6.857-23.429 29.714-29.143l107.429-27.429-30.286-106.286q-6.857-23.429 10.857-40 16.571-17.714 40-10.857l106.286 30.286 27.429-107.429q5.714-23.429 29.143-29.143 23.429-6.857 40 10.857l77.143 79.429 77.143-79.429q16.571-17.143 40-10.857 23.429 5.714 29.143 29.143l27.429 107.429 106.286-30.286q23.429-6.857 40 10.857 17.714 16.571 10.857 40l-30.286 106.286 107.429 27.429q22.857 5.714 29.714 29.143 5.714 24-11.429 40z"
				],
				"attrs": [],
				"tags": [
					"certificate"
				],
				"defaultCode": 61603,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 153,
				"order": 154,
				"prevSize": 28,
				"code": 61603,
				"name": "certificate"
			},
			"setIdx": 0,
			"iconIdx": 171
		},
		{
			"icon": {
				"paths": [
					"M146.286 768q0-14.857-10.857-25.714t-25.714-10.857-25.714 10.857-10.857 25.714 10.857 25.714 25.714 10.857 25.714-10.857 10.857-25.714zM950.857 438.857q0-29.143-22.286-51.143t-50.857-22h-329.143q0-11.429 8.571-27.714t18.857-31.429 18.857-38.857 8.571-48.286q0-38.286-25.429-55.714t-66-17.429q-13.714 0-51.429 79.429-13.714 25.143-21.143 37.143-22.857 36.571-64 82.857-40.571 46.286-57.714 60.571-39.429 32.571-80 32.571h-18.286v365.714h18.286q41.143 0 95.429 18.286t110.571 36.571 102.571 18.286q108 0 108-95.429 0-14.857-2.857-32 17.143-9.143 27.143-30t10-42-10.286-39.429q30.286-28.571 30.286-68 0-14.286-5.714-31.714t-14.286-27.143h189.143q29.714 0 51.429-21.714t21.714-51.429zM1024 438.286q0 60-43.143 103.429t-103.143 43.429h-96.571q-2.286 35.429-21.143 68 1.714 12 1.714 24.571 0 57.714-34.286 101.714 0.571 79.429-48.571 125.429t-129.714 46q-76 0-184-39.429-93.714-33.714-127.429-33.714h-164.571q-30.286 0-51.714-21.429t-21.429-51.714v-365.714q0-30.286 21.429-51.714t51.714-21.429h164.571q5.714 0 12.286-2.571t13.429-8 12.857-10.286 13.714-12.857 11.714-12.286 10.857-12.286 8-9.714q37.143-42.286 57.143-73.714 7.429-12 18.857-35.429t21.143-41.143 23.143-36 31.429-28.286 39.714-10q71.429 0 118 38.286t46.571 108q0 38.857-12.571 73.143h213.714q59.429 0 102.857 43.429t43.429 102.286z"
				],
				"attrs": [],
				"tags": [
					"hand-o-right"
				],
				"defaultCode": 61604,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 154,
				"order": 155,
				"prevSize": 28,
				"code": 61604,
				"name": "hand-o-right"
			},
			"setIdx": 0,
			"iconIdx": 172
		},
		{
			"icon": {
				"paths": [
					"M786.286 804.571h18.286v-365.714h-18.286q-20 0-38.571-6.857t-35.714-21.143-28.571-26.286-28-30.857q-1.143-1.714-2-2.571t-2.286-2.571-2.571-2.857q-41.143-46.286-64-82.857-8-12.571-21.714-38.857-0.571-1.714-6-12.857t-10.571-20.571-11.429-20.286-12.286-17.429-10.571-6.571q-40.571 0-66 17.429t-25.429 55.714q0 24.571 8.571 48.286t18.857 38.857 18.857 31.429 8.571 27.714h-329.143q-28.571 0-50.857 22t-22.286 51.143q0 29.714 21.714 51.429t51.429 21.714h189.143q-8.571 9.714-14.286 27.143t-5.714 31.714q0 39.429 30.286 68-10.286 18.286-10.286 39.429t10 42 27.143 30q-2.286 13.714-2.286 32 0 48.571 27.714 72t77.429 23.429q48 0 104.571-18.286t110.857-36.571 95.429-18.286zM950.857 768q0-14.857-10.857-25.714t-25.714-10.857-25.714 10.857-10.857 25.714 10.857 25.714 25.714 10.857 25.714-10.857 10.857-25.714zM1024 438.857v365.714q0 30.286-21.429 51.714t-51.714 21.429h-164.571q-33.714 0-127.429 33.714-108.571 39.429-181.143 39.429-81.143 0-131.429-44.286t-49.714-124.286l0.571-2.857q-34.857-43.429-34.857-101.714 0-12.571 1.714-24.571-18.857-32.571-21.143-68h-96.571q-60 0-103.143-43.429t-43.143-103.429q0-58.857 43.429-102.286t102.857-43.429h213.714q-12.571-34.286-12.571-73.143 0-69.714 46.571-108t118-38.286q21.714 0 39.714 10t31.429 28.286 23.143 36 21.143 41.143 18.857 35.429q20 31.429 57.143 73.714 1.143 1.714 8 9.714t10.857 12.286 11.714 12.286 13.714 12.857 12.857 10.286 13.429 8 12.286 2.571h164.571q30.286 0 51.714 21.429t21.429 51.714z"
				],
				"attrs": [],
				"tags": [
					"hand-o-left"
				],
				"defaultCode": 61605,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 155,
				"order": 156,
				"prevSize": 28,
				"code": 61605,
				"name": "hand-o-left"
			},
			"setIdx": 0,
			"iconIdx": 173
		},
		{
			"icon": {
				"paths": [
					"M731.429 914.286q0-14.857-10.857-25.714t-25.714-10.857-25.714 10.857-10.857 25.714 10.857 25.714 25.714 10.857 25.714-10.857 10.857-25.714zM804.571 477.714q0-108-95.429-108-14.857 0-32 2.857-9.143-17.143-30-27.143t-42-10-39.429 10.286q-28.571-30.286-68-30.286-14.286 0-31.714 5.714t-27.143 14.286v-189.143q0-29.714-21.714-51.429t-51.429-21.714q-29.143 0-51.143 22.286t-22 50.857v329.143q-11.429 0-27.714-8.571t-31.429-18.857-38.857-18.857-48.286-8.571q-38.286 0-55.714 25.429t-17.429 66q0 13.714 79.429 51.429 25.143 13.714 37.143 21.143 36.571 22.857 82.857 64 46.286 40.571 60.571 57.714 32.571 39.429 32.571 80v18.286h365.714v-18.286q0-41.143 18.286-95.429t36.571-110.571 18.286-102.571zM877.714 474.857q0 76-39.429 184-33.714 93.714-33.714 127.429v164.571q0 30.286-21.429 51.714t-51.714 21.429h-365.714q-30.286 0-51.714-21.429t-21.429-51.714v-164.571q0-5.714-2.571-12.286t-8-13.429-10.286-12.857-12.857-13.714-12.286-11.714-12.286-10.857-9.714-8q-42.286-37.143-73.714-57.143-12-7.429-35.429-18.857t-41.143-21.143-36-23.143-28.286-31.429-10-39.714q0-71.429 38.286-118t108-46.571q38.857 0 73.143 12.571v-213.714q0-59.429 43.429-102.857t102.286-43.429q60 0 103.429 43.143t43.429 103.143v96.571q35.429 2.286 68 21.143 12-1.714 24.571-1.714 57.714 0 101.714 34.286 79.429-0.571 125.429 48.571t46 129.714z"
				],
				"attrs": [],
				"tags": [
					"hand-o-up"
				],
				"defaultCode": 61606,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 156,
				"order": 157,
				"prevSize": 28,
				"code": 61606,
				"name": "hand-o-up"
			},
			"setIdx": 0,
			"iconIdx": 174
		},
		{
			"icon": {
				"paths": [
					"M804.571 548.571q0-48-18.286-104.571t-36.571-110.857-18.286-95.429v-18.286h-365.714v18.286q0 20-6.857 38.571t-21.143 35.714-26.286 28.571-30.857 28q-5.143 4.571-8 6.857-46.286 41.143-82.857 64-12.571 8-38.857 21.714-1.714 0.571-12.857 6t-20.571 10.571-20.286 11.429-17.429 12.286-6.571 10.571q0 40.571 17.429 66t55.714 25.429q24.571 0 48.286-8.571t38.857-18.857 31.429-18.857 27.714-8.571v329.143q0 28.571 22 50.857t51.143 22.286q29.714 0 51.429-21.714t21.714-51.429v-189.143q26.286 20 58.857 20 39.429 0 68-30.286 18.286 10.286 39.429 10.286t42-10 30-27.143q13.714 2.286 32 2.286 48.571 0 72-27.714t23.429-77.429zM731.429 109.714q0-14.857-10.857-25.714t-25.714-10.857-25.714 10.857-10.857 25.714 10.857 25.714 25.714 10.857 25.714-10.857 10.857-25.714zM877.714 546.286q0 81.143-44.286 131.429t-124.286 49.714l-2.857-0.571q-43.429 34.857-101.714 34.857-12.571 0-24.571-1.714-30.857 17.143-68 21.143v96.571q0 60-43.429 103.143t-103.429 43.143q-58.857 0-102.286-43.429t-43.429-102.857v-213.714q-30.857 12.571-73.143 12.571-69.143 0-107.714-46.571t-38.571-118q0-21.714 10-39.714t28.286-31.429 36-23.143 41.143-21.143 35.429-18.857q31.429-20 73.714-57.143 1.714-1.143 9.714-8t12.286-10.857 12.286-11.714 12.857-13.714 10.286-12.857 8-13.429 2.571-12.286v-164.571q0-30.286 21.429-51.714t51.714-21.429h365.714q30.286 0 51.714 21.429t21.429 51.714v164.571q0 33.714 33.714 127.429 39.429 108.571 39.429 181.143z"
				],
				"attrs": [],
				"tags": [
					"hand-o-down"
				],
				"defaultCode": 61607,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 157,
				"order": 158,
				"prevSize": 28,
				"code": 61607,
				"name": "hand-o-down"
			},
			"setIdx": 0,
			"iconIdx": 175
		},
		{
			"icon": {
				"paths": [
					"M731.429 548.571v-73.143q0-14.857-10.857-25.714t-25.714-10.857h-286.857l108-108q10.857-10.857 10.857-25.714t-10.857-25.714l-52-52q-10.286-10.286-25.714-10.286t-25.714 10.286l-258.857 258.857q-10.286 10.286-10.286 25.714t10.286 25.714l258.857 258.857q10.286 10.286 25.714 10.286t25.714-10.286l52-52q10.286-10.286 10.286-25.714t-10.286-25.714l-108-108h286.857q14.857 0 25.714-10.857t10.857-25.714zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"arrow-circle-left"
				],
				"defaultCode": 61608,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 158,
				"order": 159,
				"prevSize": 28,
				"code": 61608,
				"name": "arrow-circle-left"
			},
			"setIdx": 0,
			"iconIdx": 176
		},
		{
			"icon": {
				"paths": [
					"M734.286 512q0-15.429-10.286-25.714l-258.857-258.857q-10.286-10.286-25.714-10.286t-25.714 10.286l-52 52q-10.286 10.286-10.286 25.714t10.286 25.714l108 108h-286.857q-14.857 0-25.714 10.857t-10.857 25.714v73.143q0 14.857 10.857 25.714t25.714 10.857h286.857l-108 108q-10.857 10.857-10.857 25.714t10.857 25.714l52 52q10.286 10.286 25.714 10.286t25.714-10.286l258.857-258.857q10.286-10.286 10.286-25.714zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"arrow-circle-right"
				],
				"defaultCode": 61609,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 159,
				"order": 160,
				"prevSize": 28,
				"code": 61609,
				"name": "arrow-circle-right"
			},
			"setIdx": 0,
			"iconIdx": 177
		},
		{
			"icon": {
				"paths": [
					"M733.714 511.429q0-15.429-10.286-25.714l-258.857-258.857q-10.286-10.286-25.714-10.286t-25.714 10.286l-258.857 258.857q-10.286 10.286-10.286 25.714t10.286 25.714l52 52q10.286 10.286 25.714 10.286t25.714-10.286l108-108v286.857q0 14.857 10.857 25.714t25.714 10.857h73.143q14.857 0 25.714-10.857t10.857-25.714v-286.857l108 108q10.857 10.857 25.714 10.857t25.714-10.857l52-52q10.286-10.286 10.286-25.714zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"arrow-circle-up"
				],
				"defaultCode": 61610,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 160,
				"order": 161,
				"prevSize": 28,
				"code": 61610,
				"name": "arrow-circle-up"
			},
			"setIdx": 0,
			"iconIdx": 178
		},
		{
			"icon": {
				"paths": [
					"M733.714 512.571q0-15.429-10.286-25.714l-52-52q-10.286-10.286-25.714-10.286t-25.714 10.286l-108 108v-286.857q0-14.857-10.857-25.714t-25.714-10.857h-73.143q-14.857 0-25.714 10.857t-10.857 25.714v286.857l-108-108q-10.857-10.857-25.714-10.857t-25.714 10.857l-52 52q-10.286 10.286-10.286 25.714t10.286 25.714l258.857 258.857q10.286 10.286 25.714 10.286t25.714-10.286l258.857-258.857q10.286-10.286 10.286-25.714zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"arrow-circle-down"
				],
				"defaultCode": 61611,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 161,
				"order": 162,
				"prevSize": 28,
				"code": 61611,
				"name": "arrow-circle-down"
			},
			"setIdx": 0,
			"iconIdx": 179
		},
		{
			"icon": {
				"paths": [
					"M438.857 73.143q119.429 0 220.286 58.857t159.714 159.714 58.857 220.286-58.857 220.286-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857zM595.429 370.857q-1.143 0.571-5.429 5.429t-7.714 5.429q1.143 0 2.571-2.857t2.857-6.286 2-4q3.429-4 12.571-8.571 8-3.429 29.714-6.857 19.429-4.571 29.143 6.286-1.143-1.143 5.429-7.429t8.286-6.857q1.714-1.143 8.571-2.571t8.571-4.286l1.143-12.571q-6.857 0.571-10-4t-3.714-12q0 1.143-3.429 4.571 0-4-2.571-4.571t-6.571 0.571-5.143 0.571q-5.714-1.714-8.571-4.286t-4.571-9.429-2.286-8.571q-1.143-2.857-5.429-6t-5.429-6q-0.571-1.143-1.429-3.143t-1.714-3.714-2.286-3.143-3.143-1.429-4 2.857-4.286 5.714-2.571 2.857q-1.714-1.143-3.429-0.857t-2.571 0.571-2.571 1.714-2.857 2q-1.714 1.143-4.857 1.714t-4.857 1.143q8.571-2.857-0.571-6.286-5.714-2.286-9.143-1.714 5.143-2.286 4.286-6.857t-4.857-8h2.857q-0.571-2.286-4.857-4.857t-10-4.857-7.429-3.429q-4.571-2.857-19.429-5.429t-18.857-0.286q-2.857 3.429-2.571 6t2.286 8 2 7.143q0.571 3.429-3.143 7.429t-3.714 6.857q0 4 8 8.857t5.714 12.286q-1.714 4.571-9.143 9.143t-9.143 6.857q-2.857 4.571-0.857 10.571t6 9.429q1.143 1.143 0.857 2.286t-2 2.571-3.143 2.286-3.714 2l-1.714 1.143q-6.286 2.857-11.714-3.429t-7.714-14.857q-4-14.286-9.143-17.143-13.143-4.571-16.571 0.571-2.857-7.429-23.429-14.857-14.286-5.143-33.143-2.286 3.429-0.571 0-8.571-4-8.571-10.857-6.857 1.714-3.429 2.286-10t0.571-7.714q1.714-7.429 6.857-13.143 0.571-0.571 4-4.857t5.429-7.714 0.286-3.429q20 2.286 28.571-6.286 2.857-2.857 6.571-9.714t6-9.714q5.143-3.429 8-3.143t8.286 3.143 8.286 2.857q8 0.571 8.857-6.286t-4.286-11.429q6.857 0.571 1.714-9.714-2.857-4-4.571-5.143-6.857-2.286-15.429 2.857-4.571 2.286 1.143 4.571-0.571-0.571-5.429 6t-9.429 10-9.143-2.857q-0.571-0.571-3.143-7.714t-5.429-7.714q-4.571 0-9.143 8.571 1.714-4.571-6.286-8.571t-13.714-4.571q10.857-6.857-4.571-15.429-4-2.286-11.714-2.857t-11.143 2.286q-2.857 4-3.143 6.571t2.857 4.571 6 3.143 6.571 2.286 4.857 1.714q8 5.714 4.571 8-1.143 0.571-4.857 2t-6.571 2.571-3.429 2.286q-1.714 2.286 0 8t-1.143 8q-2.857-2.857-5.143-10t-4-9.429q4 5.143-14.286 3.429l-5.714-0.571q-2.286 0-9.143 1.143t-11.714 0.571-7.714-4.571q-2.286-4.571 0-11.429 0.571-2.286 2.286-1.143-2.286-1.714-6.286-5.429t-5.714-4.857q-26.286 8.571-53.714 23.429 3.429 0.571 6.857-0.571 2.857-1.143 7.429-3.714t5.714-3.143q19.429-8 24-4l2.857-2.857q8 9.143 11.429 14.286-4-2.286-17.143-0.571-11.429 3.429-12.571 6.857 4 6.857 2.857 10.286-2.286-1.714-6.571-5.714t-8.286-6.286-8.571-2.857q-9.143 0-12.571 0.571-83.429 45.714-134.286 126.857 4 4 6.857 4.571 2.286 0.571 2.857 5.143t1.429 6.286 6.571-1.714q5.143 4.571 1.714 10.857 0.571-0.571 25.143 15.429 10.857 9.714 12 12 1.714 6.286-5.714 10.286-0.571-1.143-5.143-5.143t-5.143-2.286q-1.714 2.857 0.286 10.571t6 7.143q-4 0-5.429 9.143t-1.429 20.286-0.571 13.429l1.143 0.571q-1.714 6.857 3.143 19.714t12.286 11.143q-7.429 1.714 11.429 24.571 3.429 4.571 4.571 5.143 1.714 1.143 6.857 4.286t8.571 5.714 5.714 6q2.286 2.857 5.714 12.857t8 13.429q-1.143 3.429 5.429 11.429t6 13.143q-0.571 0-1.429 0.571t-1.429 0.571q1.714 4 8.857 8t8.857 7.429q0.571 1.714 1.143 5.714t1.714 6.286 4.571 1.143q1.143-11.429-13.714-35.429-8.571-14.286-9.714-16.571-1.714-2.857-3.143-8.857t-2.571-8.286q1.143 0 3.429 0.857t4.857 2 4.286 2.286 1.143 1.714q-1.714 4 1.143 10t6.857 10.571 9.714 10.857 6.857 7.429q3.429 3.429 8 11.143t0 7.714q5.143 0 11.429 5.714t9.714 11.429q2.857 4.571 4.571 14.857t2.857 13.714q1.143 4 4.857 7.714t7.143 5.429l9.143 4.571t7.429 4q2.857 1.143 10.571 6t12.286 6.571q5.714 2.286 9.143 2.286t8.286-1.429 7.714-2q8.571-1.143 16.571 8.571t12 12q20.571 10.857 31.429 6.286-1.143 0.571 0.286 4.286t4.571 8.857 5.143 8.286 3.143 4.857q2.857 3.429 10.286 8.571t10.286 8.571q3.429-2.286 4-5.143-1.714 4.571 4 11.429t10.286 5.714q8-1.714 8-18.286-17.714 8.571-28-10.286 0-0.571-1.429-3.143t-2.286-4.857-1.429-4.857 0-4.286 2.857-1.714q5.143 0 5.714-2t-1.143-7.143-2.286-7.429q-0.571-4.571-6.286-11.429t-6.857-8.571q-2.857 5.143-9.143 4.571t-9.143-5.143q0 0.571-0.857 3.143t-0.857 3.714q-7.429 0-8.571-0.571 0.571-1.714 1.429-10t2-12.857q0.571-2.286 3.143-6.857t4.286-8.286 2.286-7.143-2.571-5.429-10-1.429q-10.857 0.571-14.857 11.429-0.571 1.714-1.714 6t-2.857 6.571-5.143 4q-4 1.714-13.714 1.143t-13.714-2.857q-7.429-4.571-12.857-16.571t-5.429-21.143q0-5.714 1.429-15.143t1.714-14.286-3.143-14q1.714-1.143 5.143-5.429t5.714-6q1.143-0.571 2.571-0.857t2.571 0 2.286-0.857 1.714-3.429q-0.571-0.571-2.286-1.714-1.714-1.714-2.286-1.714 4 1.714 16.286-0.857t15.714 0.857q8.571 6.286 12.571-1.143 0-0.571-1.429-5.429t-0.286-7.714q2.857 15.429 16.571 5.143 1.714 1.714 8.857 2.857t10 2.857q1.714 1.143 4 3.143t3.143 2.571 2.857-0.286 4.857-3.714q5.714 8 6.857 13.714 6.286 22.857 10.857 25.143 4 1.714 6.286 1.143t2.571-5.429 0-8-0.857-7.143l-0.571-4.571v-10.286l-0.571-4.571q-8.571-1.714-10.571-6.857t0.857-10.571 8.571-10.571q0.571-0.571 4.571-2t8.857-3.714 7.143-4.571q12-10.857 8.571-20 4 0 6.286-5.143-0.571 0-2.857-1.714t-4.286-2.857-2.571-1.143q5.143-2.857 1.143-9.143 2.857-1.714 4.286-6.286t4.286-5.714q5.143 6.857 12 1.143 4-4.571 0.571-9.143 2.857-4 11.714-6t10.571-5.429q4 1.143 4.571-1.143t0.571-6.857 1.714-6.857q2.286-2.857 8.571-5.143t7.429-2.857l9.714-6.286q1.714-2.286 0-2.286 10.286 1.143 17.714-6.286 5.714-6.286-3.429-11.429 1.714-3.429-1.714-5.429t-8.571-3.143q1.714-0.571 6.571-0.286t6-0.857q8.571-5.714-4-9.143-9.714-2.857-24.571 6.857zM502.286 872q117.714-20.571 200.571-108-1.714-1.714-7.143-2.571t-7.143-2q-10.286-4-13.714-4.571 0.571-4-1.429-7.429t-4.571-5.143-7.143-4.571-6.286-4q-1.143-1.143-4-3.429t-4-3.143-4.286-2.571-4.857-1.143-5.714 0.571l-1.714 0.571q-1.714 0.571-3.143 1.429t-3.143 1.714-2.286 1.714 0 1.429q-12-9.714-20.571-12.571-2.857-0.571-6.286-3.143t-6-4-5.714-0.857-6.571 4q-2.857 2.857-3.429 8.571t-1.143 7.429q-4-2.857 0-10t1.143-10.571q-1.714-3.429-6-2.571t-6.857 2.571-6.571 4.857-5.143 3.714-4.857 3.143-4.857 4.286q-1.714 2.286-3.429 6.857t-2.857 6.286q-1.143-2.286-6.571-3.714t-5.429-3.143q1.143 5.714 2.286 20t2.857 21.714q4 17.714-6.857 27.429-15.429 14.286-16.571 22.857-2.286 12.571 6.857 14.857 0 4-4.571 11.714t-4 12.286q0 3.429 1.143 9.143z"
				],
				"attrs": [],
				"tags": [
					"globe"
				],
				"defaultCode": 61612,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 162,
				"order": 163,
				"prevSize": 28,
				"code": 61612,
				"name": "globe"
			},
			"setIdx": 0,
			"iconIdx": 180
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M219.429 841.143q0-14.857-10.857-25.714t-25.714-10.857-25.714 10.857-10.857 25.714 10.857 25.714 25.714 10.857 25.714-10.857 10.857-25.714zM587.429 601.143l-389.714 389.714q-21.143 21.143-51.429 21.143-29.714 0-52-21.143l-60.571-61.714q-21.714-20.571-21.714-51.429 0-30.286 21.714-52l389.143-389.143q22.286 56 65.429 99.143t99.143 65.429zM949.714 352.571q0 22.286-13.143 60.571-26.857 76.571-94 124.286t-147.714 47.714q-105.714 0-180.857-75.143t-75.143-180.857 75.143-180.857 180.857-75.143q33.143 0 69.429 9.429t61.429 26.571q9.143 6.286 9.143 16t-9.143 16l-167.429 96.571v128l110.286 61.143q2.857-1.714 45.143-27.714t77.429-46.286 40.286-20.286q8.571 0 13.429 5.714t4.857 14.286z"
				],
				"attrs": [],
				"tags": [
					"wrench"
				],
				"defaultCode": 61613,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 163,
				"order": 164,
				"prevSize": 28,
				"code": 61613,
				"name": "wrench"
			},
			"setIdx": 0,
			"iconIdx": 181
		},
		{
			"icon": {
				"paths": [
					"M585.143 804.571h365.714v-73.143h-365.714v73.143zM365.714 512h585.143v-73.143h-585.143v73.143zM731.429 219.429h219.429v-73.143h-219.429v73.143zM1024 694.857v146.286q0 14.857-10.857 25.714t-25.714 10.857h-950.857q-14.857 0-25.714-10.857t-10.857-25.714v-146.286q0-14.857 10.857-25.714t25.714-10.857h950.857q14.857 0 25.714 10.857t10.857 25.714zM1024 402.286v146.286q0 14.857-10.857 25.714t-25.714 10.857h-950.857q-14.857 0-25.714-10.857t-10.857-25.714v-146.286q0-14.857 10.857-25.714t25.714-10.857h950.857q14.857 0 25.714 10.857t10.857 25.714zM1024 109.714v146.286q0 14.857-10.857 25.714t-25.714 10.857h-950.857q-14.857 0-25.714-10.857t-10.857-25.714v-146.286q0-14.857 10.857-25.714t25.714-10.857h950.857q14.857 0 25.714 10.857t10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"tasks"
				],
				"defaultCode": 61614,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 164,
				"order": 165,
				"prevSize": 28,
				"code": 61614,
				"name": "tasks"
			},
			"setIdx": 0,
			"iconIdx": 182
		},
		{
			"icon": {
				"width": 805,
				"paths": [
					"M801.714 168.571q9.714 23.429-8 40l-281.714 281.714v424q0 24-22.286 33.714-7.429 2.857-14.286 2.857-15.429 0-25.714-10.857l-146.286-146.286q-10.857-10.857-10.857-25.714v-277.714l-281.714-281.714q-17.714-16.571-8-40 9.714-22.286 33.714-22.286h731.429q24 0 33.714 22.286z"
				],
				"attrs": [],
				"tags": [
					"filter"
				],
				"defaultCode": 61616,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 165,
				"order": 166,
				"prevSize": 28,
				"code": 61616,
				"name": "filter"
			},
			"setIdx": 0,
			"iconIdx": 183
		},
		{
			"icon": {
				"paths": [
					"M365.714 146.286h292.571v-73.143h-292.571v73.143zM1024 512v274.286q0 37.714-26.857 64.571t-64.571 26.857h-841.143q-37.714 0-64.571-26.857t-26.857-64.571v-274.286h384v91.429q0 14.857 10.857 25.714t25.714 10.857h182.857q14.857 0 25.714-10.857t10.857-25.714v-91.429h384zM585.143 512v73.143h-146.286v-73.143h146.286zM1024 237.714v219.429h-1024v-219.429q0-37.714 26.857-64.571t64.571-26.857h201.143v-91.429q0-22.857 16-38.857t38.857-16h329.143q22.857 0 38.857 16t16 38.857v91.429h201.143q37.714 0 64.571 26.857t26.857 64.571z"
				],
				"attrs": [],
				"tags": [
					"briefcase"
				],
				"defaultCode": 61617,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 166,
				"order": 167,
				"prevSize": 28,
				"code": 61617,
				"name": "briefcase"
			},
			"setIdx": 0,
			"iconIdx": 184
		},
		{
			"icon": {
				"paths": [
					"M733.143 309.143l-202.857 202.857 202.857 202.857 82.286-82.286q16.571-17.714 40-8 22.286 9.714 22.286 33.714v256q0 14.857-10.857 25.714t-25.714 10.857h-256q-24 0-33.714-22.857-9.714-22.286 8-39.429l82.286-82.286-202.857-202.857-202.857 202.857 82.286 82.286q17.714 17.143 8 39.429-9.714 22.857-33.714 22.857h-256q-14.857 0-25.714-10.857t-10.857-25.714v-256q0-24 22.857-33.714 22.286-9.714 39.429 8l82.286 82.286 202.857-202.857-202.857-202.857-82.286 82.286q-10.857 10.857-25.714 10.857-6.857 0-13.714-2.857-22.857-9.714-22.857-33.714v-256q0-14.857 10.857-25.714t25.714-10.857h256q24 0 33.714 22.857 9.714 22.286-8 39.429l-82.286 82.286 202.857 202.857 202.857-202.857-82.286-82.286q-17.714-17.143-8-39.429 9.714-22.857 33.714-22.857h256q14.857 0 25.714 10.857t10.857 25.714v256q0 24-22.286 33.714-7.429 2.857-14.286 2.857-14.857 0-25.714-10.857z"
				],
				"attrs": [],
				"tags": [
					"arrows-alt"
				],
				"defaultCode": 61618,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 167,
				"order": 168,
				"prevSize": 28,
				"code": 61618,
				"name": "arrows-alt"
			},
			"setIdx": 0,
			"iconIdx": 185
		},
		{
			"icon": {
				"width": 1097,
				"paths": [
					"M338.857 512q-92.571 2.857-151.429 73.143h-76.571q-46.857 0-78.857-23.143t-32-67.714q0-201.714 70.857-201.714 3.429 0 24.857 12t55.714 24.286 68 12.286q38.286 0 76-13.143-2.857 21.143-2.857 37.714 0 79.429 46.286 146.286zM950.857 876q0 68.571-41.714 108.286t-110.857 39.714h-499.429q-69.143 0-110.857-39.714t-41.714-108.286q0-30.286 2-59.143t8-62.286 15.143-62 24.571-55.714 35.429-46.286 48.857-30.571 63.714-11.429q5.714 0 24.571 12.286t41.714 27.429 61.143 27.429 77.143 12.286 77.143-12.286 61.143-27.429 41.714-27.429 24.571-12.286q34.857 0 63.714 11.429t48.857 30.571 35.429 46.286 24.571 55.714 15.143 62 8 62.286 2 59.143zM365.714 146.286q0 60.571-42.857 103.429t-103.429 42.857-103.429-42.857-42.857-103.429 42.857-103.429 103.429-42.857 103.429 42.857 42.857 103.429zM768 365.714q0 90.857-64.286 155.143t-155.143 64.286-155.143-64.286-64.286-155.143 64.286-155.143 155.143-64.286 155.143 64.286 64.286 155.143zM1097.143 494.286q0 44.571-32 67.714t-78.857 23.143h-76.571q-58.857-70.286-151.429-73.143 46.286-66.857 46.286-146.286 0-16.571-2.857-37.714 37.714 13.143 76 13.143 33.714 0 68-12.286t55.714-24.286 24.857-12q70.857 0 70.857 201.714zM1024 146.286q0 60.571-42.857 103.429t-103.429 42.857-103.429-42.857-42.857-103.429 42.857-103.429 103.429-42.857 103.429 42.857 42.857 103.429z"
				],
				"attrs": [],
				"tags": [
					"group",
					"users"
				],
				"defaultCode": 61632,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 168,
				"order": 169,
				"prevSize": 28,
				"code": 61632,
				"name": "group"
			},
			"setIdx": 0,
			"iconIdx": 186
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M832 694.857q0-22.857-16-38.857l-118.857-118.857q-16-16-38.857-16-24 0-41.143 18.286 1.714 1.714 10.857 10.571t12.286 12.286 8.571 10.857 7.429 14.571 2 15.714q0 22.857-16 38.857t-38.857 16q-8.571 0-15.714-2t-14.571-7.429-10.857-8.571-12.286-12.286-10.571-10.857q-18.857 17.714-18.857 41.714 0 22.857 16 38.857l117.714 118.286q15.429 15.429 38.857 15.429 22.857 0 38.857-14.857l84-83.429q16-16 16-38.286zM430.286 292q0-22.857-16-38.857l-117.714-118.286q-16-16-38.857-16-22.286 0-38.857 15.429l-84 83.429q-16 16-16 38.286 0 22.857 16 38.857l118.857 118.857q15.429 15.429 38.857 15.429 24 0 41.143-17.714-1.714-1.714-10.857-10.571t-12.286-12.286-8.571-10.857-7.429-14.571-2-15.714q0-22.857 16-38.857t38.857-16q8.571 0 15.714 2t14.571 7.429 10.857 8.571 12.286 12.286 10.571 10.857q18.857-17.714 18.857-41.714zM941.714 694.857q0 68.571-48.571 116l-84 83.429q-47.429 47.429-116 47.429-69.143 0-116.571-48.571l-117.714-118.286q-47.429-47.429-47.429-116 0-70.286 50.286-119.429l-50.286-50.286q-49.143 50.286-118.857 50.286-68.571 0-116.571-48l-118.857-118.857q-48-48-48-116.571t48.571-116l84-83.429q47.429-47.429 116-47.429 69.143 0 116.571 48.571l117.714 118.286q47.429 47.429 47.429 116 0 70.286-50.286 119.429l50.286 50.286q49.143-50.286 118.857-50.286 68.571 0 116.571 48l118.857 118.857q48 48 48 116.571z"
				],
				"attrs": [],
				"tags": [
					"chain",
					"link"
				],
				"defaultCode": 61633,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 169,
				"order": 170,
				"prevSize": 28,
				"code": 61633,
				"name": "chain"
			},
			"setIdx": 0,
			"iconIdx": 187
		},
		{
			"icon": {
				"width": 1097,
				"paths": [
					"M1097.143 658.286q0 90.857-64.286 155.143t-155.143 64.286h-621.714q-105.714 0-180.857-75.143t-75.143-180.857q0-75.429 40.571-138t106.857-93.429q-1.143-16-1.143-24.571 0-121.143 85.714-206.857t206.857-85.714q90.286 0 163.714 50.286t107.143 131.429q40-35.429 94.857-35.429 60.571 0 103.429 42.857t42.857 103.429q0 42.857-23.429 78.857 73.714 17.143 121.714 76.857t48 136.857z"
				],
				"attrs": [],
				"tags": [
					"cloud"
				],
				"defaultCode": 61634,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 170,
				"order": 171,
				"prevSize": 28,
				"code": 61634,
				"name": "cloud"
			},
			"setIdx": 0,
			"iconIdx": 188
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M872.571 827.429q32 50.857 12.286 87.143t-80.286 36.286h-658.286q-60.571 0-80.286-36.286t12.286-87.143l287.429-453.143v-228h-36.571q-14.857 0-25.714-10.857t-10.857-25.714 10.857-25.714 25.714-10.857h292.571q14.857 0 25.714 10.857t10.857 25.714-10.857 25.714-25.714 10.857h-36.571v228zM427.429 413.143l-155.429 245.143h406.857l-155.429-245.143-11.429-17.714v-249.143h-73.143v249.143z"
				],
				"attrs": [],
				"tags": [
					"flask"
				],
				"defaultCode": 61635,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 171,
				"order": 172,
				"prevSize": 28,
				"code": 61635,
				"name": "flask"
			},
			"setIdx": 0,
			"iconIdx": 189
		},
		{
			"icon": {
				"paths": [
					"M548.571 512q14.857 0 25.714 10.857t10.857 25.714-10.857 25.714-25.714 10.857-25.714-10.857-10.857-25.714 10.857-25.714 25.714-10.857zM720 548.571l289.714 227.429q16 11.429 14.286 32-2.857 20-20 29.143l-73.143 36.571q-7.429 4-16.571 4-9.714 0-17.714-4.571l-394.286-221.143-62.857 37.714q-4.571 2.286-6.857 2.857 8 28 5.714 55.429-4 44-32 84.286t-75.429 70.571q-75.429 48-158.286 48-77.714 0-126.857-44.571-51.429-48-45.143-118.286 4-43.429 32-84t74.857-70.857q75.429-48 158.857-48 47.429 0 86.286 17.714 5.143-7.429 12.571-12.571l69.714-41.714-69.714-41.714q-7.429-5.143-12.571-12.571-38.857 17.714-86.286 17.714-83.429 0-158.857-48-46.857-30.286-74.857-70.857t-32-84q-2.857-33.714 8.857-64.571t36.286-53.143q48.571-45.143 126.857-45.143 82.857 0 158.286 48 47.429 29.714 75.429 70.286t32 84.571q2.286 27.429-5.714 55.429 2.286 0.571 6.857 2.857l62.857 37.714 394.286-221.143q8-4.571 17.714-4.571 9.143 0 16.571 4l73.143 36.571q17.143 9.143 20 29.143 1.714 20.571-14.286 32zM330.857 400q26.286-24 12-61.714t-60.571-66.857q-52.571-33.714-109.714-33.714-42.286 0-64.571 20.571-26.286 24-12 61.714t60.571 66.857q52.571 33.714 109.714 33.714 42.286 0 64.571-20.571zM282.286 825.714q46.286-29.143 60.571-66.857t-12-61.714q-22.286-20.571-64.571-20.571-57.143 0-109.714 33.714-46.286 29.143-60.571 66.857t12 61.714q22.286 20.571 64.571 20.571 57.143 0 109.714-33.714zM384 475.429l54.857 33.143v-6.286q0-20.571 18.857-32l8-4.571-45.143-26.857-14.857 14.857q-1.714 1.714-5.714 6.286t-6.857 6.857q-1.143 1.143-2.286 2t-1.714 1.429zM512 603.429l54.857 18.286 420.571-329.143-73.143-36.571-438.857 246.286v64.571l-91.429 54.857 5.143 4.571q1.143 1.143 4 3.429 2.286 2.286 6.286 6.857t6.286 6.857l14.857 14.857zM914.286 841.143l73.143-36.571-297.143-233.143-101.143 78.857q-1.143 1.714-7.429 4z"
				],
				"attrs": [],
				"tags": [
					"cut",
					"scissors"
				],
				"defaultCode": 61636,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 172,
				"order": 173,
				"prevSize": 28,
				"code": 61636,
				"name": "cut"
			},
			"setIdx": 0,
			"iconIdx": 190
		},
		{
			"icon": {
				"paths": [
					"M969.143 219.429q22.857 0 38.857 16t16 38.857v694.857q0 22.857-16 38.857t-38.857 16h-548.571q-22.857 0-38.857-16t-16-38.857v-164.571h-310.857q-22.857 0-38.857-16t-16-38.857v-384q0-22.857 11.429-50.286t27.429-43.429l233.143-233.143q16-16 43.429-27.429t50.286-11.429h237.714q22.857 0 38.857 16t16 38.857v187.429q38.857-22.857 73.143-22.857h237.714zM658.286 341.143l-170.857 170.857h170.857v-170.857zM292.571 121.714l-170.857 170.857h170.857v-170.857zM404.571 491.429l180.571-180.571v-237.714h-219.429v237.714q0 22.857-16 38.857t-38.857 16h-237.714v365.714h292.571v-146.286q0-22.857 11.429-50.286t27.429-43.429zM950.857 950.857v-658.286h-219.429v237.714q0 22.857-16 38.857t-38.857 16h-237.714v365.714h512z"
				],
				"attrs": [],
				"tags": [
					"copy",
					"files-o"
				],
				"defaultCode": 61637,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 173,
				"order": 174,
				"prevSize": 28,
				"code": 61637,
				"name": "copy"
			},
			"setIdx": 0,
			"iconIdx": 191
		},
		{
			"icon": {
				"width": 805,
				"paths": [
					"M802.286 791.429q0 66.857-45.143 112t-112 45.143q-77.143 0-134.286-57.143l-444-443.429q-64.571-65.714-64.571-154.857 0-90.857 62.857-154.286t153.714-63.429q90.286 0 156 64.571l345.714 346.286q5.714 5.714 5.714 12.571 0 9.143-17.429 26.571t-26.571 17.429q-7.429 0-13.143-5.714l-346.286-346.857q-45.143-44-103.429-44-60.571 0-102.286 42.857t-41.714 103.429q0 60 43.429 103.429l443.429 444q36 36 82.857 36 36.571 0 60.571-24t24-60.571q0-46.857-36-82.857l-332-332q-14.857-13.714-34.286-13.714-16.571 0-27.429 10.857t-10.857 27.429q0 18.286 14.286 33.714l234.286 234.286q5.714 5.714 5.714 12.571 0 9.143-17.714 26.857t-26.857 17.714q-6.857 0-12.571-5.714l-234.286-234.286q-36-34.857-36-85.143 0-46.857 32.571-79.429t79.429-32.571q50.286 0 85.143 36l332 332q57.143 56 57.143 134.286z"
				],
				"attrs": [],
				"tags": [
					"paperclip"
				],
				"defaultCode": 61638,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 174,
				"order": 175,
				"prevSize": 28,
				"code": 61638,
				"name": "paperclip"
			},
			"setIdx": 0,
			"iconIdx": 192
		},
		{
			"icon": {
				"paths": [
					"M219.429 877.714h438.857v-219.429h-438.857v219.429zM731.429 877.714h73.143v-512q0-8-5.714-22t-11.429-19.714l-160.571-160.571q-5.714-5.714-19.429-11.429t-22.286-5.714v237.714q0 22.857-16 38.857t-38.857 16h-329.143q-22.857 0-38.857-16t-16-38.857v-237.714h-73.143v731.429h73.143v-237.714q0-22.857 16-38.857t38.857-16h475.429q22.857 0 38.857 16t16 38.857v237.714zM512 347.429v-182.857q0-7.429-5.429-12.857t-12.857-5.429h-109.714q-7.429 0-12.857 5.429t-5.429 12.857v182.857q0 7.429 5.429 12.857t12.857 5.429h109.714q7.429 0 12.857-5.429t5.429-12.857zM877.714 365.714v530.286q0 22.857-16 38.857t-38.857 16h-768q-22.857 0-38.857-16t-16-38.857v-768q0-22.857 16-38.857t38.857-16h530.286q22.857 0 50.286 11.429t43.429 27.429l160 160q16 16 27.429 43.429t11.429 50.286z"
				],
				"attrs": [],
				"tags": [
					"floppy-o",
					"save"
				],
				"defaultCode": 61639,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 175,
				"order": 176,
				"prevSize": 28,
				"code": 61639,
				"name": "floppy-o"
			},
			"setIdx": 0,
			"iconIdx": 193
		},
		{
			"icon": {
				"paths": [
					"M877.714 237.714v548.571q0 68-48.286 116.286t-116.286 48.286h-548.571q-68 0-116.286-48.286t-48.286-116.286v-548.571q0-68 48.286-116.286t116.286-48.286h548.571q68 0 116.286 48.286t48.286 116.286z"
				],
				"attrs": [],
				"tags": [
					"square"
				],
				"defaultCode": 61640,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 176,
				"order": 177,
				"prevSize": 28,
				"code": 61640,
				"name": "square"
			},
			"setIdx": 0,
			"iconIdx": 194
		},
		{
			"icon": {
				"paths": [
					"M877.714 768v73.143q0 14.857-10.857 25.714t-25.714 10.857h-804.571q-14.857 0-25.714-10.857t-10.857-25.714v-73.143q0-14.857 10.857-25.714t25.714-10.857h804.571q14.857 0 25.714 10.857t10.857 25.714zM877.714 475.429v73.143q0 14.857-10.857 25.714t-25.714 10.857h-804.571q-14.857 0-25.714-10.857t-10.857-25.714v-73.143q0-14.857 10.857-25.714t25.714-10.857h804.571q14.857 0 25.714 10.857t10.857 25.714zM877.714 182.857v73.143q0 14.857-10.857 25.714t-25.714 10.857h-804.571q-14.857 0-25.714-10.857t-10.857-25.714v-73.143q0-14.857 10.857-25.714t25.714-10.857h804.571q14.857 0 25.714 10.857t10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"bars",
					"navicon",
					"reorder"
				],
				"defaultCode": 61641,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 177,
				"order": 178,
				"prevSize": 28,
				"code": 61641,
				"name": "bars"
			},
			"setIdx": 0,
			"iconIdx": 195
		},
		{
			"icon": {
				"paths": [
					"M219.429 804.571q0 45.714-32 77.714t-77.714 32-77.714-32-32-77.714 32-77.714 77.714-32 77.714 32 32 77.714zM219.429 512q0 45.714-32 77.714t-77.714 32-77.714-32-32-77.714 32-77.714 77.714-32 77.714 32 32 77.714zM1024 749.714v109.714q0 7.429-5.429 12.857t-12.857 5.429h-694.857q-7.429 0-12.857-5.429t-5.429-12.857v-109.714q0-7.429 5.429-12.857t12.857-5.429h694.857q7.429 0 12.857 5.429t5.429 12.857zM219.429 219.429q0 45.714-32 77.714t-77.714 32-77.714-32-32-77.714 32-77.714 77.714-32 77.714 32 32 77.714zM1024 457.143v109.714q0 7.429-5.429 12.857t-12.857 5.429h-694.857q-7.429 0-12.857-5.429t-5.429-12.857v-109.714q0-7.429 5.429-12.857t12.857-5.429h694.857q7.429 0 12.857 5.429t5.429 12.857zM1024 164.571v109.714q0 7.429-5.429 12.857t-12.857 5.429h-694.857q-7.429 0-12.857-5.429t-5.429-12.857v-109.714q0-7.429 5.429-12.857t12.857-5.429h694.857q7.429 0 12.857 5.429t5.429 12.857z"
				],
				"attrs": [],
				"tags": [
					"list-ul"
				],
				"defaultCode": 61642,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 178,
				"order": 179,
				"prevSize": 28,
				"code": 61642,
				"name": "list-ul"
			},
			"setIdx": 0,
			"iconIdx": 196
		},
		{
			"icon": {
				"paths": [
					"M217.714 925.714q0 45.714-31.143 72t-77.429 26.286q-60.571 0-98.286-37.714l32.571-50.286q28 25.714 60.571 25.714 16.571 0 28.857-8.286t12.286-24.286q0-36.571-60-32l-14.857-32q4.571-5.714 18.571-24.857t24.286-30.857 21.143-22v-0.571q-9.143 0-27.714 0.571t-27.714 0.571v30.286h-60.571v-86.857h190.286v50.286l-54.286 65.714q29.143 6.857 46.286 28t17.143 50.286zM218.857 567.429v90.857h-206.857q-3.429-20.571-3.429-30.857 0-29.143 13.429-53.143t32.286-38.857 37.714-27.143 32.286-24.857 13.429-25.714q0-14.286-8.286-22t-22.571-7.714q-26.286 0-46.286 33.143l-48.571-33.714q13.714-29.143 40.857-45.429t60.286-16.286q41.714 0 70.286 23.714t28.571 64.286q0 28.571-19.429 52.286t-42.857 36.857-43.143 28.857-20.286 30h72.571v-34.286h60zM1024 749.714v109.714q0 7.429-5.429 12.857t-12.857 5.429h-694.857q-7.429 0-12.857-5.429t-5.429-12.857v-109.714q0-8 5.143-13.143t13.143-5.143h694.857q7.429 0 12.857 5.429t5.429 12.857zM219.429 236v56.571h-191.429v-56.571h61.143q0-23.429 0.286-69.714t0.286-69.143v-6.857h-1.143q-4.571 9.714-28.571 30.857l-40.571-43.429 77.714-72.571h60.571v230.857h61.714zM1024 457.143v109.714q0 7.429-5.429 12.857t-12.857 5.429h-694.857q-7.429 0-12.857-5.429t-5.429-12.857v-109.714q0-8 5.143-13.143t13.143-5.143h694.857q7.429 0 12.857 5.429t5.429 12.857zM1024 164.571v109.714q0 7.429-5.429 12.857t-12.857 5.429h-694.857q-7.429 0-12.857-5.429t-5.429-12.857v-109.714q0-7.429 5.429-12.857t12.857-5.429h694.857q7.429 0 12.857 5.429t5.429 12.857z"
				],
				"attrs": [],
				"tags": [
					"list-ol"
				],
				"defaultCode": 61643,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 179,
				"order": 180,
				"prevSize": 28,
				"code": 61643,
				"name": "list-ol"
			},
			"setIdx": 0,
			"iconIdx": 197
		},
		{
			"icon": {
				"paths": [
					"M1005.714 512q8 0 13.143 5.143t5.143 13.143v36.571q0 8-5.143 13.143t-13.143 5.143h-987.429q-8 0-13.143-5.143t-5.143-13.143v-36.571q0-8 5.143-13.143t13.143-5.143h987.429zM276 475.429q-16-20-29.143-45.714-27.429-55.429-27.429-107.429 0-103.429 76.571-176.571 76-72.571 224.571-72.571 28.571 0 95.429 10.857 37.714 6.857 101.143 27.429 5.714 21.714 12 67.429 8 70.286 8 104.571 0 10.286-2.857 25.714l-6.857 1.714-48-3.429-8-1.143q-28.571-85.143-58.857-117.143-50.286-52-120-52-65.143 0-104 33.714-38.286 33.143-38.286 83.429 0 41.714 37.714 80t159.429 73.714q39.429 11.429 98.857 37.714 33.143 16 54.286 29.714h-424.571zM565.714 621.714h234.857q4 22.286 4 52.571 0 63.429-23.429 121.143-13.143 31.429-40.571 59.429-21.143 20-62.286 46.286-45.714 27.429-87.429 37.714-45.714 12-116 12-65.143 0-111.429-13.143l-80-22.857q-32.571-9.143-41.143-16-4.571-4.571-4.571-12.571v-7.429q0-61.714-1.143-89.143-0.571-17.143 0-38.857l1.143-21.143v-25.143l58.286-1.143q8.571 19.429 17.143 40.571t12.857 32 7.143 15.429q20 32.571 45.714 53.714 24.571 20.571 60 32.571 33.714 12.571 75.429 12.571 36.571 0 79.429-15.429 44-14.857 69.714-49.143 26.857-34.857 26.857-73.714 0-48-46.286-89.714-19.429-16.571-78.286-40.571z"
				],
				"attrs": [],
				"tags": [
					"strikethrough"
				],
				"defaultCode": 61644,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 180,
				"order": 181,
				"prevSize": 28,
				"code": 61644,
				"name": "strikethrough"
			},
			"setIdx": 0,
			"iconIdx": 198
		},
		{
			"icon": {
				"paths": [
					"M27.429 127.429q-21.143-1.143-25.714-2.286l-1.714-50.286q7.429-0.571 22.857-0.571 34.286 0 64 2.286 75.429 4 94.857 4 49.143 0 96-1.714 66.286-2.286 83.429-2.857 32 0 49.143-1.143l-0.571 8 1.143 36.571v5.143q-34.286 5.143-70.857 5.143-34.286 0-45.143 14.286-7.429 8-7.429 75.429 0 7.429 0.286 18.571t0.286 14.571l0.571 130.857 8 160q3.429 70.857 29.143 115.429 20 33.714 54.857 52.571 50.286 26.857 101.143 26.857 59.429 0 109.143-16 32-10.286 56.571-29.143 27.429-20.571 37.143-36.571 20.571-32 30.286-65.143 12-41.714 12-130.857 0-45.143-2-73.143t-6.286-70-7.714-91.143l-2.286-33.714q-2.857-38.286-13.714-50.286-19.429-20-44-19.429l-57.143 1.143-8-1.714 1.143-49.143h48l117.143 5.714q43.429 1.714 112-5.714l10.286 1.143q3.429 21.714 3.429 29.143 0 4-2.286 17.714-25.714 6.857-48 7.429-41.714 6.286-45.143 9.714-8.571 8.571-8.571 23.429 0 4 0.857 15.429t0.857 17.714q4.571 10.857 12.571 226.286 3.429 111.429-8.571 173.714-8.571 43.429-23.429 69.714-21.714 37.143-64 70.286-42.857 32.571-104 50.857-62.286 18.857-145.714 18.857-95.429 0-162.286-26.286-68-26.857-102.286-69.714-34.857-43.429-47.429-111.429-9.143-45.714-9.143-135.429v-190.286q0-107.429-9.714-121.714-14.286-20.571-84-22.286zM877.714 932.571v-36.571q0-8-5.143-13.143t-13.143-5.143h-841.143q-8 0-13.143 5.143t-5.143 13.143v36.571q0 8 5.143 13.143t13.143 5.143h841.143q8 0 13.143-5.143t5.143-13.143z"
				],
				"attrs": [],
				"tags": [
					"underline"
				],
				"defaultCode": 61645,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 181,
				"order": 182,
				"prevSize": 28,
				"code": 61645,
				"name": "underline"
			},
			"setIdx": 0,
			"iconIdx": 199
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M292.571 786.286v-109.714q0-8-5.143-13.143t-13.143-5.143h-182.857q-8 0-13.143 5.143t-5.143 13.143v109.714q0 8 5.143 13.143t13.143 5.143h182.857q8 0 13.143-5.143t5.143-13.143zM292.571 566.857v-109.714q0-8-5.143-13.143t-13.143-5.143h-182.857q-8 0-13.143 5.143t-5.143 13.143v109.714q0 8 5.143 13.143t13.143 5.143h182.857q8 0 13.143-5.143t5.143-13.143zM585.143 786.286v-109.714q0-8-5.143-13.143t-13.143-5.143h-182.857q-8 0-13.143 5.143t-5.143 13.143v109.714q0 8 5.143 13.143t13.143 5.143h182.857q8 0 13.143-5.143t5.143-13.143zM292.571 347.429v-109.714q0-8-5.143-13.143t-13.143-5.143h-182.857q-8 0-13.143 5.143t-5.143 13.143v109.714q0 8 5.143 13.143t13.143 5.143h182.857q8 0 13.143-5.143t5.143-13.143zM585.143 566.857v-109.714q0-8-5.143-13.143t-13.143-5.143h-182.857q-8 0-13.143 5.143t-5.143 13.143v109.714q0 8 5.143 13.143t13.143 5.143h182.857q8 0 13.143-5.143t5.143-13.143zM877.714 786.286v-109.714q0-8-5.143-13.143t-13.143-5.143h-182.857q-8 0-13.143 5.143t-5.143 13.143v109.714q0 8 5.143 13.143t13.143 5.143h182.857q8 0 13.143-5.143t5.143-13.143zM585.143 347.429v-109.714q0-8-5.143-13.143t-13.143-5.143h-182.857q-8 0-13.143 5.143t-5.143 13.143v109.714q0 8 5.143 13.143t13.143 5.143h182.857q8 0 13.143-5.143t5.143-13.143zM877.714 566.857v-109.714q0-8-5.143-13.143t-13.143-5.143h-182.857q-8 0-13.143 5.143t-5.143 13.143v109.714q0 8 5.143 13.143t13.143 5.143h182.857q8 0 13.143-5.143t5.143-13.143zM877.714 347.429v-109.714q0-8-5.143-13.143t-13.143-5.143h-182.857q-8 0-13.143 5.143t-5.143 13.143v109.714q0 8 5.143 13.143t13.143 5.143h182.857q8 0 13.143-5.143t5.143-13.143zM950.857 164.571v621.714q0 37.714-26.857 64.571t-64.571 26.857h-768q-37.714 0-64.571-26.857t-26.857-64.571v-621.714q0-37.714 26.857-64.571t64.571-26.857h768q37.714 0 64.571 26.857t26.857 64.571z"
				],
				"attrs": [],
				"tags": [
					"table"
				],
				"defaultCode": 61646,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 182,
				"order": 183,
				"prevSize": 28,
				"code": 61646,
				"name": "table"
			},
			"setIdx": 0,
			"iconIdx": 200
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M680 332l167.429-167.429-61.143-61.143-167.429 167.429zM935.429 164.571q0 15.429-10.286 25.714l-734.857 734.857q-10.286 10.286-25.714 10.286t-25.714-10.286l-113.143-113.143q-10.286-10.286-10.286-25.714t10.286-25.714l734.857-734.857q10.286-10.286 25.714-10.286t25.714 10.286l113.143 113.143q10.286 10.286 10.286 25.714zM163.429 56l56 17.143-56 17.143-17.143 56-17.143-56-56-17.143 56-17.143 17.143-56zM363.429 148.571l112 34.286-112 34.286-34.286 112-34.286-112-112-34.286 112-34.286 34.286-112zM894.857 421.714l56 17.143-56 17.143-17.143 56-17.143-56-56-17.143 56-17.143 17.143-56zM529.143 56l56 17.143-56 17.143-17.143 56-17.143-56-56-17.143 56-17.143 17.143-56z"
				],
				"attrs": [],
				"tags": [
					"magic"
				],
				"defaultCode": 61648,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 183,
				"order": 184,
				"prevSize": 28,
				"code": 61648,
				"name": "magic"
			},
			"setIdx": 0,
			"iconIdx": 201
		},
		{
			"icon": {
				"paths": [
					"M365.714 804.571q0-29.714-21.714-51.429t-51.429-21.714-51.429 21.714-21.714 51.429 21.714 51.429 51.429 21.714 51.429-21.714 21.714-51.429zM146.286 512h219.429v-146.286h-90.286q-7.429 0-12.571 5.143l-111.429 111.429q-5.143 5.143-5.143 12.571v17.143zM877.714 804.571q0-29.714-21.714-51.429t-51.429-21.714-51.429 21.714-21.714 51.429 21.714 51.429 51.429 21.714 51.429-21.714 21.714-51.429zM1024 182.857v585.143q0 8.571-2.286 15.143t-7.714 10.571-9.429 6.571-13.429 3.429-12.857 1.143-14.571 0-12.857-0.286q0 60.571-42.857 103.429t-103.429 42.857-103.429-42.857-42.857-103.429h-219.429q0 60.571-42.857 103.429t-103.429 42.857-103.429-42.857-42.857-103.429h-36.571q-1.714 0-12.857 0.286t-14.571 0-12.857-1.143-13.429-3.429-9.429-6.571-7.714-10.571-2.286-15.143q0-14.857 10.857-25.714t25.714-10.857v-182.857q0-4.571-0.286-20t0-21.714 1.429-19.714 3.714-21.143 8-17.429 12.857-17.143l113.143-113.143q10.857-10.857 28.857-18.286t33.429-7.429h91.429v-109.714q0-14.857 10.857-25.714t25.714-10.857h585.143q14.857 0 25.714 10.857t10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"truck"
				],
				"defaultCode": 61649,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 184,
				"order": 185,
				"prevSize": 28,
				"code": 61649,
				"name": "truck"
			},
			"setIdx": 0,
			"iconIdx": 202
		},
		{
			"icon": {
				"paths": [
					"M877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857q-63.429 0-124.571-18.286 33.714-53.143 44.571-93.714 5.143-19.429 30.857-120.571 11.429 22.286 41.714 38.571t65.143 16.286q69.143 0 123.429-39.143t84-107.714 29.714-154.286q0-65.143-34-122.286t-98.571-93.143-145.714-36q-60 0-112 16.571t-88.286 44-62.286 63.143-38.286 74-12.286 76.571q0 59.429 22.857 104.571t66.857 63.429q17.143 6.857 21.714-11.429 1.143-4 4.571-17.714t4.571-17.143q3.429-13.143-6.286-24.571-29.143-34.857-29.143-86.286 0-86.286 59.714-148.286t156.286-62q86.286 0 134.571 46.857t48.286 121.714q0 97.143-39.143 165.143t-100.286 68q-34.857 0-56-24.857t-13.143-59.714q4.571-20 15.143-53.429t17.143-58.857 6.571-43.143q0-28.571-15.429-47.429t-44-18.857q-35.429 0-60 32.571t-24.571 81.143q0 41.714 14.286 69.714l-56.571 238.857q-9.714 40-7.429 101.143-117.714-52-190.286-160.571t-72.571-241.714q0-119.429 58.857-220.286t159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"pinterest"
				],
				"defaultCode": 61650,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 185,
				"order": 186,
				"prevSize": 28,
				"code": 61650,
				"name": "pinterest"
			},
			"setIdx": 0,
			"iconIdx": 203
		},
		{
			"icon": {
				"paths": [
					"M713.143 73.143q68 0 116.286 48.286t48.286 116.286v548.571q0 68-48.286 116.286t-116.286 48.286h-414.286q48.571-69.714 61.714-120 5.143-19.429 30.286-119.429 12 22.286 42 38.286t64.286 16q103.429 0 168.857-84.286t65.429-213.429q0-48-20-92.857t-55.143-79.429-87.143-55.429-112.571-20.857q-59.429 0-111.143 16.286t-87.429 43.714-61.429 62.571-38 73.143-12.286 75.714q0 58.286 22.571 102.857t66.571 62.857q7.429 2.857 13.429 0t8.286-10.857q5.714-25.143 8.571-34.857 3.429-13.143-6.286-24-28.571-35.429-28.571-85.714 0-85.714 59.143-146.571t154.571-60.857q85.143 0 132.857 46.286t47.714 120q0 96-38.571 163.429t-99.143 67.429q-34.286 0-55.429-24.857t-13.143-59.143q4.571-19.429 15.143-52.857t16.857-58.286 6.286-42.571q0-28-15.143-46.571t-43.143-18.571q-34.857 0-59.143 32.286t-24.286 79.714q0 41.143 13.714 69.143l-56 236.571q-13.714 57.143-4 145.143h-104.571q-68 0-116.286-48.286t-48.286-116.286v-548.571q0-68 48.286-116.286t116.286-48.286h548.571z"
				],
				"attrs": [],
				"tags": [
					"pinterest-square"
				],
				"defaultCode": 61651,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 186,
				"order": 187,
				"prevSize": 28,
				"code": 61651,
				"name": "pinterest-square"
			},
			"setIdx": 0,
			"iconIdx": 204
		},
		{
			"icon": {
				"paths": [
					"M473.714 696q0 43.429-33.429 64.286t-79.714 20.857q-23.429 0-46-5.429t-43.143-16.286-33.143-30.286-12.571-44.571q0-26.286 14.286-45.714t37.429-29.429 46.857-14.286 48.286-4.286q11.429 0 17.714 1.143 1.143 0.571 13.143 9.429t14.857 10.857 13.143 10.286 14 12.571 10.857 12.857 9.714 14.857 5.143 15.143 2.571 18zM431.429 384.571q0 34.286-18.857 56.857t-52.571 22.571q-30.286 0-53.143-24.286t-32.857-55.143-10-60.571q0-34.857 18.286-59.429t52.571-24.571q30.286 0 53.429 25.714t33.143 57.714 10 61.143zM492 237.714l50.286-36.571h-151.429q-48.571 0-92 18.286t-72.857 56-29.429 87.429q0 53.143 36.857 88.286t90.571 35.143q12.571 0 24.571-1.714-7.429 16.571-7.429 30.857 0 25.143 22.857 53.714-100 6.857-146.857 36-26.857 16.571-43.143 41.714t-16.286 54.286q0 24.571 10.571 44.286t27.714 32.286 39.429 21.143 44.286 12 43.714 3.429q34.286 0 68.857-8.857t64.857-26.286 49.143-47.143 18.857-66.857q0-28-11.429-51.143t-28-38-33.143-27.143-28-25.143-11.429-25.429 8.857-24.286 21.429-22.571 25.143-24 21.429-34 8.857-47.143q0-34.286-12.857-56.857t-41.429-51.714h47.429zM658.286 493.714h73.143v-36.571h-73.143v-73.143h-36.571v73.143h-73.143v36.571h73.143v91.429h36.571v-91.429zM877.714 237.714v548.571q0 68-48.286 116.286t-116.286 48.286h-548.571q-68 0-116.286-48.286t-48.286-116.286v-548.571q0-68 48.286-116.286t116.286-48.286h548.571q68 0 116.286 48.286t48.286 116.286z"
				],
				"attrs": [],
				"tags": [
					"google-plus-square"
				],
				"defaultCode": 61652,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 187,
				"order": 188,
				"prevSize": 28,
				"code": 61652,
				"name": "google-plus-square"
			},
			"setIdx": 0,
			"iconIdx": 205
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M420 454.857q0 20.571 18.286 40.286t44.286 38.857 51.714 42 44 59.429 18.286 81.143q0 51.429-27.429 98.857-41.143 69.714-120.571 102.571t-170.286 32.857q-75.429 0-140.857-23.714t-98-78.571q-21.143-34.286-21.143-74.857 0-46.286 25.429-85.714t67.714-65.714q74.857-46.857 230.857-57.143-18.286-24-27.143-42.286t-8.857-41.714q0-20.571 12-48.571-26.286 2.286-38.857 2.286-84.571 0-142.571-55.143t-58-139.714q0-46.857 20.571-90.857t56.571-74.857q44-37.714 104.286-56t124.286-18.286h238.857l-78.857 50.286h-74.857q42.286 36 64 76t21.714 91.429q0 41.143-14 74t-33.714 53.143-39.714 37.143-34 35.143-14 37.714zM336.571 400q21.714 0 44.571-9.429t37.714-24.857q30.286-32.571 30.286-90.857 0-33.143-9.714-71.429t-27.714-74-48.286-59.143-66.857-23.429q-24 0-47.143 11.143t-37.429 30q-26.857 33.714-26.857 91.429 0 26.286 5.714 55.714t18 58.857 29.714 52.857 42.857 38.286 55.143 14.857zM337.714 898.857q33.143 0 63.714-7.429t56.571-22.286 41.714-41.714 15.714-62.286q0-14.286-4-28t-8.286-24-15.429-23.714-16.857-20-22-19.714-20.857-16.571-23.714-17.143-20.857-14.857q-9.143-1.143-27.429-1.143-30.286 0-60 4t-61.429 14.286-55.429 26.286-39.143 42.571-15.429 60.286q0 40 20 70.571t52.286 47.429 68 25.143 72.857 8.286zM800.571 398.286h121.714v61.714h-121.714v125.143h-60v-125.143h-121.143v-61.714h121.143v-124h60v124z"
				],
				"attrs": [],
				"tags": [
					"google-plus"
				],
				"defaultCode": 61653,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 188,
				"order": 189,
				"prevSize": 28,
				"code": 61653,
				"name": "google-plus"
			},
			"setIdx": 0,
			"iconIdx": 206
		},
		{
			"icon": {
				"width": 1097,
				"paths": [
					"M438.857 658.286h219.429v-54.857h-73.143v-256h-65.143l-84.571 78.286 44 45.714q24-21.143 31.429-32.571h1.143v164.571h-73.143v54.857zM731.429 512q0 40-12 81.143t-34 76.571-58 57.714-78.857 22.286-78.857-22.286-58-57.714-34-76.571-12-81.143 12-81.143 34-76.571 58-57.714 78.857-22.286 78.857 22.286 58 57.714 34 76.571 12 81.143zM1024 658.286v-292.571q-60.571 0-103.429-42.857t-42.857-103.429h-658.286q0 60.571-42.857 103.429t-103.429 42.857v292.571q60.571 0 103.429 42.857t42.857 103.429h658.286q0-60.571 42.857-103.429t103.429-42.857zM1097.143 182.857v658.286q0 14.857-10.857 25.714t-25.714 10.857h-1024q-14.857 0-25.714-10.857t-10.857-25.714v-658.286q0-14.857 10.857-25.714t25.714-10.857h1024q14.857 0 25.714 10.857t10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"money"
				],
				"defaultCode": 61654,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 189,
				"order": 190,
				"prevSize": 28,
				"code": 61654,
				"name": "money"
			},
			"setIdx": 0,
			"iconIdx": 207
		},
		{
			"icon": {
				"width": 585,
				"paths": [
					"M585.143 402.286q0 14.857-10.857 25.714l-256 256q-10.857 10.857-25.714 10.857t-25.714-10.857l-256-256q-10.857-10.857-10.857-25.714t10.857-25.714 25.714-10.857h512q14.857 0 25.714 10.857t10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"caret-down"
				],
				"defaultCode": 61655,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 190,
				"order": 191,
				"prevSize": 28,
				"code": 61655,
				"name": "caret-down"
			},
			"setIdx": 0,
			"iconIdx": 208
		},
		{
			"icon": {
				"width": 585,
				"paths": [
					"M585.143 694.857q0 14.857-10.857 25.714t-25.714 10.857h-512q-14.857 0-25.714-10.857t-10.857-25.714 10.857-25.714l256-256q10.857-10.857 25.714-10.857t25.714 10.857l256 256q10.857 10.857 10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"caret-up"
				],
				"defaultCode": 61656,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 191,
				"order": 192,
				"prevSize": 28,
				"code": 61656,
				"name": "caret-up"
			},
			"setIdx": 0,
			"iconIdx": 209
		},
		{
			"icon": {
				"width": 366,
				"paths": [
					"M365.714 256v512q0 14.857-10.857 25.714t-25.714 10.857-25.714-10.857l-256-256q-10.857-10.857-10.857-25.714t10.857-25.714l256-256q10.857-10.857 25.714-10.857t25.714 10.857 10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"caret-left"
				],
				"defaultCode": 61657,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 192,
				"order": 193,
				"prevSize": 28,
				"code": 61657,
				"name": "caret-left"
			},
			"setIdx": 0,
			"iconIdx": 210
		},
		{
			"icon": {
				"width": 366,
				"paths": [
					"M329.143 512q0 14.857-10.857 25.714l-256 256q-10.857 10.857-25.714 10.857t-25.714-10.857-10.857-25.714v-512q0-14.857 10.857-25.714t25.714-10.857 25.714 10.857l256 256q10.857 10.857 10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"caret-right"
				],
				"defaultCode": 61658,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 193,
				"order": 194,
				"prevSize": 28,
				"code": 61658,
				"name": "caret-right"
			},
			"setIdx": 0,
			"iconIdx": 211
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M91.429 877.714h347.429v-658.286h-365.714v640q0 7.429 5.429 12.857t12.857 5.429zM877.714 859.429v-640h-365.714v658.286h347.429q7.429 0 12.857-5.429t5.429-12.857zM950.857 164.571v694.857q0 37.714-26.857 64.571t-64.571 26.857h-768q-37.714 0-64.571-26.857t-26.857-64.571v-694.857q0-37.714 26.857-64.571t64.571-26.857h768q37.714 0 64.571 26.857t26.857 64.571z"
				],
				"attrs": [],
				"tags": [
					"columns"
				],
				"defaultCode": 61659,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 194,
				"order": 195,
				"prevSize": 28,
				"code": 61659,
				"name": "columns"
			},
			"setIdx": 0,
			"iconIdx": 212
		},
		{
			"icon": {
				"width": 585,
				"paths": [
					"M585.143 621.714q0 14.857-10.857 25.714l-256 256q-10.857 10.857-25.714 10.857t-25.714-10.857l-256-256q-10.857-10.857-10.857-25.714t10.857-25.714 25.714-10.857h512q14.857 0 25.714 10.857t10.857 25.714zM585.143 402.286q0 14.857-10.857 25.714t-25.714 10.857h-512q-14.857 0-25.714-10.857t-10.857-25.714 10.857-25.714l256-256q10.857-10.857 25.714-10.857t25.714 10.857l256 256q10.857 10.857 10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"sort",
					"unsorted"
				],
				"defaultCode": 61660,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 195,
				"order": 196,
				"prevSize": 28,
				"code": 61660,
				"name": "sort"
			},
			"setIdx": 0,
			"iconIdx": 213
		},
		{
			"icon": {
				"width": 585,
				"paths": [
					"M585.143 621.714q0 14.857-10.857 25.714l-256 256q-10.857 10.857-25.714 10.857t-25.714-10.857l-256-256q-10.857-10.857-10.857-25.714t10.857-25.714 25.714-10.857h512q14.857 0 25.714 10.857t10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"sort-desc",
					"sort-down"
				],
				"defaultCode": 61661,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 196,
				"order": 197,
				"prevSize": 28,
				"code": 61661,
				"name": "sort-desc"
			},
			"setIdx": 0,
			"iconIdx": 214
		},
		{
			"icon": {
				"width": 585,
				"paths": [
					"M585.143 402.286q0 14.857-10.857 25.714t-25.714 10.857h-512q-14.857 0-25.714-10.857t-10.857-25.714 10.857-25.714l256-256q10.857-10.857 25.714-10.857t25.714 10.857l256 256q10.857 10.857 10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"sort-asc",
					"sort-up"
				],
				"defaultCode": 61662,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 197,
				"order": 198,
				"prevSize": 28,
				"code": 61662,
				"name": "sort-asc"
			},
			"setIdx": 0,
			"iconIdx": 215
		},
		{
			"icon": {
				"paths": [
					"M1024 405.714v453.714q0 37.714-26.857 64.571t-64.571 26.857h-841.143q-37.714 0-64.571-26.857t-26.857-64.571v-453.714q25.143 28 57.714 49.714 206.857 140.571 284 197.143 32.571 24 52.857 37.429t54 27.429 62.857 14h1.143q29.143 0 62.857-14t54-27.429 52.857-37.429q97.143-70.286 284.571-197.143 32.571-22.286 57.143-49.714zM1024 237.714q0 45.143-28 86.286t-69.714 70.286q-214.857 149.143-267.429 185.714-5.714 4-24.286 17.429t-30.857 21.714-29.714 18.571-32.857 15.429-28.571 5.143h-1.143q-13.143 0-28.571-5.143t-32.857-15.429-29.714-18.571-30.857-21.714-24.286-17.429q-52-36.571-149.714-104.286t-117.143-81.429q-35.429-24-66.857-66t-31.429-78q0-44.571 23.714-74.286t67.714-29.714h841.143q37.143 0 64.286 26.857t27.143 64.571z"
				],
				"attrs": [],
				"tags": [
					"envelope"
				],
				"defaultCode": 61664,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 198,
				"order": 199,
				"prevSize": 28,
				"code": 61664,
				"name": "envelope"
			},
			"setIdx": 0,
			"iconIdx": 216
		},
		{
			"icon": {
				"paths": [
					"M199.429 357.143v566.286h-188.571v-566.286h188.571zM211.429 182.286q0.571 41.714-28.857 69.714t-77.429 28h-1.143q-46.857 0-75.429-28t-28.571-69.714q0-42.286 29.429-70t76.857-27.714 76 27.714 29.143 70zM877.714 598.857v324.571h-188v-302.857q0-60-23.143-94t-72.286-34q-36 0-60.286 19.714t-36.286 48.857q-6.286 17.143-6.286 46.286v316h-188q1.143-228 1.143-369.714t-0.571-169.143l-0.571-27.429h188v82.286h-1.143q11.429-18.286 23.429-32t32.286-29.714 49.714-24.857 65.429-8.857q97.714 0 157.143 64.857t59.429 190z"
				],
				"attrs": [],
				"tags": [
					"linkedin"
				],
				"defaultCode": 61665,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 199,
				"order": 200,
				"prevSize": 28,
				"code": 61665,
				"name": "linkedin"
			},
			"setIdx": 0,
			"iconIdx": 217
		},
		{
			"icon": {
				"paths": [
					"M877.714 512q0 89.143-34.857 170.286t-93.714 140-140 93.714-170.286 34.857q-98.286 0-186.857-41.429t-150.857-116.857q-4-5.714-3.714-12.857t4.857-11.714l78.286-78.857q5.714-5.143 14.286-5.143 9.143 1.143 13.143 6.857 41.714 54.286 102.286 84t128.571 29.714q59.429 0 113.429-23.143t93.429-62.571 62.571-93.429 23.143-113.429-23.143-113.429-62.571-93.429-93.429-62.571-113.429-23.143q-56 0-107.429 20.286t-91.429 58l78.286 78.857q17.714 17.143 8 39.429-9.714 22.857-33.714 22.857h-256q-14.857 0-25.714-10.857t-10.857-25.714v-256q0-24 22.857-33.714 22.286-9.714 39.429 8l74.286 73.714q61.143-57.714 139.714-89.429t162.571-31.714q89.143 0 170.286 34.857t140 93.714 93.714 140 34.857 170.286z"
				],
				"attrs": [],
				"tags": [
					"rotate-left",
					"undo"
				],
				"defaultCode": 61666,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 200,
				"order": 201,
				"prevSize": 28,
				"code": 61666,
				"name": "rotate-left"
			},
			"setIdx": 0,
			"iconIdx": 218
		},
		{
			"icon": {
				"paths": [
					"M1012 877.714q0 30.286-21.143 51.429l-61.143 61.714q-22.286 21.143-52 21.143-30.286 0-51.429-21.143l-207.429-208q-21.714-20.571-21.714-51.429 0-30.286 24.571-54.857l-146.286-146.286-72 72q-8 8-19.429 8t-19.429-8q1.143 1.143 7.143 6.857t7.143 7.429 5.714 6.571 5.714 7.714 3.429 7.714 3.143 9.429 0.857 10.286q0 21.714-16 38.857-1.714 1.714-9.429 10.286t-10.857 11.714-10.571 9.429-12.571 8.857-12.571 5.143-14.857 2.571q-22.857 0-38.857-16l-233.143-233.143q-16-16-16-38.857 0-7.429 2.571-14.857t5.143-12.571 8.857-12.571 9.429-10.571 11.714-10.857 10.286-9.429q17.143-16 38.857-16 5.714 0 10.286 0.857t9.429 3.143 7.714 3.429 7.714 5.714 6.571 5.714 7.429 7.143 6.857 7.143q-8-8-8-19.429t8-19.429l198.857-198.857q8-8 19.429-8t19.429 8q-1.143-1.143-7.143-6.857t-7.143-7.429-5.714-6.571-5.714-7.714-3.429-7.714-3.143-9.429-0.857-10.286q0-21.714 16-38.857 1.714-1.714 9.429-10.286t10.857-11.714 10.571-9.429 12.571-8.857 12.571-5.143 14.857-2.571q22.857 0 38.857 16l233.143 233.143q16 16 16 38.857 0 7.429-2.571 14.857t-5.143 12.571-8.857 12.571-9.429 10.571-11.714 10.857-10.286 9.429q-17.143 16-38.857 16-5.714 0-10.286-0.857t-9.429-3.143-7.714-3.429-7.714-5.714-6.571-5.714-7.429-7.143-6.857-7.143q8 8 8 19.429t-8 19.429l-72 72 146.286 146.286q24.571-24.571 54.857-24.571 29.714 0 52 21.143l207.429 207.429q21.143 22.286 21.143 52z"
				],
				"attrs": [],
				"tags": [
					"gavel",
					"legal"
				],
				"defaultCode": 61667,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 201,
				"order": 202,
				"prevSize": 28,
				"code": 61667,
				"name": "gavel"
			},
			"setIdx": 0,
			"iconIdx": 219
		},
		{
			"icon": {
				"paths": [
					"M219.429 658.286q0-30.286-21.429-51.714t-51.714-21.429-51.714 21.429-21.429 51.714 21.429 51.714 51.714 21.429 51.714-21.429 21.429-51.714zM329.143 402.286q0-30.286-21.429-51.714t-51.714-21.429-51.714 21.429-21.429 51.714 21.429 51.714 51.714 21.429 51.714-21.429 21.429-51.714zM573.714 677.143l57.714-218.286q3.429-14.857-4.286-27.714t-22-16.857-27.429 3.714-17.143 22.571l-57.714 218.286q-34.286 2.857-61.143 24.857t-36 56.286q-11.429 44 11.429 83.429t66.857 50.857 83.429-11.429 50.857-66.857q9.143-34.286-3.429-66.857t-41.143-52zM950.857 658.286q0-30.286-21.429-51.714t-51.714-21.429-51.714 21.429-21.429 51.714 21.429 51.714 51.714 21.429 51.714-21.429 21.429-51.714zM585.143 292.571q0-30.286-21.429-51.714t-51.714-21.429-51.714 21.429-21.429 51.714 21.429 51.714 51.714 21.429 51.714-21.429 21.429-51.714zM841.143 402.286q0-30.286-21.429-51.714t-51.714-21.429-51.714 21.429-21.429 51.714 21.429 51.714 51.714 21.429 51.714-21.429 21.429-51.714zM1024 658.286q0 149.143-80.571 276-10.857 16.571-30.857 16.571h-801.143q-20 0-30.857-16.571-80.571-126.286-80.571-276 0-104 40.571-198.857t109.143-163.429 163.429-109.143 198.857-40.571 198.857 40.571 163.429 109.143 109.143 163.429 40.571 198.857z"
				],
				"attrs": [],
				"tags": [
					"dashboard",
					"tachometer"
				],
				"defaultCode": 61668,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 202,
				"order": 203,
				"prevSize": 28,
				"code": 61668,
				"name": "dashboard"
			},
			"setIdx": 0,
			"iconIdx": 220
		},
		{
			"icon": {
				"paths": [
					"M512 219.429q-116.571 0-218 39.714t-161.143 107.143-59.714 145.714q0 64 40.857 122t115.143 100.286l49.714 28.571-15.429 54.857q-13.714 52-40 98.286 86.857-36 157.143-97.714l24.571-21.714 32.571 3.429q39.429 4.571 74.286 4.571 116.571 0 218-39.714t161.143-107.143 59.714-145.714-59.714-145.714-161.143-107.143-218-39.714zM1024 512q0 99.429-68.571 183.714t-186.286 133.143-257.143 48.857q-40 0-82.857-4.571-113.143 100-262.857 138.286-28 8-65.143 12.571h-2.857q-8.571 0-15.429-6t-9.143-15.714v-0.571q-1.714-2.286-0.286-6.857t1.143-5.714 2.571-5.429l3.429-5.143t4-4.857 4.571-5.143q4-4.571 17.714-19.714t19.714-21.714 17.714-22.571 18.571-29.143 15.429-33.714 14.857-43.429q-89.714-50.857-141.429-125.714t-51.714-160.571q0-99.429 68.571-183.714t186.286-133.143 257.143-48.857 257.143 48.857 186.286 133.143 68.571 183.714z"
				],
				"attrs": [],
				"tags": [
					"comment-o"
				],
				"defaultCode": 61669,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 203,
				"order": 204,
				"prevSize": 28,
				"code": 61669,
				"name": "comment-o"
			},
			"setIdx": 0,
			"iconIdx": 221
		},
		{
			"icon": {
				"paths": [
					"M402.286 219.429q-87.429 0-163.429 29.714t-120.857 80.571-44.857 109.143q0 46.857 30.286 90.286t85.143 75.429l55.429 32-20 48q19.429-11.429 35.429-22.286l25.143-17.714 30.286 5.714q44.571 8 87.429 8 87.429 0 163.429-29.714t120.857-80.571 44.857-109.143-44.857-109.143-120.857-80.571-163.429-29.714zM402.286 146.286q109.143 0 202 39.143t146.571 106.571 53.714 146.857-53.714 146.857-146.571 106.571-202 39.143q-49.143 0-100.571-9.143-70.857 50.286-158.857 73.143-20.571 5.143-49.143 9.143h-1.714q-6.286 0-11.714-4.571t-6.571-12q-0.571-1.714-0.571-3.714t0.286-3.714 1.143-3.429l1.429-2.857t2-3.143 2.286-2.857 2.571-2.857 2.286-2.571q2.857-3.429 13.143-14.286t14.857-16.857 12.857-16.571 14.286-22 11.714-25.143q-70.857-41.143-111.429-101.143t-40.571-128q0-79.429 53.714-146.857t146.571-106.571 202-39.143zM872 814.286q5.714 13.714 11.714 25.143t14.286 22 12.857 16.571 14.857 16.857 13.143 14.286q0.571 0.571 2.286 2.571t2.571 2.857 2.286 2.857 2 3.143l1.429 2.857t1.143 3.429 0.286 3.714-0.571 3.714q-1.714 8-7.429 12.571t-12.571 4q-28.571-4-49.143-9.143-88-22.857-158.857-73.143-51.429 9.143-100.571 9.143-154.857 0-269.714-75.429 33.143 2.286 50.286 2.286 92 0 176.571-25.714t150.857-73.714q71.429-52.571 109.714-121.143t38.286-145.143q0-44-13.143-86.857 73.714 40.571 116.571 101.714t42.857 131.429q0 68.571-40.571 128.286t-111.429 100.857z"
				],
				"attrs": [],
				"tags": [
					"comments-o"
				],
				"defaultCode": 61670,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 204,
				"order": 205,
				"prevSize": 28,
				"code": 61670,
				"name": "comments-o"
			},
			"setIdx": 0,
			"iconIdx": 222
		},
		{
			"icon": {
				"width": 512,
				"paths": [
					"M505.714 323.429q10.286 11.429 4 25.143l-308.571 661.143q-7.429 14.286-24 14.286-2.286 0-8-1.143-9.714-2.857-14.571-10.857t-2.571-17.143l112.571-461.714-232 57.714q-2.286 0.571-6.857 0.571-10.286 0-17.714-6.286-10.286-8.571-7.429-22.286l114.857-471.429q2.286-8 9.143-13.143t16-5.143h187.429q10.857 0 18.286 7.143t7.429 16.857q0 4.571-2.857 10.286l-97.714 264.571 226.286-56q4.571-1.143 6.857-1.143 10.857 0 19.429 8.571z"
				],
				"attrs": [],
				"tags": [
					"bolt",
					"flash"
				],
				"defaultCode": 61671,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 205,
				"order": 206,
				"prevSize": 28,
				"code": 61671,
				"name": "bolt"
			},
			"setIdx": 0,
			"iconIdx": 223
		},
		{
			"icon": {
				"paths": [
					"M1024 713.143v182.857q0 22.857-16 38.857t-38.857 16h-182.857q-22.857 0-38.857-16t-16-38.857v-182.857q0-22.857 16-38.857t38.857-16h54.857v-109.714h-292.571v109.714h54.857q22.857 0 38.857 16t16 38.857v182.857q0 22.857-16 38.857t-38.857 16h-182.857q-22.857 0-38.857-16t-16-38.857v-182.857q0-22.857 16-38.857t38.857-16h54.857v-109.714h-292.571v109.714h54.857q22.857 0 38.857 16t16 38.857v182.857q0 22.857-16 38.857t-38.857 16h-182.857q-22.857 0-38.857-16t-16-38.857v-182.857q0-22.857 16-38.857t38.857-16h54.857v-109.714q0-29.714 21.714-51.429t51.429-21.714h292.571v-109.714h-54.857q-22.857 0-38.857-16t-16-38.857v-182.857q0-22.857 16-38.857t38.857-16h182.857q22.857 0 38.857 16t16 38.857v182.857q0 22.857-16 38.857t-38.857 16h-54.857v109.714h292.571q29.714 0 51.429 21.714t21.714 51.429v109.714h54.857q22.857 0 38.857 16t16 38.857z"
				],
				"attrs": [],
				"tags": [
					"sitemap"
				],
				"defaultCode": 61672,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 206,
				"order": 207,
				"prevSize": 28,
				"code": 61672,
				"name": "sitemap"
			},
			"setIdx": 0,
			"iconIdx": 224
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M512 473.143v331.429q0 59.429-43.429 102.857t-102.857 43.429-102.857-43.429-43.429-102.857q0-14.857 10.857-25.714t25.714-10.857 25.714 10.857 10.857 25.714q0 28.571 22.286 50.857t50.857 22.286 50.857-22.286 22.286-50.857v-331.429q18.857-6.286 36.571-6.286t36.571 6.286zM950.857 488.571q0 7.429-5.429 12.857t-12.857 5.429q-6.286 0-13.143-5.714-28-26.286-53.143-39.429t-58.286-13.143q-38.857 0-73.143 21.143t-58.857 55.429q-4 5.714-10 16t-8.286 13.714q-6.286 9.714-16 9.714-10.286 0-16.571-9.714-2.286-3.429-8.286-13.714t-10-16q-24.571-34.286-58.571-55.429t-72.857-21.143-72.857 21.143-58.571 55.429q-4 5.714-10 16t-8.286 13.714q-6.286 9.714-16.571 9.714-9.714 0-16-9.714-2.286-3.429-8.286-13.714t-10-16q-24.571-34.286-58.857-55.429t-73.143-21.143q-33.143 0-58.286 13.143t-53.143 39.429q-6.857 5.714-13.143 5.714-7.429 0-12.857-5.429t-5.429-12.857q0-2.857 0.571-4 25.714-104.571 98.571-182.571t170.286-116.857 206-38.857q80 0 156.857 22.857t140.857 64.857 111.143 106.857 66 143.714q0.571 1.143 0.571 4zM512 73.143v56q-24-1.143-36.571-1.143t-36.571 1.143v-56q0-14.857 10.857-25.714t25.714-10.857 25.714 10.857 10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"umbrella"
				],
				"defaultCode": 61673,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 207,
				"order": 208,
				"prevSize": 28,
				"code": 61673,
				"name": "umbrella"
			},
			"setIdx": 0,
			"iconIdx": 225
		},
		{
			"icon": {
				"paths": [
					"M438.857 950.857h512v-365.714h-237.714q-22.857 0-38.857-16t-16-38.857v-237.714h-219.429v658.286zM585.143 128v-36.571q0-7.429-5.429-12.857t-12.857-5.429h-402.286q-7.429 0-12.857 5.429t-5.429 12.857v36.571q0 7.429 5.429 12.857t12.857 5.429h402.286q7.429 0 12.857-5.429t5.429-12.857zM731.429 512h170.857l-170.857-170.857v170.857zM1024 585.143v384q0 22.857-16 38.857t-38.857 16h-548.571q-22.857 0-38.857-16t-16-38.857v-91.429h-310.857q-22.857 0-38.857-16t-16-38.857v-768q0-22.857 16-38.857t38.857-16h621.714q22.857 0 38.857 16t16 38.857v187.429q12 7.429 20.571 16l233.143 233.143q16 16 27.429 43.429t11.429 50.286z"
				],
				"attrs": [],
				"tags": [
					"clipboard",
					"paste"
				],
				"defaultCode": 61674,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 208,
				"order": 209,
				"prevSize": 28,
				"code": 61674,
				"name": "clipboard"
			},
			"setIdx": 0,
			"iconIdx": 226
		},
		{
			"icon": {
				"width": 585,
				"paths": [
					"M420.571 329.143q0 7.429-5.429 12.857t-12.857 5.429-12.857-5.429-5.429-12.857q0-26.286-30.857-40.571t-60.571-14.286q-7.429 0-12.857-5.429t-5.429-12.857 5.429-12.857 12.857-5.429q28.571 0 56.857 9.143t49.714 30.857 21.429 51.429zM512 329.143q0-41.143-19.714-76.571t-51.429-58-70.286-35.429-78-12.857-78 12.857-70.286 35.429-51.429 58-19.714 76.571q0 57.714 38.857 102.857 5.714 6.286 17.429 18.857t17.429 18.857q73.143 87.429 80.571 170.286h130.286q7.429-82.857 80.571-170.286 5.714-6.286 17.429-18.857t17.429-18.857q38.857-45.143 38.857-102.857zM585.143 329.143q0 88.571-58.857 153.143-25.714 28-42.571 49.714t-34 54.571-19.429 61.429q26.857 16 26.857 46.857 0 21.143-14.286 36.571 14.286 15.429 14.286 36.571 0 29.714-25.714 46.286 7.429 13.143 7.429 26.857 0 26.286-18 40.571t-44.286 14.286q-11.429 25.143-34.286 40t-49.714 14.857-49.714-14.857-34.286-40q-26.286 0-44.286-14.286t-18-40.571q0-13.714 7.429-26.857-25.714-16.571-25.714-46.286 0-21.143 14.286-36.571-14.286-15.429-14.286-36.571 0-30.857 26.857-46.857-2.286-28.571-19.429-61.429t-34-54.571-42.571-49.714q-58.857-64.571-58.857-153.143 0-56.571 25.429-105.429t66.857-81.143 93.714-50.857 106.571-18.571 106.571 18.571 93.714 50.857 66.857 81.143 25.429 105.429z"
				],
				"attrs": [],
				"tags": [
					"lightbulb-o"
				],
				"defaultCode": 61675,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 209,
				"order": 210,
				"prevSize": 28,
				"code": 61675,
				"name": "lightbulb-o"
			},
			"setIdx": 0,
			"iconIdx": 227
		},
		{
			"icon": {
				"paths": [
					"M1024 676.571v109.714q0 7.429-5.429 12.857t-12.857 5.429h-786.286v109.714q0 7.429-5.429 12.857t-12.857 5.429q-6.857 0-13.714-5.714l-182.286-182.857q-5.143-5.143-5.143-12.571 0-8 5.143-13.143l182.857-182.857q5.143-5.143 13.143-5.143 7.429 0 12.857 5.429t5.429 12.857v109.714h786.286q7.429 0 12.857 5.429t5.429 12.857zM1024 365.714q0 8-5.143 13.143l-182.857 182.857q-5.143 5.143-13.143 5.143-7.429 0-12.857-5.429t-5.429-12.857v-109.714h-786.286q-7.429 0-12.857-5.429t-5.429-12.857v-109.714q0-7.429 5.429-12.857t12.857-5.429h786.286v-109.714q0-8 5.143-13.143t13.143-5.143q6.857 0 13.714 5.714l182.286 182.286q5.143 5.143 5.143 13.143z"
				],
				"attrs": [],
				"tags": [
					"exchange"
				],
				"defaultCode": 61676,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 210,
				"order": 211,
				"prevSize": 28,
				"code": 61676,
				"name": "exchange"
			},
			"setIdx": 0,
			"iconIdx": 228
		},
		{
			"icon": {
				"width": 1097,
				"paths": [
					"M731.429 530.286q0-8-5.143-13.143t-13.143-5.143h-128v-201.143q0-7.429-5.429-12.857t-12.857-5.429h-109.714q-7.429 0-12.857 5.429t-5.429 12.857v201.143h-128q-7.429 0-12.857 5.429t-5.429 12.857q0 8 5.143 13.143l201.143 201.143q5.143 5.143 13.143 5.143t13.143-5.143l200.571-200.571q5.714-6.857 5.714-13.714zM1097.143 658.286q0 90.857-64.286 155.143t-155.143 64.286h-621.714q-105.714 0-180.857-75.143t-75.143-180.857q0-74.286 40-137.143t107.429-94.286q-1.143-17.143-1.143-24.571 0-121.143 85.714-206.857t206.857-85.714q89.143 0 163.143 49.714t107.714 132q40.571-35.429 94.857-35.429 60.571 0 103.429 42.857t42.857 103.429q0 43.429-23.429 78.857 74.286 17.714 122 77.429t47.714 136.286z"
				],
				"attrs": [],
				"tags": [
					"cloud-download"
				],
				"defaultCode": 61677,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 211,
				"order": 212,
				"prevSize": 28,
				"code": 61677,
				"name": "cloud-download"
			},
			"setIdx": 0,
			"iconIdx": 229
		},
		{
			"icon": {
				"width": 1097,
				"paths": [
					"M731.429 493.714q0-8-5.143-13.143l-201.143-201.143q-5.143-5.143-13.143-5.143t-13.143 5.143l-200.571 200.571q-5.714 6.857-5.714 13.714 0 8 5.143 13.143t13.143 5.143h128v201.143q0 7.429 5.429 12.857t12.857 5.429h109.714q7.429 0 12.857-5.429t5.429-12.857v-201.143h128q7.429 0 12.857-5.429t5.429-12.857zM1097.143 658.286q0 90.857-64.286 155.143t-155.143 64.286h-621.714q-105.714 0-180.857-75.143t-75.143-180.857q0-74.286 40-137.143t107.429-94.286q-1.143-17.143-1.143-24.571 0-121.143 85.714-206.857t206.857-85.714q89.143 0 163.143 49.714t107.714 132q40.571-35.429 94.857-35.429 60.571 0 103.429 42.857t42.857 103.429q0 43.429-23.429 78.857 74.286 17.714 122 77.429t47.714 136.286z"
				],
				"attrs": [],
				"tags": [
					"cloud-upload"
				],
				"defaultCode": 61678,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 212,
				"order": 213,
				"prevSize": 28,
				"code": 61678,
				"name": "cloud-upload"
			},
			"setIdx": 0,
			"iconIdx": 230
		},
		{
			"icon": {
				"width": 805,
				"paths": [
					"M219.429 768q0 14.857-10.857 25.714t-25.714 10.857-25.714-10.857-10.857-25.714 10.857-25.714 25.714-10.857 25.714 10.857 10.857 25.714zM804.571 802.857q0 69.143-41.714 108.571t-110.857 39.429h-499.429q-69.143 0-110.857-39.429t-41.714-108.571q0-38.857 3.143-74.857t13.714-78.857 27.143-75.714 46.286-58.857 68.571-34.571q-12.571 29.714-12.571 68.571v116q-33.143 11.429-53.143 40t-20 63.429q0 45.714 32 77.714t77.714 32 77.714-32 32-77.714q0-34.857-20.286-63.429t-52.857-40v-116q0-35.429 14.286-53.143 75.429 59.429 168.571 59.429t168.571-59.429q14.286 17.714 14.286 53.143v36.571q-60.571 0-103.429 42.857t-42.857 103.429v50.857q-18.286 16.571-18.286 40.571 0 22.857 16 38.857t38.857 16 38.857-16 16-38.857q0-24-18.286-40.571v-50.857q0-29.714 21.714-51.429t51.429-21.714 51.429 21.714 21.714 51.429v50.857q-18.286 16.571-18.286 40.571 0 22.857 16 38.857t38.857 16 38.857-16 16-38.857q0-24-18.286-40.571v-50.857q0-38.857-19.714-72.857t-53.429-53.429q0-5.714 0.286-24.286t0-27.429-1.429-23.714-4-26.857-7.429-22.857q38.857 8.571 68.571 34.571t46.286 58.857 27.143 75.714 13.714 78.857 3.143 74.857zM621.714 292.571q0 90.857-64.286 155.143t-155.143 64.286-155.143-64.286-64.286-155.143 64.286-155.143 155.143-64.286 155.143 64.286 64.286 155.143z"
				],
				"attrs": [],
				"tags": [
					"user-md"
				],
				"defaultCode": 61680,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 213,
				"order": 214,
				"prevSize": 28,
				"code": 61680,
				"name": "user-md"
			},
			"setIdx": 0,
			"iconIdx": 231
		},
		{
			"icon": {
				"width": 805,
				"paths": [
					"M731.429 402.286q0-14.857-10.857-25.714t-25.714-10.857-25.714 10.857-10.857 25.714 10.857 25.714 25.714 10.857 25.714-10.857 10.857-25.714zM804.571 402.286q0 35.429-20.286 63.429t-52.857 40v225.714q0 90.857-75.143 155.143t-180.857 64.286-180.857-64.286-75.143-155.143v-75.429q-93.714-11.429-156.571-73.143t-62.857-144v-292.571q0-14.857 10.857-25.714t25.714-10.857q3.429 0 9.143 1.143 9.714-17.143 26.857-27.429t37.143-10.286q30.286 0 51.714 21.429t21.429 51.714-21.429 51.714-51.714 21.429q-18.857 0-36.571-10.286v229.714q0 60.571 53.714 103.429t129.143 42.857 129.143-42.857 53.714-103.429v-229.714q-17.714 10.286-36.571 10.286-30.286 0-51.714-21.429t-21.429-51.714 21.429-51.714 51.714-21.429q20 0 37.143 10.286t26.857 27.429q5.714-1.143 9.143-1.143 14.857 0 25.714 10.857t10.857 25.714v292.571q0 82.286-62.857 144t-156.571 73.143v75.429q0 60.571 53.714 103.429t129.143 42.857 129.143-42.857 53.714-103.429v-225.714q-32.571-12-52.857-40t-20.286-63.429q0-45.714 32-77.714t77.714-32 77.714 32 32 77.714z"
				],
				"attrs": [],
				"tags": [
					"stethoscope"
				],
				"defaultCode": 61681,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 214,
				"order": 215,
				"prevSize": 28,
				"code": 61681,
				"name": "stethoscope"
			},
			"setIdx": 0,
			"iconIdx": 232
		},
		{
			"icon": {
				"paths": [
					"M365.714 219.429h292.571v-73.143h-292.571v73.143zM164.571 219.429v731.429h-36.571q-52.571 0-90.286-37.714t-37.714-90.286v-475.429q0-52.571 37.714-90.286t90.286-37.714h36.571zM804.571 219.429v731.429h-585.143v-731.429h73.143v-91.429q0-22.857 16-38.857t38.857-16h329.143q22.857 0 38.857 16t16 38.857v91.429h73.143zM1024 347.429v475.429q0 52.571-37.714 90.286t-90.286 37.714h-36.571v-731.429h36.571q52.571 0 90.286 37.714t37.714 90.286z"
				],
				"attrs": [],
				"tags": [
					"suitcase"
				],
				"defaultCode": 61682,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 215,
				"order": 216,
				"prevSize": 28,
				"code": 61682,
				"name": "suitcase"
			},
			"setIdx": 0,
			"iconIdx": 233
		},
		{
			"icon": {
				"paths": [
					"M521.143 969.143q0-9.143-9.143-9.143-33.714 0-58-24.286t-24.286-58q0-9.143-9.143-9.143t-9.143 9.143q0 41.714 29.429 71.143t71.143 29.429q9.143 0 9.143-9.143zM987.429 804.571q0 29.714-21.714 51.429t-51.429 21.714h-256q0 60.571-42.857 103.429t-103.429 42.857-103.429-42.857-42.857-103.429h-256q-29.714 0-51.429-21.714t-21.714-51.429q28.571-24 52-50.286t48.571-68.286 42.571-90.571 28.571-117.714 11.143-148.571q0-86.857 66.857-161.429t175.429-90.571q-4.571-10.857-4.571-22.286 0-22.857 16-38.857t38.857-16 38.857 16 16 38.857q0 11.429-4.571 22.286 108.571 16 175.429 90.571t66.857 161.429q0 79.429 11.143 148.571t28.571 117.714 42.571 90.571 48.571 68.286 52 50.286z"
				],
				"attrs": [],
				"tags": [
					"bell"
				],
				"defaultCode": 61683,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 216,
				"order": 217,
				"prevSize": 28,
				"code": 61683,
				"name": "bell"
			},
			"setIdx": 0,
			"iconIdx": 234
		},
		{
			"icon": {
				"width": 1097,
				"paths": [
					"M950.857 365.714q0-45.714-32-77.714t-77.714-32h-36.571v219.429h36.571q45.714 0 77.714-32t32-77.714zM0 804.571h1024q0 60.571-42.857 103.429t-103.429 42.857h-731.429q-60.571 0-103.429-42.857t-42.857-103.429zM1060.571 365.714q0 90.857-64.286 155.143t-155.143 64.286h-36.571v18.286q0 52.571-37.714 90.286t-90.286 37.714h-402.286q-52.571 0-90.286-37.714t-37.714-90.286v-420.571q0-14.857 10.857-25.714t25.714-10.857h658.286q90.857 0 155.143 64.286t64.286 155.143z"
				],
				"attrs": [],
				"tags": [
					"coffee"
				],
				"defaultCode": 61684,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 217,
				"order": 218,
				"prevSize": 28,
				"code": 61684,
				"name": "coffee"
			},
			"setIdx": 0,
			"iconIdx": 235
		},
		{
			"icon": {
				"width": 805,
				"paths": [
					"M365.714 36.571v365.714q0 34.857-20.286 63.429t-52.857 40v445.143q0 29.714-21.714 51.429t-51.429 21.714h-73.143q-29.714 0-51.429-21.714t-21.714-51.429v-445.143q-32.571-11.429-52.857-40t-20.286-63.429v-365.714q0-14.857 10.857-25.714t25.714-10.857 25.714 10.857 10.857 25.714v237.714q0 14.857 10.857 25.714t25.714 10.857 25.714-10.857 10.857-25.714v-237.714q0-14.857 10.857-25.714t25.714-10.857 25.714 10.857 10.857 25.714v237.714q0 14.857 10.857 25.714t25.714 10.857 25.714-10.857 10.857-25.714v-237.714q0-14.857 10.857-25.714t25.714-10.857 25.714 10.857 10.857 25.714zM804.571 36.571v914.286q0 29.714-21.714 51.429t-51.429 21.714h-73.143q-29.714 0-51.429-21.714t-21.714-51.429v-292.571h-128q-7.429 0-12.857-5.429t-5.429-12.857v-457.143q0-75.429 53.714-129.143t129.143-53.714h146.286q14.857 0 25.714 10.857t10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"cutlery"
				],
				"defaultCode": 61685,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 218,
				"order": 219,
				"prevSize": 28,
				"code": 61685,
				"name": "cutlery"
			},
			"setIdx": 0,
			"iconIdx": 236
		},
		{
			"icon": {
				"paths": [
					"M838.857 217.143q16 16 27.429 43.429t11.429 50.286v658.286q0 22.857-16 38.857t-38.857 16h-768q-22.857 0-38.857-16t-16-38.857v-914.286q0-22.857 16-38.857t38.857-16h512q22.857 0 50.286 11.429t43.429 27.429zM585.143 77.714v214.857h214.857q-5.714-16.571-12.571-23.429l-178.857-178.857q-6.857-6.857-23.429-12.571zM804.571 950.857v-585.143h-237.714q-22.857 0-38.857-16t-16-38.857v-237.714h-438.857v877.714h731.429zM219.429 457.143q0-8 5.143-13.143t13.143-5.143h402.286q8 0 13.143 5.143t5.143 13.143v36.571q0 8-5.143 13.143t-13.143 5.143h-402.286q-8 0-13.143-5.143t-5.143-13.143v-36.571zM640 585.143q8 0 13.143 5.143t5.143 13.143v36.571q0 8-5.143 13.143t-13.143 5.143h-402.286q-8 0-13.143-5.143t-5.143-13.143v-36.571q0-8 5.143-13.143t13.143-5.143h402.286zM640 731.429q8 0 13.143 5.143t5.143 13.143v36.571q0 8-5.143 13.143t-13.143 5.143h-402.286q-8 0-13.143-5.143t-5.143-13.143v-36.571q0-8 5.143-13.143t13.143-5.143h402.286z"
				],
				"attrs": [],
				"tags": [
					"file-text-o"
				],
				"defaultCode": 61686,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 219,
				"order": 220,
				"prevSize": 28,
				"code": 61686,
				"name": "file-text-o"
			},
			"setIdx": 0,
			"iconIdx": 237
		},
		{
			"icon": {
				"width": 805,
				"paths": [
					"M219.429 749.714v36.571q0 7.429-5.429 12.857t-12.857 5.429h-36.571q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h36.571q7.429 0 12.857 5.429t5.429 12.857zM219.429 603.429v36.571q0 7.429-5.429 12.857t-12.857 5.429h-36.571q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h36.571q7.429 0 12.857 5.429t5.429 12.857zM365.714 603.429v36.571q0 7.429-5.429 12.857t-12.857 5.429h-36.571q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h36.571q7.429 0 12.857 5.429t5.429 12.857zM219.429 457.143v36.571q0 7.429-5.429 12.857t-12.857 5.429h-36.571q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h36.571q7.429 0 12.857 5.429t5.429 12.857zM658.286 749.714v36.571q0 7.429-5.429 12.857t-12.857 5.429h-36.571q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h36.571q7.429 0 12.857 5.429t5.429 12.857zM512 603.429v36.571q0 7.429-5.429 12.857t-12.857 5.429h-36.571q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h36.571q7.429 0 12.857 5.429t5.429 12.857zM365.714 457.143v36.571q0 7.429-5.429 12.857t-12.857 5.429h-36.571q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h36.571q7.429 0 12.857 5.429t5.429 12.857zM219.429 310.857v36.571q0 7.429-5.429 12.857t-12.857 5.429h-36.571q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h36.571q7.429 0 12.857 5.429t5.429 12.857zM658.286 603.429v36.571q0 7.429-5.429 12.857t-12.857 5.429h-36.571q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h36.571q7.429 0 12.857 5.429t5.429 12.857zM512 457.143v36.571q0 7.429-5.429 12.857t-12.857 5.429h-36.571q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h36.571q7.429 0 12.857 5.429t5.429 12.857zM365.714 310.857v36.571q0 7.429-5.429 12.857t-12.857 5.429h-36.571q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h36.571q7.429 0 12.857 5.429t5.429 12.857zM219.429 164.571v36.571q0 7.429-5.429 12.857t-12.857 5.429h-36.571q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h36.571q7.429 0 12.857 5.429t5.429 12.857zM658.286 457.143v36.571q0 7.429-5.429 12.857t-12.857 5.429h-36.571q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h36.571q7.429 0 12.857 5.429t5.429 12.857zM512 310.857v36.571q0 7.429-5.429 12.857t-12.857 5.429h-36.571q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h36.571q7.429 0 12.857 5.429t5.429 12.857zM365.714 164.571v36.571q0 7.429-5.429 12.857t-12.857 5.429h-36.571q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h36.571q7.429 0 12.857 5.429t5.429 12.857zM658.286 310.857v36.571q0 7.429-5.429 12.857t-12.857 5.429h-36.571q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h36.571q7.429 0 12.857 5.429t5.429 12.857zM512 164.571v36.571q0 7.429-5.429 12.857t-12.857 5.429h-36.571q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h36.571q7.429 0 12.857 5.429t5.429 12.857zM658.286 164.571v36.571q0 7.429-5.429 12.857t-12.857 5.429h-36.571q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h36.571q7.429 0 12.857 5.429t5.429 12.857zM512 950.857h219.429v-877.714h-658.286v877.714h219.429v-128q0-7.429 5.429-12.857t12.857-5.429h182.857q7.429 0 12.857 5.429t5.429 12.857v128zM804.571 36.571v950.857q0 14.857-10.857 25.714t-25.714 10.857h-731.429q-14.857 0-25.714-10.857t-10.857-25.714v-950.857q0-14.857 10.857-25.714t25.714-10.857h731.429q14.857 0 25.714 10.857t10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"building-o"
				],
				"defaultCode": 61687,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 220,
				"order": 221,
				"prevSize": 28,
				"code": 61687,
				"name": "building-o"
			},
			"setIdx": 0,
			"iconIdx": 238
		},
		{
			"icon": {
				"width": 805,
				"paths": [
					"M219.429 749.714v36.571q0 7.429-5.429 12.857t-12.857 5.429h-36.571q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h36.571q7.429 0 12.857 5.429t5.429 12.857zM219.429 603.429v36.571q0 7.429-5.429 12.857t-12.857 5.429h-36.571q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h36.571q7.429 0 12.857 5.429t5.429 12.857zM365.714 603.429v36.571q0 7.429-5.429 12.857t-12.857 5.429h-36.571q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h36.571q7.429 0 12.857 5.429t5.429 12.857zM219.429 457.143v36.571q0 7.429-5.429 12.857t-12.857 5.429h-36.571q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h36.571q7.429 0 12.857 5.429t5.429 12.857zM658.286 749.714v36.571q0 7.429-5.429 12.857t-12.857 5.429h-36.571q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h36.571q7.429 0 12.857 5.429t5.429 12.857zM512 603.429v36.571q0 7.429-5.429 12.857t-12.857 5.429h-36.571q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h36.571q7.429 0 12.857 5.429t5.429 12.857zM365.714 457.143v36.571q0 7.429-5.429 12.857t-12.857 5.429h-36.571q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h36.571q7.429 0 12.857 5.429t5.429 12.857zM658.286 603.429v36.571q0 7.429-5.429 12.857t-12.857 5.429h-36.571q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h36.571q7.429 0 12.857 5.429t5.429 12.857zM512 457.143v36.571q0 7.429-5.429 12.857t-12.857 5.429h-36.571q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h36.571q7.429 0 12.857 5.429t5.429 12.857zM658.286 457.143v36.571q0 7.429-5.429 12.857t-12.857 5.429h-36.571q-7.429 0-12.857-5.429t-5.429-12.857v-36.571q0-7.429 5.429-12.857t12.857-5.429h36.571q7.429 0 12.857 5.429t5.429 12.857zM512 950.857h219.429v-658.286h-146.286v18.286q0 22.857-16 38.857t-38.857 16h-256q-22.857 0-38.857-16t-16-38.857v-18.286h-146.286v658.286h219.429v-128q0-7.429 5.429-12.857t12.857-5.429h182.857q7.429 0 12.857 5.429t5.429 12.857v128zM512 274.286v-182.857q0-7.429-5.429-12.857t-12.857-5.429h-36.571q-7.429 0-12.857 5.429t-5.429 12.857v54.857h-73.143v-54.857q0-7.429-5.429-12.857t-12.857-5.429h-36.571q-7.429 0-12.857 5.429t-5.429 12.857v182.857q0 7.429 5.429 12.857t12.857 5.429h36.571q7.429 0 12.857-5.429t5.429-12.857v-54.857h73.143v54.857q0 7.429 5.429 12.857t12.857 5.429h36.571q7.429 0 12.857-5.429t5.429-12.857zM804.571 256v731.429q0 14.857-10.857 25.714t-25.714 10.857h-731.429q-14.857 0-25.714-10.857t-10.857-25.714v-731.429q0-14.857 10.857-25.714t25.714-10.857h182.857v-164.571q0-22.857 16-38.857t38.857-16h256q22.857 0 38.857 16t16 38.857v164.571h182.857q14.857 0 25.714 10.857t10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"hospital-o"
				],
				"defaultCode": 61688,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 221,
				"order": 222,
				"prevSize": 28,
				"code": 61688,
				"name": "hospital-o"
			},
			"setIdx": 0,
			"iconIdx": 239
		},
		{
			"icon": {
				"width": 1097,
				"paths": [
					"M365.714 804.571q0-30.286-21.429-51.714t-51.714-21.429-51.714 21.429-21.429 51.714 21.429 51.714 51.714 21.429 51.714-21.429 21.429-51.714zM146.286 512h219.429v-146.286h-90.286q-8 1.143-12.571 5.143l-111.429 111.429q-4 6.857-5.143 12.571v17.143zM877.714 804.571q0-30.286-21.429-51.714t-51.714-21.429-51.714 21.429-21.429 51.714 21.429 51.714 51.714 21.429 51.714-21.429 21.429-51.714zM950.857 420.571v-109.714q0-8-5.143-13.143t-13.143-5.143h-128v-128q0-8-5.143-13.143t-13.143-5.143h-109.714q-8 0-13.143 5.143t-5.143 13.143v128h-128q-8 0-13.143 5.143t-5.143 13.143v109.714q0 8 5.143 13.143t13.143 5.143h128v128q0 8 5.143 13.143t13.143 5.143h109.714q8 0 13.143-5.143t5.143-13.143v-128h128q8 0 13.143-5.143t5.143-13.143zM1097.143 109.714v658.286q0 14.857-10.857 25.714t-25.714 10.857h-109.714q0 60.571-42.857 103.429t-103.429 42.857-103.429-42.857-42.857-103.429h-219.429q0 60.571-42.857 103.429t-103.429 42.857-103.429-42.857-42.857-103.429h-73.143q-14.857 0-25.714-10.857t-10.857-25.714 10.857-25.714 25.714-10.857v-237.714q0-14.857 7.429-33.143t18.286-29.143l113.143-113.143q10.857-10.857 29.143-18.286t33.143-7.429h91.429v-182.857q0-14.857 10.857-25.714t25.714-10.857h658.286q14.857 0 25.714 10.857t10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"ambulance"
				],
				"defaultCode": 61689,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 222,
				"order": 223,
				"prevSize": 28,
				"code": 61689,
				"name": "ambulance"
			},
			"setIdx": 0,
			"iconIdx": 240
		},
		{
			"icon": {
				"paths": [
					"M731.429 640v-109.714q0-8-5.143-13.143t-13.143-5.143h-128v-128q0-8-5.143-13.143t-13.143-5.143h-109.714q-8 0-13.143 5.143t-5.143 13.143v128h-128q-8 0-13.143 5.143t-5.143 13.143v109.714q0 8 5.143 13.143t13.143 5.143h128v128q0 8 5.143 13.143t13.143 5.143h109.714q8 0 13.143-5.143t5.143-13.143v-128h128q8 0 13.143-5.143t5.143-13.143zM365.714 219.429h292.571v-73.143h-292.571v73.143zM146.286 219.429v731.429h-18.286q-52.571 0-90.286-37.714t-37.714-90.286v-475.429q0-52.571 37.714-90.286t90.286-37.714h18.286zM822.857 219.429v731.429h-621.714v-731.429h91.429v-91.429q0-22.857 16-38.857t38.857-16h329.143q22.857 0 38.857 16t16 38.857v91.429h91.429zM1024 347.429v475.429q0 52.571-37.714 90.286t-90.286 37.714h-18.286v-731.429h18.286q52.571 0 90.286 37.714t37.714 90.286z"
				],
				"attrs": [],
				"tags": [
					"medkit"
				],
				"defaultCode": 61690,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 223,
				"order": 224,
				"prevSize": 28,
				"code": 61690,
				"name": "medkit"
			},
			"setIdx": 0,
			"iconIdx": 241
		},
		{
			"icon": {
				"width": 1097,
				"paths": [
					"M1097.143 548.571q-0.571 18.286-164.571 54.857l-201.143 18.286-128 36.571h-36.571l-167.429 201.143h39.429q14.857 0 25.714 2.571t10.857 6.571-10.857 6.571-25.714 2.571h-182.857v-18.286h36.571v-237.714h-91.429l-109.714 128h-54.857l-18.286-18.286v-109.714h18.286v-18.286h73.143v-4.571l-109.714-13.714v-73.143l109.714-13.714v-4.571h-73.143v-18.286h-18.286v-109.714l18.286-18.286h54.857l109.714 128h91.429v-237.714h-36.571v-18.286h182.857q14.857 0 25.714 2.571t10.857 6.571-10.857 6.571-25.714 2.571h-39.429l167.429 201.143h36.571l128 36.571 201.143 18.286q149.143 33.143 164 53.143z"
				],
				"attrs": [],
				"tags": [
					"fighter-jet"
				],
				"defaultCode": 61691,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 224,
				"order": 225,
				"prevSize": 28,
				"code": 61691,
				"name": "fighter-jet"
			},
			"setIdx": 0,
			"iconIdx": 242
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M365.714 512v-219.429h-146.286v146.286q0 30.286 21.429 51.714t51.714 21.429h73.143zM950.857 768v109.714h-658.286v-109.714l73.143-109.714h-73.143q-90.857 0-155.143-64.286t-64.286-155.143v-182.857l-36.571-36.571 18.286-73.143h274.286l18.286-73.143h548.571l18.286 109.714-36.571 18.286v457.143z"
				],
				"attrs": [],
				"tags": [
					"beer"
				],
				"defaultCode": 61692,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 225,
				"order": 226,
				"prevSize": 28,
				"code": 61692,
				"name": "beer"
			},
			"setIdx": 0,
			"iconIdx": 243
		},
		{
			"icon": {
				"paths": [
					"M731.429 768v-512q0-14.857-10.857-25.714t-25.714-10.857h-73.143q-14.857 0-25.714 10.857t-10.857 25.714v182.857h-292.571v-182.857q0-14.857-10.857-25.714t-25.714-10.857h-73.143q-14.857 0-25.714 10.857t-10.857 25.714v512q0 14.857 10.857 25.714t25.714 10.857h73.143q14.857 0 25.714-10.857t10.857-25.714v-182.857h292.571v182.857q0 14.857 10.857 25.714t25.714 10.857h73.143q14.857 0 25.714-10.857t10.857-25.714zM877.714 237.714v548.571q0 68-48.286 116.286t-116.286 48.286h-548.571q-68 0-116.286-48.286t-48.286-116.286v-548.571q0-68 48.286-116.286t116.286-48.286h548.571q68 0 116.286 48.286t48.286 116.286z"
				],
				"attrs": [],
				"tags": [
					"h-square"
				],
				"defaultCode": 61693,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 226,
				"order": 227,
				"prevSize": 28,
				"code": 61693,
				"name": "h-square"
			},
			"setIdx": 0,
			"iconIdx": 244
		},
		{
			"icon": {
				"paths": [
					"M731.429 548.571v-73.143q0-14.857-10.857-25.714t-25.714-10.857h-182.857v-182.857q0-14.857-10.857-25.714t-25.714-10.857h-73.143q-14.857 0-25.714 10.857t-10.857 25.714v182.857h-182.857q-14.857 0-25.714 10.857t-10.857 25.714v73.143q0 14.857 10.857 25.714t25.714 10.857h182.857v182.857q0 14.857 10.857 25.714t25.714 10.857h73.143q14.857 0 25.714-10.857t10.857-25.714v-182.857h182.857q14.857 0 25.714-10.857t10.857-25.714zM877.714 237.714v548.571q0 68-48.286 116.286t-116.286 48.286h-548.571q-68 0-116.286-48.286t-48.286-116.286v-548.571q0-68 48.286-116.286t116.286-48.286h548.571q68 0 116.286 48.286t48.286 116.286z"
				],
				"attrs": [],
				"tags": [
					"plus-square"
				],
				"defaultCode": 61694,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 227,
				"order": 228,
				"prevSize": 28,
				"code": 61694,
				"name": "plus-square"
			},
			"setIdx": 0,
			"iconIdx": 245
		},
		{
			"icon": {
				"width": 585,
				"paths": [
					"M358.286 786.286q0 7.429-5.714 13.143l-28.571 28.571q-5.714 5.714-13.143 5.714t-13.143-5.714l-266.286-266.286q-5.714-5.714-5.714-13.143t5.714-13.143l266.286-266.286q5.714-5.714 13.143-5.714t13.143 5.714l28.571 28.571q5.714 5.714 5.714 13.143t-5.714 13.143l-224.571 224.571 224.571 224.571q5.714 5.714 5.714 13.143zM577.714 786.286q0 7.429-5.714 13.143l-28.571 28.571q-5.714 5.714-13.143 5.714t-13.143-5.714l-266.286-266.286q-5.714-5.714-5.714-13.143t5.714-13.143l266.286-266.286q5.714-5.714 13.143-5.714t13.143 5.714l28.571 28.571q5.714 5.714 5.714 13.143t-5.714 13.143l-224.571 224.571 224.571 224.571q5.714 5.714 5.714 13.143z"
				],
				"attrs": [],
				"tags": [
					"angle-double-left"
				],
				"defaultCode": 61696,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 228,
				"order": 229,
				"prevSize": 28,
				"code": 61696,
				"name": "angle-double-left"
			},
			"setIdx": 0,
			"iconIdx": 246
		},
		{
			"icon": {
				"width": 585,
				"paths": [
					"M340 548.571q0 7.429-5.714 13.143l-266.286 266.286q-5.714 5.714-13.143 5.714t-13.143-5.714l-28.571-28.571q-5.714-5.714-5.714-13.143t5.714-13.143l224.571-224.571-224.571-224.571q-5.714-5.714-5.714-13.143t5.714-13.143l28.571-28.571q5.714-5.714 13.143-5.714t13.143 5.714l266.286 266.286q5.714 5.714 5.714 13.143zM559.429 548.571q0 7.429-5.714 13.143l-266.286 266.286q-5.714 5.714-13.143 5.714t-13.143-5.714l-28.571-28.571q-5.714-5.714-5.714-13.143t5.714-13.143l224.571-224.571-224.571-224.571q-5.714-5.714-5.714-13.143t5.714-13.143l28.571-28.571q5.714-5.714 13.143-5.714t13.143 5.714l266.286 266.286q5.714 5.714 5.714 13.143z"
				],
				"attrs": [],
				"tags": [
					"angle-double-right"
				],
				"defaultCode": 61697,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 229,
				"order": 230,
				"prevSize": 28,
				"code": 61697,
				"name": "angle-double-right"
			},
			"setIdx": 0,
			"iconIdx": 247
		},
		{
			"icon": {
				"width": 658,
				"paths": [
					"M614.286 749.714q0 7.429-5.714 13.143l-28.571 28.571q-5.714 5.714-13.143 5.714t-13.143-5.714l-224.571-224.571-224.571 224.571q-5.714 5.714-13.143 5.714t-13.143-5.714l-28.571-28.571q-5.714-5.714-5.714-13.143t5.714-13.143l266.286-266.286q5.714-5.714 13.143-5.714t13.143 5.714l266.286 266.286q5.714 5.714 5.714 13.143zM614.286 530.286q0 7.429-5.714 13.143l-28.571 28.571q-5.714 5.714-13.143 5.714t-13.143-5.714l-224.571-224.571-224.571 224.571q-5.714 5.714-13.143 5.714t-13.143-5.714l-28.571-28.571q-5.714-5.714-5.714-13.143t5.714-13.143l266.286-266.286q5.714-5.714 13.143-5.714t13.143 5.714l266.286 266.286q5.714 5.714 5.714 13.143z"
				],
				"attrs": [],
				"tags": [
					"angle-double-up"
				],
				"defaultCode": 61698,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 230,
				"order": 231,
				"prevSize": 28,
				"code": 61698,
				"name": "angle-double-up"
			},
			"setIdx": 0,
			"iconIdx": 248
		},
		{
			"icon": {
				"width": 658,
				"paths": [
					"M614.286 493.714q0 7.429-5.714 13.143l-266.286 266.286q-5.714 5.714-13.143 5.714t-13.143-5.714l-266.286-266.286q-5.714-5.714-5.714-13.143t5.714-13.143l28.571-28.571q5.714-5.714 13.143-5.714t13.143 5.714l224.571 224.571 224.571-224.571q5.714-5.714 13.143-5.714t13.143 5.714l28.571 28.571q5.714 5.714 5.714 13.143zM614.286 274.286q0 7.429-5.714 13.143l-266.286 266.286q-5.714 5.714-13.143 5.714t-13.143-5.714l-266.286-266.286q-5.714-5.714-5.714-13.143t5.714-13.143l28.571-28.571q5.714-5.714 13.143-5.714t13.143 5.714l224.571 224.571 224.571-224.571q5.714-5.714 13.143-5.714t13.143 5.714l28.571 28.571q5.714 5.714 5.714 13.143z"
				],
				"attrs": [],
				"tags": [
					"angle-double-down"
				],
				"defaultCode": 61699,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 231,
				"order": 232,
				"prevSize": 28,
				"code": 61699,
				"name": "angle-double-down"
			},
			"setIdx": 0,
			"iconIdx": 249
		},
		{
			"icon": {
				"width": 366,
				"paths": [
					"M358.286 310.857q0 7.429-5.714 13.143l-224.571 224.571 224.571 224.571q5.714 5.714 5.714 13.143t-5.714 13.143l-28.571 28.571q-5.714 5.714-13.143 5.714t-13.143-5.714l-266.286-266.286q-5.714-5.714-5.714-13.143t5.714-13.143l266.286-266.286q5.714-5.714 13.143-5.714t13.143 5.714l28.571 28.571q5.714 5.714 5.714 13.143z"
				],
				"attrs": [],
				"tags": [
					"angle-left"
				],
				"defaultCode": 61700,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 232,
				"order": 233,
				"prevSize": 28,
				"code": 61700,
				"name": "angle-left"
			},
			"setIdx": 0,
			"iconIdx": 250
		},
		{
			"icon": {
				"width": 366,
				"paths": [
					"M340 548.571q0 7.429-5.714 13.143l-266.286 266.286q-5.714 5.714-13.143 5.714t-13.143-5.714l-28.571-28.571q-5.714-5.714-5.714-13.143t5.714-13.143l224.571-224.571-224.571-224.571q-5.714-5.714-5.714-13.143t5.714-13.143l28.571-28.571q5.714-5.714 13.143-5.714t13.143 5.714l266.286 266.286q5.714 5.714 5.714 13.143z"
				],
				"attrs": [],
				"tags": [
					"angle-right"
				],
				"defaultCode": 61701,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 233,
				"order": 234,
				"prevSize": 28,
				"code": 61701,
				"name": "angle-right"
			},
			"setIdx": 0,
			"iconIdx": 251
		},
		{
			"icon": {
				"width": 658,
				"paths": [
					"M614.286 676.571q0 7.429-5.714 13.143l-28.571 28.571q-5.714 5.714-13.143 5.714t-13.143-5.714l-224.571-224.571-224.571 224.571q-5.714 5.714-13.143 5.714t-13.143-5.714l-28.571-28.571q-5.714-5.714-5.714-13.143t5.714-13.143l266.286-266.286q5.714-5.714 13.143-5.714t13.143 5.714l266.286 266.286q5.714 5.714 5.714 13.143z"
				],
				"attrs": [],
				"tags": [
					"angle-up"
				],
				"defaultCode": 61702,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 234,
				"order": 235,
				"prevSize": 28,
				"code": 61702,
				"name": "angle-up"
			},
			"setIdx": 0,
			"iconIdx": 252
		},
		{
			"icon": {
				"width": 658,
				"paths": [
					"M614.286 420.571q0 7.429-5.714 13.143l-266.286 266.286q-5.714 5.714-13.143 5.714t-13.143-5.714l-266.286-266.286q-5.714-5.714-5.714-13.143t5.714-13.143l28.571-28.571q5.714-5.714 13.143-5.714t13.143 5.714l224.571 224.571 224.571-224.571q5.714-5.714 13.143-5.714t13.143 5.714l28.571 28.571q5.714 5.714 5.714 13.143z"
				],
				"attrs": [],
				"tags": [
					"angle-down"
				],
				"defaultCode": 61703,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 235,
				"order": 236,
				"prevSize": 28,
				"code": 61703,
				"name": "angle-down"
			},
			"setIdx": 0,
			"iconIdx": 253
		},
		{
			"icon": {
				"width": 1097,
				"paths": [
					"M1024 566.857v-475.429q0-7.429-5.429-12.857t-12.857-5.429h-914.286q-7.429 0-12.857 5.429t-5.429 12.857v475.429q0 7.429 5.429 12.857t12.857 5.429h914.286q7.429 0 12.857-5.429t5.429-12.857zM1097.143 91.429v621.714q0 37.714-26.857 64.571t-64.571 26.857h-310.857q0 21.143 9.143 44.286t18.286 40.571 9.143 24.857q0 14.857-10.857 25.714t-25.714 10.857h-292.571q-14.857 0-25.714-10.857t-10.857-25.714q0-8 9.143-25.143t18.286-40 9.143-44.571h-310.857q-37.714 0-64.571-26.857t-26.857-64.571v-621.714q0-37.714 26.857-64.571t64.571-26.857h914.286q37.714 0 64.571 26.857t26.857 64.571z"
				],
				"attrs": [],
				"tags": [
					"desktop"
				],
				"defaultCode": 61704,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 236,
				"order": 237,
				"prevSize": 28,
				"code": 61704,
				"name": "desktop"
			},
			"setIdx": 0,
			"iconIdx": 254
		},
		{
			"icon": {
				"width": 1097,
				"paths": [
					"M237.714 731.429q-37.714 0-64.571-26.857t-26.857-64.571v-402.286q0-37.714 26.857-64.571t64.571-26.857h621.714q37.714 0 64.571 26.857t26.857 64.571v402.286q0 37.714-26.857 64.571t-64.571 26.857h-621.714zM219.429 237.714v402.286q0 7.429 5.429 12.857t12.857 5.429h621.714q7.429 0 12.857-5.429t5.429-12.857v-402.286q0-7.429-5.429-12.857t-12.857-5.429h-621.714q-7.429 0-12.857 5.429t-5.429 12.857zM1005.714 768h91.429v54.857q0 22.857-26.857 38.857t-64.571 16h-914.286q-37.714 0-64.571-16t-26.857-38.857v-54.857h1005.714zM594.286 822.857q9.143 0 9.143-9.143t-9.143-9.143h-91.429q-9.143 0-9.143 9.143t9.143 9.143h91.429z"
				],
				"attrs": [],
				"tags": [
					"laptop"
				],
				"defaultCode": 61705,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 237,
				"order": 238,
				"prevSize": 28,
				"code": 61705,
				"name": "laptop"
			},
			"setIdx": 0,
			"iconIdx": 255
		},
		{
			"icon": {
				"width": 658,
				"paths": [
					"M365.714 804.571q0-14.857-10.857-25.714t-25.714-10.857-25.714 10.857-10.857 25.714 10.857 25.714 25.714 10.857 25.714-10.857 10.857-25.714zM585.143 713.143v-548.571q0-7.429-5.429-12.857t-12.857-5.429h-475.429q-7.429 0-12.857 5.429t-5.429 12.857v548.571q0 7.429 5.429 12.857t12.857 5.429h475.429q7.429 0 12.857-5.429t5.429-12.857zM658.286 164.571v621.714q0 37.714-26.857 64.571t-64.571 26.857h-475.429q-37.714 0-64.571-26.857t-26.857-64.571v-621.714q0-37.714 26.857-64.571t64.571-26.857h475.429q37.714 0 64.571 26.857t26.857 64.571z"
				],
				"attrs": [],
				"tags": [
					"tablet"
				],
				"defaultCode": 61706,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 238,
				"order": 239,
				"prevSize": 28,
				"code": 61706,
				"name": "tablet"
			},
			"setIdx": 0,
			"iconIdx": 256
		},
		{
			"icon": {
				"width": 439,
				"paths": [
					"M265.143 804.571q0-18.857-13.429-32.286t-32.286-13.429-32.286 13.429-13.429 32.286 13.429 32.286 32.286 13.429 32.286-13.429 13.429-32.286zM384 713.143v-402.286q0-7.429-5.429-12.857t-12.857-5.429h-292.571q-7.429 0-12.857 5.429t-5.429 12.857v402.286q0 7.429 5.429 12.857t12.857 5.429h292.571q7.429 0 12.857-5.429t5.429-12.857zM274.286 228.571q0-9.143-9.143-9.143h-91.429q-9.143 0-9.143 9.143t9.143 9.143h91.429q9.143 0 9.143-9.143zM438.857 219.429v585.143q0 29.714-21.714 51.429t-51.429 21.714h-292.571q-29.714 0-51.429-21.714t-21.714-51.429v-585.143q0-29.714 21.714-51.429t51.429-21.714h292.571q29.714 0 51.429 21.714t21.714 51.429z"
				],
				"attrs": [],
				"tags": [
					"mobile",
					"mobile-phone"
				],
				"defaultCode": 61707,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 239,
				"order": 240,
				"prevSize": 28,
				"code": 61707,
				"name": "mobile"
			},
			"setIdx": 0,
			"iconIdx": 257
		},
		{
			"icon": {
				"paths": [
					"M438.857 201.143q-84.571 0-156 41.714t-113.143 113.143-41.714 156 41.714 156 113.143 113.143 156 41.714 156-41.714 113.143-113.143 41.714-156-41.714-156-113.143-113.143-156-41.714zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"circle-o"
				],
				"defaultCode": 61708,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 240,
				"order": 241,
				"prevSize": 28,
				"code": 61708,
				"name": "circle-o"
			},
			"setIdx": 0,
			"iconIdx": 258
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M438.857 548.571v219.429q0 45.714-32 77.714t-77.714 32h-219.429q-45.714 0-77.714-32t-32-77.714v-402.286q0-59.429 23.143-113.429t62.571-93.429 93.429-62.571 113.429-23.143h36.571q14.857 0 25.714 10.857t10.857 25.714v73.143q0 14.857-10.857 25.714t-25.714 10.857h-36.571q-60.571 0-103.429 42.857t-42.857 103.429v18.286q0 22.857 16 38.857t38.857 16h128q45.714 0 77.714 32t32 77.714zM950.857 548.571v219.429q0 45.714-32 77.714t-77.714 32h-219.429q-45.714 0-77.714-32t-32-77.714v-402.286q0-59.429 23.143-113.429t62.571-93.429 93.429-62.571 113.429-23.143h36.571q14.857 0 25.714 10.857t10.857 25.714v73.143q0 14.857-10.857 25.714t-25.714 10.857h-36.571q-60.571 0-103.429 42.857t-42.857 103.429v18.286q0 22.857 16 38.857t38.857 16h128q45.714 0 77.714 32t32 77.714z"
				],
				"attrs": [],
				"tags": [
					"quote-left"
				],
				"defaultCode": 61709,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 241,
				"order": 242,
				"prevSize": 28,
				"code": 61709,
				"name": "quote-left"
			},
			"setIdx": 0,
			"iconIdx": 259
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M438.857 182.857v402.286q0 59.429-23.143 113.429t-62.571 93.429-93.429 62.571-113.429 23.143h-36.571q-14.857 0-25.714-10.857t-10.857-25.714v-73.143q0-14.857 10.857-25.714t25.714-10.857h36.571q60.571 0 103.429-42.857t42.857-103.429v-18.286q0-22.857-16-38.857t-38.857-16h-128q-45.714 0-77.714-32t-32-77.714v-219.429q0-45.714 32-77.714t77.714-32h219.429q45.714 0 77.714 32t32 77.714zM950.857 182.857v402.286q0 59.429-23.143 113.429t-62.571 93.429-93.429 62.571-113.429 23.143h-36.571q-14.857 0-25.714-10.857t-10.857-25.714v-73.143q0-14.857 10.857-25.714t25.714-10.857h36.571q60.571 0 103.429-42.857t42.857-103.429v-18.286q0-22.857-16-38.857t-38.857-16h-128q-45.714 0-77.714-32t-32-77.714v-219.429q0-45.714 32-77.714t77.714-32h219.429q45.714 0 77.714 32t32 77.714z"
				],
				"attrs": [],
				"tags": [
					"quote-right"
				],
				"defaultCode": 61710,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 242,
				"order": 243,
				"prevSize": 28,
				"code": 61710,
				"name": "quote-right"
			},
			"setIdx": 0,
			"iconIdx": 260
		},
		{
			"icon": {
				"width": 896,
				"paths": [
					"M283.429 768q0 34.286-24.286 58.286t-58 24q-34.286 0-58.286-24t-24-58.286 24-58.286 58.286-24q33.714 0 58 24t24.286 58.286zM530.286 877.714q0 30.286-21.429 51.714t-51.714 21.429-51.714-21.429-21.429-51.714 21.429-51.714 51.714-21.429 51.714 21.429 21.429 51.714zM182.857 512q0 37.714-26.857 64.571t-64.571 26.857-64.571-26.857-26.857-64.571 26.857-64.571 64.571-26.857 64.571 26.857 26.857 64.571zM777.143 768q0 26.286-18.857 45.143t-45.143 18.857-45.143-18.857-18.857-45.143 18.857-45.143 45.143-18.857 45.143 18.857 18.857 45.143zM301.714 256q0 41.714-29.429 71.143t-71.143 29.429-71.143-29.429-29.429-71.143 29.429-71.143 71.143-29.429 71.143 29.429 29.429 71.143zM566.857 146.286q0 45.714-32 77.714t-77.714 32-77.714-32-32-77.714 32-77.714 77.714-32 77.714 32 32 77.714zM877.714 512q0 22.857-16 38.857t-38.857 16-38.857-16-16-38.857 16-38.857 38.857-16 38.857 16 16 38.857zM758.857 256q0 18.857-13.429 32.286t-32.286 13.429-32.286-13.429-13.429-32.286 13.429-32.286 32.286-13.429 32.286 13.429 13.429 32.286z"
				],
				"attrs": [],
				"tags": [
					"spinner"
				],
				"defaultCode": 61712,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 243,
				"order": 244,
				"prevSize": 28,
				"code": 61712,
				"name": "spinner"
			},
			"setIdx": 0,
			"iconIdx": 261
		},
		{
			"icon": {
				"paths": [
					"M877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"circle"
				],
				"defaultCode": 61713,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 244,
				"order": 245,
				"prevSize": 28,
				"code": 61713,
				"name": "circle"
			},
			"setIdx": 0,
			"iconIdx": 262
		},
		{
			"icon": {
				"paths": [
					"M1024 640q0 94.857-72.571 257.714-1.714 4-6 13.714t-7.714 17.143-7.429 12.571q-6.857 9.714-16 9.714-8.571 0-13.429-5.714t-4.857-14.286q0-5.143 1.429-15.143t1.429-13.429q2.857-38.857 2.857-70.286 0-57.714-10-103.429t-27.714-79.143-45.714-57.714-60.286-39.714-76-24.286-88-12.286-100.286-3.429h-128v146.286q0 14.857-10.857 25.714t-25.714 10.857-25.714-10.857l-292.571-292.571q-10.857-10.857-10.857-25.714t10.857-25.714l292.571-292.571q10.857-10.857 25.714-10.857t25.714 10.857 10.857 25.714v146.286h128q407.429 0 500 230.286 30.286 76.571 30.286 190.286z"
				],
				"attrs": [],
				"tags": [
					"mail-reply",
					"reply"
				],
				"defaultCode": 61714,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 245,
				"order": 246,
				"prevSize": 28,
				"code": 61714,
				"name": "mail-reply"
			},
			"setIdx": 0,
			"iconIdx": 263
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M365.714 694.857q0 22.857-7.143 46.857t-24.571 43.429-41.429 19.429-41.429-19.429-24.571-43.429-7.143-46.857 7.143-46.857 24.571-43.429 41.429-19.429 41.429 19.429 24.571 43.429 7.143 46.857zM731.429 694.857q0 22.857-7.143 46.857t-24.571 43.429-41.429 19.429-41.429-19.429-24.571-43.429-7.143-46.857 7.143-46.857 24.571-43.429 41.429-19.429 41.429 19.429 24.571 43.429 7.143 46.857zM822.857 694.857q0-68.571-39.429-116.571t-106.857-48q-23.429 0-111.429 12-40.571 6.286-89.714 6.286t-89.714-6.286q-86.857-12-111.429-12-67.429 0-106.857 48t-39.429 116.571q0 50.286 18.286 87.714t46.286 58.857 69.714 34.286 80 16.857 85.143 4h96q46.857 0 85.143-4t80-16.857 69.714-34.286 46.286-58.857 18.286-87.714zM950.857 594.286q0 118.286-34.857 189.143-21.714 44-60.286 76t-80.571 49.143-97.143 27.143-98 12.571-95.429 2.571q-44.571 0-81.143-1.714t-84.286-7.143-87.143-17.143-78.286-29.429-69.143-46.286-49.143-65.714q-35.429-70.286-35.429-189.143 0-135.429 77.714-226.286-15.429-46.857-15.429-97.143 0-66.286 29.143-124.571 61.714 0 108.571 22.571t108 70.571q84-20 176.571-20 84.571 0 160 18.286 60-46.857 106.857-69.143t108-22.286q29.143 58.286 29.143 124.571 0 49.714-15.429 96 77.714 91.429 77.714 227.429z"
				],
				"attrs": [],
				"tags": [
					"github-alt"
				],
				"defaultCode": 61715,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 246,
				"order": 247,
				"prevSize": 28,
				"code": 61715,
				"name": "github-alt"
			},
			"setIdx": 0,
			"iconIdx": 264
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M877.714 749.714v-402.286q0-22.857-16-38.857t-38.857-16h-402.286q-22.857 0-38.857-16t-16-38.857v-36.571q0-22.857-16-38.857t-38.857-16h-182.857q-22.857 0-38.857 16t-16 38.857v548.571q0 22.857 16 38.857t38.857 16h694.857q22.857 0 38.857-16t16-38.857zM950.857 347.429v402.286q0 52.571-37.714 90.286t-90.286 37.714h-694.857q-52.571 0-90.286-37.714t-37.714-90.286v-548.571q0-52.571 37.714-90.286t90.286-37.714h182.857q52.571 0 90.286 37.714t37.714 90.286v18.286h384q52.571 0 90.286 37.714t37.714 90.286z"
				],
				"attrs": [],
				"tags": [
					"folder-o"
				],
				"defaultCode": 61716,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 247,
				"order": 248,
				"prevSize": 28,
				"code": 61716,
				"name": "folder-o"
			},
			"setIdx": 0,
			"iconIdx": 265
		},
		{
			"icon": {
				"width": 1097,
				"paths": [
					"M1017.714 532q0-20-30.286-20h-621.714q-22.857 0-48.857 12.286t-40.857 30l-168 207.429q-10.286 13.714-10.286 22.857 0 20 30.286 20h621.714q22.857 0 49.143-12.571t40.571-30.286l168-207.429q10.286-12.571 10.286-22.286zM365.714 438.857h438.857v-91.429q0-22.857-16-38.857t-38.857-16h-329.143q-22.857 0-38.857-16t-16-38.857v-36.571q0-22.857-16-38.857t-38.857-16h-182.857q-22.857 0-38.857 16t-16 38.857v487.429l146.286-180q25.143-30.286 66.286-50t80-19.714zM1090.857 532q0 35.429-26.286 68.571l-168.571 207.429q-24.571 30.286-66.286 50t-80 19.714h-621.714q-52.571 0-90.286-37.714t-37.714-90.286v-548.571q0-52.571 37.714-90.286t90.286-37.714h182.857q52.571 0 90.286 37.714t37.714 90.286v18.286h310.857q52.571 0 90.286 37.714t37.714 90.286v91.429h109.714q30.857 0 56.571 14t38.286 40.286q8.571 18.286 8.571 38.857z"
				],
				"attrs": [],
				"tags": [
					"folder-open-o"
				],
				"defaultCode": 61717,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 248,
				"order": 249,
				"prevSize": 28,
				"code": 61717,
				"name": "folder-open-o"
			},
			"setIdx": 0,
			"iconIdx": 266
		},
		{
			"icon": {
				"paths": [
					"M648 614.286q-21.143 69.143-78.857 111.429t-130.286 42.286-130.286-42.286-78.857-111.429q-4.571-14.286 2.286-27.714t21.714-18q14.286-4.571 27.714 2.286t18 21.714q14.286 45.714 52.857 74t86.571 28.286 86.571-28.286 52.857-74q4.571-14.857 18.286-21.714t28-2.286 21.143 18 2.286 27.714zM365.714 365.714q0 30.286-21.429 51.714t-51.714 21.429-51.714-21.429-21.429-51.714 21.429-51.714 51.714-21.429 51.714 21.429 21.429 51.714zM658.286 365.714q0 30.286-21.429 51.714t-51.714 21.429-51.714-21.429-21.429-51.714 21.429-51.714 51.714-21.429 51.714 21.429 21.429 51.714zM804.571 512q0-74.286-29.143-142t-78-116.571-116.571-78-142-29.143-142 29.143-116.571 78-78 116.571-29.143 142 29.143 142 78 116.571 116.571 78 142 29.143 142-29.143 116.571-78 78-116.571 29.143-142zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"smile-o"
				],
				"defaultCode": 61720,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 249,
				"order": 250,
				"prevSize": 28,
				"code": 61720,
				"name": "smile-o"
			},
			"setIdx": 0,
			"iconIdx": 267
		},
		{
			"icon": {
				"paths": [
					"M648 702.286q4.571 14.286-2.286 27.714t-21.143 18-28-2.286-18.286-21.714q-14.286-45.714-52.857-74t-86.571-28.286-86.571 28.286-52.857 74q-4.571 14.857-18 21.714t-27.714 2.286q-14.857-4.571-21.714-18t-2.286-27.714q21.143-69.143 78.857-111.429t130.286-42.286 130.286 42.286 78.857 111.429zM365.714 365.714q0 30.286-21.429 51.714t-51.714 21.429-51.714-21.429-21.429-51.714 21.429-51.714 51.714-21.429 51.714 21.429 21.429 51.714zM658.286 365.714q0 30.286-21.429 51.714t-51.714 21.429-51.714-21.429-21.429-51.714 21.429-51.714 51.714-21.429 51.714 21.429 21.429 51.714zM804.571 512q0-74.286-29.143-142t-78-116.571-116.571-78-142-29.143-142 29.143-116.571 78-78 116.571-29.143 142 29.143 142 78 116.571 116.571 78 142 29.143 142-29.143 116.571-78 78-116.571 29.143-142zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"frown-o"
				],
				"defaultCode": 61721,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 250,
				"order": 251,
				"prevSize": 28,
				"code": 61721,
				"name": "frown-o"
			},
			"setIdx": 0,
			"iconIdx": 268
		},
		{
			"icon": {
				"paths": [
					"M658.286 621.714q0 14.857-10.857 25.714t-25.714 10.857h-365.714q-14.857 0-25.714-10.857t-10.857-25.714 10.857-25.714 25.714-10.857h365.714q14.857 0 25.714 10.857t10.857 25.714zM365.714 365.714q0 30.286-21.429 51.714t-51.714 21.429-51.714-21.429-21.429-51.714 21.429-51.714 51.714-21.429 51.714 21.429 21.429 51.714zM658.286 365.714q0 30.286-21.429 51.714t-51.714 21.429-51.714-21.429-21.429-51.714 21.429-51.714 51.714-21.429 51.714 21.429 21.429 51.714zM804.571 512q0-74.286-29.143-142t-78-116.571-116.571-78-142-29.143-142 29.143-116.571 78-78 116.571-29.143 142 29.143 142 78 116.571 116.571 78 142 29.143 142-29.143 116.571-78 78-116.571 29.143-142zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"meh-o"
				],
				"defaultCode": 61722,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 251,
				"order": 252,
				"prevSize": 28,
				"code": 61722,
				"name": "meh-o"
			},
			"setIdx": 0,
			"iconIdx": 269
		},
		{
			"icon": {
				"width": 1097,
				"paths": [
					"M475.429 621.714v-73.143q0-8-5.143-13.143t-13.143-5.143h-109.714v-109.714q0-8-5.143-13.143t-13.143-5.143h-73.143q-8 0-13.143 5.143t-5.143 13.143v109.714h-109.714q-8 0-13.143 5.143t-5.143 13.143v73.143q0 8 5.143 13.143t13.143 5.143h109.714v109.714q0 8 5.143 13.143t13.143 5.143h73.143q8 0 13.143-5.143t5.143-13.143v-109.714h109.714q8 0 13.143-5.143t5.143-13.143zM804.571 658.286q0-30.286-21.429-51.714t-51.714-21.429-51.714 21.429-21.429 51.714 21.429 51.714 51.714 21.429 51.714-21.429 21.429-51.714zM950.857 512q0-30.286-21.429-51.714t-51.714-21.429-51.714 21.429-21.429 51.714 21.429 51.714 51.714 21.429 51.714-21.429 21.429-51.714zM1097.143 585.143q0 121.143-85.714 206.857t-206.857 85.714q-109.714 0-193.143-73.143h-125.714q-83.429 73.143-193.143 73.143-121.143 0-206.857-85.714t-85.714-206.857 85.714-206.857 206.857-85.714h512q121.143 0 206.857 85.714t85.714 206.857z"
				],
				"attrs": [],
				"tags": [
					"gamepad"
				],
				"defaultCode": 61723,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 252,
				"order": 253,
				"prevSize": 28,
				"code": 61723,
				"name": "gamepad"
			},
			"setIdx": 0,
			"iconIdx": 270
		},
		{
			"icon": {
				"width": 1097,
				"paths": [
					"M219.429 667.429v54.857q0 9.143-9.143 9.143h-54.857q-9.143 0-9.143-9.143v-54.857q0-9.143 9.143-9.143h54.857q9.143 0 9.143 9.143zM292.571 521.143v54.857q0 9.143-9.143 9.143h-128q-9.143 0-9.143-9.143v-54.857q0-9.143 9.143-9.143h128q9.143 0 9.143 9.143zM219.429 374.857v54.857q0 9.143-9.143 9.143h-54.857q-9.143 0-9.143-9.143v-54.857q0-9.143 9.143-9.143h54.857q9.143 0 9.143 9.143zM804.571 667.429v54.857q0 9.143-9.143 9.143h-493.714q-9.143 0-9.143-9.143v-54.857q0-9.143 9.143-9.143h493.714q9.143 0 9.143 9.143zM438.857 521.143v54.857q0 9.143-9.143 9.143h-54.857q-9.143 0-9.143-9.143v-54.857q0-9.143 9.143-9.143h54.857q9.143 0 9.143 9.143zM365.714 374.857v54.857q0 9.143-9.143 9.143h-54.857q-9.143 0-9.143-9.143v-54.857q0-9.143 9.143-9.143h54.857q9.143 0 9.143 9.143zM585.143 521.143v54.857q0 9.143-9.143 9.143h-54.857q-9.143 0-9.143-9.143v-54.857q0-9.143 9.143-9.143h54.857q9.143 0 9.143 9.143zM512 374.857v54.857q0 9.143-9.143 9.143h-54.857q-9.143 0-9.143-9.143v-54.857q0-9.143 9.143-9.143h54.857q9.143 0 9.143 9.143zM731.429 521.143v54.857q0 9.143-9.143 9.143h-54.857q-9.143 0-9.143-9.143v-54.857q0-9.143 9.143-9.143h54.857q9.143 0 9.143 9.143zM950.857 667.429v54.857q0 9.143-9.143 9.143h-54.857q-9.143 0-9.143-9.143v-54.857q0-9.143 9.143-9.143h54.857q9.143 0 9.143 9.143zM658.286 374.857v54.857q0 9.143-9.143 9.143h-54.857q-9.143 0-9.143-9.143v-54.857q0-9.143 9.143-9.143h54.857q9.143 0 9.143 9.143zM804.571 374.857v54.857q0 9.143-9.143 9.143h-54.857q-9.143 0-9.143-9.143v-54.857q0-9.143 9.143-9.143h54.857q9.143 0 9.143 9.143zM950.857 374.857v201.143q0 9.143-9.143 9.143h-128q-9.143 0-9.143-9.143v-54.857q0-9.143 9.143-9.143h64v-137.143q0-9.143 9.143-9.143h54.857q9.143 0 9.143 9.143zM1024 804.571v-512h-950.857v512h950.857zM1097.143 292.571v512q0 30.286-21.429 51.714t-51.714 21.429h-950.857q-30.286 0-51.714-21.429t-21.429-51.714v-512q0-30.286 21.429-51.714t51.714-21.429h950.857q30.286 0 51.714 21.429t21.429 51.714z"
				],
				"attrs": [],
				"tags": [
					"keyboard-o"
				],
				"defaultCode": 61724,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 253,
				"order": 254,
				"prevSize": 28,
				"code": 61724,
				"name": "keyboard-o"
			},
			"setIdx": 0,
			"iconIdx": 271
		},
		{
			"icon": {
				"paths": [
					"M950.857 597.143v-352q-96.571 52-174.857 52-46.857 0-82.857-18.286-57.143-28-105.143-43.714t-101.714-15.714q-98.857 0-230.286 72.571v342.286q140-64.571 247.429-64.571 31.429 0 59.143 4.286t56 14.857 44 17.714 47.143 22.571l16 8q25.143 12.571 57.714 12.571 68.571 0 167.429-52.571zM182.857 146.286q0 20-10 36.571t-26.571 26.286v723.429q0 8-5.143 13.143t-13.143 5.143h-36.571q-8 0-13.143-5.143t-5.143-13.143v-723.429q-16.571-9.714-26.571-26.286t-10-36.571q0-30.286 21.429-51.714t51.714-21.429 51.714 21.429 21.429 51.714zM1024 182.857v436q0 22.286-20 32.571-5.714 2.857-9.714 5.143-124.571 66.286-210.857 66.286-50.286 0-90.286-20l-16-8q-36.571-18.857-56.571-27.429t-52-16.571-65.143-8q-58.286 0-134.571 25.143t-130.571 58.286q-8.571 5.143-18.857 5.143-9.143 0-18.286-4.571-18.286-10.857-18.286-32v-424q0-20 17.714-31.429 20-12 44.857-24.286t65.143-29.714 87.143-28.286 88.571-10.857q64 0 119.429 17.714t119.429 49.143q21.714 10.857 50.857 10.857 69.714 0 177.143-64 12.571-6.857 17.714-9.714 17.714-9.143 35.429 1.143 17.714 11.429 17.714 31.429z"
				],
				"attrs": [],
				"tags": [
					"flag-o"
				],
				"defaultCode": 61725,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 254,
				"order": 255,
				"prevSize": 28,
				"code": 61725,
				"name": "flag-o"
			},
			"setIdx": 0,
			"iconIdx": 272
		},
		{
			"icon": {
				"paths": [
					"M475.429 571.429v-109.714q-103.429 9.143-219.429 66.857v105.714q117.143-54.857 219.429-62.857zM475.429 332.571v-112.571q-98.286 4.571-219.429 72v108q122.857-63.429 219.429-67.429zM950.857 597.143v-105.143q-134.286 66.286-219.429 40.571v-128q-11.429-3.429-22.286-8.571-2.857-1.714-18.857-9.714t-19.714-9.714-18-8.571-19.714-8.857-18.571-7.429-20.571-7.143-20-4.857-22.571-4.286-22.571-2.286-25.143-1.143q-13.143 0-28 1.714v126.857h10.857q58.286 0 110 16.571t112.857 46.857q10.857 5.143 22.286 8.571v107.429q24 9.714 52 9.714 68.571 0 167.429-52.571zM950.857 353.143v-108q-96.571 52-174.857 52-25.714 0-44.571-4.571v112q84.571 24 219.429-51.429zM182.857 146.286q0 20-10 36.571t-26.571 26.286v723.429q0 8-5.143 13.143t-13.143 5.143h-36.571q-8 0-13.143-5.143t-5.143-13.143v-723.429q-16.571-9.714-26.571-26.286t-10-36.571q0-30.286 21.429-51.714t51.714-21.429 51.714 21.429 21.429 51.714zM1024 182.857v436q0 22.286-20 32.571-5.714 2.857-9.714 5.143-124.571 66.286-210.857 66.286-50.286 0-90.286-20l-16-8q-36.571-18.857-56.571-27.429t-52-16.571-65.143-8q-58.286 0-134.571 25.143t-130.571 58.286q-8.571 5.143-18.857 5.143-9.143 0-18.286-4.571-18.286-10.857-18.286-32v-424q0-20 17.714-31.429 20-12 44.857-24.286t65.143-29.714 87.143-28.286 88.571-10.857q64 0 119.429 17.714t119.429 49.143q21.714 10.857 50.857 10.857 69.714 0 177.143-64 12.571-6.857 17.714-9.714 17.714-9.143 35.429 1.143 17.714 11.429 17.714 31.429z"
				],
				"attrs": [],
				"tags": [
					"flag-checkered"
				],
				"defaultCode": 61726,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 255,
				"order": 256,
				"prevSize": 28,
				"code": 61726,
				"name": "flag-checkered"
			},
			"setIdx": 0,
			"iconIdx": 273
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M334.286 561.714l-266.286 266.286q-5.714 5.714-13.143 5.714t-13.143-5.714l-28.571-28.571q-5.714-5.714-5.714-13.143t5.714-13.143l224.571-224.571-224.571-224.571q-5.714-5.714-5.714-13.143t5.714-13.143l28.571-28.571q5.714-5.714 13.143-5.714t13.143 5.714l266.286 266.286q5.714 5.714 5.714 13.143t-5.714 13.143zM950.857 822.857v36.571q0 8-5.143 13.143t-13.143 5.143h-548.571q-8 0-13.143-5.143t-5.143-13.143v-36.571q0-8 5.143-13.143t13.143-5.143h548.571q8 0 13.143 5.143t5.143 13.143z"
				],
				"attrs": [],
				"tags": [
					"terminal"
				],
				"defaultCode": 61728,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 256,
				"order": 257,
				"prevSize": 28,
				"code": 61728,
				"name": "terminal"
			},
			"setIdx": 0,
			"iconIdx": 274
		},
		{
			"icon": {
				"width": 1097,
				"paths": [
					"M352.571 799.429l-28.571 28.571q-5.714 5.714-13.143 5.714t-13.143-5.714l-266.286-266.286q-5.714-5.714-5.714-13.143t5.714-13.143l266.286-266.286q5.714-5.714 13.143-5.714t13.143 5.714l28.571 28.571q5.714 5.714 5.714 13.143t-5.714 13.143l-224.571 224.571 224.571 224.571q5.714 5.714 5.714 13.143t-5.714 13.143zM690.286 189.714l-213.143 737.714q-2.286 7.429-8.857 11.143t-13.429 1.429l-35.429-9.714q-7.429-2.286-11.143-8.857t-1.429-14l213.143-737.714q2.286-7.429 8.857-11.143t13.429-1.429l35.429 9.714q7.429 2.286 11.143 8.857t1.429 14zM1065.714 561.714l-266.286 266.286q-5.714 5.714-13.143 5.714t-13.143-5.714l-28.571-28.571q-5.714-5.714-5.714-13.143t5.714-13.143l224.571-224.571-224.571-224.571q-5.714-5.714-5.714-13.143t5.714-13.143l28.571-28.571q5.714-5.714 13.143-5.714t13.143 5.714l266.286 266.286q5.714 5.714 5.714 13.143t-5.714 13.143z"
				],
				"attrs": [],
				"tags": [
					"code"
				],
				"defaultCode": 61729,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 257,
				"order": 258,
				"prevSize": 28,
				"code": 61729,
				"name": "code"
			},
			"setIdx": 0,
			"iconIdx": 275
		},
		{
			"icon": {
				"paths": [
					"M365.714 618.286v40q0 24-22.286 33.714-7.429 2.857-14.286 2.857-15.429 0-25.714-10.857l-292.571-292.571q-10.857-10.857-10.857-25.714t10.857-25.714l292.571-292.571q16.571-17.714 40-8 22.286 9.714 22.286 33.714v39.429l-226.857 227.429q-10.857 10.857-10.857 25.714t10.857 25.714zM1024 640q0 33.143-9.714 76.286t-22 78.857-27.429 71.429-23.143 51.714l-11.429 22.857q-4.571 9.714-16 9.714-3.429 0-5.143-0.571-14.286-4.571-13.143-19.429 24.571-228.571-60.571-322.857-36.571-40.571-97.429-63.143t-152.857-30v143.429q0 24-22.286 33.714-7.429 2.857-14.286 2.857-15.429 0-25.714-10.857l-292.571-292.571q-10.857-10.857-10.857-25.714t10.857-25.714l292.571-292.571q16.571-17.714 40-8 22.286 9.714 22.286 33.714v149.714q234.857 16 342.286 126.286 96.571 98.857 96.571 290.857z"
				],
				"attrs": [],
				"tags": [
					"mail-reply-all",
					"reply-all"
				],
				"defaultCode": 61730,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 258,
				"order": 259,
				"prevSize": 28,
				"code": 61730,
				"name": "mail-reply-all"
			},
			"setIdx": 0,
			"iconIdx": 276
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M677.714 546.857l146.857-142.857-241.143-35.429-17.143-34.286-90.857-184v550.286l33.714 17.714 181.714 96-34.286-202.857-6.857-37.714zM936 397.143l-207.429 202.286 49.143 285.714q2.857 18.857-3.429 29.429t-19.429 10.571q-9.714 0-22.857-6.857l-256.571-134.857-256.571 134.857q-13.143 6.857-22.857 6.857-13.143 0-19.429-10.571t-3.429-29.429l49.143-285.714-208-202.286q-18.286-18.286-13.143-34t30.857-19.714l286.857-41.714 128.571-260q11.429-23.429 28-23.429 16 0 28 23.429l128.571 260 286.857 41.714q25.714 4 30.857 19.714t-13.714 34z"
				],
				"attrs": [],
				"tags": [
					"star-half-empty",
					"star-half-full",
					"star-half-o"
				],
				"defaultCode": 61731,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 259,
				"order": 260,
				"prevSize": 28,
				"code": 61731,
				"name": "star-half-empty"
			},
			"setIdx": 0,
			"iconIdx": 277
		},
		{
			"icon": {
				"width": 805,
				"paths": [
					"M800.571 199.429l-365.714 731.429q-9.714 20-32.571 20-2.857 0-8.571-1.143-12.571-2.857-20.286-12.857t-7.714-22.571v-329.143h-329.143q-12.571 0-22.571-7.714t-12.857-20.286 2.286-24 16.571-17.143l731.429-365.714q7.429-4 16.571-4 15.429 0 25.714 10.857 8.571 8 10.571 19.714t-3.714 22.571z"
				],
				"attrs": [],
				"tags": [
					"location-arrow"
				],
				"defaultCode": 61732,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 260,
				"order": 261,
				"prevSize": 28,
				"code": 61732,
				"name": "location-arrow"
			},
			"setIdx": 0,
			"iconIdx": 278
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M318.286 731.429h340v-340zM292.571 705.714l340-340h-340v340zM950.857 749.714v109.714q0 8-5.143 13.143t-13.143 5.143h-128v128q0 8-5.143 13.143t-13.143 5.143h-109.714q-8 0-13.143-5.143t-5.143-13.143v-128h-493.714q-8 0-13.143-5.143t-5.143-13.143v-493.714h-128q-8 0-13.143-5.143t-5.143-13.143v-109.714q0-8 5.143-13.143t13.143-5.143h128v-128q0-8 5.143-13.143t13.143-5.143h109.714q8 0 13.143 5.143t5.143 13.143v128h486.286l140.571-141.143q5.714-5.143 13.143-5.143t13.143 5.143q5.143 5.714 5.143 13.143t-5.143 13.143l-141.143 140.571v486.286h128q8 0 13.143 5.143t5.143 13.143z"
				],
				"attrs": [],
				"tags": [
					"crop"
				],
				"defaultCode": 61733,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 261,
				"order": 262,
				"prevSize": 28,
				"code": 61733,
				"name": "crop"
			},
			"setIdx": 0,
			"iconIdx": 279
		},
		{
			"icon": {
				"width": 585,
				"paths": [
					"M164.571 841.143q0-22.857-16-38.857t-38.857-16-38.857 16-16 38.857 16 38.857 38.857 16 38.857-16 16-38.857zM164.571 182.857q0-22.857-16-38.857t-38.857-16-38.857 16-16 38.857 16 38.857 38.857 16 38.857-16 16-38.857zM530.286 256q0-22.857-16-38.857t-38.857-16-38.857 16-16 38.857 16 38.857 38.857 16 38.857-16 16-38.857zM585.143 256q0 29.714-14.857 55.143t-40 39.714q-1.143 164-129.143 236.571-38.857 21.714-116 46.286-73.143 22.857-96.857 40.571t-23.714 57.143v14.857q25.143 14.286 40 39.714t14.857 55.143q0 45.714-32 77.714t-77.714 32-77.714-32-32-77.714q0-29.714 14.857-55.143t40-39.714v-468.571q-25.143-14.286-40-39.714t-14.857-55.143q0-45.714 32-77.714t77.714-32 77.714 32 32 77.714q0 29.714-14.857 55.143t-40 39.714v284q30.857-14.857 88-32.571 31.429-9.714 50-16.857t40.286-17.714 33.714-22.571 23.143-29.143 16-39.714 4.857-52.286q-25.143-14.286-40-39.714t-14.857-55.143q0-45.714 32-77.714t77.714-32 77.714 32 32 77.714z"
				],
				"attrs": [],
				"tags": [
					"code-fork"
				],
				"defaultCode": 61734,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 262,
				"order": 263,
				"prevSize": 28,
				"code": 61734,
				"name": "code-fork"
			},
			"setIdx": 0,
			"iconIdx": 280
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M250.857 726.286l-146.286 146.286q-5.714 5.143-13.143 5.143-6.857 0-13.143-5.143-5.143-5.714-5.143-13.143t5.143-13.143l146.286-146.286q5.714-5.143 13.143-5.143t13.143 5.143q5.143 5.714 5.143 13.143t-5.143 13.143zM347.429 749.714v182.857q0 8-5.143 13.143t-13.143 5.143-13.143-5.143-5.143-13.143v-182.857q0-8 5.143-13.143t13.143-5.143 13.143 5.143 5.143 13.143zM219.429 621.714q0 8-5.143 13.143t-13.143 5.143h-182.857q-8 0-13.143-5.143t-5.143-13.143 5.143-13.143 13.143-5.143h182.857q8 0 13.143 5.143t5.143 13.143zM941.714 694.857q0 68.571-48.571 116l-84 83.429q-47.429 47.429-116 47.429-69.143 0-116.571-48.571l-190.857-191.429q-12-12-24-32l136.571-10.286 156 156.571q15.429 15.429 38.857 15.714t38.857-15.143l84-83.429q16-16 16-38.286 0-22.857-16-38.857l-156.571-157.143 10.286-136.571q20 12 32 24l192 192q48 49.143 48 116.571zM589.143 281.143l-136.571 10.286-156-156.571q-16-16-38.857-16-22.286 0-38.857 15.429l-84 83.429q-16 16-16 38.286 0 22.857 16 38.857l156.571 156.571-10.286 137.143q-20-12-32-24l-192-192q-48-49.143-48-116.571 0-68.571 48.571-116l84-83.429q47.429-47.429 116-47.429 69.143 0 116.571 48.571l190.857 191.429q12 12 24 32zM950.857 329.143q0 8-5.143 13.143t-13.143 5.143h-182.857q-8 0-13.143-5.143t-5.143-13.143 5.143-13.143 13.143-5.143h182.857q8 0 13.143 5.143t5.143 13.143zM640 18.286v182.857q0 8-5.143 13.143t-13.143 5.143-13.143-5.143-5.143-13.143v-182.857q0-8 5.143-13.143t13.143-5.143 13.143 5.143 5.143 13.143zM872.571 104.571l-146.286 146.286q-6.286 5.143-13.143 5.143t-13.143-5.143q-5.143-5.714-5.143-13.143t5.143-13.143l146.286-146.286q5.714-5.143 13.143-5.143t13.143 5.143q5.143 5.714 5.143 13.143t-5.143 13.143z"
				],
				"attrs": [],
				"tags": [
					"chain-broken",
					"unlink"
				],
				"defaultCode": 61735,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 263,
				"order": 264,
				"prevSize": 28,
				"code": 61735,
				"name": "chain-broken"
			},
			"setIdx": 0,
			"iconIdx": 281
		},
		{
			"icon": {
				"width": 585,
				"paths": [
					"M402.286 717.714v137.143q0 9.143-6.857 16t-16 6.857h-137.143q-9.143 0-16-6.857t-6.857-16v-137.143q0-9.143 6.857-16t16-6.857h137.143q9.143 0 16 6.857t6.857 16zM582.857 374.857q0 30.857-8.857 57.714t-20 43.714-31.429 34-32.857 24.857-34.857 20.286q-23.429 13.143-39.143 37.143t-15.714 38.286q0 9.714-6.857 18.571t-16 8.857h-137.143q-8.571 0-14.571-10.571t-6-21.429v-25.714q0-47.429 37.143-89.429t81.714-62q33.714-15.429 48-32t14.286-43.429q0-24-26.571-42.286t-61.429-18.286q-37.143 0-61.714 16.571-20 14.286-61.143 65.714-7.429 9.143-17.714 9.143-6.857 0-14.286-4.571l-93.714-71.429q-7.429-5.714-8.857-14.286t3.143-16q91.429-152 265.143-152 45.714 0 92 17.714t83.429 47.429 60.571 72.857 23.429 90.571z"
				],
				"attrs": [],
				"tags": [
					"question"
				],
				"defaultCode": 61736,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 264,
				"order": 265,
				"prevSize": 28,
				"code": 61736,
				"name": "question"
			},
			"setIdx": 0,
			"iconIdx": 282
		},
		{
			"icon": {
				"width": 366,
				"paths": [
					"M365.714 768v73.143q0 14.857-10.857 25.714t-25.714 10.857h-292.571q-14.857 0-25.714-10.857t-10.857-25.714v-73.143q0-14.857 10.857-25.714t25.714-10.857h36.571v-219.429h-36.571q-14.857 0-25.714-10.857t-10.857-25.714v-73.143q0-14.857 10.857-25.714t25.714-10.857h219.429q14.857 0 25.714 10.857t10.857 25.714v329.143h36.571q14.857 0 25.714 10.857t10.857 25.714zM292.571 109.714v109.714q0 14.857-10.857 25.714t-25.714 10.857h-146.286q-14.857 0-25.714-10.857t-10.857-25.714v-109.714q0-14.857 10.857-25.714t25.714-10.857h146.286q14.857 0 25.714 10.857t10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"info"
				],
				"defaultCode": 61737,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 265,
				"order": 266,
				"prevSize": 28,
				"code": 61737,
				"name": "info"
			},
			"setIdx": 0,
			"iconIdx": 283
		},
		{
			"icon": {
				"width": 366,
				"paths": [
					"M292.571 713.143v128q0 14.857-10.857 25.714t-25.714 10.857h-146.286q-14.857 0-25.714-10.857t-10.857-25.714v-128q0-14.857 10.857-25.714t25.714-10.857h146.286q14.857 0 25.714 10.857t10.857 25.714zM309.714 109.714l-16 438.857q-0.571 14.857-11.714 25.714t-26 10.857h-146.286q-14.857 0-26-10.857t-11.714-25.714l-16-438.857q-0.571-14.857 10-25.714t25.429-10.857h182.857q14.857 0 25.429 10.857t10 25.714z"
				],
				"attrs": [],
				"tags": [
					"exclamation"
				],
				"defaultCode": 61738,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 266,
				"order": 267,
				"prevSize": 28,
				"code": 61738,
				"name": "exclamation"
			},
			"setIdx": 0,
			"iconIdx": 284
		},
		{
			"icon": {
				"paths": [
					"M512.571 782.286v95.429h-141.714l-90.857-144-13.714-24q-4.571-5.143-6.286-12h-1.714l-5.143 12q-5.714 11.429-14.286 25.143l-88.571 142.857h-147.429v-95.429h73.143l112.571-166.286-105.714-155.429h-78.286v-96h157.714l79.429 130.286q1.143 2.286 13.143 24 4.571 5.143 6.286 12h1.714q1.714-5.143 6.286-12l14.286-24 80-130.286h146.857v96h-71.429l-105.143 152.571 116.571 169.143h62.286zM876.571 394.286v117.714h-293.714l-1.714-15.429q-2.286-16-2.286-26.286 0-36.571 14.857-66.857t37.143-49.429 48-37.143 48-31.143 37.143-30.857 14.857-36.571q0-21.714-16.857-35.714t-40.286-14q-29.143 0-55.429 22.286-8 6.286-20.571 21.714l-60-52.571q14.857-21.143 36-37.714 47.429-37.143 107.429-37.143 62.857 0 101.714 34t38.857 90.571q0 32-14 58.857t-35.429 43.714-46.571 33.429-46.857 28.857-37.429 29.429-17.429 36h132.571v-45.714h72z"
				],
				"attrs": [],
				"tags": [
					"superscript"
				],
				"defaultCode": 61739,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 267,
				"order": 268,
				"prevSize": 28,
				"code": 61739,
				"name": "superscript"
			},
			"setIdx": 0,
			"iconIdx": 285
		},
		{
			"icon": {
				"paths": [
					"M512.571 782.286v95.429h-141.714l-90.857-144-13.714-24q-4.571-5.143-6.286-12h-1.714l-5.143 12q-5.714 11.429-14.286 25.143l-88.571 142.857h-147.429v-95.429h73.143l112.571-166.286-105.714-155.429h-78.286v-96h157.714l79.429 130.286q1.143 2.286 13.143 24 4.571 5.143 6.286 12h1.714q1.714-5.143 6.286-12l14.286-24 80-130.286h146.857v96h-71.429l-105.143 152.571 116.571 169.143h62.286zM877.714 906.286v117.714h-293.714l-2.286-15.429q-1.714-25.714-1.714-26.286 0-36.571 14.857-66.857t37.143-49.429 48-37.143 48-31.143 37.143-30.857 14.857-36.571q0-21.714-16.857-35.714t-40.286-14q-29.143 0-55.429 22.286-8 6.286-20.571 21.714l-60-52.571q14.857-21.143 36-37.714 45.714-37.143 107.429-37.143 62.857 0 101.714 34t38.857 90.571q0 37.714-19.714 67.714t-48 49.143-56.857 35.714-49.714 36-23.429 41.714h132.571v-45.714h72z"
				],
				"attrs": [],
				"tags": [
					"subscript"
				],
				"defaultCode": 61740,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 268,
				"order": 269,
				"prevSize": 28,
				"code": 61740,
				"name": "subscript"
			},
			"setIdx": 0,
			"iconIdx": 286
		},
		{
			"icon": {
				"width": 1097,
				"paths": [
					"M512 804.571l192-219.429h-438.857l-192 219.429h438.857zM1090.857 189.143q8.571 19.429 5.429 40.857t-17.429 37.429l-512 585.143q-21.714 25.143-54.857 25.143h-438.857q-21.714 0-39.714-11.714t-27.143-31.143q-8.571-19.429-5.429-40.857t17.429-37.429l512-585.143q21.714-25.143 54.857-25.143h438.857q21.714 0 39.714 11.714t27.143 31.143z"
				],
				"attrs": [],
				"tags": [
					"eraser"
				],
				"defaultCode": 61741,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 269,
				"order": 270,
				"prevSize": 28,
				"code": 61741,
				"name": "eraser"
			},
			"setIdx": 0,
			"iconIdx": 287
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M950.857 627.429q0 46.286-25.429 77.143t-70.571 30.857q-23.429 0-44.286-10t-33.714-21.714-32.286-21.714-40.571-10q-62.857 0-62.857 70.857 0 22.286 9.143 65.714t8.571 65.714v2.857q-12.571 0-18.857 0.571-19.429 1.714-55.714 6.571t-66 7.714-56 2.857q-34.857 0-58.857-15.143t-24-47.714q0-21.143 10-40.571t21.714-32.286 21.714-33.714 10-44.286q0-45.143-30.857-70.571t-77.143-25.429q-48 0-81.714 26t-33.714 72.857q0 24.571 8.571 47.429t19.143 36.857 19.143 30.286 8.571 28.857q0 25.714-26.286 50.857-21.143 20-66.857 20-54.286 0-140-13.714-5.143-1.143-15.714-2.286t-15.714-2.286l-7.429-1.143q-0.571 0-1.714-0.571-1.143 0-1.143-0.571v-585.143q1.143 0.571 10 2t19.429 2.857 12.286 2q85.714 13.714 140 13.714 45.714 0 66.857-20 26.286-25.143 26.286-50.857 0-12.571-8.571-28.857t-19.143-30.286-19.143-36.857-8.571-47.429q0-46.857 33.714-72.857t82.286-26q45.714 0 76.571 25.429t30.857 70.571q0 23.429-10 44.286t-21.714 33.714-21.714 32.286-10 40.571q0 32.571 24 47.714t58.857 15.143q36.571 0 102.857-8.571t93.143-9.714v1.143q-0.571 1.143-2 10t-2.857 19.429-2 12.286q-13.714 85.714-13.714 140 0 45.714 20 66.857 25.143 26.286 50.857 26.286 12.571 0 28.857-8.571t30.286-19.143 36.857-19.143 47.429-8.571q46.857 0 72.857 33.714t26 81.714z"
				],
				"attrs": [],
				"tags": [
					"puzzle-piece"
				],
				"defaultCode": 61742,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 270,
				"order": 271,
				"prevSize": 28,
				"code": 61742,
				"name": "puzzle-piece"
			},
			"setIdx": 0,
			"iconIdx": 288
		},
		{
			"icon": {
				"width": 658,
				"paths": [
					"M658.286 402.286v73.143q0 126.286-84.286 219.714t-208.286 107.143v75.429h146.286q14.857 0 25.714 10.857t10.857 25.714-10.857 25.714-25.714 10.857h-365.714q-14.857 0-25.714-10.857t-10.857-25.714 10.857-25.714 25.714-10.857h146.286v-75.429q-124-13.714-208.286-107.143t-84.286-219.714v-73.143q0-14.857 10.857-25.714t25.714-10.857 25.714 10.857 10.857 25.714v73.143q0 105.714 75.143 180.857t180.857 75.143 180.857-75.143 75.143-180.857v-73.143q0-14.857 10.857-25.714t25.714-10.857 25.714 10.857 10.857 25.714zM512 182.857v292.571q0 75.429-53.714 129.143t-129.143 53.714-129.143-53.714-53.714-129.143v-292.571q0-75.429 53.714-129.143t129.143-53.714 129.143 53.714 53.714 129.143z"
				],
				"attrs": [],
				"tags": [
					"microphone"
				],
				"defaultCode": 61744,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 271,
				"order": 272,
				"prevSize": 28,
				"code": 61744,
				"name": "microphone"
			},
			"setIdx": 0,
			"iconIdx": 289
		},
		{
			"icon": {
				"width": 805,
				"paths": [
					"M154.857 540l-57.714 57.714q-24-58.857-24-122.286v-73.143q0-14.857 10.857-25.714t25.714-10.857 25.714 10.857 10.857 25.714v73.143q0 30.286 8.571 64.571zM791.429 196l-206.286 206.286v73.143q0 75.429-53.714 129.143t-129.143 53.714q-31.429 0-62.286-10.857l-54.857 54.857q55.429 29.143 117.143 29.143 105.714 0 180.857-75.143t75.143-180.857v-73.143q0-14.857 10.857-25.714t25.714-10.857 25.714 10.857 10.857 25.714v73.143q0 126.286-84.286 219.714t-208.286 107.143v75.429h146.286q14.857 0 25.714 10.857t10.857 25.714-10.857 25.714-25.714 10.857h-365.714q-14.857 0-25.714-10.857t-10.857-25.714 10.857-25.714 25.714-10.857h146.286v-75.429q-71.429-7.429-134.286-46.286l-145.143 145.143q-5.714 5.714-13.143 5.714t-13.143-5.714l-46.857-46.857q-5.714-5.714-5.714-13.143t5.714-13.143l705.143-705.143q5.714-5.714 13.143-5.714t13.143 5.714l46.857 46.857q5.714 5.714 5.714 13.143t-5.714 13.143zM574.286 120.571l-354.857 354.857v-292.571q0-75.429 53.714-129.143t129.143-53.714q58.286 0 105.429 33.714t66.571 86.857z"
				],
				"attrs": [],
				"tags": [
					"microphone-slash"
				],
				"defaultCode": 61745,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 272,
				"order": 273,
				"prevSize": 28,
				"code": 61745,
				"name": "microphone-slash"
			},
			"setIdx": 0,
			"iconIdx": 290
		},
		{
			"icon": {
				"width": 731,
				"paths": [
					"M621.714 548.571v-365.714h-256v649.714q68-36 121.714-78.286 134.286-105.143 134.286-205.714zM731.429 109.714v438.857q0 49.143-19.143 97.429t-47.429 85.714-67.429 72.857-72.286 58.857-69.143 44.286-51.143 28.286-24.286 11.429q-6.857 3.429-14.857 3.429t-14.857-3.429q-9.143-4-24.286-11.429t-51.143-28.286-69.143-44.286-72.286-58.857-67.429-72.857-47.429-85.714-19.143-97.429v-438.857q0-14.857 10.857-25.714t25.714-10.857h658.286q14.857 0 25.714 10.857t10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"shield"
				],
				"defaultCode": 61746,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 273,
				"order": 274,
				"prevSize": 28,
				"code": 61746,
				"name": "shield"
			},
			"setIdx": 0,
			"iconIdx": 291
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M73.143 950.857h804.571v-585.143h-804.571v585.143zM292.571 256v-164.571q0-8-5.143-13.143t-13.143-5.143h-36.571q-8 0-13.143 5.143t-5.143 13.143v164.571q0 8 5.143 13.143t13.143 5.143h36.571q8 0 13.143-5.143t5.143-13.143zM731.429 256v-164.571q0-8-5.143-13.143t-13.143-5.143h-36.571q-8 0-13.143 5.143t-5.143 13.143v164.571q0 8 5.143 13.143t13.143 5.143h36.571q8 0 13.143-5.143t5.143-13.143zM950.857 219.429v731.429q0 29.714-21.714 51.429t-51.429 21.714h-804.571q-29.714 0-51.429-21.714t-21.714-51.429v-731.429q0-29.714 21.714-51.429t51.429-21.714h73.143v-54.857q0-37.714 26.857-64.571t64.571-26.857h36.571q37.714 0 64.571 26.857t26.857 64.571v54.857h219.429v-54.857q0-37.714 26.857-64.571t64.571-26.857h36.571q37.714 0 64.571 26.857t26.857 64.571v54.857h73.143q29.714 0 51.429 21.714t21.714 51.429z"
				],
				"attrs": [],
				"tags": [
					"calendar-o"
				],
				"defaultCode": 61747,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 274,
				"order": 275,
				"prevSize": 28,
				"code": 61747,
				"name": "calendar-o"
			},
			"setIdx": 0,
			"iconIdx": 292
		},
		{
			"icon": {
				"width": 805,
				"paths": [
					"M292.571 109.714q0-14.857-10.857-25.714t-25.714-10.857-25.714 10.857-10.857 25.714 10.857 25.714 25.714 10.857 25.714-10.857 10.857-25.714zM804.571 91.429v182.857q0 9.143-6.857 14.286-4.571 4-11.429 4-2.286 0-4-0.571l-256-54.857q-6.286-1.143-10.286-6.286t-4-11.429h-146.286v58.286q63.429 13.143 104.857 63.429t41.429 116v457.143q0 14.857-10.857 25.714t-25.714 10.857h-292.571q-14.857 0-25.714-10.857t-10.857-25.714v-457.143q0-60.571 35.714-108.857t92.286-65.429v-63.429h-18.286q-33.714 0-65.714 13.429t-52.286 30.286-37.714 38-23.143 30.571-8 14q-9.714 20-32.571 20-9.143 0-16.571-4-13.143-6.857-18-21.143t2-28q2.857-5.714 8.286-14.857t21.429-30.571 34.571-40 48.571-38.286 62-30q-14.286-24-14.286-49.143 0-37.714 26.857-64.571t64.571-26.857 64.571 26.857 26.857 64.571q0 18.857-8 36.571h172.571q0-6.286 4-11.429t10.286-6.286l256-54.857q1.714-0.571 4-0.571 6.857 0 11.429 4 6.857 5.143 6.857 14.286z"
				],
				"attrs": [],
				"tags": [
					"fire-extinguisher"
				],
				"defaultCode": 61748,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 275,
				"order": 276,
				"prevSize": 28,
				"code": 61748,
				"name": "fire-extinguisher"
			},
			"setIdx": 0,
			"iconIdx": 293
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M822.857 256q0-22.857-16-38.857t-38.857-16-38.857 16-16 38.857 16 38.857 38.857 16 38.857-16 16-38.857zM950.857 91.429q0 142.286-43.143 246t-144.857 206q-46.286 45.714-111.429 100.571l-11.429 216.571q-1.143 9.143-9.143 14.857l-219.429 128q-4 2.286-9.143 2.286-6.857 0-13.143-5.143l-36.571-36.571q-7.429-8-4.571-18.286l48.571-157.714-160.571-160.571-157.714 48.571q-1.714 0.571-5.143 0.571-8 0-13.143-5.143l-36.571-36.571q-9.714-10.857-2.857-22.286l128-219.429q5.714-8 14.857-9.143l216.571-11.429q54.857-65.143 100.571-111.429 107.429-106.857 204.571-147.429t246.286-40.571q8 0 13.714 5.429t5.714 12.857z"
				],
				"attrs": [],
				"tags": [
					"rocket"
				],
				"defaultCode": 61749,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 276,
				"order": 277,
				"prevSize": 28,
				"code": 61749,
				"name": "rocket"
			},
			"setIdx": 0,
			"iconIdx": 294
		},
		{
			"icon": {
				"paths": [
					"M997.143 441.714l-93.714 436h-190.857l101.714-475.429q7.429-32-8.571-50.286-15.429-18.857-47.429-18.857h-96.571l-116.571 544.571h-190.857l116.571-544.571h-163.429l-116.571 544.571h-190.857l116.571-544.571-87.429-186.857h729.143q57.714 0 108.286 23.143t84.286 64.857q34.286 41.714 46.286 96.286t0 111.143z"
				],
				"attrs": [],
				"tags": [
					"maxcdn"
				],
				"defaultCode": 61750,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 277,
				"order": 278,
				"prevSize": 28,
				"code": 61750,
				"name": "maxcdn"
			},
			"setIdx": 0,
			"iconIdx": 295
		},
		{
			"icon": {
				"paths": [
					"M519.429 797.143l58.286-58.286q10.857-10.857 10.857-25.714t-10.857-25.714l-175.429-175.429 175.429-175.429q10.857-10.857 10.857-25.714t-10.857-25.714l-58.286-58.286q-10.857-10.857-25.714-10.857t-25.714 10.857l-259.429 259.429q-10.857 10.857-10.857 25.714t10.857 25.714l259.429 259.429q10.857 10.857 25.714 10.857t25.714-10.857zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"chevron-circle-left"
				],
				"defaultCode": 61751,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 278,
				"order": 279,
				"prevSize": 28,
				"code": 61751,
				"name": "chevron-circle-left"
			},
			"setIdx": 0,
			"iconIdx": 296
		},
		{
			"icon": {
				"paths": [
					"M409.714 797.143l259.429-259.429q10.857-10.857 10.857-25.714t-10.857-25.714l-259.429-259.429q-10.857-10.857-25.714-10.857t-25.714 10.857l-58.286 58.286q-10.857 10.857-10.857 25.714t10.857 25.714l175.429 175.429-175.429 175.429q-10.857 10.857-10.857 25.714t10.857 25.714l58.286 58.286q10.857 10.857 25.714 10.857t25.714-10.857zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"chevron-circle-right"
				],
				"defaultCode": 61752,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 279,
				"order": 280,
				"prevSize": 28,
				"code": 61752,
				"name": "chevron-circle-right"
			},
			"setIdx": 0,
			"iconIdx": 297
		},
		{
			"icon": {
				"paths": [
					"M665.714 650.857l58.286-58.286q10.857-10.857 10.857-25.714t-10.857-25.714l-259.429-259.429q-10.857-10.857-25.714-10.857t-25.714 10.857l-259.429 259.429q-10.857 10.857-10.857 25.714t10.857 25.714l58.286 58.286q10.857 10.857 25.714 10.857t25.714-10.857l175.429-175.429 175.429 175.429q10.857 10.857 25.714 10.857t25.714-10.857zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"chevron-circle-up"
				],
				"defaultCode": 61753,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 280,
				"order": 281,
				"prevSize": 28,
				"code": 61753,
				"name": "chevron-circle-up"
			},
			"setIdx": 0,
			"iconIdx": 298
		},
		{
			"icon": {
				"paths": [
					"M464.571 742.286l259.429-259.429q10.857-10.857 10.857-25.714t-10.857-25.714l-58.286-58.286q-10.857-10.857-25.714-10.857t-25.714 10.857l-175.429 175.429-175.429-175.429q-10.857-10.857-25.714-10.857t-25.714 10.857l-58.286 58.286q-10.857 10.857-10.857 25.714t10.857 25.714l259.429 259.429q10.857 10.857 25.714 10.857t25.714-10.857zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"chevron-circle-down"
				],
				"defaultCode": 61754,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 281,
				"order": 282,
				"prevSize": 28,
				"code": 61754,
				"name": "chevron-circle-down"
			},
			"setIdx": 0,
			"iconIdx": 299
		},
		{
			"icon": {
				"width": 805,
				"paths": [
					"M645.714 341.143l9.143-100h-505.143l26.857 305.143h349.714l-12.571 130.286-112.571 30.286-112-30.286-7.429-80h-100l12.571 158.857 206.857 57.143h2.286v-0.571l205.143-56.571 28.571-310.857h-368l-8.571-103.429h385.143zM0 73.143h804.571l-73.143 821.714-330.286 92.571-328-92.571z"
				],
				"attrs": [],
				"tags": [
					"html5"
				],
				"defaultCode": 61755,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 282,
				"order": 283,
				"prevSize": 28,
				"code": 61755,
				"name": "html5"
			},
			"setIdx": 0,
			"iconIdx": 300
		},
		{
			"icon": {
				"paths": [
					"M157.143 73.143h860l-152 761.714-459.429 152.571-398.857-152.571 40.571-203.429h169.714l-16.571 84 241.143 92 277.714-92 38.857-193.714h-690.286l33.143-169.714h690.857l21.714-109.143h-690.286z"
				],
				"attrs": [],
				"tags": [
					"css3"
				],
				"defaultCode": 61756,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 283,
				"order": 284,
				"prevSize": 28,
				"code": 61756,
				"name": "css3"
			},
			"setIdx": 0,
			"iconIdx": 301
		},
		{
			"icon": {
				"paths": [
					"M548.571 146.286q0-14.857-10.857-25.714t-25.714-10.857-25.714 10.857-10.857 25.714 10.857 25.714 25.714 10.857 25.714-10.857 10.857-25.714zM1024 676.571v201.143q0 12.571-11.429 17.143-4.571 1.143-6.857 1.143-7.429 0-13.143-5.143l-53.143-53.143q-68 81.714-182 129.429t-245.429 47.714-245.429-47.714-182-129.429l-53.143 53.143q-5.143 5.143-13.143 5.143-2.286 0-6.857-1.143-11.429-4.571-11.429-17.143v-201.143q0-8 5.143-13.143t13.143-5.143h201.143q12.571 0 17.143 11.429 4.571 10.857-4 20l-57.143 57.143q38.286 52 108.286 87.714t155.143 47.143v-369.714h-109.714q-14.857 0-25.714-10.857t-10.857-25.714v-73.143q0-14.857 10.857-25.714t25.714-10.857h109.714v-93.143q-33.143-19.429-53.143-52.857t-20-73.429q0-60.571 42.857-103.429t103.429-42.857 103.429 42.857 42.857 103.429q0 40-20 73.429t-53.143 52.857v93.143h109.714q14.857 0 25.714 10.857t10.857 25.714v73.143q0 14.857-10.857 25.714t-25.714 10.857h-109.714v369.714q85.143-11.429 155.143-47.143t108.286-87.714l-57.143-57.143q-8.571-9.143-4-20 4.571-11.429 17.143-11.429h201.143q8 0 13.143 5.143t5.143 13.143z"
				],
				"attrs": [],
				"tags": [
					"anchor"
				],
				"defaultCode": 61757,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 284,
				"order": 285,
				"prevSize": 28,
				"code": 61757,
				"name": "anchor"
			},
			"setIdx": 0,
			"iconIdx": 302
		},
		{
			"icon": {
				"width": 658,
				"paths": [
					"M603.429 438.857q22.857 0 38.857 16t16 38.857v329.143q0 22.857-16 38.857t-38.857 16h-548.571q-22.857 0-38.857-16t-16-38.857v-329.143q0-22.857 16-38.857t38.857-16h18.286v-182.857q0-105.714 75.143-180.857t180.857-75.143 180.857 75.143 75.143 180.857q0 14.857-10.857 25.714t-25.714 10.857h-36.571q-14.857 0-25.714-10.857t-10.857-25.714q0-60.571-42.857-103.429t-103.429-42.857-103.429 42.857-42.857 103.429v182.857h420.571z"
				],
				"attrs": [],
				"tags": [
					"unlock-alt"
				],
				"defaultCode": 61758,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 285,
				"order": 286,
				"prevSize": 28,
				"code": 61758,
				"name": "unlock-alt"
			},
			"setIdx": 0,
			"iconIdx": 303
		},
		{
			"icon": {
				"paths": [
					"M585.143 512q0 60.571-42.857 103.429t-103.429 42.857-103.429-42.857-42.857-103.429 42.857-103.429 103.429-42.857 103.429 42.857 42.857 103.429zM658.286 512q0-90.857-64.286-155.143t-155.143-64.286-155.143 64.286-64.286 155.143 64.286 155.143 155.143 64.286 155.143-64.286 64.286-155.143zM731.429 512q0 121.143-85.714 206.857t-206.857 85.714-206.857-85.714-85.714-206.857 85.714-206.857 206.857-85.714 206.857 85.714 85.714 206.857zM804.571 512q0-74.286-29.143-142t-78-116.571-116.571-78-142-29.143-142 29.143-116.571 78-78 116.571-29.143 142 29.143 142 78 116.571 116.571 78 142 29.143 142-29.143 116.571-78 78-116.571 29.143-142zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"bullseye"
				],
				"defaultCode": 61760,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 286,
				"order": 287,
				"prevSize": 28,
				"code": 61760,
				"name": "bullseye"
			},
			"setIdx": 0,
			"iconIdx": 304
		},
		{
			"icon": {
				"width": 805,
				"paths": [
					"M219.429 420.571v109.714q0 22.857-16 38.857t-38.857 16h-109.714q-22.857 0-38.857-16t-16-38.857v-109.714q0-22.857 16-38.857t38.857-16h109.714q22.857 0 38.857 16t16 38.857zM512 420.571v109.714q0 22.857-16 38.857t-38.857 16h-109.714q-22.857 0-38.857-16t-16-38.857v-109.714q0-22.857 16-38.857t38.857-16h109.714q22.857 0 38.857 16t16 38.857zM804.571 420.571v109.714q0 22.857-16 38.857t-38.857 16h-109.714q-22.857 0-38.857-16t-16-38.857v-109.714q0-22.857 16-38.857t38.857-16h109.714q22.857 0 38.857 16t16 38.857z"
				],
				"attrs": [],
				"tags": [
					"ellipsis-h"
				],
				"defaultCode": 61761,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 287,
				"order": 288,
				"prevSize": 28,
				"code": 61761,
				"name": "ellipsis-h"
			},
			"setIdx": 0,
			"iconIdx": 305
		},
		{
			"icon": {
				"width": 219,
				"paths": [
					"M219.429 713.143v109.714q0 22.857-16 38.857t-38.857 16h-109.714q-22.857 0-38.857-16t-16-38.857v-109.714q0-22.857 16-38.857t38.857-16h109.714q22.857 0 38.857 16t16 38.857zM219.429 420.571v109.714q0 22.857-16 38.857t-38.857 16h-109.714q-22.857 0-38.857-16t-16-38.857v-109.714q0-22.857 16-38.857t38.857-16h109.714q22.857 0 38.857 16t16 38.857zM219.429 128v109.714q0 22.857-16 38.857t-38.857 16h-109.714q-22.857 0-38.857-16t-16-38.857v-109.714q0-22.857 16-38.857t38.857-16h109.714q22.857 0 38.857 16t16 38.857z"
				],
				"attrs": [],
				"tags": [
					"ellipsis-v"
				],
				"defaultCode": 61762,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 288,
				"order": 289,
				"prevSize": 28,
				"code": 61762,
				"name": "ellipsis-v"
			},
			"setIdx": 0,
			"iconIdx": 306
		},
		{
			"icon": {
				"paths": [
					"M292.571 731.429q0-30.286-21.429-51.714t-51.714-21.429-51.714 21.429-21.429 51.714 21.429 51.714 51.714 21.429 51.714-21.429 21.429-51.714zM493.143 785.143q-7.429-132.571-101.143-226.286t-226.286-101.143q-8-0.571-13.714 5.143t-5.714 13.143v73.143q0 7.429 4.857 12.571t12.286 5.714q88 6.286 150.857 69.143t69.143 150.857q0.571 7.429 5.714 12.286t12.571 4.857h73.143q7.429 0 13.143-5.714t5.143-13.714zM712.571 785.714q-2.857-88-32-170t-79.714-148.571-117.143-117.143-148.571-79.714-170-32q-8-0.571-13.143 5.143-5.714 5.714-5.714 13.143v73.143q0 7.429 5.143 12.571t12.571 5.714q116.571 4 216 63.714t159.143 159.143 63.714 216q0.571 7.429 5.714 12.571t12.571 5.143h73.143q7.429 0 13.143-5.714 6.286-5.143 5.143-13.143zM877.714 237.714v548.571q0 68-48.286 116.286t-116.286 48.286h-548.571q-68 0-116.286-48.286t-48.286-116.286v-548.571q0-68 48.286-116.286t116.286-48.286h548.571q68 0 116.286 48.286t48.286 116.286z"
				],
				"attrs": [],
				"tags": [
					"rss-square"
				],
				"defaultCode": 61763,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 289,
				"order": 290,
				"prevSize": 28,
				"code": 61763,
				"name": "rss-square"
			},
			"setIdx": 0,
			"iconIdx": 307
		},
		{
			"icon": {
				"paths": [
					"M438.857 73.143q119.429 0 220.286 58.857t159.714 159.714 58.857 220.286-58.857 220.286-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857zM658.286 543.429q18.286-10.286 18.286-31.429t-18.286-31.429l-310.857-182.857q-17.714-10.857-36.571-0.571-18.286 10.857-18.286 32v365.714q0 21.143 18.286 32 9.143 4.571 18.286 4.571 9.714 0 18.286-5.143z"
				],
				"attrs": [],
				"tags": [
					"play-circle"
				],
				"defaultCode": 61764,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 290,
				"order": 291,
				"prevSize": 28,
				"code": 61764,
				"name": "play-circle"
			},
			"setIdx": 0,
			"iconIdx": 308
		},
		{
			"icon": {
				"paths": [
					"M585.143 258.286l180.571 180.571-326.857 326.857-180.571-180.571zM464.571 817.714l353.143-353.143q10.857-10.857 10.857-25.714t-10.857-25.714l-206.857-206.857q-10.286-10.286-25.714-10.286t-25.714 10.286l-353.143 353.143q-10.857 10.857-10.857 25.714t10.857 25.714l206.857 206.857q10.286 10.286 25.714 10.286t25.714-10.286zM972.571 453.714l-518.286 518.857q-21.143 21.143-51.714 21.143t-51.714-21.143l-72-72q32-32 32-77.714t-32-77.714-77.714-32-77.714 32l-71.429-72q-21.143-21.143-21.143-51.714t21.143-51.714l518.286-517.714q21.143-21.143 51.714-21.143t51.714 21.143l71.429 71.429q-32 32-32 77.714t32 77.714 77.714 32 77.714-32l72 71.429q21.143 21.143 21.143 51.714t-21.143 51.714z"
				],
				"attrs": [],
				"tags": [
					"ticket"
				],
				"defaultCode": 61765,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 291,
				"order": 292,
				"prevSize": 28,
				"code": 61765,
				"name": "ticket"
			},
			"setIdx": 0,
			"iconIdx": 309
		},
		{
			"icon": {
				"paths": [
					"M731.429 548.571v-73.143q0-14.857-10.857-25.714t-25.714-10.857h-512q-14.857 0-25.714 10.857t-10.857 25.714v73.143q0 14.857 10.857 25.714t25.714 10.857h512q14.857 0 25.714-10.857t10.857-25.714zM877.714 237.714v548.571q0 68-48.286 116.286t-116.286 48.286h-548.571q-68 0-116.286-48.286t-48.286-116.286v-548.571q0-68 48.286-116.286t116.286-48.286h548.571q68 0 116.286 48.286t48.286 116.286z"
				],
				"attrs": [],
				"tags": [
					"minus-square"
				],
				"defaultCode": 61766,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 292,
				"order": 293,
				"prevSize": 28,
				"code": 61766,
				"name": "minus-square"
			},
			"setIdx": 0,
			"iconIdx": 310
		},
		{
			"icon": {
				"width": 805,
				"paths": [
					"M658.286 457.143v36.571q0 8-5.143 13.143t-13.143 5.143h-475.429q-8 0-13.143-5.143t-5.143-13.143v-36.571q0-8 5.143-13.143t13.143-5.143h475.429q8 0 13.143 5.143t5.143 13.143zM731.429 713.143v-475.429q0-37.714-26.857-64.571t-64.571-26.857h-475.429q-37.714 0-64.571 26.857t-26.857 64.571v475.429q0 37.714 26.857 64.571t64.571 26.857h475.429q37.714 0 64.571-26.857t26.857-64.571zM804.571 237.714v475.429q0 68-48.286 116.286t-116.286 48.286h-475.429q-68 0-116.286-48.286t-48.286-116.286v-475.429q0-68 48.286-116.286t116.286-48.286h475.429q68 0 116.286 48.286t48.286 116.286z"
				],
				"attrs": [],
				"tags": [
					"minus-square-o"
				],
				"defaultCode": 61767,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 293,
				"order": 294,
				"prevSize": 28,
				"code": 61767,
				"name": "minus-square-o"
			},
			"setIdx": 0,
			"iconIdx": 311
		},
		{
			"icon": {
				"width": 585,
				"paths": [
					"M581.714 344.571q-10.286 21.143-33.143 21.143h-109.714v493.714q0 8-5.143 13.143t-13.143 5.143h-402.286q-12 0-16.571-10.286-4.571-11.429 2.286-20l91.429-109.714q5.143-6.286 14.286-6.286h182.857v-365.714h-109.714q-22.857 0-33.143-21.143-9.714-21.143 5.143-38.857l182.857-219.429q10.286-12.571 28-12.571t28 12.571l182.857 219.429q15.429 18.286 5.143 38.857z"
				],
				"attrs": [],
				"tags": [
					"level-up"
				],
				"defaultCode": 61768,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 294,
				"order": 295,
				"prevSize": 28,
				"code": 61768,
				"name": "level-up"
			},
			"setIdx": 0,
			"iconIdx": 312
		},
		{
			"icon": {
				"width": 585,
				"paths": [
					"M18.286 146.286h402.286q7.429 0 12.857 5.429t5.429 13.429v493.143h109.714q22.857 0 33.143 21.143t-5.143 39.429l-182.857 219.429q-10.286 12.571-28 12.571t-28-12.571l-182.857-219.429q-14.857-17.714-5.143-39.429 10.286-21.143 33.143-21.143h109.714v-365.714h-182.857q-8 0-14.286-6.286l-91.429-109.714q-7.429-8-2.286-19.429 5.143-10.857 16.571-10.857z"
				],
				"attrs": [],
				"tags": [
					"level-down"
				],
				"defaultCode": 61769,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 295,
				"order": 296,
				"prevSize": 28,
				"code": 61769,
				"name": "level-down"
			},
			"setIdx": 0,
			"iconIdx": 313
		},
		{
			"icon": {
				"paths": [
					"M391.429 742.286l350.857-350.857q10.857-10.857 10.857-25.714t-10.857-25.714l-58.286-58.286q-10.857-10.857-25.714-10.857t-25.714 10.857l-266.857 266.857-120.571-120.571q-10.857-10.857-25.714-10.857t-25.714 10.857l-58.286 58.286q-10.857 10.857-10.857 25.714t10.857 25.714l204.571 204.571q10.857 10.857 25.714 10.857t25.714-10.857zM877.714 237.714v548.571q0 68-48.286 116.286t-116.286 48.286h-548.571q-68 0-116.286-48.286t-48.286-116.286v-548.571q0-68 48.286-116.286t116.286-48.286h548.571q68 0 116.286 48.286t48.286 116.286z"
				],
				"attrs": [],
				"tags": [
					"check-square"
				],
				"defaultCode": 61770,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 296,
				"order": 297,
				"prevSize": 28,
				"code": 61770,
				"name": "check-square"
			},
			"setIdx": 0,
			"iconIdx": 314
		},
		{
			"icon": {
				"paths": [
					"M230.857 633.143l86.857 86.857-29.714 29.714h-32v-54.857h-54.857v-32zM467.429 410.286q8 7.429-1.714 17.143l-166.286 166.286q-9.714 9.714-17.143 1.714-8-7.429 1.714-17.143l166.286-166.286q9.714-9.714 17.143-1.714zM310.857 804.571l310.857-310.857-164.571-164.571-310.857 310.857v164.571h164.571zM658.286 457.143l52.571-52.571q16-16 16-38.857t-16-38.857l-86.857-86.857q-16-16-38.857-16t-38.857 16l-52.571 52.571zM877.714 237.714v548.571q0 68-48.286 116.286t-116.286 48.286h-548.571q-68 0-116.286-48.286t-48.286-116.286v-548.571q0-68 48.286-116.286t116.286-48.286h548.571q68 0 116.286 48.286t48.286 116.286z"
				],
				"attrs": [],
				"tags": [
					"pencil-square"
				],
				"defaultCode": 61771,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 297,
				"order": 298,
				"prevSize": 28,
				"code": 61771,
				"name": "pencil-square"
			},
			"setIdx": 0,
			"iconIdx": 315
		},
		{
			"icon": {
				"paths": [
					"M731.429 530.286v-274.286q0-14.857-10.857-25.714t-25.714-10.857h-274.286q-24 0-33.714 22.286-9.714 23.429 8 40l82.286 82.286-305.143 305.143q-10.857 10.857-10.857 25.714t10.857 25.714l58.286 58.286q10.857 10.857 25.714 10.857t25.714-10.857l305.143-305.143 82.286 82.286q10.286 10.857 25.714 10.857 6.857 0 14.286-2.857 22.286-9.714 22.286-33.714zM877.714 237.714v548.571q0 68-48.286 116.286t-116.286 48.286h-548.571q-68 0-116.286-48.286t-48.286-116.286v-548.571q0-68 48.286-116.286t116.286-48.286h548.571q68 0 116.286 48.286t48.286 116.286z"
				],
				"attrs": [],
				"tags": [
					"external-link-square"
				],
				"defaultCode": 61772,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 298,
				"order": 299,
				"prevSize": 28,
				"code": 61772,
				"name": "external-link-square"
			},
			"setIdx": 0,
			"iconIdx": 316
		},
		{
			"icon": {
				"paths": [
					"M574.286 629.143l201.143-201.143q10.857-10.857 10.857-25.714t-10.857-25.714l-201.143-201.143q-17.143-17.714-39.429-8-22.857 9.714-22.857 33.714v91.429q-68 0-123.429 11.143t-92.857 29.143-65.143 45.143-43.714 54.571-25.429 62.286-12.286 63.714-2.857 63.143q0 103.429 95.429 230.857 5.714 6.857 14.286 6.857 4 0 7.429-1.714 12.571-5.143 10.857-18.857-25.143-202.286 35.429-270.286 26.286-29.714 74.286-43.143t128-13.429v91.429q0 24 22.857 33.714 6.857 2.857 13.714 2.857 14.857 0 25.714-10.857zM877.714 237.714v548.571q0 68-48.286 116.286t-116.286 48.286h-548.571q-68 0-116.286-48.286t-48.286-116.286v-548.571q0-68 48.286-116.286t116.286-48.286h548.571q68 0 116.286 48.286t48.286 116.286z"
				],
				"attrs": [],
				"tags": [
					"share-square"
				],
				"defaultCode": 61773,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 299,
				"order": 300,
				"prevSize": 28,
				"code": 61773,
				"name": "share-square"
			},
			"setIdx": 0,
			"iconIdx": 317
		},
		{
			"icon": {
				"paths": [
					"M365.714 621.714l146.286-73.143-146.286-73.143v146.286zM585.143 284v309.714l-292.571 146.286v-309.714zM749.714 512q0-84.571-41.714-156t-113.143-113.143-156-41.714-156 41.714-113.143 113.143-41.714 156 41.714 156 113.143 113.143 156 41.714 156-41.714 113.143-113.143 41.714-156zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"compass"
				],
				"defaultCode": 61774,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 300,
				"order": 301,
				"prevSize": 28,
				"code": 61774,
				"name": "compass"
			},
			"setIdx": 0,
			"iconIdx": 318
		},
		{
			"icon": {
				"paths": [
					"M654.286 385.714q10.286 20-2.857 37.714l-182.857 256q-10.857 15.429-29.714 15.429t-29.714-15.429l-182.857-256q-13.143-17.714-2.857-37.714 9.714-20 32.571-20h365.714q22.857 0 32.571 20zM731.429 786.286v-548.571q0-7.429-5.429-12.857t-12.857-5.429h-548.571q-7.429 0-12.857 5.429t-5.429 12.857v548.571q0 7.429 5.429 12.857t12.857 5.429h548.571q7.429 0 12.857-5.429t5.429-12.857zM877.714 237.714v548.571q0 68-48.286 116.286t-116.286 48.286h-548.571q-68 0-116.286-48.286t-48.286-116.286v-548.571q0-68 48.286-116.286t116.286-48.286h548.571q68 0 116.286 48.286t48.286 116.286z"
				],
				"attrs": [],
				"tags": [
					"caret-square-o-down",
					"toggle-down"
				],
				"defaultCode": 61776,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 301,
				"order": 302,
				"prevSize": 28,
				"code": 61776,
				"name": "caret-square-o-down"
			},
			"setIdx": 0,
			"iconIdx": 319
		},
		{
			"icon": {
				"paths": [
					"M654.286 638.286q-9.714 20-32.571 20h-365.714q-22.857 0-32.571-20-10.286-20 2.857-37.714l182.857-256q10.857-15.429 29.714-15.429t29.714 15.429l182.857 256q13.143 17.714 2.857 37.714zM731.429 786.286v-548.571q0-7.429-5.429-12.857t-12.857-5.429h-548.571q-7.429 0-12.857 5.429t-5.429 12.857v548.571q0 7.429 5.429 12.857t12.857 5.429h548.571q7.429 0 12.857-5.429t5.429-12.857zM877.714 237.714v548.571q0 68-48.286 116.286t-116.286 48.286h-548.571q-68 0-116.286-48.286t-48.286-116.286v-548.571q0-68 48.286-116.286t116.286-48.286h548.571q68 0 116.286 48.286t48.286 116.286z"
				],
				"attrs": [],
				"tags": [
					"caret-square-o-up",
					"toggle-up"
				],
				"defaultCode": 61777,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 302,
				"order": 303,
				"prevSize": 28,
				"code": 61777,
				"name": "caret-square-o-up"
			},
			"setIdx": 0,
			"iconIdx": 320
		},
		{
			"icon": {
				"paths": [
					"M621.714 512q0 18.857-15.429 29.714l-256 182.857q-17.714 13.143-37.714 2.857-20-9.714-20-32.571v-365.714q0-22.857 20-32.571 20-10.286 37.714 2.857l256 182.857q15.429 10.857 15.429 29.714zM731.429 786.286v-548.571q0-8-5.143-13.143t-13.143-5.143h-548.571q-8 0-13.143 5.143t-5.143 13.143v548.571q0 8 5.143 13.143t13.143 5.143h548.571q8 0 13.143-5.143t5.143-13.143zM877.714 237.714v548.571q0 68-48.286 116.286t-116.286 48.286h-548.571q-68 0-116.286-48.286t-48.286-116.286v-548.571q0-68 48.286-116.286t116.286-48.286h548.571q68 0 116.286 48.286t48.286 116.286z"
				],
				"attrs": [],
				"tags": [
					"caret-square-o-right",
					"toggle-right"
				],
				"defaultCode": 61778,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 303,
				"order": 304,
				"prevSize": 28,
				"code": 61778,
				"name": "caret-square-o-right"
			},
			"setIdx": 0,
			"iconIdx": 321
		},
		{
			"icon": {
				"width": 585,
				"paths": [
					"M557.714 746.857l20 90.857q1.714 6.857-1.714 12.857t-9.714 8.286l-2.857 0.571q-2.286 1.143-6 2t-9.143 2.571-12.286 3.143-14.571 2.857-17.143 2.857-19.143 2.571-20.857 1.714-22 0.571q-133.714 0-233.714-74.571t-136-200.857h-54.286q-7.429 0-12.857-5.429t-5.429-12.857v-64.571q0-7.429 5.429-12.857t12.857-5.429h37.714q-1.143-32.571 0.571-60h-38.286q-8 0-13.143-5.143t-5.143-13.143v-65.143q0-8 5.143-13.143t13.143-5.143h56q38.286-120 139.143-193.143t228.857-73.143q58.286 0 110.857 13.143 6.286 1.714 11.429 8.571 3.429 6.286 1.714 13.714l-24.571 90.857q-1.714 7.429-8 11.143t-13.714 1.429l-2.286-0.571q-2.286-0.571-6.571-1.429l-10-2t-12.857-2-14.857-1.714-16.571-1.429-16.857-0.571q-72 0-129.143 36.571t-85.714 100.571h267.429q9.143 0 14.286 6.857 5.714 6.857 4 14.857l-13.714 65.143q-2.857 14.857-18.286 14.857h-278.857q-1.714 21.143 0 60h262.286q8.571 0 14.286 6.857 5.143 6.857 3.429 15.429l-13.714 64q-1.143 6.286-6.286 10.571t-11.429 4.286h-221.143q27.429 66.857 85.429 106t130.571 39.143q10.286 0 20.571-0.857t19.143-2 16.857-2.571 14-2.857 10.571-2.571l6.857-1.714 2.857-1.143q7.429-2.857 14.857 1.143 6.857 4 8.571 12z"
				],
				"attrs": [],
				"tags": [
					"eur",
					"euro"
				],
				"defaultCode": 61779,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 304,
				"order": 305,
				"prevSize": 28,
				"code": 61779,
				"name": "eur"
			},
			"setIdx": 0,
			"iconIdx": 322
		},
		{
			"icon": {
				"width": 585,
				"paths": [
					"M582.857 649.714v209.714q0 8-5.143 13.143t-13.143 5.143h-546.286q-8 0-13.143-5.143t-5.143-13.143v-85.714q0-7.429 5.429-12.857t12.857-5.429h55.429v-218.857h-54.286q-8 0-13.143-5.429t-5.143-12.857v-74.857q0-8 5.143-13.143t13.143-5.143h54.286v-127.429q0-97.714 70.571-161.143t179.714-63.429q105.714 0 191.429 71.429 5.143 4.571 5.714 11.714t-4 12.857l-58.857 72.571q-5.143 6.286-12.571 6.857-7.429 1.143-13.143-4-2.857-2.857-14.857-10.857t-39.429-18.286-53.143-10.286q-48.571 0-78.286 26.857t-29.714 70.286v122.857h174.286q7.429 0 12.857 5.143t5.429 13.143v74.857q0 7.429-5.429 12.857t-12.857 5.429h-174.286v216.571h236.571v-103.429q0-7.429 5.143-12.857t13.143-5.429h92.571q8 0 13.143 5.429t5.143 12.857z"
				],
				"attrs": [],
				"tags": [
					"gbp"
				],
				"defaultCode": 61780,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 305,
				"order": 306,
				"prevSize": 28,
				"code": 61780,
				"name": "gbp"
			},
			"setIdx": 0,
			"iconIdx": 323
		},
		{
			"icon": {
				"width": 585,
				"paths": [
					"M558.857 677.143q0 87.429-56.857 150.571t-147.714 78v100q0 8-5.143 13.143t-13.143 5.143h-77.143q-7.429 0-12.857-5.429t-5.429-12.857v-100q-37.714-5.143-72.857-17.714t-58-25.429-42.286-27.429-26.571-21.429-10-10.286q-9.714-12-1.143-23.429l58.857-77.143q4-5.714 13.143-6.857 8.571-1.143 13.714 5.143l1.143 1.143q64.571 56.571 138.857 71.429 21.143 4.571 42.286 4.571 46.286 0 81.429-24.571t35.143-69.714q0-16-8.571-30.286t-19.143-24-33.429-21.429-37.714-18.286-45.714-18.571q-22.286-9.143-35.143-14.286t-35.143-15.143-35.714-17.714-32.286-20.286-30.571-24.286-24.857-28-20.286-33.143-12-38-4.857-44.571q0-78.857 56-138.286t145.714-76.571v-102.857q0-7.429 5.429-12.857t12.857-5.429h77.143q8 0 13.143 5.143t5.143 13.143v100.571q32.571 3.429 63.143 13.143t49.714 19.143 36.286 21.429 22.286 16.571 8.571 8q9.714 10.286 2.857 21.714l-46.286 83.429q-4.571 8.571-13.143 9.143-8 1.714-15.429-4-1.714-1.714-8.286-6.857t-22.286-15.143-33.429-18.286-42.571-14.857-48.857-6.571q-54.286 0-88.571 24.571t-34.286 63.429q0 14.857 4.857 27.429t16.857 23.714 22.571 18.857 32 17.714 34.571 15.429 40 15.714q30.286 11.429 46.286 18t43.429 20 43.143 24.286 35.429 28.571 30.286 36.286 18 43.714 7.429 53.714z"
				],
				"attrs": [],
				"tags": [
					"dollar",
					"usd"
				],
				"defaultCode": 61781,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 306,
				"order": 307,
				"prevSize": 28,
				"code": 61781,
				"name": "dollar"
			},
			"setIdx": 0,
			"iconIdx": 324
		},
		{
			"icon": {
				"width": 513,
				"paths": [
					"M513.143 268.571v58.286q0 8-5.143 13.143t-13.143 5.143h-96q-13.143 82.286-73.714 133.714t-157.714 62.857q95.429 101.714 262.286 306.286 8 9.143 2.286 19.429-4.571 10.286-16.571 10.286h-111.429q-9.143 0-14.286-6.857-174.857-209.714-284.571-326.286-5.143-5.143-5.143-12.571v-72.571q0-7.429 5.429-12.857t12.857-5.429h64q75.429 0 121.429-24.571t58.571-71.429h-244q-8 0-13.143-5.143t-5.143-13.143v-58.286q0-8 5.143-13.143t13.143-5.143h236q-32.571-64.571-153.143-64.571h-82.857q-7.429 0-12.857-5.429t-5.429-12.857v-76q0-8 5.143-13.143t13.143-5.143h475.429q8 0 13.143 5.143t5.143 13.143v58.286q0 8-5.143 13.143t-13.143 5.143h-133.143q26.857 34.857 36.571 82.286h97.714q8 0 13.143 5.143t5.143 13.143z"
				],
				"attrs": [],
				"tags": [
					"inr",
					"rupee"
				],
				"defaultCode": 61782,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 307,
				"order": 308,
				"prevSize": 28,
				"code": 61782,
				"name": "inr"
			},
			"setIdx": 0,
			"iconIdx": 325
		},
		{
			"icon": {
				"width": 587,
				"paths": [
					"M344.571 877.714h-98.286q-7.429 0-12.857-5.143t-5.429-13.143v-188.571h-164.571q-7.429 0-12.857-5.143t-5.429-13.143v-58.857q0-7.429 5.429-12.857t12.857-5.429h164.571v-48.571h-164.571q-7.429 0-12.857-5.143t-5.429-13.143v-59.429q0-7.429 5.429-12.857t12.857-5.429h122.286l-183.429-330.286q-4.571-9.143 0-18.286 5.714-9.143 16-9.143h110.857q10.857 0 16.571 10.286l122.857 242.857q10.857 21.714 32 71.429 5.714-13.714 17.429-38.857t15.714-34.857l109.143-240q4.571-10.857 16.571-10.857h109.143q9.714 0 15.429 9.143 5.143 8 0.571 17.714l-178.857 330.857h122.857q7.429 0 12.857 5.429t5.429 12.857v59.429q0 8-5.429 13.143t-12.857 5.143h-165.714v48.571h165.714q7.429 0 12.857 5.429t5.429 12.857v58.857q0 8-5.429 13.143t-12.857 5.143h-165.714v188.571q0 7.429-5.429 12.857t-12.857 5.429z"
				],
				"attrs": [],
				"tags": [
					"cny",
					"jpy",
					"rmb",
					"yen"
				],
				"defaultCode": 61783,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 308,
				"order": 309,
				"prevSize": 28,
				"code": 61783,
				"name": "cny"
			},
			"setIdx": 0,
			"iconIdx": 326
		},
		{
			"icon": {
				"width": 731,
				"paths": [
					"M596 322.857q0-57.143-37.143-92.571t-97.714-35.429h-182.857v256h182.857q60.571 0 97.714-35.429t37.143-92.571zM731.429 322.857q0 110.286-72.286 180t-186.571 69.714h-194.286v67.429h288.571q8 0 13.143 5.143t5.143 13.143v73.143q0 8-5.143 13.143t-13.143 5.143h-288.571v109.714q0 8-5.429 13.143t-12.857 5.143h-95.429q-8 0-13.143-5.143t-5.143-13.143v-109.714h-128q-8 0-13.143-5.143t-5.143-13.143v-73.143q0-8 5.143-13.143t13.143-5.143h128v-67.429h-128q-8 0-13.143-5.143t-5.143-13.143v-85.143q0-7.429 5.143-12.857t13.143-5.429h128v-359.429q0-8 5.143-13.143t13.143-5.143h308q114.286 0 186.571 69.714t72.286 180z"
				],
				"attrs": [],
				"tags": [
					"rouble",
					"rub",
					"ruble"
				],
				"defaultCode": 61784,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 309,
				"order": 310,
				"prevSize": 28,
				"code": 61784,
				"name": "rouble"
			},
			"setIdx": 0,
			"iconIdx": 327
		},
		{
			"icon": {
				"paths": [
					"M293.714 682.857l46.286-170.857h-90.857l42.857 171.429q0.571 0.571 0.571 1.714t0.571 1.714q0-0.571 0.286-2t0.286-2zM360 438.857l20-73.143h-166.857l18.286 73.143h128.571zM469.714 438.857h79.429l-20-73.143h-40zM726.286 683.429l44.571-171.429h-92.571l46.286 170.857q0 0.571 0.286 2t0.857 2q0-0.571 0.286-1.714t0.286-1.714zM789.714 438.857l18.857-73.143h-169.714l19.429 73.143h131.429zM1024 457.143v36.571q0 8-5.143 13.143t-13.143 5.143h-121.714l-93.714 352q-4 13.714-17.714 13.714h-90.857q-13.714 0-17.714-13.714l-94.857-352h-119.429l-95.429 352q-4 13.714-17.714 13.714h-90.857q-6.286 0-11.143-4t-6-9.714l-91.429-352h-118.857q-8 0-13.143-5.143t-5.143-13.143v-36.571q0-8 5.143-13.143t13.143-5.143h100l-18.857-73.143h-81.143q-8 0-13.143-5.143t-5.143-13.143v-36.571q0-8 5.143-13.143t13.143-5.143h62.286l-50.857-196.571q-2.857-8.571 2.857-16 5.714-6.857 14.857-6.857h78.286q14.857 0 17.714 13.714l51.429 205.714h205.143l55.429-205.714q4-13.714 17.714-13.714h72q13.714 0 17.714 13.714l56 205.714h208.571l53.143-205.714q2.857-13.714 17.714-13.714h78.286q9.143 0 14.857 6.857 5.714 7.429 2.857 16l-52 196.571h63.429q8 0 13.143 5.143t5.143 13.143v36.571q0 8-5.143 13.143t-13.143 5.143h-82.857l-19.429 73.143h102.286q8 0 13.143 5.143t5.143 13.143z"
				],
				"attrs": [],
				"tags": [
					"krw",
					"won"
				],
				"defaultCode": 61785,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 310,
				"order": 311,
				"prevSize": 28,
				"code": 61785,
				"name": "krw"
			},
			"setIdx": 0,
			"iconIdx": 328
		},
		{
			"icon": {
				"width": 731,
				"paths": [
					"M666.857 365.714q10.286 104-74.857 147.429 66.857 16 100 58.857t25.714 122.286q-4 40.571-18.571 71.429t-36.857 50.857-55.429 33.429-69.429 19.714-83.143 8.571v145.714h-88v-143.429q-45.714 0-69.714-0.571v144h-88v-145.714q-10.286 0-30.857-0.286t-31.429-0.286h-114.286l17.714-104.571h63.429q28.571 0 33.143-29.143v-229.714h9.143q-3.429-0.571-9.143-0.571v-164q-7.429-38.857-50.857-38.857h-63.429v-93.714l121.143 0.571q36.571 0 55.429-0.571v-144h88v141.143q46.857-1.143 69.714-1.143v-140h88v144q45.143 4 80 12.857t64.571 25.714 47.143 44.571 20.857 65.429zM544 677.143q0-20.571-8.571-36.571t-21.143-26.286-32.857-17.429-37.429-10.571-42.286-5.143-39.429-1.714-36.857 0.571-27.143 0.571v193.143q4.571 0 21.143 0.286t27.429 0.286 30.286-0.857 33.429-2.286 32.571-4.857 31.714-8 27.143-12 22.571-17.143 14-22.857 5.429-29.143zM503.429 405.143q0-18.857-7.143-33.429t-17.429-24-27.429-16-31.429-9.429-35.143-4.571-33.143-1.429-30.857 0.571-22.571 0.286v175.429q2.857 0 19.714 0.286t26.571 0 28.571-1.143 31.429-3.143 29.429-6.286 27.714-10.571 21.143-15.429 15.429-22 5.143-29.143z"
				],
				"attrs": [],
				"tags": [
					"bitcoin",
					"btc"
				],
				"defaultCode": 61786,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 311,
				"order": 312,
				"prevSize": 28,
				"code": 61786,
				"name": "bitcoin"
			},
			"setIdx": 0,
			"iconIdx": 329
		},
		{
			"icon": {
				"paths": [
					"M585.143 292.571v-269.714q12.571 8 20.571 16l233.143 233.143q8 8 16 20.571h-269.714zM512 310.857q0 22.857 16 38.857t38.857 16h310.857v603.429q0 22.857-16 38.857t-38.857 16h-768q-22.857 0-38.857-16t-16-38.857v-914.286q0-22.857 16-38.857t38.857-16h457.143v310.857z"
				],
				"attrs": [],
				"tags": [
					"file"
				],
				"defaultCode": 61787,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 312,
				"order": 313,
				"prevSize": 28,
				"code": 61787,
				"name": "file"
			},
			"setIdx": 0,
			"iconIdx": 330
		},
		{
			"icon": {
				"paths": [
					"M838.857 272q8 8 16 20.571h-269.714v-269.714q12.571 8 20.571 16zM566.857 365.714h310.857v603.429q0 22.857-16 38.857t-38.857 16h-768q-22.857 0-38.857-16t-16-38.857v-914.286q0-22.857 16-38.857t38.857-16h457.143v310.857q0 22.857 16 38.857t38.857 16zM658.286 786.286v-36.571q0-8-5.143-13.143t-13.143-5.143h-402.286q-8 0-13.143 5.143t-5.143 13.143v36.571q0 8 5.143 13.143t13.143 5.143h402.286q8 0 13.143-5.143t5.143-13.143zM658.286 640v-36.571q0-8-5.143-13.143t-13.143-5.143h-402.286q-8 0-13.143 5.143t-5.143 13.143v36.571q0 8 5.143 13.143t13.143 5.143h402.286q8 0 13.143-5.143t5.143-13.143zM658.286 493.714v-36.571q0-8-5.143-13.143t-13.143-5.143h-402.286q-8 0-13.143 5.143t-5.143 13.143v36.571q0 8 5.143 13.143t13.143 5.143h402.286q8 0 13.143-5.143t5.143-13.143z"
				],
				"attrs": [],
				"tags": [
					"file-text"
				],
				"defaultCode": 61788,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 313,
				"order": 314,
				"prevSize": 28,
				"code": 61788,
				"name": "file-text"
			},
			"setIdx": 0,
			"iconIdx": 331
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M680.571 233.143h101.143l-41.143-124.571-6.857-26.857q-1.143-9.143-1.143-11.429h-2.286l-1.714 11.429q0 0.571-2 10.286t-4.286 16.571zM420.571 822.857q0 6.857-5.714 13.714l-182.286 182.286q-5.714 5.143-13.143 5.143-6.857 0-13.143-5.143l-182.857-182.857q-8.571-9.143-4-20 4.571-11.429 17.143-11.429h109.714v-786.286q0-8 5.143-13.143t13.143-5.143h109.714q8 0 13.143 5.143t5.143 13.143v786.286h109.714q8 0 13.143 5.143t5.143 13.143zM898.286 890.857v133.143h-333.714v-51.429l210.857-302.286q6.857-10.286 12-15.429l6.286-5.143v-1.714q-1.143 0-3.714 0.286t-4.286 0.286q-6.857 1.714-17.143 1.714h-132.571v65.714h-68.571v-130.857h324v50.857l-210.857 302.857q-3.429 4.571-12 14.857l-6.286 6.286v1.143l8-1.143q5.143-1.143 17.143-1.143h141.714v-68h69.143zM949.143 378.286v60.571h-164.571v-60.571h42.857l-26.857-82.286h-138.857l-26.857 82.286h42.857v60.571h-164v-60.571h40l131.429-378.286h92.571l131.429 378.286h40z"
				],
				"attrs": [],
				"tags": [
					"sort-alpha-asc"
				],
				"defaultCode": 61789,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 314,
				"order": 315,
				"prevSize": 28,
				"code": 61789,
				"name": "sort-alpha-asc"
			},
			"setIdx": 0,
			"iconIdx": 332
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M680.571 818.286h101.143l-41.143-124.571-6.857-26.857q-1.143-9.143-1.143-11.429h-2.286l-1.714 11.429q0 0.571-2 10.286t-4.286 16.571zM420.571 822.857q0 6.857-5.714 13.714l-182.286 182.286q-5.714 5.143-13.143 5.143-6.857 0-13.143-5.143l-182.857-182.857q-8.571-9.143-4-20 4.571-11.429 17.143-11.429h109.714v-786.286q0-8 5.143-13.143t13.143-5.143h109.714q8 0 13.143 5.143t5.143 13.143v786.286h109.714q8 0 13.143 5.143t5.143 13.143zM949.143 963.429v60.571h-164.571v-60.571h42.857l-26.857-82.286h-138.857l-26.857 82.286h42.857v60.571h-164v-60.571h40l131.429-378.286h92.571l131.429 378.286h40zM898.286 305.714v133.143h-333.714v-51.429l210.857-302.286q6.857-10.286 12-15.429l6.286-5.143v-1.714q-1.143 0-3.714 0.286t-4.286 0.286q-6.857 1.714-17.143 1.714h-132.571v65.714h-68.571v-130.857h324v50.857l-210.857 302.857q-3.429 4.571-12 14.857l-6.286 5.714v1.714l8-1.714q5.143-0.571 17.143-0.571h141.714v-68h69.143z"
				],
				"attrs": [],
				"tags": [
					"sort-alpha-desc"
				],
				"defaultCode": 61790,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 315,
				"order": 316,
				"prevSize": 28,
				"code": 61790,
				"name": "sort-alpha-desc"
			},
			"setIdx": 0,
			"iconIdx": 333
		},
		{
			"icon": {
				"paths": [
					"M420.571 822.857q0 6.857-5.714 13.714l-182.286 182.286q-5.714 5.143-13.143 5.143-6.857 0-13.143-5.143l-182.857-182.857q-8.571-9.143-4-20 4.571-11.429 17.143-11.429h109.714v-786.286q0-8 5.143-13.143t13.143-5.143h109.714q8 0 13.143 5.143t5.143 13.143v786.286h109.714q8 0 13.143 5.143t5.143 13.143zM1024 896v109.714q0 8-5.143 13.143t-13.143 5.143h-475.429q-8 0-13.143-5.143t-5.143-13.143v-109.714q0-8 5.143-13.143t13.143-5.143h475.429q8 0 13.143 5.143t5.143 13.143zM914.286 603.429v109.714q0 8-5.143 13.143t-13.143 5.143h-365.714q-8 0-13.143-5.143t-5.143-13.143v-109.714q0-8 5.143-13.143t13.143-5.143h365.714q8 0 13.143 5.143t5.143 13.143zM804.571 310.857v109.714q0 8-5.143 13.143t-13.143 5.143h-256q-8 0-13.143-5.143t-5.143-13.143v-109.714q0-8 5.143-13.143t13.143-5.143h256q8 0 13.143 5.143t5.143 13.143zM694.857 18.286v109.714q0 8-5.143 13.143t-13.143 5.143h-146.286q-8 0-13.143-5.143t-5.143-13.143v-109.714q0-8 5.143-13.143t13.143-5.143h146.286q8 0 13.143 5.143t5.143 13.143z"
				],
				"attrs": [],
				"tags": [
					"sort-amount-asc"
				],
				"defaultCode": 61792,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 316,
				"order": 317,
				"prevSize": 28,
				"code": 61792,
				"name": "sort-amount-asc"
			},
			"setIdx": 0,
			"iconIdx": 334
		},
		{
			"icon": {
				"paths": [
					"M694.857 896v109.714q0 8-5.143 13.143t-13.143 5.143h-146.286q-8 0-13.143-5.143t-5.143-13.143v-109.714q0-8 5.143-13.143t13.143-5.143h146.286q8 0 13.143 5.143t5.143 13.143zM420.571 822.857q0 6.857-5.714 13.714l-182.286 182.286q-5.714 5.143-13.143 5.143-6.857 0-13.143-5.143l-182.857-182.857q-8.571-9.143-4-20 4.571-11.429 17.143-11.429h109.714v-786.286q0-8 5.143-13.143t13.143-5.143h109.714q8 0 13.143 5.143t5.143 13.143v786.286h109.714q8 0 13.143 5.143t5.143 13.143zM804.571 603.429v109.714q0 8-5.143 13.143t-13.143 5.143h-256q-8 0-13.143-5.143t-5.143-13.143v-109.714q0-8 5.143-13.143t13.143-5.143h256q8 0 13.143 5.143t5.143 13.143zM914.286 310.857v109.714q0 8-5.143 13.143t-13.143 5.143h-365.714q-8 0-13.143-5.143t-5.143-13.143v-109.714q0-8 5.143-13.143t13.143-5.143h365.714q8 0 13.143 5.143t5.143 13.143zM1024 18.286v109.714q0 8-5.143 13.143t-13.143 5.143h-475.429q-8 0-13.143-5.143t-5.143-13.143v-109.714q0-8 5.143-13.143t13.143-5.143h475.429q8 0 13.143 5.143t5.143 13.143z"
				],
				"attrs": [],
				"tags": [
					"sort-amount-desc"
				],
				"defaultCode": 61793,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 317,
				"order": 318,
				"prevSize": 28,
				"code": 61793,
				"name": "sort-amount-desc"
			},
			"setIdx": 0,
			"iconIdx": 335
		},
		{
			"icon": {
				"paths": [
					"M769.143 750.286q0-36-25.143-66.286t-58.857-30.286q-29.714 0-47.429 21.143t-17.714 53.714 20.857 54.286 59.714 21.714q28.571 0 48.571-15.429t20-38.857zM420.571 822.857q0 6.857-5.714 13.714l-182.286 182.286q-5.714 5.143-13.143 5.143-6.857 0-13.143-5.143l-182.857-182.857q-8.571-9.143-4-20 4.571-11.429 17.143-11.429h109.714v-786.286q0-8 5.143-13.143t13.143-5.143h109.714q8 0 13.143 5.143t5.143 13.143v786.286h109.714q8 0 13.143 5.143t5.143 13.143zM849.143 783.429q0 35.429-7.429 69.429t-23.429 65.143-38.857 54.571-56.286 37.429-72.857 14q-35.429 0-61.714-9.143-13.714-4.571-24-8.571l22.286-64.571q8.571 4 17.714 6.286 21.143 7.429 42.857 7.429 48 0 76.857-33.429t38-83.143h-1.143q-12 13.143-35.143 21.143t-48.286 8q-60.571 0-98.857-40.857t-38.286-98.571q0-60 41.143-101.714t103.429-41.714q70.286 0 117.143 54t46.857 144.286zM832 373.714v65.143h-268v-65.143h95.429v-246.857q0-4 0.286-10.857t0.286-9.714v-9.143h-1.143l-4 6.857q-4.571 7.429-14.857 17.714l-35.429 33.143-46.857-49.143 109.714-105.714h70.286v373.714h94.286z"
				],
				"attrs": [],
				"tags": [
					"sort-numeric-asc"
				],
				"defaultCode": 61794,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 318,
				"order": 319,
				"prevSize": 28,
				"code": 61794,
				"name": "sort-numeric-asc"
			},
			"setIdx": 0,
			"iconIdx": 336
		},
		{
			"icon": {
				"paths": [
					"M769.143 165.143q0-36-25.143-66.286t-58.857-30.286q-29.714 0-47.429 21.143t-17.714 53.714 20.857 54.286 59.714 21.714q28.571 0 48.571-15.429t20-38.857zM420.571 822.857q0 6.857-5.714 13.714l-182.286 182.286q-5.714 5.143-13.143 5.143-6.857 0-13.143-5.143l-182.857-182.857q-8.571-9.143-4-20 4.571-11.429 17.143-11.429h109.714v-786.286q0-8 5.143-13.143t13.143-5.143h109.714q8 0 13.143 5.143t5.143 13.143v786.286h109.714q8 0 13.143 5.143t5.143 13.143zM832 958.857v65.143h-268v-65.143h95.429v-246.857q0-4 0.286-10.857t0.286-9.714v-9.143h-1.143l-4 6.857q-4.571 7.429-14.857 17.714l-35.429 33.143-46.857-49.143 109.714-105.714h70.286v373.714h94.286zM849.143 198.286q0 35.429-7.429 69.429t-23.429 65.143-38.857 54.571-56.286 37.429-72.857 14q-35.429 0-61.714-9.143-13.714-4.571-24-8.571l22.286-64.571q8.571 4 17.714 6.286 21.143 7.429 42.857 7.429 48 0 76.857-33.429t38-83.143h-1.143q-12 13.143-35.143 21.143t-48.286 8q-60.571 0-98.857-40.857t-38.286-98.571q0-60 41.143-101.714t103.429-41.714q70.286 0 117.143 54t46.857 144.286z"
				],
				"attrs": [],
				"tags": [
					"sort-numeric-desc"
				],
				"defaultCode": 61795,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 319,
				"order": 320,
				"prevSize": 28,
				"code": 61795,
				"name": "sort-numeric-desc"
			},
			"setIdx": 0,
			"iconIdx": 337
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M146.286 768q0-14.857-10.857-25.714t-25.714-10.857q-15.429 0-26 10.857t-10.571 25.714q0 15.429 10.571 26t26 10.571q14.857 0 25.714-10.571t10.857-26zM237.714 475.429v365.714q0 14.857-10.857 25.714t-25.714 10.857h-164.571q-14.857 0-25.714-10.857t-10.857-25.714v-365.714q0-14.857 10.857-25.714t25.714-10.857h164.571q14.857 0 25.714 10.857t10.857 25.714zM914.286 475.429q0 49.143-31.429 85.143 8.571 25.143 8.571 43.429 1.714 43.429-24.571 78.286 9.714 32 0 66.857-8.571 32.571-30.857 53.714 5.143 64-28 103.429-36.571 43.429-112.571 44.571h-73.714q-37.714 0-82.286-8.857t-69.429-16.571-68.857-22.571q-70.286-24.571-90.286-25.143-14.857-0.571-25.714-11.143t-10.857-25.429v-366.286q0-14.286 10.286-24.857t24.571-11.714q13.714-1.143 43.429-33.714t57.714-69.143q38.857-49.714 57.714-68.571 10.286-10.286 17.714-27.429t10-27.714 7.714-34.571q4-22.286 7.143-34.857t11.143-29.714 19.429-28.571q10.857-10.857 25.714-10.857 26.286 0 47.143 6t34.286 14.857 22.857 23.143 13.714 25.714 6.857 28.571 2.857 25.714 0.286 22.286q0 21.714-5.429 43.429t-10.857 34.286-15.714 32q-1.714 3.429-5.714 10.286t-6.286 12.571-4.571 13.714h158.286q44.571 0 77.143 32.571t32.571 77.143z"
				],
				"attrs": [],
				"tags": [
					"thumbs-up"
				],
				"defaultCode": 61796,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 320,
				"order": 321,
				"prevSize": 28,
				"code": 61796,
				"name": "thumbs-up"
			},
			"setIdx": 0,
			"iconIdx": 338
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M146.286 329.143q0 14.857-10.857 25.714t-25.714 10.857q-15.429 0-26-10.857t-10.571-25.714q0-15.429 10.571-26t26-10.571q14.857 0 25.714 10.571t10.857 26zM237.714 621.714v-365.714q0-14.857-10.857-25.714t-25.714-10.857h-164.571q-14.857 0-25.714 10.857t-10.857 25.714v365.714q0 14.857 10.857 25.714t25.714 10.857h164.571q14.857 0 25.714-10.857t10.857-25.714zM882.857 536.571q31.429 34.857 31.429 85.143-0.571 44.571-32.857 77.143t-76.857 32.571h-158.286q2.286 8 4.571 13.714t6.286 12.571 5.714 10.286q10.286 21.143 15.429 32.571t10.857 33.429 5.714 43.714q0 13.714-0.286 22.286t-2.857 25.714-6.857 28.571-13.714 25.714-22.857 23.143-34.286 14.857-47.143 6q-14.857 0-25.714-10.857-11.429-11.429-19.429-28.571t-11.143-29.714-7.143-34.857q-5.143-24-7.714-34.571t-10-27.714-17.714-27.429q-18.857-18.857-57.714-68.571-28-36.571-57.714-69.143t-43.429-33.714q-14.286-1.143-24.571-11.714t-10.286-24.857v-366.286q0-14.857 10.857-25.429t25.714-11.143q20-0.571 90.286-25.143 44-14.857 68.857-22.571t69.429-16.571 82.286-8.857h73.714q76 1.143 112.571 44.571 33.143 39.429 28 103.429 22.286 21.143 30.857 53.714 9.714 34.857 0 66.857 26.286 34.857 24.571 78.286 0 18.286-8.571 43.429z"
				],
				"attrs": [],
				"tags": [
					"thumbs-down"
				],
				"defaultCode": 61797,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 321,
				"order": 322,
				"prevSize": 28,
				"code": 61797,
				"name": "thumbs-down"
			},
			"setIdx": 0,
			"iconIdx": 339
		},
		{
			"icon": {
				"paths": [
					"M525.143 744.571v-89.714q0-28.571-16.571-28.571-9.714 0-18.857 9.143v128q9.143 9.143 18.857 9.143 16.571 0 16.571-28zM630.286 674.857h37.714v-19.429q0-29.143-18.857-29.143t-18.857 29.143v19.429zM304 522.857v40h-45.714v241.714h-42.286v-241.714h-44.571v-40h132.571zM418.857 594.857v209.714h-38.286v-22.857q-22.286 25.714-43.429 25.714-18.857 0-24-16-3.429-9.143-3.429-30.857v-165.714h37.714v154.286q0 13.714 0.571 14.857 0.571 8.571 8.571 8.571 11.429 0 24-17.714v-160h38.286zM562.857 658.286v83.429q0 29.714-4 41.714-6.857 24-30.286 24-20 0-38.857-23.429v20.571h-38.286v-281.714h38.286v92q18.286-22.857 38.857-22.857 23.429 0 30.286 24 4 12 4 42.286zM706.286 732v5.143q0 16.571-1.143 24.571-1.714 12.571-8.571 22.857-15.429 22.857-45.714 22.857-29.714 0-46.286-21.714-12-15.429-12-49.143v-73.714q0-33.714 11.429-49.143 16.571-21.714 45.714-21.714t44.571 21.714q12 16 12 49.143v43.429h-76v37.143q0 29.143 19.429 29.143 13.714 0 17.143-14.857 0-0.571 0.286-4t0.286-9.429v-12.286h38.857zM448.571 261.143v89.143q0 29.143-18.286 29.143t-18.286-29.143v-89.143q0-29.714 18.286-29.714t18.286 29.714zM753.143 668.571q0-101.143-10.857-148.571-5.714-25.143-24.571-42t-43.429-19.714q-77.714-8.571-235.429-8.571-157.143 0-234.857 8.571-25.143 2.857-43.714 19.714t-24.286 42q-11.429 49.714-11.429 148.571 0 100.571 11.429 148.571 5.714 24.571 24.286 41.714t43.143 20q78.286 8.571 235.429 8.571t235.429-8.571q24.571-2.857 43.143-20t24.286-41.714q11.429-48 11.429-148.571zM321.714 296.571l51.429-169.143h-42.857l-29.143 111.429-30.286-111.429h-44.571l13.714 39.429t13.143 39.429q20 58.857 26.286 90.286v114.857h42.286v-114.857zM486.857 342.857v-74.286q0-33.143-12-49.714-16.571-21.714-44.571-21.714-29.143 0-44.571 21.714-12 16.571-12 49.714v74.286q0 33.143 12 49.714 15.429 21.714 44.571 21.714 28 0 44.571-21.714 12-15.429 12-49.714zM590.286 411.429h38.286v-211.429h-38.286v161.714q-12.571 17.714-24 17.714-8.571 0-9.143-9.143-0.571-1.143-0.571-14.857v-155.429h-38.286v167.429q0 21.143 3.429 31.429 6.286 15.429 24.571 15.429 20.571 0 44-25.714v22.857zM877.714 237.714v548.571q0 68-48.286 116.286t-116.286 48.286h-548.571q-68 0-116.286-48.286t-48.286-116.286v-548.571q0-68 48.286-116.286t116.286-48.286h548.571q68 0 116.286 48.286t48.286 116.286z"
				],
				"attrs": [],
				"tags": [
					"youtube-square"
				],
				"defaultCode": 61798,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 322,
				"order": 323,
				"prevSize": 28,
				"code": 61798,
				"name": "youtube-square"
			},
			"setIdx": 0,
			"iconIdx": 340
		},
		{
			"icon": {
				"paths": [
					"M554.857 710.857v120.571q0 38.286-22.286 38.286-13.143 0-25.714-12.571v-172q12.571-12.571 25.714-12.571 22.286 0 22.286 38.286zM748 711.429v26.286h-51.429v-26.286q0-38.857 25.714-38.857t25.714 38.857zM196 586.857h61.143v-53.714h-178.286v53.714h60v325.143h57.143v-325.143zM360.571 912h50.857v-282.286h-50.857v216q-17.143 24-32.571 24-10.286 0-12-12-0.571-1.714-0.571-20v-208h-50.857v223.429q0 28 4.571 41.714 6.857 21.143 33.143 21.143 27.429 0 58.286-34.857v30.857zM605.714 827.429v-112.571q0-41.714-5.143-56.571-9.714-32-40.571-32-28.571 0-53.143 30.857v-124h-50.857v378.857h50.857v-27.429q25.714 31.429 53.143 31.429 30.857 0 40.571-31.429 5.143-15.429 5.143-57.143zM798.857 821.714v-7.429h-52q0 29.143-1.143 34.857-4 20.571-22.857 20.571-26.286 0-26.286-39.429v-49.714h102.286v-58.857q0-45.143-15.429-66.286-22.286-29.143-60.571-29.143-38.857 0-61.143 29.143-16 21.143-16 66.286v98.857q0 45.143 16.571 66.286 22.286 29.143 61.714 29.143 41.143 0 61.714-30.286 10.286-15.429 12-30.857 1.143-5.143 1.143-33.143zM451.429 300v-120q0-39.429-24.571-39.429t-24.571 39.429v120q0 40 24.571 40t24.571-40zM862.286 729.143q0 133.714-14.857 200-8 33.714-33.143 56.571t-58.286 26.286q-105.143 12-317.143 12t-317.143-12q-33.143-3.429-58.571-26.286t-32.857-56.571q-14.857-64-14.857-200 0-133.714 14.857-200 8-33.714 33.143-56.571t58.857-26.857q104.571-11.429 316.571-11.429t317.143 11.429q33.143 4 58.571 26.857t32.857 56.571q14.857 64 14.857 200zM292 0h58.286l-69.143 228v154.857h-57.143v-154.857q-8-42.286-34.857-121.143-21.143-58.857-37.143-106.857h60.571l40.571 150.286zM503.429 190.286v100q0 46.286-16 67.429-21.143 29.143-60.571 29.143-38.286 0-60-29.143-16-21.714-16-67.429v-100q0-45.714 16-66.857 21.714-29.143 60-29.143 39.429 0 60.571 29.143 16 21.143 16 66.857zM694.857 97.714v285.143h-52v-31.429q-30.286 35.429-58.857 35.429-26.286 0-33.714-21.143-4.571-13.714-4.571-42.857v-225.143h52v209.714q0 18.857 0.571 20 1.714 12.571 12 12.571 15.429 0 32.571-24.571v-217.714h52z"
				],
				"attrs": [],
				"tags": [
					"youtube"
				],
				"defaultCode": 61799,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 323,
				"order": 324,
				"prevSize": 28,
				"code": 61799,
				"name": "youtube"
			},
			"setIdx": 0,
			"iconIdx": 341
		},
		{
			"icon": {
				"width": 805,
				"paths": [
					"M341.143 381.143q-5.714 10.286-146.857 260.571-15.429 26.286-37.143 26.286h-136.571q-12 0-17.714-9.714t0-20.571l144.571-256q0.571 0 0-0.571l-92-159.429q-6.857-12.571-0.571-21.143 5.143-8.571 18.286-8.571h136.571q22.857 0 37.714 25.714zM801.714 14.286q6.286 9.143 0 21.143l-301.714 533.714v0.571l192 351.429q6.286 11.429 0.571 21.143-5.714 8.571-18.286 8.571h-136.571q-24 0-37.714-25.714l-193.714-355.429q10.286-18.286 303.429-538.286 14.286-25.714 36.571-25.714h137.714q12.571 0 17.714 8.571z"
				],
				"attrs": [],
				"tags": [
					"xing"
				],
				"defaultCode": 61800,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 324,
				"order": 325,
				"prevSize": 28,
				"code": 61800,
				"name": "xing"
			},
			"setIdx": 0,
			"iconIdx": 342
		},
		{
			"icon": {
				"paths": [
					"M391.429 437.143q0-0.571-72-126.857-12-19.429-29.714-19.429h-105.143q-10.286 0-14.857 6.286-4 6.857 0.571 16.571l71.429 123.429v0.571l-112 197.714q-5.143 8 0 16 4.571 7.429 13.714 7.429h105.714q17.714 0 28.571-20.571zM748 153.143q-4-6.857-13.714-6.857h-106.857q-17.143 0-28 20l-234.857 416.571q0.571 1.143 149.714 274.857 11.429 20 29.714 20h105.143q10.286 0 14.286-6.857 4.571-7.429-0.571-16l-148.571-272v-0.571l233.714-413.143q4.571-9.143 0-16zM877.714 237.714v548.571q0 68-48.286 116.286t-116.286 48.286h-548.571q-68 0-116.286-48.286t-48.286-116.286v-548.571q0-68 48.286-116.286t116.286-48.286h548.571q68 0 116.286 48.286t48.286 116.286z"
				],
				"attrs": [],
				"tags": [
					"xing-square"
				],
				"defaultCode": 61801,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 325,
				"order": 326,
				"prevSize": 28,
				"code": 61801,
				"name": "xing-square"
			},
			"setIdx": 0,
			"iconIdx": 343
		},
		{
			"icon": {
				"paths": [
					"M731.429 512q0-21.143-17.143-30.857l-292.571-182.857q-17.714-11.429-37.143-1.143-18.857 10.286-18.857 32v365.714q0 21.714 18.857 32 9.143 4.571 17.714 4.571 11.429 0 19.429-5.714l292.571-182.857q17.143-9.714 17.143-30.857zM1024 512q0 54.857-0.571 85.714t-4.857 78-12.857 84.286q-9.143 41.714-39.429 70.286t-70.857 33.143q-126.857 14.286-383.429 14.286t-383.429-14.286q-40.571-4.571-71.143-33.143t-39.714-70.286q-8-37.143-12.286-84.286t-4.857-78-0.571-85.714 0.571-85.714 4.857-78 12.857-84.286q9.143-41.714 39.429-70.286t70.857-33.143q126.857-14.286 383.429-14.286t383.429 14.286q40.571 4.571 71.143 33.143t39.714 70.286q8 37.143 12.286 84.286t4.857 78 0.571 85.714z"
				],
				"attrs": [],
				"tags": [
					"youtube-play"
				],
				"defaultCode": 61802,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 326,
				"order": 327,
				"prevSize": 28,
				"code": 61802,
				"name": "youtube-play"
			},
			"setIdx": 0,
			"iconIdx": 344
		},
		{
			"icon": {
				"paths": [
					"M229.714 404l282.286 174.286-195.429 162.857-280-182.286zM793.143 721.143v61.714l-280 167.429v0.571l-0.571-0.571-0.571 0.571v-0.571l-279.429-167.429v-61.714l84 54.857 195.429-162.286v-1.143l0.571 0.571 0.571-0.571v1.143l196 162.286zM316.571 67.429l195.429 162.857-282.286 173.714-193.143-154.286zM794.286 404l193.143 154.857-279.429 182.286-196-162.857zM708 67.429l279.429 182.286-193.143 154.286-282.286-173.714z"
				],
				"attrs": [],
				"tags": [
					"dropbox"
				],
				"defaultCode": 61803,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 327,
				"order": 328,
				"prevSize": 28,
				"code": 61803,
				"name": "dropbox"
			},
			"setIdx": 0,
			"iconIdx": 345
		},
		{
			"icon": {
				"width": 805,
				"paths": [
					"M530.286 800.571v86.286l-404 0.571v-86.286zM668 602.857v400.571l-0.571 20v0.571l-667.429-0.571v-420.571h69.143v353.143h530.286v-353.143h68.571zM137.714 653.143l402.286 37.143-7.429 85.714-402.857-37.143zM176.571 472.571l390.286 104.571-22.286 83.429-390.286-104.571zM269.714 273.143l348 205.714-44 74.286-348-205.714zM475.429 84l227.429 334.286-70.857 48.571-228-333.714zM734.286 0l69.143 398.286-85.143 14.857-69.143-398.286z"
				],
				"attrs": [],
				"tags": [
					"stack-overflow"
				],
				"defaultCode": 61804,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 328,
				"order": 329,
				"prevSize": 28,
				"code": 61804,
				"name": "stack-overflow"
			},
			"setIdx": 0,
			"iconIdx": 346
		},
		{
			"icon": {
				"paths": [
					"M778.286 814.857v-370.286h-77.143q11.429 36 11.429 74.857 0 72-36.571 132.857t-99.429 96.286-137.143 35.429q-112.571 0-192.571-77.429t-80-187.143q0-38.857 11.429-74.857h-80.571v370.286q0 14.857 10 24.857t24.857 10h610.857q14.286 0 24.571-10t10.286-24.857zM616 510.286q0-70.857-51.714-120.857t-124.857-50q-72.571 0-124.286 50t-51.714 120.857 51.714 120.857 124.286 50q73.143 0 124.857-50t51.714-120.857zM778.286 304.571v-94.286q0-16-11.429-27.714t-28-11.714h-99.429q-16.571 0-28 11.714t-11.429 27.714v94.286q0 16.571 11.429 28t28 11.429h99.429q16.571 0 28-11.429t11.429-28zM877.714 185.714v652.571q0 46.286-33.143 79.429t-79.429 33.143h-652.571q-46.286 0-79.429-33.143t-33.143-79.429v-652.571q0-46.286 33.143-79.429t79.429-33.143h652.571q46.286 0 79.429 33.143t33.143 79.429z"
				],
				"attrs": [],
				"tags": [
					"instagram"
				],
				"defaultCode": 61805,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 329,
				"order": 330,
				"prevSize": 28,
				"code": 61805,
				"name": "instagram"
			},
			"setIdx": 0,
			"iconIdx": 347
		},
		{
			"icon": {
				"paths": [
					"M713.143 73.143q68 0 116.286 48.286t48.286 116.286v548.571q0 68-48.286 116.286t-116.286 48.286h-548.571q-68 0-116.286-48.286t-48.286-116.286v-548.571q0-68 48.286-116.286t116.286-48.286h548.571zM398.857 512q0-50.286-35.429-85.714t-85.714-35.429-85.714 35.429-35.429 85.714 35.429 85.714 85.714 35.429 85.714-35.429 35.429-85.714zM721.143 512q0-50.286-35.429-85.714t-85.714-35.429-85.714 35.429-35.429 85.714 35.429 85.714 85.714 35.429 85.714-35.429 35.429-85.714z"
				],
				"attrs": [],
				"tags": [
					"flickr"
				],
				"defaultCode": 61806,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 330,
				"order": 331,
				"prevSize": 28,
				"code": 61806,
				"name": "flickr"
			},
			"setIdx": 0,
			"iconIdx": 348
		},
		{
			"icon": {
				"paths": [
					"M438.857 355.429l114.857 174.857h-229.714zM647.429 658.286h53.714l-262.286-394.857-262.286 394.857h53.714l59.429-91.429h298.286zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"adn"
				],
				"defaultCode": 61808,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 331,
				"order": 332,
				"prevSize": 28,
				"code": 61808,
				"name": "adn"
			},
			"setIdx": 0,
			"iconIdx": 349
		},
		{
			"icon": {
				"width": 805,
				"paths": [
					"M465.714 490.857q4.571 36-28.857 57.714t-63.714 3.429q-22.286-9.714-30.571-33.143t-0.286-46.857 29.714-33.143q20.571-10.286 41.429-6.857t36.571 20.286 15.714 38.571zM529.143 478.857q-8-61.143-64.571-93.714t-112.571-7.429q-36 16-57.429 50.571t-19.714 74q2.286 52 44.286 88.571t94.571 32q52-4.571 86.857-48t28.571-96zM665.714 169.143q-11.429-15.429-32-25.429t-33.143-12.571-40.571-7.143q-166.286-26.857-323.429 1.143-24.571 4-37.714 6.857t-31.429 12.571-28.571 24.571q17.143 16 43.429 26t42 12.571 50 6.571q130.286 16.571 256 0.571 36-4.571 51.143-6.857t41.429-12.286 42.857-26.571zM698.286 760.571q-4.571 14.857-8.857 43.714t-8 48-16.286 40-33.143 32.286q-49.143 27.429-108.286 40.857t-115.429 12.571-115.143-10.571q-26.286-4.571-46.571-10.286t-43.714-15.429-41.714-24.857-29.714-35.143q-14.286-54.857-32.571-166.857l3.429-9.143 10.286-5.143q127.429 84.571 289.429 84.571t290-84.571q12 3.429 13.714 13.143t-2.857 25.714-4.571 21.143zM801.714 211.429q-14.857 95.429-63.429 374.286-2.857 17.143-15.429 32t-24.857 22.857-31.143 17.714q-144 72-348.571 50.286-141.714-15.429-225.143-79.429-8.571-6.857-14.571-15.143t-9.714-20-5.143-19.429-3.429-22.571-3.143-20q-5.143-28.571-15.143-85.714t-16-92.286-13.429-84.286-12.571-90.286q1.714-14.857 10-27.714t18-21.429 25.714-17.143 26.286-12.857 27.429-10.571q71.429-26.286 178.857-36.571 216.571-21.143 386.286 28.571 88.571 26.286 122.857 69.714 9.143 11.429 9.429 29.143t-3.143 30.857z"
				],
				"attrs": [],
				"tags": [
					"bitbucket"
				],
				"defaultCode": 61809,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 332,
				"order": 333,
				"prevSize": 28,
				"code": 61809,
				"name": "bitbucket"
			},
			"setIdx": 0,
			"iconIdx": 350
		},
		{
			"icon": {
				"paths": [
					"M484.571 497.143q0-24.571-23.429-37.714t-44-0.571q-24.571 11.429-24.286 41.429t24.857 40.286q22.286 13.143 46.286-2.286t20.571-41.143zM530.286 488q4.571 37.714-20.571 69.143t-62.857 34.857-68-22.857-32-64.571q-1.143-28 14.571-53.143t41.429-36.571q40-17.714 80.857 5.714t46.571 67.429zM628.571 264.571q-11.429 12-30.571 19.429t-30.286 9.143-36.286 4.571q-88.571 11.429-185.143 0-25.143-3.429-36-5.429t-30-9.143-31.143-18.571q7.429-10.857 20.571-17.714t22.857-8.857 26.857-4.857q113.143-20 233.143-0.571 18.857 2.857 29.143 4.857t24.571 9.143 22.286 18zM652.571 690.857q0-4 3.143-15.143t1.714-18.286-10-9.429q-92 60.571-208.571 60.571t-209.143-60.571l-6.857 3.429-2.857 6.857q14.857 88 23.429 120 26.857 46.286 116.571 61.714 142.286 26.286 244.571-30.286 19.429-10.857 28-29.429t12.857-48.857 7.143-40.571zM726.857 294.857q5.143-30.286-4.571-42.857-24.571-31.429-88.571-50.286-123.429-36-278.286-20.571-75.429 6.857-129.143 26.286-21.714 8.571-34 14.286t-26.857 19.429-16.857 30.857q4.571 38.857 10.857 78.857t16.571 97.714 13.714 78.286q0.571 2.857 2.857 17.714t4 20.571 6.857 15.429 12.571 16q60 45.714 162.286 57.143 148 16 251.429-36 13.714-7.429 22.571-13.143t17.714-16.571 11.143-22.857q27.429-152.571 45.714-270.286zM877.714 237.714v548.571q0 68-48.286 116.286t-116.286 48.286h-548.571q-68 0-116.286-48.286t-48.286-116.286v-548.571q0-68 48.286-116.286t116.286-48.286h548.571q68 0 116.286 48.286t48.286 116.286z"
				],
				"attrs": [],
				"tags": [
					"bitbucket-square"
				],
				"defaultCode": 61810,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 333,
				"order": 334,
				"prevSize": 28,
				"code": 61810,
				"name": "bitbucket-square"
			},
			"setIdx": 0,
			"iconIdx": 351
		},
		{
			"icon": {
				"width": 585,
				"paths": [
					"M539.429 759.429l45.714 135.429q-13.143 20-63.429 37.714t-101.143 18.286q-59.429 1.143-108.857-14.857t-81.429-42.286-54.286-60.571-31.714-68.571-9.429-67.429v-310.857h-96v-122.857q41.143-14.857 73.714-39.714t52-51.429 33.143-58.286 19.429-56.571 8.571-50.571q0.571-2.857 2.571-4.857t4.286-2h139.429v242.286h190.286v144h-190.857v296q0 17.143 3.714 32t12.857 30 28.286 23.714 46.571 8q44.571-1.143 76.571-16.571z"
				],
				"attrs": [],
				"tags": [
					"tumblr"
				],
				"defaultCode": 61811,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 334,
				"order": 335,
				"prevSize": 28,
				"code": 61811,
				"name": "tumblr"
			},
			"setIdx": 0,
			"iconIdx": 352
		},
		{
			"icon": {
				"paths": [
					"M649.143 834.857l-35.429-104.571q-25.143 12.571-58.857 12.571-20.571 0.571-35.429-6t-22-18-10-23.143-2.857-24.857v-227.429h146.857v-110.857h-146.286v-186.286h-107.429q-4.571 0-5.143 5.714-2.857 25.143-10 49.714t-22.286 54.286-44 54.286-67.714 38.857v94.286h74.286v238.857q0 32.571 12.286 65.714t37.143 63.429 69.143 48.857 100.857 17.429q39.429-0.571 78-14.286t48.857-28.571zM877.714 237.714v548.571q0 68-48.286 116.286t-116.286 48.286h-548.571q-68 0-116.286-48.286t-48.286-116.286v-548.571q0-68 48.286-116.286t116.286-48.286h548.571q68 0 116.286 48.286t48.286 116.286z"
				],
				"attrs": [],
				"tags": [
					"tumblr-square"
				],
				"defaultCode": 61812,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 335,
				"order": 336,
				"prevSize": 28,
				"code": 61812,
				"name": "tumblr-square"
			},
			"setIdx": 0,
			"iconIdx": 353
		},
		{
			"icon": {
				"width": 439,
				"paths": [
					"M437.143 742.286q4.571 10.857-2.857 20l-200 219.429q-5.714 5.714-13.143 5.714-8 0-13.714-5.714l-202.857-219.429q-7.429-9.143-2.857-20 5.143-10.857 16.571-10.857h128v-713.143q0-8 5.143-13.143t13.143-5.143h109.714q8 0 13.143 5.143t5.143 13.143v713.143h128q12 0 16.571 10.857z"
				],
				"attrs": [],
				"tags": [
					"long-arrow-down"
				],
				"defaultCode": 61813,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 336,
				"order": 337,
				"prevSize": 28,
				"code": 61813,
				"name": "long-arrow-down"
			},
			"setIdx": 0,
			"iconIdx": 354
		},
		{
			"icon": {
				"width": 439,
				"paths": [
					"M437.143 281.714q-5.143 10.857-16.571 10.857h-128v713.143q0 8-5.143 13.143t-13.143 5.143h-109.714q-8 0-13.143-5.143t-5.143-13.143v-713.143h-128q-12 0-16.571-10.857t2.857-20l200-219.429q5.714-5.714 13.143-5.714 8 0 13.714 5.714l202.857 219.429q7.429 9.143 2.857 20z"
				],
				"attrs": [],
				"tags": [
					"long-arrow-up"
				],
				"defaultCode": 61814,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 337,
				"order": 338,
				"prevSize": 28,
				"code": 61814,
				"name": "long-arrow-up"
			},
			"setIdx": 0,
			"iconIdx": 355
		},
		{
			"icon": {
				"paths": [
					"M1024 457.143v109.714q0 8-5.143 13.143t-13.143 5.143h-713.143v128q0 12-10.857 16.571t-20-2.857l-219.429-200q-5.714-5.714-5.714-13.143 0-8 5.714-13.714l219.429-202.286q9.143-8 20-3.429 10.857 5.143 10.857 16.571v128h713.143q8 0 13.143 5.143t5.143 13.143z"
				],
				"attrs": [],
				"tags": [
					"long-arrow-left"
				],
				"defaultCode": 61815,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 338,
				"order": 339,
				"prevSize": 28,
				"code": 61815,
				"name": "long-arrow-left"
			},
			"setIdx": 0,
			"iconIdx": 356
		},
		{
			"icon": {
				"paths": [
					"M987.429 510.286q0 8-5.714 13.714l-219.429 202.286q-9.143 8-20 3.429-10.857-5.143-10.857-16.571v-128h-713.143q-8 0-13.143-5.143t-5.143-13.143v-109.714q0-8 5.143-13.143t13.143-5.143h713.143v-128q0-12 10.857-16.571t20 2.857l219.429 200q5.714 5.714 5.714 13.143z"
				],
				"attrs": [],
				"tags": [
					"long-arrow-right"
				],
				"defaultCode": 61816,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 339,
				"order": 340,
				"prevSize": 28,
				"code": 61816,
				"name": "long-arrow-right"
			},
			"setIdx": 0,
			"iconIdx": 357
		},
		{
			"icon": {
				"width": 805,
				"paths": [
					"M796 694.286q-22.286 71.429-70.286 142.857-73.714 112-146.857 112-28 0-80-18.286-49.143-18.286-86.286-18.286-34.857 0-81.143 18.857-46.286 19.429-75.429 19.429-86.857 0-172-148-84-149.143-84-287.429 0-130.286 64.571-213.714 64-82.286 162.286-82.286 41.143 0 101.143 17.143 59.429 17.143 78.857 17.143 25.714 0 81.714-19.429 58.286-19.429 98.857-19.429 68 0 121.714 37.143 29.714 20.571 59.429 57.143-45.143 38.286-65.143 67.429-37.143 53.714-37.143 118.286 0 70.857 39.429 127.429t90.286 72zM581.143 24q0 34.857-16.571 77.714-17.143 42.857-53.143 78.857-30.857 30.857-61.714 41.143-21.143 6.286-59.429 9.714 1.714-85.143 44.571-146.857 42.286-61.143 142.857-84.571 0.571 1.714 1.429 6.286t1.429 6.286q0 2.286 0.286 5.714t0.286 5.714z"
				],
				"attrs": [],
				"tags": [
					"apple"
				],
				"defaultCode": 61817,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 340,
				"order": 341,
				"prevSize": 28,
				"code": 61817,
				"name": "apple"
			},
			"setIdx": 0,
			"iconIdx": 358
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M389.714 574.857v372l-389.714-53.714v-318.286h389.714zM389.714 150.286v376.571h-389.714v-322.857zM950.857 574.857v449.143l-518.286-71.429v-377.714h518.286zM950.857 73.143v453.714h-518.286v-382.286z"
				],
				"attrs": [],
				"tags": [
					"windows"
				],
				"defaultCode": 61818,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 341,
				"order": 342,
				"prevSize": 28,
				"code": 61818,
				"name": "windows"
			},
			"setIdx": 0,
			"iconIdx": 359
		},
		{
			"icon": {
				"width": 805,
				"paths": [
					"M281.714 276q9.143 0 15.714-6.571t6.571-15.714-6.571-15.714-15.714-6.571-15.429 6.571-6.286 15.714 6.286 15.714 15.429 6.571zM522.857 276q9.143 0 15.429-6.571t6.286-15.714-6.286-15.714-15.429-6.571-15.714 6.571-6.571 15.714 6.571 15.714 15.714 6.571zM58.857 381.143q24 0 41.143 17.143t17.143 41.143v245.714q0 24.571-16.857 41.714t-41.429 17.143-41.714-17.143-17.143-41.714v-245.714q0-24 17.143-41.143t41.714-17.143zM664.571 392v380.571q0 26.286-18.286 44.571t-44 18.286h-42.857v129.714q0 24.571-17.143 41.714t-41.714 17.143-41.714-17.143-17.143-41.714v-129.714h-78.857v129.714q0 24.571-17.143 41.714t-41.714 17.143q-24 0-41.143-17.143t-17.143-41.714l-0.571-129.714h-42.286q-26.286 0-44.571-18.286t-18.286-44.571v-380.571h524.571zM532 160.571q61.143 31.429 97.714 87.714t36.571 123.143h-528.571q0-66.857 36.571-123.143t98.286-87.714l-40.571-74.857q-4-7.429 2.857-11.429 7.429-3.429 11.429 3.429l41.143 75.429q54.286-24 114.857-24t114.857 24l41.143-75.429q4-6.857 11.429-3.429 6.857 4 2.857 11.429zM804.571 439.429v245.714q0 24.571-17.143 41.714t-41.714 17.143q-24 0-41.143-17.143t-17.143-41.714v-245.714q0-24.571 17.143-41.429t41.143-16.857q24.571 0 41.714 16.857t17.143 41.429z"
				],
				"attrs": [],
				"tags": [
					"android"
				],
				"defaultCode": 61819,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 342,
				"order": 343,
				"prevSize": 28,
				"code": 61819,
				"name": "android"
			},
			"setIdx": 0,
			"iconIdx": 360
		},
		{
			"icon": {
				"paths": [
					"M378.857 234.857q-6.286 0.571-8.857 6t-4.857 5.429q-2.857 0.571-2.857-2.857 0-6.857 10.857-8.571h5.714zM428.571 242.857q-2.286 0.571-6.571-3.714t-10-2.571q13.714-6.286 18.286 1.143 1.714 3.429-1.714 5.143zM228 486.857q-2.286-0.571-3.429 1.714t-2.571 7.143-3.143 7.714-5.714 7.429q-4 5.714-0.571 6.857 2.286 0.571 7.143-4t7.143-10.286q0.571-1.714 1.143-4t1.143-3.429 0.857-2.571 0.286-2.286v-1.714t-0.571-1.429-1.714-1.143zM716.571 692q0-10.286-31.429-24 2.286-8.571 4.286-15.714t2.857-14.857 1.714-12.286 0.286-12.857-0.571-11.143-2-12.571-2.286-11.714-2.857-14.286-3.143-15.143q-5.714-27.429-26.857-58.857t-41.143-42.857q13.714 11.429 32.571 47.429 49.714 92.571 30.857 158.857-6.286 22.857-28.571 24-17.714 2.286-22-10.571t-4.571-47.714-6.571-61.143q-5.143-22.286-11.143-39.429t-11.143-26-8.857-14-7.429-8.571-4.286-4q-8-35.429-17.714-58.857t-16.857-32-13.429-18.857-8.571-22.857q-2.286-12 3.429-30.571t2.571-28.286-25.429-14.286q-8.571-1.714-25.429-10.286t-20.286-9.143q-4.571-0.571-6.286-14.857t4.571-29.143 20.571-15.429q21.143-1.714 29.143 17.143t2.286 33.143q-6.286 10.857-1.143 15.143t17.143 0.286q7.429-2.286 7.429-20.571v-21.143q-2.857-17.143-7.714-28.571t-12-17.429-13.429-8.571-15.429-4.286q-61.143 4.571-50.857 76.571 0 8.571-0.571 8.571-5.143-5.143-16.857-6t-18.857 0.286-8.857-2.857q0.571-32.571-9.143-51.429t-25.714-19.429q-15.429-0.571-23.714 15.714t-9.429 34q-0.571 8.571 2 21.143t7.429 21.429 8.857 7.714q5.714-1.714 9.143-8 2.286-5.143-4-4.571-4 0-8.857-8.286t-5.429-19.143q-0.571-12.571 5.143-21.143t19.429-8q9.714 0 15.429 12t5.429 22.286-0.857 12.571q-12.571 8.571-17.714 16.571-4.571 6.857-15.714 13.429t-11.714 7.143q-7.429 8-8.857 15.429t4.286 10.286q8 4.571 14.286 11.143t9.143 10.857 10.571 7.429 20.286 3.714q26.857 1.143 58.286-8.571 1.143-0.571 13.143-4t19.714-6 16.857-7.429 12-10q5.143-8 11.429-4.571 2.857 1.714 3.714 4.857t-1.714 6.857-9.429 5.429q-11.429 3.429-32.286 12.286t-26 11.143q-25.143 10.857-40 13.143-14.286 2.857-45.143-1.143-5.714-1.143-5.143 1.143t9.714 10.857q14.286 13.143 38.286 12.571 9.714-0.571 20.571-4t20.571-8 19.143-10 17.143-9.714 14-6.857 10-1.429 4.857 6.286q0 1.143-0.571 2.571t-2.286 2.857-3.429 2.571-4.857 2.857-5.143 2.571-5.714 2.857-5.429 2.571q-16 8-38.571 25.143t-38 24.571-28 0.571q-12-6.286-36-41.714-12.571-17.714-14.286-12.571-0.571 1.714-0.571 5.714 0 14.286-8.571 32.286t-16.857 31.714-12 33.143 6.571 36q-13.143 3.429-35.714 51.429t-27.143 80.571q-1.143 10.286-0.857 39.429t-3.143 33.714q-4.571 13.714-16.571 1.714-18.286-17.714-20.571-53.714-1.143-16 2.286-32 2.286-10.857-0.571-10.286l-2.286 2.857q-20.571 37.143 5.714 94.857 2.857 6.857 14.286 16t13.714 11.429q11.429 13.143 59.429 51.714t53.143 43.714q9.143 8.571 10 21.714t-8 24.571-26 13.143q4.571 8.571 16.571 25.429t16 30.857 4 40.286q26.286-13.714 4-52.571-2.286-4.571-6-9.143t-5.429-6.857-1.143-3.429q1.714-2.857 7.429-5.429t11.429 1.429q26.286 29.714 94.857 20.571 76-8.571 101.143-49.714 13.143-21.714 19.429-17.143 6.857 3.429 5.714 29.714-0.571 14.286-13.143 52.571-5.143 13.143-3.429 21.429t13.714 8.857q1.714-10.857 8.286-44t7.714-51.429q1.143-12-3.714-42t-4.286-55.429 13.143-40.286q8.571-10.286 29.143-10.286 0.571-21.143 19.714-30.286t41.429-6 34.286 12.857zM357.714 219.429q1.714-9.714-1.429-17.143t-6.571-8.571q-5.143-1.143-5.143 4 1.143 2.857 2.857 3.429 5.714 0 4 8.571-1.714 11.429 4.571 11.429 1.714 0 1.714-1.714zM597.143 332q-1.143-4.571-3.714-6.571t-7.429-2.857-8.286-3.143q-2.857-1.714-5.429-4.571t-4-4.571-3.143-3.714-2.286-2.286-2.286 0.857q-8 9.143 4 24.857t22.286 18q5.143 0.571 8.286-4.571t2-11.429zM495.429 210.286q0-6.286-2.857-11.143t-6.286-7.143-5.143-1.714q-8 0.571-4 4l2.286 1.143q8 2.286 10.286 17.714 0 1.714 4.571-1.143zM526.286 77.143q0-1.143-1.429-2.857t-5.143-4-5.429-3.429q-8.571-8.571-13.714-8.571-5.143 0.571-6.571 4.286t-0.571 7.429-0.286 7.143q-0.571 2.286-3.429 6t-3.429 5.143 1.714 4.857q2.286 1.714 4.571 0t6.286-5.143 8.571-5.143q0.571-0.571 5.143-0.571t8.571-1.143 5.143-4zM849.143 843.429q11.429 6.857 17.714 14t6.857 13.714-1.429 12.857-8.857 12.571-13.429 11.143-17.143 10.571-18 9.429-18.286 8.857-15.429 7.429q-21.714 10.857-48.857 32t-43.143 36.571q-9.714 9.143-38.857 11.143t-50.857-8.286q-10.286-5.143-16.857-13.429t-9.429-14.571-12.571-11.143-26.857-5.429q-25.143-0.571-74.286-0.571-10.857 0-32.571 0.857t-33.143 1.429q-25.143 0.571-45.429 8.571t-30.571 17.143-24.857 16.286-30.571 6.571q-16.571-0.571-63.429-17.714t-83.429-24.571q-10.857-2.286-29.143-5.429t-28.571-5.143-22.571-5.429-19.143-8.286-9.714-11.143q-5.714-13.143 4-38t10.286-31.143q0.571-9.143-2.286-22.857t-5.714-24.286-2.571-20.857 6-15.429q8-6.857 32.571-8t34.286-6.857q17.143-10.286 24-20t6.857-29.143q12 41.714-18.286 60.571-18.286 11.429-47.429 8.571-19.429-1.714-24.571 5.714-7.429 8.571 2.857 32.571 1.143 3.429 4.571 10.286t4.857 10.286 2.571 9.714 0.571 12.571q0 8.571-9.714 28t-8 27.429q1.714 9.714 21.143 14.857 11.429 3.429 48.286 10.571t56.857 11.714q13.714 3.429 42.286 12.571t47.143 13.143 31.714 2.286q24.571-3.429 36.857-16t13.143-27.429-4.286-33.429-10.857-29.714-11.429-20.857q-69.143-108.571-96.571-138.286-38.857-42.286-64.571-22.857-6.286 5.143-8.571-8.571-1.714-9.143-1.143-21.714 0.571-16.571 5.714-29.714t13.714-26.857 12.571-24q4.571-12 15.143-41.143t16.857-44.571 17.143-34.857 22.286-30.857q62.857-81.714 70.857-111.429-6.857-64-9.143-177.143-1.143-51.429 13.714-86.571t60.571-59.714q22.286-12 59.429-12 30.286-0.571 60.571 7.714t50.857 23.714q32.571 24 52.286 69.429t16.857 84.286q-2.857 54.286 17.143 122.286 19.429 64.571 76 124.571 31.429 33.714 56.857 93.143t34 109.143q4.571 28 2.857 48.286t-6.857 31.714-11.429 12.571q-5.714 1.143-13.429 10.857t-15.429 20.286-23.143 19.143-34.857 8q-10.286-0.571-18-2.857t-12.857-7.714-7.714-8.857-6.571-11.714-5.143-11.143q-12.571-21.143-23.429-17.143t-16 28 4 55.429q11.429 40 0.571 111.429-5.714 37.143 10.286 57.429t41.714 18.857 48.571-20.286q33.714-28 51.143-38t59.143-24.286q30.286-10.286 44-20.857t10.571-19.714-14.286-16.286-29.429-13.429q-18.857-6.286-28.286-27.429t-8.571-41.429 8.857-27.143q0.571 17.714 4.571 32.286t8.286 23.143 11.714 16.286 12 10.857 12.286 7.429 9.429 5.429z"
				],
				"attrs": [],
				"tags": [
					"linux"
				],
				"defaultCode": 61820,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 343,
				"order": 344,
				"prevSize": 28,
				"code": 61820,
				"name": "linux"
			},
			"setIdx": 0,
			"iconIdx": 361
		},
		{
			"icon": {
				"paths": [
					"M585.143 857.143q-24-137.714-80-284.571h-1.143l-1.143 0.571q-9.143 3.429-24.571 9.429t-57.714 28-78.286 46.857-74.857 65.429-58.857 84.571l-8.571-6.286q105.143 85.714 238.857 85.714 75.429 0 146.286-29.714zM479.429 510.286q-12-28-30.286-63.429-177.714 53.143-384.571 53.143-0.571 4-0.571 12 0 70.857 25.143 135.143t70.857 115.143q28.571-50.857 70.571-95.143t81.429-71.143 74.571-46.286 56.857-27.429l21.143-7.429q2.286-0.571 7.429-2t7.429-2.571zM418.286 389.143q-68.571-121.714-139.429-216-78.857 37.143-133.714 106.286t-73.143 155.429q172.571 0 346.286-45.714zM809.143 571.429q-120-34.286-233.714-16.571 49.714 136.571 73.143 268 63.429-42.857 105.714-108.286t54.857-143.143zM349.143 148q-0.571 0-1.143 0.571 0.571-0.571 1.143-0.571zM686.286 230.857q-105.714-93.714-247.429-93.714-43.429 0-88.571 10.857 74.857 97.143 140.571 218.286 39.429-14.857 74.286-34.571t55.143-35.143 37.429-32.571 21.429-23.143zM813.714 508q-1.714-132.571-85.143-234.286l-0.571 0.571q-5.143 6.857-10.857 14t-24.857 25.429-40.571 34.571-57.143 37.143-75.143 36.857q14.286 30.286 25.143 54.286 1.143 3.429 3.714 10t4.286 9.429q20.571-2.857 42.571-4t42-1.143 39.429 0.857 36.571 2.286 32.286 3.143 27.429 3.714 20.857 3.429 14.286 2.571zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"dribbble"
				],
				"defaultCode": 61821,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 344,
				"order": 345,
				"prevSize": 28,
				"code": 61821,
				"name": "dribbble"
			},
			"setIdx": 0,
			"iconIdx": 362
		},
		{
			"icon": {
				"paths": [
					"M670.286 607.429q0-28.571-11.143-52.286t-27.714-39.143-41.714-28-47.143-19.429-50-13.143l-59.429-13.714q-17.143-4-25.143-6t-20-6.571-17.143-9.143-9.429-12-4.286-17.143q0-44 82.286-44 24.571 0 44 6.857t30.857 16.286 21.714 19.143 22.857 16.571 27.429 6.857q26.857 0 43.143-18.286t16.286-44q0-31.429-32-56.857t-81.143-38.571-104-13.143q-38.857 0-75.429 8.857t-68.286 26.857-50.857 49.714-19.143 73.429q0 34.857 10.857 60.857t32 43.143 45.714 27.714 58.857 18.571l83.429 20.571q51.429 12.571 64 20.571 18.286 11.429 18.286 34.286 0 22.286-22.857 36.857t-60 14.571q-29.143 0-52.286-9.143t-37.143-22-26-25.714-26.286-22-30.857-9.143q-28.571 0-43.143 17.143t-14.571 42.857q0 52.571 69.714 90t166.286 37.429q41.714 0 80-10.571t70-30.571 50.571-53.429 18.857-75.143zM877.714 731.429q0 90.857-64.286 155.143t-155.143 64.286q-74.286 0-133.714-45.714-44 9.143-85.714 9.143-81.714 0-156.286-31.714t-128.571-85.714-85.714-128.571-31.714-156.286q0-41.714 9.143-85.714-45.714-59.429-45.714-133.714 0-90.857 64.286-155.143t155.143-64.286q74.286 0 133.714 45.714 44-9.143 85.714-9.143 81.714 0 156.286 31.714t128.571 85.714 85.714 128.571 31.714 156.286q0 41.714-9.143 85.714 45.714 59.429 45.714 133.714z"
				],
				"attrs": [],
				"tags": [
					"skype"
				],
				"defaultCode": 61822,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 345,
				"order": 346,
				"prevSize": 28,
				"code": 61822,
				"name": "skype"
			},
			"setIdx": 0,
			"iconIdx": 363
		},
		{
			"icon": {
				"width": 731,
				"paths": [
					"M571.429 248l21.143-110.857q2.857-13.143-5.143-22.857t-20-9.714h-406.857q-13.143 0-22 9.714t-8.857 21.143v629.143q0 4 3.429 0.571l166.286-201.143q13.143-14.857 21.714-19.143t27.429-4.286h136.571q12.571 0 21.143-8.286t10.286-16.857q13.714-74.286 21.143-109.143 2.286-12-6.571-22.857t-20.857-10.857h-168q-16.571 0-27.429-10.857t-10.857-27.429v-24q0-16.571 10.857-27.143t27.429-10.571h197.714q10.286 0 20-7.714t11.429-16.857zM701.143 121.143q-8.571 41.714-30.571 152.286t-39.714 200-20 99.143q-3.429 12.571-5.143 18.571t-8 18.571-14 18.857-22 12-33.143 5.714h-154.857q-7.429 0-12.571 5.714-4.571 5.143-243.429 282.286-12.571 14.286-33.429 16.286t-27.714-3.143q-31.429-12.571-31.429-56v-805.714q0-31.429 21.714-58.571t68.571-27.143h507.429q54.286 0 72.571 30.286t5.714 90.857zM701.143 121.143l-90.286 451.429q2.286-9.714 20-99.143t39.714-200 30.571-152.286z"
				],
				"attrs": [],
				"tags": [
					"foursquare"
				],
				"defaultCode": 61824,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 346,
				"order": 347,
				"prevSize": 28,
				"code": 61824,
				"name": "foursquare"
			},
			"setIdx": 0,
			"iconIdx": 364
		},
		{
			"icon": {
				"paths": [
					"M402.286 768v-585.143q0-8-5.143-13.143t-13.143-5.143h-274.286q-8 0-13.143 5.143t-5.143 13.143v585.143q0 8 5.143 13.143t13.143 5.143h274.286q8 0 13.143-5.143t5.143-13.143zM786.286 548.571v-365.714q0-8-5.143-13.143t-13.143-5.143h-274.286q-8 0-13.143 5.143t-5.143 13.143v365.714q0 8 5.143 13.143t13.143 5.143h274.286q8 0 13.143-5.143t5.143-13.143zM877.714 109.714v804.571q0 14.857-10.857 25.714t-25.714 10.857h-804.571q-14.857 0-25.714-10.857t-10.857-25.714v-804.571q0-14.857 10.857-25.714t25.714-10.857h804.571q14.857 0 25.714 10.857t10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"trello"
				],
				"defaultCode": 61825,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 347,
				"order": 348,
				"prevSize": 28,
				"code": 61825,
				"name": "trello"
			},
			"setIdx": 0,
			"iconIdx": 365
		},
		{
			"icon": {
				"width": 731,
				"paths": [
					"M731.429 603.429q0 22.857-16 38.857t-38.857 16q-29.143 0-45.714-24.571l-129.714-194.857h-25.714v75.429l141.143 234.857q5.143 8.571 5.143 18.857 0 14.857-10.857 25.714t-25.714 10.857h-109.714v155.429q0 26.286-18.857 45.143t-45.143 18.857h-91.429q-26.286 0-45.143-18.857t-18.857-45.143v-155.429h-109.714q-14.857 0-25.714-10.857t-10.857-25.714q0-10.286 5.143-18.857l141.143-234.857v-75.429h-25.714l-129.714 194.857q-16.571 24.571-45.714 24.571-22.857 0-38.857-16t-16-38.857q0-16.571 9.143-30.286l146.286-219.429q41.714-61.143 100.571-61.143h219.429q58.857 0 100.571 61.143l146.286 219.429q9.143 13.714 9.143 30.286zM493.714 146.286q0 53.143-37.429 90.571t-90.571 37.429-90.571-37.429-37.429-90.571 37.429-90.571 90.571-37.429 90.571 37.429 37.429 90.571z"
				],
				"attrs": [],
				"tags": [
					"female"
				],
				"defaultCode": 61826,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 348,
				"order": 349,
				"prevSize": 28,
				"code": 61826,
				"name": "female"
			},
			"setIdx": 0,
			"iconIdx": 366
		},
		{
			"icon": {
				"width": 585,
				"paths": [
					"M585.143 402.286v237.714q0 22.857-16 38.857t-38.857 16-38.857-16-16-38.857v-201.143h-36.571v521.143q0 26.286-18.857 45.143t-45.143 18.857-45.143-18.857-18.857-45.143v-265.143h-36.571v265.143q0 26.286-18.857 45.143t-45.143 18.857-45.143-18.857-18.857-45.143v-521.143h-36.571v201.143q0 22.857-16 38.857t-38.857 16-38.857-16-16-38.857v-237.714q0-45.714 32-77.714t77.714-32h365.714q45.714 0 77.714 32t32 77.714zM420.571 146.286q0 53.143-37.429 90.571t-90.571 37.429-90.571-37.429-37.429-90.571 37.429-90.571 90.571-37.429 90.571 37.429 37.429 90.571z"
				],
				"attrs": [],
				"tags": [
					"male"
				],
				"defaultCode": 61827,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 349,
				"order": 350,
				"prevSize": 28,
				"code": 61827,
				"name": "male"
			},
			"setIdx": 0,
			"iconIdx": 367
		},
		{
			"icon": {
				"paths": [
					"M441.714 744l200-270.286q9.143-12.571 14-33.714t-3.429-48.571-35.143-45.143q-22.857-14.857-47.429-14.571t-42 10-31.143 25.714q-20.571 22.857-54.857 22.857-33.714 0-54.286-22.857-13.714-16-31.143-25.714t-42-10-48 14.571q-26.286 17.714-34.571 45.143t-3.429 48.571 14 33.714zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"gittip"
				],
				"defaultCode": 61828,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 350,
				"order": 351,
				"prevSize": 28,
				"code": 61828,
				"name": "gittip"
			},
			"setIdx": 0,
			"iconIdx": 368
		},
		{
			"icon": {
				"paths": [
					"M841.143 512q0-66.857-26-127.714t-70.286-105.143-105.143-70.286-127.714-26-127.714 26-105.143 70.286-70.286 105.143-26 127.714 26 127.714 70.286 105.143 105.143 70.286 127.714 26 127.714-26 105.143-70.286 70.286-105.143 26-127.714zM998.857 670.286q-2.286 8.571-11.429 11.429l-166.857 54.857v174.857q0 9.143-7.429 14.857-8.571 5.714-16.571 2.286l-166.857-53.714-102.857 141.714q-5.714 7.429-14.857 7.429t-14.857-7.429l-102.857-141.714-166.857 53.714q-8 3.429-16.571-2.286-7.429-5.714-7.429-14.857v-174.857l-166.857-54.857q-9.143-2.857-11.429-11.429-2.857-9.714 2.286-16.571l102.857-141.714-102.857-141.714q-5.143-7.429-2.286-16.571 2.286-8.571 11.429-11.429l166.857-54.857v-174.857q0-9.143 7.429-14.857 8.571-5.714 16.571-2.286l166.857 53.714 102.857-141.714q5.143-6.857 14.857-6.857t14.857 6.857l102.857 141.714 166.857-53.714q8-3.429 16.571 2.286 7.429 5.714 7.429 14.857v174.857l166.857 54.857q9.143 2.857 11.429 11.429 2.857 9.143-2.286 16.571l-102.857 141.714 102.857 141.714q5.143 6.857 2.286 16.571z"
				],
				"attrs": [],
				"tags": [
					"sun-o"
				],
				"defaultCode": 61829,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 351,
				"order": 352,
				"prevSize": 28,
				"code": 61829,
				"name": "sun-o"
			},
			"setIdx": 0,
			"iconIdx": 369
		},
		{
			"icon": {
				"paths": [
					"M721.143 744.571q-30.857 5.143-62.857 5.143-104 0-192.571-51.429t-140-140-51.429-192.571q0-109.714 59.429-204-114.857 34.286-187.714 130.857t-72.857 219.429q0 74.286 29.143 142t78 116.571 116.571 78 142 29.143q82.286 0 156.286-35.143t126-98zM837.143 696q-53.714 116-162 185.429t-236.286 69.429q-89.143 0-170.286-34.857t-140-93.714-93.714-140-34.857-170.286q0-87.429 32.857-167.143t89.143-138 134.571-94 165.714-39.143q25.143-1.143 34.857 22.286 10.286 23.429-8.571 41.143-49.143 44.571-75.143 103.714t-26 124.857q0 84.571 41.714 156t113.143 113.143 156 41.714q67.429 0 130.286-29.143 23.429-10.286 41.143 7.429 8 8 10 19.429t-2.571 21.714z"
				],
				"attrs": [],
				"tags": [
					"moon-o"
				],
				"defaultCode": 61830,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 352,
				"order": 353,
				"prevSize": 28,
				"code": 61830,
				"name": "moon-o"
			},
			"setIdx": 0,
			"iconIdx": 370
		},
		{
			"icon": {
				"paths": [
					"M621.714 475.429q0-14.857-10.857-25.714t-25.714-10.857h-146.286q-14.857 0-25.714 10.857t-10.857 25.714 10.857 25.714 25.714 10.857h146.286q14.857 0 25.714-10.857t10.857-25.714zM950.857 365.714v548.571q0 14.857-10.857 25.714t-25.714 10.857h-804.571q-14.857 0-25.714-10.857t-10.857-25.714v-548.571q0-14.857 10.857-25.714t25.714-10.857h804.571q14.857 0 25.714 10.857t10.857 25.714zM987.429 109.714v146.286q0 14.857-10.857 25.714t-25.714 10.857h-877.714q-14.857 0-25.714-10.857t-10.857-25.714v-146.286q0-14.857 10.857-25.714t25.714-10.857h877.714q14.857 0 25.714 10.857t10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"archive"
				],
				"defaultCode": 61831,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 353,
				"order": 354,
				"prevSize": 28,
				"code": 61831,
				"name": "archive"
			},
			"setIdx": 0,
			"iconIdx": 371
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M932.571 548.571q0 14.857-10.857 25.714t-25.714 10.857h-128q0 97.714-38.286 165.714l118.857 119.429q10.857 10.857 10.857 25.714t-10.857 25.714q-10.286 10.857-25.714 10.857t-25.714-10.857l-113.143-112.571q-2.857 2.857-8.571 7.429t-24 16.286-37.143 20.857-46.857 16.571-55.429 7.429v-512h-73.143v512q-29.143 0-58-7.714t-49.714-18.857-37.714-22.286-24.857-18.571l-8.571-8-104.571 118.286q-11.429 12-27.429 12-13.714 0-24.571-9.143-10.857-10.286-11.714-25.429t8.857-26.571l115.429-129.714q-33.143-65.143-33.143-156.571h-128q-14.857 0-25.714-10.857t-10.857-25.714 10.857-25.714 25.714-10.857h128v-168l-98.857-98.857q-10.857-10.857-10.857-25.714t10.857-25.714 25.714-10.857 25.714 10.857l98.857 98.857h482.286l98.857-98.857q10.857-10.857 25.714-10.857t25.714 10.857 10.857 25.714-10.857 25.714l-98.857 98.857v168h128q14.857 0 25.714 10.857t10.857 25.714zM658.286 219.429h-365.714q0-76 53.429-129.429t129.429-53.429 129.429 53.429 53.429 129.429z"
				],
				"attrs": [],
				"tags": [
					"bug"
				],
				"defaultCode": 61832,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 354,
				"order": 355,
				"prevSize": 28,
				"code": 61832,
				"name": "bug"
			},
			"setIdx": 0,
			"iconIdx": 372
		},
		{
			"icon": {
				"width": 1097,
				"paths": [
					"M1095.429 297.143q13.143 36.571-85.714 168-13.714 18.286-37.143 48.571-44.571 57.143-51.429 74.857-9.714 23.429 8 46.286 9.714 12 46.286 46.857h0.571l2.286 2.286q80.571 74.857 109.143 126.286 1.714 2.857 3.714 7.143t4 15.143-0.286 19.429-14.286 15.714-33.714 7.143l-146.286 2.286q-13.714 2.857-32-2.857t-29.714-12.571l-11.429-6.857q-17.143-12-40-36.571t-39.143-44.286-34.857-33.143-32.286-8.857q-1.714 0.571-4.571 2t-9.714 8.286-12.286 16.857-9.714 29.714-3.714 44.286q0 8.571-2 15.714t-4.286 10.571l-2.286 2.857q-10.286 10.857-30.286 12.571h-65.714q-40.571 2.286-83.429-9.429t-75.143-30.286-58.857-37.714-40.286-32.857l-14.286-13.714q-5.714-5.714-15.714-17.143t-40.857-52-60.571-86.286-70-120.571-74.571-155.429q-3.429-9.143-3.429-15.429t1.714-9.143l2.286-3.429q8.571-10.857 32.571-10.857l156.571-1.143q6.857 1.143 13.143 3.714t9.143 4.857l2.857 1.714q9.143 6.286 13.714 18.286 11.429 28.571 26.286 59.143t23.429 46.571l9.143 16.571q16.571 34.286 32 59.429t27.714 39.143 23.714 22 19.429 8 15.429-2.857q1.143-0.571 2.857-2.857t6.857-12.571 7.714-26.857 5.429-46.286 0-71.429q-1.143-22.857-5.143-41.714t-8-26.286l-3.429-6.857q-14.286-19.429-48.571-24.571-7.429-1.143 2.857-13.714 9.714-10.857 21.714-17.143 30.286-14.857 136.571-13.714 46.857 0.571 77.143 7.429 11.429 2.857 19.143 7.714t11.714 13.714 6 18.286 2 26-0.571 31.429-1.429 40.286-0.857 47.143q0 6.286-0.571 24t-0.286 27.429 2 23.143 6.571 22.286 12.857 14q4.571 1.143 9.714 2.286t14.857-6.286 21.714-19.714 29.714-38.286 38.857-61.429q34.286-59.429 61.143-128.571 2.286-5.714 5.714-10t6.286-6l2.286-1.714 2.857-1.429t7.429-1.714 11.429-0.286l164.571-1.143q22.286-2.857 36.571 1.429t17.714 9.429z"
				],
				"attrs": [],
				"tags": [
					"vk"
				],
				"defaultCode": 61833,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 355,
				"order": 356,
				"prevSize": 28,
				"code": 61833,
				"name": "vk"
			},
			"setIdx": 0,
			"iconIdx": 373
		},
		{
			"icon": {
				"paths": [
					"M385.714 733.714q12-19.429 6.286-39.429t-25.714-28.571q-19.429-8-41.714-0.571t-34.286 26.286q-12.571 19.429-7.429 39.143t24.571 28.857 42.571 1.429 35.714-27.143zM439.429 664.571q4.571-7.429 2-15.143t-10-10.571q-8-2.857-16.286 0.286t-12.286 10.571q-9.714 17.714 7.429 25.714 8 2.857 16.571-0.286t12.571-10.571zM538.857 725.714q-25.714 58.286-90.286 85.714t-128 6.857q-61.143-19.429-84.286-72.286t3.714-107.143q26.857-53.143 86.571-79.429t120.286-10.857q63.429 16.571 90.571 68.286t1.429 108.857zM717.143 634.286q-5.143-54.857-50.857-97.143t-119.143-62.286-156.857-12q-127.429 13.143-211.143 80.857t-75.714 151.143q5.143 54.857 50.857 97.143t119.143 62.286 156.857 12q127.429-13.143 211.143-80.857t75.714-151.143zM893.143 636.571q0 38.857-21.143 79.714t-62.286 78.286-96.286 67.143-129.143 47.429-154.571 17.714-157.143-19.143-137.429-53.143-98-86.286-37.143-114q0-65.714 39.714-140t112.857-147.429q96.571-96.571 195.143-134.857t140.857 4q37.143 36.571 11.429 119.429-2.286 8-0.571 11.429t5.714 4 8.286-0.286 7.714-2l3.429-1.143q79.429-33.714 140.571-33.714t87.429 34.857q25.714 36 0 101.714-1.143 7.429-2.571 11.429t2.571 7.143 6.857 4.286 9.714 3.429q32.571 10.286 58.857 26.857t45.714 46.571 19.429 66.571zM850.857 280q24 26.857 31.143 62t-3.714 67.143q-4.571 13.143-16.857 19.429t-25.429 2.286q-13.143-4.571-19.429-16.857t-2.286-25.429q11.429-36-13.714-63.429t-61.143-20q-13.714 2.857-25.714-4.571t-14.286-21.143q-2.857-13.714 4.571-25.429t21.143-14.571q34.286-7.429 68 3.143t57.714 37.429zM954.286 186.857q49.714 54.857 64.286 127.143t-7.714 138q-5.143 15.429-19.429 22.857t-29.714 2.286-22.857-19.429-2.857-29.714q16-46.857 5.714-98.286t-45.714-90.286q-35.429-39.429-84.571-54.571t-98.857-4.857q-16 3.429-29.714-5.429t-17.143-24.857 5.429-29.429 24.857-16.857q70.286-14.857 139.429 6.571t118.857 76.857z"
				],
				"attrs": [],
				"tags": [
					"weibo"
				],
				"defaultCode": 61834,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 356,
				"order": 357,
				"prevSize": 28,
				"code": 61834,
				"name": "weibo"
			},
			"setIdx": 0,
			"iconIdx": 374
		},
		{
			"icon": {
				"paths": [
					"M647.429 897.143q-97.714 53.714-210.286 53.714-112 0-209.714-53.714 78.857-49.714 134.571-120.571t75.143-153.143q20 82.286 75.714 153.143t134.571 120.571zM364.571 81.143v277.143q0 144-72.286 262.571t-188.857 175.143q-103.429-122.857-103.429-282.857 0-106.857 47.714-199.714t131.143-154 185.714-78.286zM877.714 513.143q0 160-103.429 282.857-116.571-56.571-188.857-175.143t-72.286-262.571v-277.143q102.286 17.143 185.714 78.286t131.143 154 47.714 199.714z"
				],
				"attrs": [],
				"tags": [
					"renren"
				],
				"defaultCode": 61835,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 357,
				"order": 358,
				"prevSize": 28,
				"code": 61835,
				"name": "renren"
			},
			"setIdx": 0,
			"iconIdx": 375
		},
		{
			"icon": {
				"width": 805,
				"paths": [
					"M801.143 630.286q-18.286 45.714-43.429 78.857t-52 50.571-56.571 26.571-58 8.286-55.143-4.857-49.429-12.571-39.714-15.714-26.286-12.857l-9.714-5.714q-64.571 130.286-165.429 205.429t-219.714 75.714q-10.857 0-18.286-7.429t-7.429-18.286 7.429-18 18.286-7.143q98.857-0.571 184.286-61.429t143.714-168.286q-20.571 8-41.143 13.143t-47.429 7.429-52-1.429-53.143-16.286-52.571-33.714-48.286-57.143-42.571-83.429q65.143-26.857 122.286-32.571t95.714 4.286 71.143 32.286 50.571 44 32.286 46.857q30.286-74.857 45.143-166.286-4 0.571-10.286 1.429t-26.571 1.429-39.714-0.286-46.571-5.714-50.571-13.143-48-24.286-42.857-37.143-31.143-54-16.286-72.857q40-16 76.286-20.857t64.286 0.571 52.571 17.143 42 28.571 32 34.857 24 36 15.714 32 9.143 22.571l2.286 9.143q6.857-69.714 6.857-111.429-4.571-3.429-12.286-9.143t-28-25.429-36.286-40.857-30.857-53.143-18.857-64.286 6.857-72.571 40-79.143q41.714 14.286 72.857 35.143t48.286 43.714 27.429 48.571 11.714 50.857-0.286 48.857-7.429 43.714-10.857 35.429-9.714 24l-4 8.571q0.571 2.857 0.571 28.857t-0.571 40.857q1.714-4 5.714-10.571t17.429-24.571 28.857-33.143 40.571-31.714 52.286-25.429 64-8.286 75.714 13.714q-1.143 44.571-12.286 80.857t-28.571 59.714-39.714 40.857-46.571 26-48.286 13.714-45.714 5.429-38.571-0.571-26.571-2.571l-9.714-1.714q-13.143 84-41.714 161.714 3.429-4 10.286-10.571t28.286-23.429 44.286-30 56.857-24 67.143-11.429 73.714 13.429 78.286 44.286z"
				],
				"attrs": [],
				"tags": [
					"pagelines"
				],
				"defaultCode": 61836,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 358,
				"order": 359,
				"prevSize": 28,
				"code": 61836,
				"name": "pagelines"
			},
			"setIdx": 0,
			"iconIdx": 376
		},
		{
			"icon": {
				"width": 731,
				"paths": [
					"M719.429 716v37.714q0 48.571-32.857 82.571t-79.143 34h-32.571l-148.571 153.714v-153.714h-302.286q-46.286 0-79.143-34t-32.857-82.571v-37.714h707.429zM719.429 529.714v145.714h-707.429v-145.714h707.429zM719.429 342.286v145.714h-707.429v-145.714h707.429zM719.429 262.286v38.286h-707.429v-38.286q0-48 32.857-82t79.143-34h483.429q46.286 0 79.143 34t32.857 82z"
				],
				"attrs": [],
				"tags": [
					"stack-exchange"
				],
				"defaultCode": 61837,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 359,
				"order": 360,
				"prevSize": 28,
				"code": 61837,
				"name": "stack-exchange"
			},
			"setIdx": 0,
			"iconIdx": 377
		},
		{
			"icon": {
				"paths": [
					"M658.286 512q0 8-5.143 13.143l-182.857 182.857q-5.143 5.143-13.143 5.143-7.429 0-12.857-5.429t-5.429-12.857v-109.714h-201.143q-7.429 0-12.857-5.429t-5.429-12.857v-109.714q0-7.429 5.429-12.857t12.857-5.429h201.143v-109.714q0-8 5.143-13.143t13.143-5.143q6.857 0 13.714 5.714l182.286 182.286q5.143 5.143 5.143 13.143zM749.714 512q0-84.571-41.714-156t-113.143-113.143-156-41.714-156 41.714-113.143 113.143-41.714 156 41.714 156 113.143 113.143 156 41.714 156-41.714 113.143-113.143 41.714-156zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"arrow-circle-o-right"
				],
				"defaultCode": 61838,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 360,
				"order": 361,
				"prevSize": 28,
				"code": 61838,
				"name": "arrow-circle-o-right"
			},
			"setIdx": 0,
			"iconIdx": 378
		},
		{
			"icon": {
				"paths": [
					"M658.286 457.143v109.714q0 7.429-5.429 12.857t-12.857 5.429h-201.143v109.714q0 8-5.143 13.143t-13.143 5.143q-6.857 0-13.714-5.714l-182.286-182.286q-5.143-5.143-5.143-13.143t5.143-13.143l182.857-182.857q5.143-5.143 13.143-5.143 7.429 0 12.857 5.429t5.429 12.857v109.714h201.143q7.429 0 12.857 5.429t5.429 12.857zM749.714 512q0-84.571-41.714-156t-113.143-113.143-156-41.714-156 41.714-113.143 113.143-41.714 156 41.714 156 113.143 113.143 156 41.714 156-41.714 113.143-113.143 41.714-156zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"arrow-circle-o-left"
				],
				"defaultCode": 61840,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 361,
				"order": 362,
				"prevSize": 28,
				"code": 61840,
				"name": "arrow-circle-o-left"
			},
			"setIdx": 0,
			"iconIdx": 379
		},
		{
			"icon": {
				"paths": [
					"M585.143 329.143v365.714q0 14.857-10.857 25.714t-25.714 10.857q-11.429 0-21.143-6.857l-256-182.857q-15.429-10.857-15.429-29.714t15.429-29.714l256-182.857q9.714-6.857 21.143-6.857 14.857 0 25.714 10.857t10.857 25.714zM731.429 786.286v-548.571q0-7.429-5.429-12.857t-12.857-5.429h-548.571q-7.429 0-12.857 5.429t-5.429 12.857v548.571q0 7.429 5.429 12.857t12.857 5.429h548.571q7.429 0 12.857-5.429t5.429-12.857zM877.714 237.714v548.571q0 68-48.286 116.286t-116.286 48.286h-548.571q-68 0-116.286-48.286t-48.286-116.286v-548.571q0-68 48.286-116.286t116.286-48.286h548.571q68 0 116.286 48.286t48.286 116.286z"
				],
				"attrs": [],
				"tags": [
					"caret-square-o-left",
					"toggle-left"
				],
				"defaultCode": 61841,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 362,
				"order": 363,
				"prevSize": 28,
				"code": 61841,
				"name": "caret-square-o-left"
			},
			"setIdx": 0,
			"iconIdx": 380
		},
		{
			"icon": {
				"paths": [
					"M585.143 512q0 60.571-42.857 103.429t-103.429 42.857-103.429-42.857-42.857-103.429 42.857-103.429 103.429-42.857 103.429 42.857 42.857 103.429zM438.857 201.143q-84.571 0-156 41.714t-113.143 113.143-41.714 156 41.714 156 113.143 113.143 156 41.714 156-41.714 113.143-113.143 41.714-156-41.714-156-113.143-113.143-156-41.714zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"dot-circle-o"
				],
				"defaultCode": 61842,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 363,
				"order": 364,
				"prevSize": 28,
				"code": 61842,
				"name": "dot-circle-o"
			},
			"setIdx": 0,
			"iconIdx": 381
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M584.571 678.286l58.286 116.571q-33.143 102.286-120 165.714t-193.714 63.429q-89.143 0-164.857-44.286t-120-120-44.286-164.857q0-103.429 59.714-188.571t156.857-120.571l9.714 74.857q-69.714 30.857-111.429 94.571t-41.714 139.714q0 105.714 75.143 180.857t180.857 75.143q72 0 132.857-37.143t94.286-100.286 28.286-135.143zM897.714 735.429l33.143 65.143-146.286 73.143q-7.429 4-16.571 4-22.857 0-32.571-20l-136.571-272.571h-269.714q-13.714 0-24.286-9.429t-12.286-23.143l-54.857-445.143q-1.143-9.143 3.429-24 8-29.143 32.571-47.143t55.429-18q37.714 0 64.571 26.857t26.857 64.571q0 39.429-29.714 67.143t-68.571 23.714l21.143 165.143h241.714v73.143h-232.571l9.143 73.143h260q22.857 0 32.571 20l130.286 260z"
				],
				"attrs": [],
				"tags": [
					"wheelchair"
				],
				"defaultCode": 61843,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 364,
				"order": 365,
				"prevSize": 28,
				"code": 61843,
				"name": "wheelchair"
			},
			"setIdx": 0,
			"iconIdx": 382
		},
		{
			"icon": {
				"paths": [
					"M716.571 364q9.143-48.571-12-75.429-29.714-37.143-106.857-25.714-9.714 1.714-23.429 7.143t-32.857 17.429-36.857 27.714-34 40-25.429 52.286q45.714-4 64.857 9.143t15.143 56.571q-2.857 29.714-29.714 81.714-24.571 44.571-40.571 56.571-25.143 18.286-49.714-8-13.143-13.714-21.429-36.857t-10.857-41.714-5.714-48-4.857-40.857q-13.143-73.714-19.429-93.714-6.857-21.143-20.286-39.429t-28.857-22.857q-32.571-9.143-72.571 14.286-30.857 18.286-78 60.571t-70 58.286v4q9.143 4.571 14.571 14.857t12.286 11.429q12 1.714 31.143-4.857t33.143-6 23.714 17.143q6.286 10.286 10.571 22t8.571 27.429 7.143 23.143q9.714 26.286 30.286 106.857 20.571 83.429 32.571 112.571 24 56.571 58.857 71.429 24.571 6.857 48.571 0.857t43.429-18q74.857-44 142.857-135.429 59.429-79.429 98.571-167.143t47.143-129.429zM877.714 237.714v548.571q0 68-48.286 116.286t-116.286 48.286h-548.571q-68 0-116.286-48.286t-48.286-116.286v-548.571q0-68 48.286-116.286t116.286-48.286h548.571q68 0 116.286 48.286t48.286 116.286z"
				],
				"attrs": [],
				"tags": [
					"vimeo-square"
				],
				"defaultCode": 61844,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 365,
				"order": 366,
				"prevSize": 28,
				"code": 61844,
				"name": "vimeo-square"
			},
			"setIdx": 0,
			"iconIdx": 383
		},
		{
			"icon": {
				"width": 658,
				"paths": [
					"M658.286 475.429q0 109.143-54 201.714t-146.571 146.571-201.714 54h-91.429q-8 0-13.143-5.143t-5.143-13.143v-349.143l-122.857 37.714q-1.714 0.571-5.143 0.571-5.714 0-10.857-3.429-7.429-5.714-7.429-14.857v-73.143q0-13.143 13.143-17.714l133.143-40.571v-53.143l-122.857 37.714q-1.714 0.571-5.143 0.571-5.714 0-10.857-3.429-7.429-5.714-7.429-14.857v-73.143q0-13.143 13.143-17.714l133.143-40.571v-142.857q0-8 5.143-13.143t13.143-5.143h91.429q8 0 13.143 5.143t5.143 13.143v103.429l214.286-66.286q8.571-2.857 16 2.857t7.429 14.857v73.143q0 13.143-13.143 17.714l-224.571 69.143v53.143l214.286-66.286q8.571-2.857 16 2.857t7.429 14.857v73.143q0 13.143-13.143 17.714l-224.571 69.143v278.286q107.429-7.429 181.714-86.286t74.286-187.429q0-8 5.143-13.143t13.143-5.143h91.429q8 0 13.143 5.143t5.143 13.143z"
				],
				"attrs": [],
				"tags": [
					"try",
					"turkish-lira"
				],
				"defaultCode": 61845,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 366,
				"order": 367,
				"prevSize": 28,
				"code": 61845,
				"name": "try"
			},
			"setIdx": 0,
			"iconIdx": 384
		},
		{
			"icon": {
				"width": 805,
				"paths": [
					"M658.286 457.143v36.571q0 8-5.143 13.143t-13.143 5.143h-201.143v201.143q0 8-5.143 13.143t-13.143 5.143h-36.571q-8 0-13.143-5.143t-5.143-13.143v-201.143h-201.143q-8 0-13.143-5.143t-5.143-13.143v-36.571q0-8 5.143-13.143t13.143-5.143h201.143v-201.143q0-8 5.143-13.143t13.143-5.143h36.571q8 0 13.143 5.143t5.143 13.143v201.143h201.143q8 0 13.143 5.143t5.143 13.143zM731.429 713.143v-475.429q0-37.714-26.857-64.571t-64.571-26.857h-475.429q-37.714 0-64.571 26.857t-26.857 64.571v475.429q0 37.714 26.857 64.571t64.571 26.857h475.429q37.714 0 64.571-26.857t26.857-64.571zM804.571 237.714v475.429q0 68-48.286 116.286t-116.286 48.286h-475.429q-68 0-116.286-48.286t-48.286-116.286v-475.429q0-68 48.286-116.286t116.286-48.286h475.429q68 0 116.286 48.286t48.286 116.286z"
				],
				"attrs": [],
				"tags": [
					"plus-square-o"
				],
				"defaultCode": 61846,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 367,
				"order": 368,
				"prevSize": 28,
				"code": 61846,
				"name": "plus-square-o"
			},
			"setIdx": 0,
			"iconIdx": 385
		},
		{
			"icon": {
				"width": 1243,
				"paths": [
					"M354.286 640q-62.857 36.571-153.143 36.571h-73.143v-36.571h-36.571q-7.429 0-12.857-13.429t-5.429-32.286q0-13.714 4-28-33.143-1.143-55.143-6t-22-11.714 22-11.714 55.143-6q-4-14.286-4-28 0-18.857 5.429-32.286t12.857-13.429h36.571v-36.571h73.143q90.286 0 153.143 36.571h636q24 4 60.857 10.286t46 8q50.857 8.571 85.714 23.143t47.714 27.143 12.857 22.857-12.857 22.857-47.714 27.143-85.714 23.143q-9.143 1.714-46 8t-60.857 10.286h-636zM993.714 496q30.286 20.571 30.286 52.571t-30.286 52.571l46.286 17.143q38.857-27.429 38.857-69.714t-38.857-69.714zM357.143 649.143h580q-124 21.714-260.571 45.714-32.571 0-64.571 13.714t-47.429 27.429l-16 13.714-164.571 164.571q-14.857 14.857-40.286 25.714t-51.143 10.857h-54.857l-53.143-265.143h16.571q89.714 0 156-36.571zM201.143 411.429h-16.571l53.143-265.143h54.857q26.286 0 51.429 10.857t40 25.714l164.571 164.571q2.286 2.286 6.286 6t17.429 13.143 27.714 16.571 35.143 13.143 41.429 6l260.571 45.714h-580q-66.286-36.571-156-36.571z"
				],
				"attrs": [],
				"tags": [
					"space-shuttle"
				],
				"defaultCode": 61847,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 368,
				"order": 369,
				"prevSize": 28,
				"code": 61847,
				"name": "space-shuttle"
			},
			"setIdx": 0,
			"iconIdx": 386
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M868 443.429q35.429 0 59.143 23.143t23.714 58q0 55.429-53.143 74.286l-98.286 33.714 32 95.429q4 12 4 26.857 0 33.714-24 58.286t-57.714 24.571q-26.857 0-48.857-15.429t-30.571-41.143l-31.429-94.286-177.143 60.571 31.429 93.714q4.571 13.714 4.571 26.857 0 33.714-24 58.286t-58.286 24.571q-26.857 0-48.571-15.429t-30.286-41.143l-31.429-93.143-87.429 30.286q-16.571 5.143-28.571 5.143-34.857 0-58-22.857t-23.143-57.714q0-26.857 15.714-48.571t40.857-30.286l89.143-30.286-60-178.857-89.143 30.857q-14.857 4.571-27.429 4.571-34.286 0-57.714-23.143t-23.429-57.429q0-26.857 15.714-48.571t40.857-30.286l89.714-30.286-30.286-90.857q-4.571-13.714-4.571-26.857 0-34.286 24-58.571t58.286-24.286q26.857 0 48.571 15.429t30.286 41.143l30.857 91.429 177.143-60-30.857-91.429q-4.571-13.714-4.571-26.857 0-33.714 24.286-58.286t58-24.571q26.857 0 48.857 15.714t30.571 40.857l30.286 92 92.571-31.429q12-3.429 24.571-3.429 34.286 0 58.571 22.571t24.286 56.286q0 25.714-17.143 46.571t-42.286 29.429l-89.714 30.857 60 180.571 93.714-32q13.714-4.571 26.286-4.571zM414.286 593.143l177.143-60-60-180-177.143 61.143z"
				],
				"attrs": [],
				"tags": [
					"slack"
				],
				"defaultCode": 61848,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 369,
				"order": 370,
				"prevSize": 28,
				"code": 61848,
				"name": "slack"
			},
			"setIdx": 0,
			"iconIdx": 387
		},
		{
			"icon": {
				"paths": [
					"M713.143 73.143q68 0 116.286 48.286t48.286 116.286v548.571q0 68-48.286 116.286t-116.286 48.286h-548.571q-68 0-116.286-48.286t-48.286-116.286v-548.571q0-68 48.286-116.286t116.286-48.286h548.571zM731.429 676.571v-249.143q-17.714 20-36.571 31.429-19.429 12.571-75.714 48.571t-86.571 56.571q-56 39.429-93.714 39.429v0 0q-37.714 0-93.714-39.429-26.286-18.286-80.857-52.857t-81.429-52.857q-6.857-4.571-18.857-15.429t-17.714-15.429v249.143q0 22.857 16 38.857t38.857 16h475.429q22.857 0 38.857-16t16-38.857zM731.429 349.143q0-23.429-15.714-40t-39.143-16.571h-475.429q-22.857 0-38.857 16t-16 38.857q0 21.143 17.429 43.714t38.571 36.857q26.857 18.286 78.571 50.857t74 47.429q1.714 1.143 9.714 6.571t12 8 12 7.429 13.429 7.429 12.286 5.429 12.857 4.286 11.714 1.429 11.714-1.429 12.857-4.286 12.286-5.429 13.429-7.429 12-7.429 12-8 9.714-6.571l152.571-99.429q20-13.143 38-35.714t18-42z"
				],
				"attrs": [],
				"tags": [
					"envelope-square"
				],
				"defaultCode": 61849,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 370,
				"order": 371,
				"prevSize": 28,
				"code": 61849,
				"name": "envelope-square"
			},
			"setIdx": 0,
			"iconIdx": 388
		},
		{
			"icon": {
				"paths": [
					"M72.571 512q0-93.143 38.286-178.857l209.714 574.286q-112-54.286-180-160.571t-68-234.857zM808.571 489.714q0 10.857-1.429 22t-5.714 28.286-6.571 25.143-10 33.714-10 33.143l-43.429 146.286-158.857-472q26.286-1.714 50.286-4.571 10.857-1.143 14.857-10.571t-1.429-17.714-16.286-7.714l-117.143 5.714q-42.857-0.571-115.429-5.714-6.857-0.571-11.714 2.857t-6.571 8.571-0.857 10.571 5.143 9.429 11.143 4.571l45.714 4.571 68.571 187.429-96 288-160-475.429q26.286-1.714 50.286-4.571 10.857-1.143 14.857-10.571t-1.429-17.714-16.286-7.714l-117.143 5.714q-4 0-13.143-0.286t-14.857-0.286q60-91.429 156.857-144.857t210-53.429q84 0 160.286 30.286t136.286 85.143h-5.714q-31.429 0-52.571 23.143t-21.143 54.571q0 6.857 1.143 13.714t2.286 12.286 4.571 13.143 5.143 12 6.857 12.857 7.143 12 8.286 13.714 8 13.143q36 61.143 36 121.143zM519.429 550.286l135.429 369.714q0.571 3.429 2.857 6.286-72 25.143-145.714 25.143-64 0-124-18.286zM897.143 301.143q54.286 99.429 54.286 210.857 0 119.429-59.429 220.286t-159.429 159.143l134.286-387.429q33.714-96.571 33.714-157.714 0-24-3.429-45.143zM512 0q104 0 198.857 40.571t163.429 109.143 109.143 163.429 40.571 198.857-40.571 198.857-109.143 163.429-163.429 109.143-198.857 40.571-198.857-40.571-163.429-109.143-109.143-163.429-40.571-198.857 40.571-198.857 109.143-163.429 163.429-109.143 198.857-40.571zM512 1000.571q98.857 0 189.429-38.857t156-104.286 104.286-156 38.857-189.429-38.857-189.429-104.286-156-156-104.286-189.429-38.857-189.429 38.857-156 104.286-104.286 156-38.857 189.429 38.857 189.429 104.286 156 156 104.286 189.429 38.857z"
				],
				"attrs": [],
				"tags": [
					"wordpress"
				],
				"defaultCode": 61850,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 371,
				"order": 372,
				"prevSize": 28,
				"code": 61850,
				"name": "wordpress"
			},
			"setIdx": 0,
			"iconIdx": 389
		},
		{
			"icon": {
				"paths": [
					"M620.571 0v877.714l-155.429 73.143q-130.286-11.429-236.571-58.286t-167.429-119.143-61.143-155.714q0-80 57.429-150.571t157.143-117.429 223.714-61.714v98.286q-124 21.714-203.714 85.714t-79.714 145.714q0 86.857 88.286 152.571t222 82.857v-777.143zM1002.857 332.571l21.143 222.857-300-65.143 84-47.429q-68-40-160-56.571v-98.286q158.286 18.857 274.857 89.714z"
				],
				"attrs": [],
				"tags": [
					"openid"
				],
				"defaultCode": 61851,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 372,
				"order": 373,
				"prevSize": 28,
				"code": 61851,
				"name": "openid"
			},
			"setIdx": 0,
			"iconIdx": 390
		},
		{
			"icon": {
				"width": 1170,
				"paths": [
					"M548.571 0l548.571 219.429v73.143h-73.143q0 14.857-11.714 25.714t-27.714 10.857h-872q-16 0-27.714-10.857t-11.714-25.714h-73.143v-73.143zM146.286 365.714h146.286v438.857h73.143v-438.857h146.286v438.857h73.143v-438.857h146.286v438.857h73.143v-438.857h146.286v438.857h33.714q16 0 27.714 10.857t11.714 25.714v36.571h-950.857v-36.571q0-14.857 11.714-25.714t27.714-10.857h33.714v-438.857zM1057.714 914.286q16 0 27.714 10.857t11.714 25.714v73.143h-1097.143v-73.143q0-14.857 11.714-25.714t27.714-10.857h1018.286z"
				],
				"attrs": [],
				"tags": [
					"bank",
					"institution",
					"university"
				],
				"defaultCode": 61852,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 373,
				"order": 374,
				"prevSize": 28,
				"code": 61852,
				"name": "bank"
			},
			"setIdx": 0,
			"iconIdx": 391
		},
		{
			"icon": {
				"width": 1317,
				"paths": [
					"M1013.714 477.714l10.286 180.571q2.286 39.429-46.857 73.143t-134.286 53.429-184.571 19.714-184.571-19.714-134.286-53.429-46.857-73.143l10.286-180.571 328 103.429q12.571 4 27.429 4t27.429-4zM1316.571 292.571q0 13.143-12.571 17.714l-640 201.143q-2.286 0.571-5.714 0.571t-5.714-0.571l-372.571-117.714q-24.571 19.429-40.571 63.714t-19.429 102q36 20.571 36 62.286 0 39.429-33.143 61.143l33.143 247.429q1.143 8-4.571 14.286-5.143 6.286-13.714 6.286h-109.714q-8.571 0-13.714-6.286-5.714-6.286-4.571-14.286l33.143-247.429q-33.143-21.714-33.143-61.143 0-41.714 37.143-63.429 6.286-118.286 56-188.571l-190.286-59.429q-12.571-4.571-12.571-17.714t12.571-17.714l640-201.143q2.286-0.571 5.714-0.571t5.714 0.571l640 201.143q12.571 4.571 12.571 17.714z"
				],
				"attrs": [],
				"tags": [
					"graduation-cap",
					"mortar-board"
				],
				"defaultCode": 61853,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 374,
				"order": 375,
				"prevSize": 28,
				"code": 61853,
				"name": "graduation-cap"
			},
			"setIdx": 0,
			"iconIdx": 392
		},
		{
			"icon": {
				"paths": [
					"M490.857 546.857l7.429 404q-35.429-6.286-60-6.286-23.429 0-60 6.286l7.429-404q-22.857-39.429-96.286-168.857t-123.714-214-103.429-164q33.143 8.571 61.714 8.571 24.571 0 63.429-8.571 36 63.429 76.286 131.143t95.429 158 79.143 129.714q21.143-34.857 62.571-101.429t67.143-108.571 60-100.571 61.143-108.286q30.857 8 61.143 8 32 0 65.143-8v0q-16 22.286-34.286 50.571t-28.286 44.857-32.286 54.857-28 48q-83.429 141.714-201.714 348.571z"
				],
				"attrs": [],
				"tags": [
					"yahoo"
				],
				"defaultCode": 61854,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 375,
				"order": 376,
				"prevSize": 28,
				"code": 61854,
				"name": "yahoo"
			},
			"setIdx": 0,
			"iconIdx": 393
		},
		{
			"icon": {
				"width": 731,
				"paths": [
					"M560.571 765.143q0-14.286-4-28t-8.286-24-15.429-23.714-16.857-20-22-19.714-20.857-16.571-23.714-17.143-20.857-14.857q-9.143-1.143-28-1.143-30.286 0-59.714 4t-61.143 14.286-55.429 26.286-39.143 42.571-15.429 60.286q0 32 13.429 58.286t34.857 43.143 49.714 28.571 57.143 16.571 58 4.857q33.143 0 63.714-7.429t56.571-22.286 41.714-41.714 15.714-62.286zM493.714 274.857q0-33.714-9.714-71.714t-27.429-73.714-48-59.143-66.857-23.429q-24 0-47.143 11.143t-38 30q-26.286 33.714-26.286 91.429 0 26.286 5.714 55.714t18 58.857 29.714 52.857 42.857 38.286 55.143 14.857q21.143 0 44.286-9.429t37.429-24.857q30.286-32 30.286-90.857zM429.714 0h238.286l-78.286 50.286h-75.429q42.857 36 64.571 76t21.714 91.429q0 41.143-14 74t-34 53.143-39.714 37.143-33.714 35.143-14 37.714q0 20.571 18.286 40.286t44 38.857 51.714 42 44.286 59.429 18.286 81.143q0 52-28 98.857-40.571 69.714-119.714 102.571t-170.571 32.857q-75.429 0-140.857-23.714t-98.571-78.571q-20.571-33.714-20.571-74.857 0-46.286 25.429-85.714t67.714-65.714q74.857-46.857 230.857-57.143-18.286-23.429-27.143-42t-8.857-42q0-22.857 12-48.571-26.286 2.286-38.857 2.286-84.571 0-142.571-55.143t-58-139.714q0-46.857 20.571-90.857t56.571-74.857q43.429-37.714 104-56t124.571-18.286z"
				],
				"attrs": [],
				"tags": [
					"google"
				],
				"defaultCode": 61856,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 376,
				"order": 377,
				"prevSize": 28,
				"code": 61856,
				"name": "google"
			},
			"setIdx": 0,
			"iconIdx": 394
		},
		{
			"icon": {
				"width": 1134,
				"paths": [
					"M474.857 550.857q0 32-23.143 54.857t-55.143 22.857q-32.571 0-56-22.857t-23.429-54.857q0-32.571 23.714-56t55.714-23.429 55.143 23.429 23.143 56zM738.286 471.429q32 0 55.143 23.429t23.143 56q0 32-23.143 54.857t-55.143 22.857q-32.571 0-56-22.857t-23.429-54.857q0-32.571 23.714-56t55.714-23.429zM1133.714 465.143q0 35.429-17.714 65.143t-47.429 46.857q2.857 18.857 2.857 34.857 0 69.143-39.143 131.714t-112.857 110.571q-71.429 46.857-163.143 71.714t-191.714 24.857q-100.571 0-192.286-24.857t-162.571-71.714q-73.714-48-112.857-110.286t-39.143-132q0-16.571 2.857-37.714-27.429-17.714-44-46.571t-16.571-62.571q0-53.714 37.714-91.429t91.429-37.714q47.429 0 84.571 31.429 141.714-90.286 338.286-93.714l76.571-241.714q2.286-8 10-12.286t16.286-2.571l198.286 46.857q12.571-28.571 39.143-46.286t58.571-17.714q44 0 75.143 31.143t31.143 75.143-31.143 75.429-75.143 31.429q-43.429 0-74.571-30.857t-31.714-74.857l-180-42.286-66.286 209.143q186.857 8 320 94.857 36.571-33.143 86.286-33.143 53.714 0 91.429 37.714t37.714 91.429zM950.857 44q-25.714 0-44 18.286t-18.286 44 18.286 44 44 18.286 44-18.286 18.286-44-18.286-44-44-18.286zM44 465.143q0 38.286 29.143 63.429 28-74.857 102.857-134.286-20.571-14.286-46.857-14.286-35.429 0-60.286 24.857t-24.857 60.286zM895.429 817.714q64-41.714 98-94.857t34-110.857-34-110.571-98-94.571q-66.286-42.857-151.714-66t-179.143-23.143-179.143 23.143-151.714 66q-64 41.714-98 94.571t-34 110.571 34 110.857 98 94.857q66.286 42.857 151.714 66t179.143 23.143 179.143-23.143 151.714-66zM1057.143 532q32.571-26.286 32.571-66.857 0-35.429-24.857-60.286t-60.286-24.857q-28 0-49.143 16 74.857 60 101.714 136zM718.857 742.286q6.286-6.286 15.429-6.286t15.429 6.286 6.286 15.714-6.286 15.714q-56.571 56.571-182.286 56.571h-1.143q-125.714 0-182.286-56.571-6.286-6.286-6.286-15.714t6.286-15.714 15.429-6.286 15.429 6.286q44 44 151.429 44h1.143q107.429 0 151.429-44z"
				],
				"attrs": [],
				"tags": [
					"reddit"
				],
				"defaultCode": 61857,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 377,
				"order": 378,
				"prevSize": 28,
				"code": 61857,
				"name": "reddit"
			},
			"setIdx": 0,
			"iconIdx": 395
		},
		{
			"icon": {
				"paths": [
					"M542.857 653.143q4-4 10-4t10 4 4 10.286-4 10.286q-37.143 36.571-118.857 36.571h-1.143q-81.714 0-118.286-36.571-4.571-4-4.571-10.286t4.571-10.286q4-4 10-4t10 4q28 29.143 98.286 29.143h1.143q69.714 0 98.857-29.143zM383.429 527.429q0 21.143-14.857 36.571t-36 15.429-36-15.429-14.857-36.571 14.857-36 36-14.857 36 14.857 14.857 36zM693.714 278.286q-16.571 0-28.571-12t-12-28.571q0-17.143 12-29.143t28.571-12q17.143 0 29.143 12t12 29.143q0 16.571-12 28.571t-29.143 12zM694.857 73.143q75.429 0 129.143 53.714t53.714 129.714v510.857q0 76-53.714 129.714t-129.143 53.714h-512q-75.429 0-129.143-53.714t-53.714-129.714v-510.857q0-76 53.714-129.714t129.143-53.714h512zM754.857 537.143q20-8 32.571-26t12.571-40.286q0-29.143-20.571-50t-49.714-20.857q-34.286 0-56 27.429-86.286-61.143-214.286-65.714l47.429-151.429 117.714 28q0.571 28.571 20.857 48.571t48.286 20q28.571 0 49.143-20.286t20.571-48.857-20.571-49.143-49.143-20.571q-20.571 0-37.714 11.714t-25.714 30.571l-129.714-30.857q-5.143-1.143-10 1.429t-6.571 8.286l-54.286 172.571q-128 2.286-217.714 64.571-20.571-24.571-53.143-24.571-29.143 0-49.714 20.857t-20.571 50q0 21.143 11.143 38.571t30 26q-4 14.286-4 30.857 0 56 42.286 103.714t115.143 75.429 159.143 27.714q85.714 0 158.571-27.714t115.143-75.429 42.286-103.714q0-15.429-3.429-30.857zM554.857 476.571q21.143 0 36 14.857t14.857 36-14.857 36.571-36 15.429-36-15.429-14.857-36.571 14.857-36 36-14.857z"
				],
				"attrs": [],
				"tags": [
					"reddit-square"
				],
				"defaultCode": 61858,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 378,
				"order": 379,
				"prevSize": 28,
				"code": 61858,
				"name": "reddit-square"
			},
			"setIdx": 0,
			"iconIdx": 396
		},
		{
			"icon": {
				"paths": [
					"M494.857 479.429l51.429-15.429v-35.429q0-45.143-33.143-77.143t-78.857-32-78.857 31.714-33.143 76.857v161.714q0 11.429-8 19.143t-18.857 7.714-18.571-7.714-7.714-19.143v-68.571h-86.286v69.714q0 46.857 32.857 79.429t79.714 32.571q46.286 0 79.143-32.286t32.857-78v-160q0-10.857 7.714-18.857t19.143-8q10.857 0 18.571 8t7.714 18.857v30.857zM685.143 590.857v-69.714h-85.714v72q0 11.429-7.714 19.143t-19.143 7.714q-10.857 0-18.571-8t-7.714-18.857v-70.286l-51.429 14.857-34.286-16v70.286q0 45.714 33.143 78.286t79.429 32.571 79.143-32.571 32.857-79.429zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"stumbleupon-circle"
				],
				"defaultCode": 61859,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 379,
				"order": 380,
				"prevSize": 28,
				"code": 61859,
				"name": "stumbleupon-circle"
			},
			"setIdx": 0,
			"iconIdx": 397
		},
		{
			"icon": {
				"width": 1097,
				"paths": [
					"M606.857 406.857v-67.429q0-24-17.143-41.143t-41.143-17.143-41.143 17.143-17.143 41.143v349.714q0 100-72 170.857t-173.143 70.857q-101.714 0-173.429-71.714t-71.714-173.429v-152h187.429v149.714q0 24.571 17.143 41.429t41.143 16.857 41.143-16.857 17.143-41.429v-354.286q0-97.714 72.286-166.857t172.286-69.143q100.571 0 172.571 69.714t72 168v77.714l-111.429 33.143zM909.714 533.714h187.429v152q0 101.714-71.714 173.429t-173.429 71.714q-101.143 0-173.143-71.143t-72-171.714v-153.143l74.857 34.857 111.429-33.143v154.286q0 24 17.143 40.857t41.143 16.857 41.143-16.857 17.143-40.857v-157.143z"
				],
				"attrs": [],
				"tags": [
					"stumbleupon"
				],
				"defaultCode": 61860,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 380,
				"order": 381,
				"prevSize": 28,
				"code": 61860,
				"name": "stumbleupon"
			},
			"setIdx": 0,
			"iconIdx": 398
		},
		{
			"icon": {
				"paths": [
					"M841.143 786.286v-274.286h-402.286v-402.286h-274.286q-53.143 0-90.571 37.429t-37.429 90.571v274.286h402.286v402.286h274.286q53.143 0 90.571-37.429t37.429-90.571zM877.714 237.714v548.571q0 68-48.286 116.286t-116.286 48.286h-548.571q-68 0-116.286-48.286t-48.286-116.286v-548.571q0-68 48.286-116.286t116.286-48.286h548.571q68 0 116.286 48.286t48.286 116.286z"
				],
				"attrs": [],
				"tags": [
					"delicious"
				],
				"defaultCode": 61861,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 381,
				"order": 382,
				"prevSize": 28,
				"code": 61861,
				"name": "delicious"
			},
			"setIdx": 0,
			"iconIdx": 399
		},
		{
			"icon": {
				"width": 1170,
				"paths": [
					"M187.429 161.143h116.571v561.714h-304v-398.286h187.429v-163.429zM187.429 629.143v-210.857h-70.286v210.857h70.286zM350.857 324.571v398.286h117.143v-398.286h-117.143zM350.857 161.143v116.571h117.143v-116.571h-117.143zM514.857 324.571h304.571v538.286h-304.571v-93.143h187.429v-46.857h-187.429v-398.286zM702.286 629.143v-210.857h-70.286v210.857h70.286zM866.286 324.571h304v538.286h-304v-93.143h186.857v-46.857h-186.857v-398.286zM1053.143 629.143v-210.857h-70.286v210.857h70.286z"
				],
				"attrs": [],
				"tags": [
					"digg"
				],
				"defaultCode": 61862,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 382,
				"order": 383,
				"prevSize": 28,
				"code": 61862,
				"name": "digg"
			},
			"setIdx": 0,
			"iconIdx": 400
		},
		{
			"icon": {
				"paths": [
					"M597.714 582.857q0 36.571-21.714 62.286t-52 25.714q-24.571 0-40-8.571v-158.286q16-9.714 40-9.714 30.286 0 52 26t21.714 62.571zM401.714 338.286q0 36.571-21.714 62.571t-52 26q-24.571 0-40-8.571v-158.286q16-9.714 40-9.714 30.286 0 52 25.714t21.714 62.286zM722.857 584.571q0-76.571-50.286-130.857t-121.714-54.286q-11.429 0-22.286 1.714-13.143 44.571-44.571 77.714-49.714 54.286-120.571 57.714v363.429l120.571-23.429v-117.714q29.143 10.857 66.857 10.857 71.429 0 121.714-54.286t50.286-130.857zM526.857 340.571q0-76.571-50.571-130.857t-122-54.286q-42.286 0-80.571 20.571h-106.286v480l120.571-23.429v-117.714q31.429 10.857 66.286 10.857 71.429 0 122-54.286t50.571-130.857zM877.714 237.714v548.571q0 68-48.286 116.286t-116.286 48.286h-548.571q-68 0-116.286-48.286t-48.286-116.286v-548.571q0-68 48.286-116.286t116.286-48.286h548.571q68 0 116.286 48.286t48.286 116.286z"
				],
				"attrs": [],
				"tags": [
					"pied-piper"
				],
				"defaultCode": 61863,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 383,
				"order": 384,
				"prevSize": 28,
				"code": 61863,
				"name": "pied-piper"
			},
			"setIdx": 0,
			"iconIdx": 401
		},
		{
			"icon": {
				"width": 1165,
				"paths": [
					"M698.286 530.857q42.857-1.714 82 11.714t67.429 33.429 57.714 54 48 61.714 43.143 68.857q18.857 32 44.857 62.286t43.143 46 56.571 50.571q-27.429 17.143-62 32.857t-79.143 33.714-65.143 27.143q-25.143-21.143-42.286-65.714t-24.857-94-18.857-103.143-24.286-96.286-41.429-70.286-70-27.714l-5.714 1.143-3.429 2.286q2.286 2.857 7.429 8 3.429 2.857 16 13.429t14.571 12.571 10.857 10.286 10.286 11.714 6.571 12 6 15.714 2.571 17.714 2.286 23.143l0.571 18.857q0.571 14.857-1.429 32.857t-4.286 29.714-7.143 33.429-6.571 30.286q-20-0.571-57.714 5.429t-56 6q-22.286 0-41.143-5.714-1.143-9.143-1.143-26.857 0-42.286 1.714-54.857 1.143-7.429 18-23.714t32.571-33.714 15.143-29.429q-13.714-1.143-24.571 13.714-20.571 30.286-63.714 56.857t-78 26.571q-14.286 0-43.143-36t-60.857-79.714-48-55.143q-3.429-2.286-15.429-17.143-275.429 64-293.143 64-9.143 0-16-6.286t-6.857-15.429q0-8.571 4.857-15.143t12.857-8.286l277.714-60.571q-4.571-8-4.571-14.286t3.143-10 9.143-6.571 11.429-4 13.143-2.571 10.571-2.571q2.286-0.571 8.857-4.286t10-3.714q8.571 0 16 9.143t11.429 18.857q93.143-21.143 98.286-21.143 9.714 0 16.857 6.286t7.143 16q0 8.571-4.857 14.857t-13.429 8l-104 22.857-0.571 9.143q-0.571 14.857 46.571 67.143t59.714 52.286q26.857 0 68-45.714t41.143-73.714q0-20.571-13.429-30.286t-29.143-10.571-29.143-6.571-13.429-19.429q0-9.143 5.714-19.429l-38.857-10.857q24.571-25.143 24.571-66.857 0-14.857-2.857-33.143 46.857-9.143 82.286-9.143 25.143 0 40.857 0.857t27.714 4.857 17.714 7.714 11.714 14 8.857 19.143 9.714 27.143 13.714 34.286l28.571-14.286q-1.714 22.857-13.143 34.286t-24.286 12-22.857 3.714-9.429 11.714zM732.571 396.571q-2.857-2.857-7.714-8.857t-6.857-8.286-6-6.571-5.714-6l-4.571-4.571t-4.857-4.286-4.571-2.857-4.857-2.571q-4-1.714-8.286-2.857t-11.714-1.429-12.571-0.286h-40q-72 0-124 24.571 9.143-17.143 20.571-26.571t30.857-16.857 37.429-20.571 26.286-20.857 28.571-31.429 24.857-28.857q6.857 5.143 16 18t18.286 20.857 21.714 7.429l6.857-0.571v43.429l12.571 0.571q141.143-54.286 212-108.571 16-12 28.571-22.286t24.286-21.429 18.857-17.714 16.857-19.429 13.714-17.714 14-21.143 13.143-21.714 15.429-27.143 16.857-30.286l4-5.143q-1.143 30.286-24.571 79.429-45.143 94.286-117.143 150.857t-174.857 81.143q-8 1.714-24 4.286t-28.571 5.429-22.286 8q1.714 10.857 14 26.286t12.286 19.429q0 6.286-14.857 17.143zM606.286 922.857q22.286-14.857 75.143-27.143t83.714-12.286q5.143 0 12.857 8.857t16 24.286 14.857 28.571 13.714 29.143 8.286 18.857q-69.143 25.714-139.429 25.714-34.857 0-71.429-6.286zM469.714 553.143l27.429-6.857 62.286 101.143-41.714 27.429zM756 848.571q1.714 8.571 1.714 9.143 0 4-10 8.286t-26.286 7.429-30.857 5.429-30.571 4.286-18.286 2.571l-4-24.571q12-1.143 34.571-4.857t41.143-5.714 34.571-2h8zM494.857 489.714l-54.857 11.429-3.429-9.714q5.714-0.571 18.571-4t19.714-3.429q10.857 0 20 5.714zM606.286 852h17.714l5.714 47.429-23.429 6.857v-54.286zM1114.286 0.571v0zM1114.286 0.571l-0.571 2.857-1.143 1.143 0.571-1.714zM1114.286 0.571l0.571-0.571z"
				],
				"attrs": [],
				"tags": [
					"pied-piper-alt"
				],
				"defaultCode": 61864,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 384,
				"order": 385,
				"prevSize": 28,
				"code": 61864,
				"name": "pied-piper-alt"
			},
			"setIdx": 0,
			"iconIdx": 402
		},
		{
			"icon": {
				"paths": [
					"M666.857 906.286q-2.857-10.857-13.714-2.857-17.143 12.571-49.714 22.286t-74.857 9.714q-73.714 0-110.286-28-2.857-2.286-7.429-2.286-6.286 0-14.857 6.857-4 3.429-4.286 9.143t4.286 11.429q19.429 18.286 50 26.286t58.571 7.143 56.571-2.571q23.429-2.286 48.286-11.714t37.143-17.143 16.286-11.714q6.857-6.857 4-16.571zM644.571 840.571q-10.857-26.857-22.286-34.857-13.143-8.571-43.429-8.571-26.857 0-40.571 5.714-16.571 6.857-44.571 32-14.857 13.714-6.857 25.143 5.143 4.571 10 2.571t18-13.429q1.714-1.143 6-4.857t6-4.857 5.714-4 6.571-4 7.143-2.857 8.571-2.571 9.429-1.429 11.714-0.571q15.429 0 25.429 4.286t13.143 8.286 7.714 12.571q5.714 9.714 7.143 11.429t7.143-0.571q13.143-6.857 8-19.429zM847.429 680q0-12.571-2.857-25.429t-9.429-25.714-19.429-20.857-30-8q-18.857 0-55.429 23.714t-73.714 47.714-57.714 24q-15.429 0.571-36.286-10.857t-43.429-28-47.714-33.143-57.143-28-63.429-10.857q-65.714 0.571-112.571 44.857t-48 102q-1.143 64 42.286 93.714 16.571 11.429 35.714 16.286t59.143 4.857q32.571 0 75.429-18.571t76.571-40.571 68.571-40.286 53.143-17.714q14.857 0.571 37.143 18t40.857 38.286 38.857 38.571 31.714 18.286q20 1.714 33.429-8t31.714-36q16-23.429 24.286-57.714t8.286-60.571zM877.714 588.571q0 93.714-35.429 174t-94.857 134.857-138.571 85.429-166 30.857-167.429-32.857-141.429-89.714-97.429-138-36.571-172.571q0-50.857 11.143-98.571t28-83.143 40.286-67.714 44.857-53.714 44.857-39.714 36.857-26.571 24.286-14q8-4.571 29.143-15.143t31.143-16.286 27.429-17.143 34.571-25.143q20.571-16 33.143-41.429t17.143-71.714q73.714 88.571 106.286 110.286 25.143 16.571 74.286 38.857t73.714 37.714q12 7.429 22.286 14.286t34.571 26.571 43.429 40.286 42.857 54.286 39.429 69.714 26.857 84.857 11.143 101.429z"
				],
				"attrs": [],
				"tags": [
					"drupal"
				],
				"defaultCode": 61865,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 385,
				"order": 386,
				"prevSize": 28,
				"code": 61865,
				"name": "drupal"
			},
			"setIdx": 0,
			"iconIdx": 403
		},
		{
			"icon": {
				"paths": [
					"M611.429 613.143l-91.429 91.429-86.286 86.857-17.143 17.143q-37.143 36.571-86.571 49.714t-98 1.143q-9.143 40-41.143 65.714t-73.714 25.714q-48.571 0-82.857-34.571t-34.286-83.143q0-41.143 25.429-73.143t64.857-41.143q-12.571-49.143 0.571-98.857t50.286-86.857l6.857-6.857 86.286 86.857-6.286 6.286q-21.143 21.143-21.143 50.857t21.143 51.429q21.143 21.143 50.857 21.143t50.857-21.143l17.143-17.143 86.286-86.857 92-91.429zM416.571 223.429l6.857 6.857-86.857 86.857-6.857-6.857q-21.143-21.143-50.857-21.143t-50.857 21.143-21.143 51.143 21.143 51.143l194.857 194.857-86.286 86.857-92-91.429-86.286-86.857-17.143-17.143q-38.857-38.286-51.429-91.143t2.857-102.571q-40-8.571-65.714-40.571t-25.714-73.714q0-48.571 34.286-83.143t82.857-34.571q43.429 0 76.286 28t39.714 70.286q48-11.429 96.857 2t85.429 50zM877.714 833.143q0 48.571-34.286 83.143t-82.857 34.571q-42.286 0-74.857-26.857t-40.571-67.429q-49.143 16-102.571 3.429t-92.286-51.429l-6.286-6.857 86.286-86.857 6.857 6.857q21.143 21.143 50.857 21.143t50.857-21.143 21.143-50.857-21.143-50.857l-195.429-195.429 86.857-86.857 178.286 178.286 16.571 17.143q36.571 36.571 50 86t1.429 98q43.429 6.286 72.286 39.143t28.857 76.857zM876.571 190.857q0 44-29.143 77.143t-72.571 39.429q14.857 48.571 1.714 100.857t-51.429 90.571l-6.857 6.857-86.286-86.857 6.857-6.857q21.143-21.143 21.143-50.857t-21.143-50.857-50.857-21.143-50.857 21.143l-195.429 195.429-86.857-86.857 92-91.429 86.857-86.857 16.571-17.143q38.286-38.286 90.857-51.143t101.714 2q6.286-42.857 39.143-72t77.429-29.143q48.571 0 82.857 34.571t34.286 83.143z"
				],
				"attrs": [],
				"tags": [
					"joomla"
				],
				"defaultCode": 61866,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 386,
				"order": 387,
				"prevSize": 28,
				"code": 61866,
				"name": "joomla"
			},
			"setIdx": 0,
			"iconIdx": 404
		},
		{
			"icon": {
				"paths": [
					"M373.714 616q-0.571 1.714-7.143-0.286t-18-6.571l-11.429-5.143q-25.143-11.429-49.714-28-4-2.857-23.429-18t-21.714-16.286q-38.286 58.857-76.571 103.429-46.286 54.286-60 62.857-2.286 1.143-11.143 2.286t-10.571 0q3.429-2.286 46.857-52.571 12-13.714 48.857-65.714t44.857-67.429q9.714-17.143 29.143-56.286t20.571-44.286q-4.571-0.571-62.857 18.857-4.571 1.143-15.714 4.286t-19.714 5.429-9.714 2.857q-1.143 1.143-1.143 6t-0.571 5.429q-2.857 5.714-17.714 8.571-13.143 4-26.857 0-10.286-2.286-16-12-2.286-3.429-2.857-13.143 3.429-1.143 14-2.857t16.857-3.429q33.143-9.143 60-18.286 57.143-20 58.286-20 5.714-1.143 24.571-11.143t25.143-12.286q5.143-1.714 12.286-4.571t8.286-3.143 3.429 0.286q1.143 6.857-0.571 18.857 0 1.143-7.143 15.429t-15.143 30.571-9.714 19.143q-14.286 28.571-44 74.857l36.571 16q6.857 3.429 42.571 18.286t38.571 16q2.286 0.571 6 14.571t2.571 17.429zM256.571 338.286q1.714 8.571-2.286 16-6.857 13.143-28.571 21.714-17.143 6.857-34.286 6.857-14.857-1.714-28-14.857-8-8.571-10.286-23.429l0.571-1.714q1.714 1.714 11.143 2.857t15.143 0 33.143-9.143q20.571-6.857 31.429-8 9.714 0 12 9.714zM655.429 412l36 129.714-79.429-24zM22.286 869.143l396.571-132.571v-589.714l-396.571 133.143v589.143zM731.429 688l58.286 17.714-103.429-375.429-57.143-17.714-123.429 306.286 58.286 17.714 25.714-62.857 120.571 37.143zM444 138.286l327.429 105.143v-217.143zM621.714 894.286l90.286 7.429-30.857 91.429-22.857-37.714q-74.286 47.429-157.714 61.714-33.143 6.857-52 6.857h-48q-45.143 0-114-22.286t-104.857-48.571q-4.571-4-4.571-9.143 0-4.571 2.857-7.714t7.429-3.143q2.286 0 10.286 4.286t17.429 9.429 11.714 6.286q41.714 21.143 91.143 35.143t90 14q54.286 0 95.429-8.286t89.714-28.857q8.571-4 17.429-8.857t19.429-10.857 16.286-9.429zM877.714 277.714v616.571l-442.286-140.571q-8 3.429-214.286 72.857t-210.286 69.429q-7.429 0-10.286-7.429 0-0.571-0.571-1.714v-616q1.714-5.143 2.286-5.714 2.857-3.429 11.429-6.286 60.571-20 85.143-28.571v-219.429l318.857 113.143q1.143 0 91.714-31.429t180.571-62 92.286-30.571q11.429 0 11.429 12v238.857z"
				],
				"attrs": [],
				"tags": [
					"language"
				],
				"defaultCode": 61867,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 387,
				"order": 388,
				"prevSize": 28,
				"code": 61867,
				"name": "language"
			},
			"setIdx": 0,
			"iconIdx": 405
		},
		{
			"icon": {
				"paths": [
					"M164.571 219.429q37.714 0 64.571 26.857t26.857 64.571v621.714q0 37.714-26.857 64.571t-64.571 26.857h-73.143q-37.714 0-64.571-26.857t-26.857-64.571v-621.714q0-37.714 26.857-64.571t64.571-26.857h73.143zM950.857 312.571q33.143 19.429 53.143 53.143t20 73.143v438.857q0 60.571-42.857 103.429t-103.429 42.857h-493.714q-37.714 0-64.571-26.857t-26.857-64.571v-877.714q0-22.857 16-38.857t38.857-16h384q22.857 0 50.286 11.429t43.429 27.429l86.857 86.857q16 16 27.429 43.429t11.429 50.286v93.143zM530.286 877.714v-73.143q0-8-5.143-13.143t-13.143-5.143h-73.143q-8 0-13.143 5.143t-5.143 13.143v73.143q0 8 5.143 13.143t13.143 5.143h73.143q8 0 13.143-5.143t5.143-13.143zM530.286 731.429v-73.143q0-8-5.143-13.143t-13.143-5.143h-73.143q-8 0-13.143 5.143t-5.143 13.143v73.143q0 8 5.143 13.143t13.143 5.143h73.143q8 0 13.143-5.143t5.143-13.143zM530.286 585.143v-73.143q0-8-5.143-13.143t-13.143-5.143h-73.143q-8 0-13.143 5.143t-5.143 13.143v73.143q0 8 5.143 13.143t13.143 5.143h73.143q8 0 13.143-5.143t5.143-13.143zM676.571 877.714v-73.143q0-8-5.143-13.143t-13.143-5.143h-73.143q-8 0-13.143 5.143t-5.143 13.143v73.143q0 8 5.143 13.143t13.143 5.143h73.143q8 0 13.143-5.143t5.143-13.143zM676.571 731.429v-73.143q0-8-5.143-13.143t-13.143-5.143h-73.143q-8 0-13.143 5.143t-5.143 13.143v73.143q0 8 5.143 13.143t13.143 5.143h73.143q8 0 13.143-5.143t5.143-13.143zM676.571 585.143v-73.143q0-8-5.143-13.143t-13.143-5.143h-73.143q-8 0-13.143 5.143t-5.143 13.143v73.143q0 8 5.143 13.143t13.143 5.143h73.143q8 0 13.143-5.143t5.143-13.143zM822.857 877.714v-73.143q0-8-5.143-13.143t-13.143-5.143h-73.143q-8 0-13.143 5.143t-5.143 13.143v73.143q0 8 5.143 13.143t13.143 5.143h73.143q8 0 13.143-5.143t5.143-13.143zM822.857 731.429v-73.143q0-8-5.143-13.143t-13.143-5.143h-73.143q-8 0-13.143 5.143t-5.143 13.143v73.143q0 8 5.143 13.143t13.143 5.143h73.143q8 0 13.143-5.143t5.143-13.143zM822.857 585.143v-73.143q0-8-5.143-13.143t-13.143-5.143h-73.143q-8 0-13.143 5.143t-5.143 13.143v73.143q0 8 5.143 13.143t13.143 5.143h73.143q8 0 13.143-5.143t5.143-13.143zM877.714 365.714v-146.286h-91.429q-22.857 0-38.857-16t-16-38.857v-91.429h-365.714v292.571h512z"
				],
				"attrs": [],
				"tags": [
					"fax"
				],
				"defaultCode": 61868,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 388,
				"order": 389,
				"prevSize": 28,
				"code": 61868,
				"name": "fax"
			},
			"setIdx": 0,
			"iconIdx": 406
		},
		{
			"icon": {
				"paths": [
					"M768 0q14.857 0 25.714 10.857t10.857 25.714v950.857q0 14.857-10.857 25.714t-25.714 10.857h-731.429q-14.857 0-25.714-10.857t-10.857-25.714v-950.857q0-14.857 10.857-25.714t25.714-10.857h731.429zM292.571 164.571v36.571q0 8 5.143 13.143t13.143 5.143h36.571q8 0 13.143-5.143t5.143-13.143v-36.571q0-8-5.143-13.143t-13.143-5.143h-36.571q-8 0-13.143 5.143t-5.143 13.143zM292.571 310.857v36.571q0 8 5.143 13.143t13.143 5.143h36.571q8 0 13.143-5.143t5.143-13.143v-36.571q0-8-5.143-13.143t-13.143-5.143h-36.571q-8 0-13.143 5.143t-5.143 13.143zM292.571 457.143v36.571q0 8 5.143 13.143t13.143 5.143h36.571q8 0 13.143-5.143t5.143-13.143v-36.571q0-8-5.143-13.143t-13.143-5.143h-36.571q-8 0-13.143 5.143t-5.143 13.143zM292.571 603.429v36.571q0 8 5.143 13.143t13.143 5.143h36.571q8 0 13.143-5.143t5.143-13.143v-36.571q0-8-5.143-13.143t-13.143-5.143h-36.571q-8 0-13.143 5.143t-5.143 13.143zM219.429 786.286v-36.571q0-8-5.143-13.143t-13.143-5.143h-36.571q-8 0-13.143 5.143t-5.143 13.143v36.571q0 8 5.143 13.143t13.143 5.143h36.571q8 0 13.143-5.143t5.143-13.143zM219.429 640v-36.571q0-8-5.143-13.143t-13.143-5.143h-36.571q-8 0-13.143 5.143t-5.143 13.143v36.571q0 8 5.143 13.143t13.143 5.143h36.571q8 0 13.143-5.143t5.143-13.143zM219.429 493.714v-36.571q0-8-5.143-13.143t-13.143-5.143h-36.571q-8 0-13.143 5.143t-5.143 13.143v36.571q0 8 5.143 13.143t13.143 5.143h36.571q8 0 13.143-5.143t5.143-13.143zM219.429 347.429v-36.571q0-8-5.143-13.143t-13.143-5.143h-36.571q-8 0-13.143 5.143t-5.143 13.143v36.571q0 8 5.143 13.143t13.143 5.143h36.571q8 0 13.143-5.143t5.143-13.143zM219.429 201.143v-36.571q0-8-5.143-13.143t-13.143-5.143h-36.571q-8 0-13.143 5.143t-5.143 13.143v36.571q0 8 5.143 13.143t13.143 5.143h36.571q8 0 13.143-5.143t5.143-13.143zM512 932.571v-109.714q0-8-5.143-13.143t-13.143-5.143h-182.857q-8 0-13.143 5.143t-5.143 13.143v109.714q0 8 5.143 13.143t13.143 5.143h182.857q8 0 13.143-5.143t5.143-13.143zM512 640v-36.571q0-8-5.143-13.143t-13.143-5.143h-36.571q-8 0-13.143 5.143t-5.143 13.143v36.571q0 8 5.143 13.143t13.143 5.143h36.571q8 0 13.143-5.143t5.143-13.143zM512 493.714v-36.571q0-8-5.143-13.143t-13.143-5.143h-36.571q-8 0-13.143 5.143t-5.143 13.143v36.571q0 8 5.143 13.143t13.143 5.143h36.571q8 0 13.143-5.143t5.143-13.143zM512 347.429v-36.571q0-8-5.143-13.143t-13.143-5.143h-36.571q-8 0-13.143 5.143t-5.143 13.143v36.571q0 8 5.143 13.143t13.143 5.143h36.571q8 0 13.143-5.143t5.143-13.143zM512 201.143v-36.571q0-8-5.143-13.143t-13.143-5.143h-36.571q-8 0-13.143 5.143t-5.143 13.143v36.571q0 8 5.143 13.143t13.143 5.143h36.571q8 0 13.143-5.143t5.143-13.143zM658.286 786.286v-36.571q0-8-5.143-13.143t-13.143-5.143h-36.571q-8 0-13.143 5.143t-5.143 13.143v36.571q0 8 5.143 13.143t13.143 5.143h36.571q8 0 13.143-5.143t5.143-13.143zM658.286 640v-36.571q0-8-5.143-13.143t-13.143-5.143h-36.571q-8 0-13.143 5.143t-5.143 13.143v36.571q0 8 5.143 13.143t13.143 5.143h36.571q8 0 13.143-5.143t5.143-13.143zM658.286 493.714v-36.571q0-8-5.143-13.143t-13.143-5.143h-36.571q-8 0-13.143 5.143t-5.143 13.143v36.571q0 8 5.143 13.143t13.143 5.143h36.571q8 0 13.143-5.143t5.143-13.143zM658.286 347.429v-36.571q0-8-5.143-13.143t-13.143-5.143h-36.571q-8 0-13.143 5.143t-5.143 13.143v36.571q0 8 5.143 13.143t13.143 5.143h36.571q8 0 13.143-5.143t5.143-13.143zM658.286 201.143v-36.571q0-8-5.143-13.143t-13.143-5.143h-36.571q-8 0-13.143 5.143t-5.143 13.143v36.571q0 8 5.143 13.143t13.143 5.143h36.571q8 0 13.143-5.143t5.143-13.143z"
				],
				"attrs": [],
				"tags": [
					"building"
				],
				"defaultCode": 61869,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 389,
				"order": 390,
				"prevSize": 28,
				"code": 61869,
				"name": "building"
			},
			"setIdx": 0,
			"iconIdx": 407
		},
		{
			"icon": {
				"width": 731,
				"paths": [
					"M678.857 313.143l-166.857 166.857v470.857q0 26.286-18.857 45.143t-45.143 18.857-45.143-18.857-18.857-45.143v-219.429h-36.571v219.429q0 26.286-18.857 45.143t-45.143 18.857-45.143-18.857-18.857-45.143v-470.857l-166.857-166.857q-16-16-16-38.857t16-38.857 38.857-16 38.857 16l130.286 130.286h210.286l130.286-130.286q16-16 38.857-16t38.857 16 16 38.857-16 38.857zM493.714 219.429q0 53.143-37.429 90.571t-90.571 37.429-90.571-37.429-37.429-90.571 37.429-90.571 90.571-37.429 90.571 37.429 37.429 90.571z"
				],
				"attrs": [],
				"tags": [
					"child"
				],
				"defaultCode": 61870,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 390,
				"order": 391,
				"prevSize": 28,
				"code": 61870,
				"name": "child"
			},
			"setIdx": 0,
			"iconIdx": 408
		},
		{
			"icon": {
				"width": 951,
				"paths": [
					"M445.714 269.714q0 34.286-10.857 64.857t-36 52.857-60 22.286q-43.429 0-78.857-32.857t-52.571-77.429-17.143-86.286q0-34.286 10.857-64.857t36-52.857 60-22.286q44 0 79.143 32.857t52.286 77.143 17.143 86.571zM250.286 545.714q0 45.714-24 79.429t-68 33.714q-43.429 0-80.857-31.714t-57.429-76.286-20-86.857q0-45.714 24-79.714t68-34q43.429 0 80.857 31.714t57.429 76.571 20 87.143zM475.429 530.286q67.429 0 145.714 55.714t130.857 135.429 52.571 145.429q0 26.286-9.714 43.714t-27.714 25.714-36.857 11.429-43.429 3.143q-38.857 0-107.143-25.714t-104.286-25.714q-37.714 0-110 25.429t-114.571 25.429q-104.571 0-104.571-83.429 0-49.143 32-109.429t79.714-110 107.143-83.429 110.286-33.714zM612 409.714q-34.857 0-60-22.286t-36-52.857-10.857-64.857q0-42.286 17.143-86.571t52.286-77.143 79.143-32.857q34.857 0 60 22.286t36 52.857 10.857 64.857q0 41.714-17.143 86.286t-52.571 77.429-78.857 32.857zM858.857 350.286q44 0 68 34t24 79.714q0 42.286-20 86.857t-57.429 76.286-80.857 31.714q-44 0-68-33.714t-24-79.429q0-42.286 20-87.143t57.429-76.571 80.857-31.714z"
				],
				"attrs": [],
				"tags": [
					"paw"
				],
				"defaultCode": 61872,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 391,
				"order": 392,
				"prevSize": 28,
				"code": 61872,
				"name": "paw"
			},
			"setIdx": 0,
			"iconIdx": 409
		},
		{
			"icon": {
				"width": 439,
				"paths": [
					"M402.286 301.714q0 82.857-32.571 139.143t-86.857 77.429l25.714 469.143q1.143 14.857-9.143 25.714t-25.143 10.857h-109.714q-14.857 0-25.143-10.857t-9.143-25.714l25.714-469.143q-54.286-21.143-86.857-77.429t-32.571-139.143q0-73.143 24.286-142.571t67.143-114.286 91.429-44.857 91.429 44.857 67.143 114.286 24.286 142.571z"
				],
				"attrs": [],
				"tags": [
					"spoon"
				],
				"defaultCode": 61873,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 392,
				"order": 393,
				"prevSize": 28,
				"code": 61873,
				"name": "spoon"
			},
			"setIdx": 0,
			"iconIdx": 410
		},
		{
			"icon": {
				"paths": [
					"M512 930.857l365.714-199.429v-363.429l-365.714 133.143v429.714zM475.429 436.571l398.857-145.143-398.857-145.143-398.857 145.143zM950.857 292.571v438.857q0 20-10.286 37.143t-28 26.857l-402.286 219.429q-16 9.143-34.857 9.143t-34.857-9.143l-402.286-219.429q-17.714-9.714-28-26.857t-10.286-37.143v-438.857q0-22.857 13.143-41.714t34.857-26.857l402.286-146.286q12.571-4.571 25.143-4.571t25.143 4.571l402.286 146.286q21.714 8 34.857 26.857t13.143 41.714z"
				],
				"attrs": [],
				"tags": [
					"cube"
				],
				"defaultCode": 61874,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 393,
				"order": 394,
				"prevSize": 28,
				"code": 61874,
				"name": "cube"
			},
			"setIdx": 0,
			"iconIdx": 411
		},
		{
			"icon": {
				"width": 1317,
				"paths": [
					"M365.714 932.571l219.429-109.714v-179.429l-219.429 93.714v195.429zM329.143 673.143l230.857-98.857-230.857-98.857-230.857 98.857zM950.857 932.571l219.429-109.714v-179.429l-219.429 93.714v195.429zM914.286 673.143l230.857-98.857-230.857-98.857-230.857 98.857zM658.286 505.714l219.429-94.286v-152l-219.429 93.714v152.571zM621.714 289.143l252-108-252-108-252 108zM1243.429 585.143v237.714q0 20.571-10.857 38.286t-29.714 26.857l-256 128q-14.286 8-32.571 8t-32.571-8l-256-128q-2.857-1.143-4-2.286-1.143 1.143-4 2.286l-256 128q-14.286 8-32.571 8t-32.571-8l-256-128q-18.857-9.143-29.714-26.857t-10.857-38.286v-237.714q0-21.714 12.286-40t32.286-27.429l248-106.286v-228.571q0-21.714 12.286-40t32.286-27.429l256-109.714q13.143-5.714 28.571-5.714t28.571 5.714l256 109.714q20 9.143 32.286 27.429t12.286 40v228.571l248 106.286q20.571 9.143 32.571 27.429t12 40z"
				],
				"attrs": [],
				"tags": [
					"cubes"
				],
				"defaultCode": 61875,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 394,
				"order": 395,
				"prevSize": 28,
				"code": 61875,
				"name": "cubes"
			},
			"setIdx": 0,
			"iconIdx": 412
		},
		{
			"icon": {
				"width": 1170,
				"paths": [
					"M1056 193.714h-292v70.857h292v-70.857zM912 437.143q-51.429 0-83.429 30t-35.429 81.429h233.143q-10.286-111.429-114.286-111.429zM921.143 771.429q36 0 69.714-18.286t43.429-49.714h126.286q-57.143 175.429-244 175.429-122.286 0-194.571-75.429t-72.286-198.286q0-118.857 74.571-197.429t192.286-78.571q78.857 0 137.429 38.857t87.429 102.286 28.857 141.714q0 9.714-1.143 26.857h-376q0 63.429 32.857 98t95.143 34.571zM158.286 742.857h169.143q117.143 0 117.143-95.429 0-102.857-113.714-102.857h-172.571v198.286zM158.286 436h160.571q44.571 0 70.571-20.857t26-64.857q0-82.286-108.571-82.286h-148.571v168zM0 145.143h339.429q49.714 0 88.571 8t72.286 27.143 51.429 55.143 18 88q0 103.429-98.286 150.286 65.143 18.286 98.286 65.714t33.143 116.571q0 42.857-14 78t-37.714 59.143-56.286 40.571-69.143 24-76.571 7.429h-349.143v-720z"
				],
				"attrs": [],
				"tags": [
					"behance"
				],
				"defaultCode": 61876,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 395,
				"order": 396,
				"prevSize": 28,
				"code": 61876,
				"name": "behance"
			},
			"setIdx": 0,
			"iconIdx": 413
		},
		{
			"icon": {
				"paths": [
					"M713.143 73.143q68 0 116.286 48.286t48.286 116.286v548.571q0 68-48.286 116.286t-116.286 48.286h-548.571q-68 0-116.286-48.286t-48.286-116.286v-548.571q0-68 48.286-116.286t116.286-48.286h548.571zM285.143 282.857h-212v449.714h218.286q66.857 0 112.571-32.857t45.714-97.429q0-90.286-81.714-114.286 61.143-29.714 61.143-93.714 0-32.571-11.143-55.143t-32.286-34.571-45.143-16.857-55.429-4.857zM272.571 464.571h-100.571v-105.143h93.143q68 0 68 51.429 0 53.714-60.571 53.714zM277.714 656h-105.714v-124h108q70.857 0 70.857 64.571 0 59.429-73.143 59.429zM649.143 674.286q-38.857 0-59.429-21.714t-20.571-61.143h234.857q0.571-5.714 0.571-17.143 0-75.429-42.571-126t-116.286-50.571q-73.143 0-120 49.143t-46.857 123.429q0 77.143 45.143 124t121.714 46.857q117.143 0 152.571-109.143h-78.857q-6.286 19.429-27.143 30.857t-43.143 11.429zM643.429 465.143q64.571 0 70.857 69.714h-145.143q2.286-32 22.286-50.857t52-18.857zM550.857 313.143h182.286v44h-182.286v-44z"
				],
				"attrs": [],
				"tags": [
					"behance-square"
				],
				"defaultCode": 61877,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 396,
				"order": 397,
				"prevSize": 28,
				"code": 61877,
				"name": "behance-square"
			},
			"setIdx": 0,
			"iconIdx": 414
		},
		{
			"icon": {
				"paths": [
					"M904 332.571q0 57.714-40.857 98.571t-98.571 40.857-98.571-40.857-40.857-98.571 40.857-98.571 98.571-40.857 98.571 40.857 40.857 98.571zM464 756.571q0-59.429-41.714-101.143t-101.143-41.714q-15.429 0-30.857 3.429l59.429 24q44 17.714 62.571 60.857t0.857 86.571q-17.714 44-61.143 62.286t-86.857 0.571q-12-4.571-35.429-14t-34.857-14q18.286 34.286 52 55.143t74.286 20.857q59.429 0 101.143-41.714t41.714-101.143zM938.286 333.143q0-72-51.143-123.143t-123.143-51.143q-72.571 0-123.714 51.143t-51.143 123.143q0 72.571 51.143 123.429t123.714 50.857q72 0 123.143-50.857t51.143-123.429zM1024 333.143q0 108-76.286 184t-183.714 76l-249.714 182.286q-6.857 73.714-62.286 124.571t-130.857 50.857q-69.143 0-122.286-43.429t-67.429-109.714l-131.429-52.571v-245.143l222.286 89.714q45.143-27.429 98.857-27.429 7.429 0 20 1.143l162.286-232.571q1.143-106.857 77.429-182.286t183.143-75.429q107.429 0 183.714 76.286t76.286 183.714z"
				],
				"attrs": [],
				"tags": [
					"steam"
				],
				"defaultCode": 61878,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 397,
				"order": 398,
				"prevSize": 28,
				"code": 61878,
				"name": "steam"
			},
			"setIdx": 0,
			"iconIdx": 415
		},
		{
			"icon": {
				"paths": [
					"M709.714 369.714q0-45.714-32.571-78t-78.286-32.286-78 32.571-32.286 77.714q0 45.714 32.286 78t78 32.286 78.286-32.286 32.571-78zM361.143 705.714q0 47.429-33.143 80.286t-80 32.857q-32 0-58.857-16.571t-41.143-44q29.714 11.429 56 22.857 34.286 13.714 68.571-0.857t48.571-49.429q13.714-34.286-0.857-68.571t-49.429-48l-46.857-18.857q12.571-2.857 24-2.857 46.857 0 80 32.857t33.143 80.286zM877.714 237.714v548.571q0 68-48.286 116.286t-116.286 48.286h-548.571q-68 0-116.286-48.286t-48.286-116.286v-87.429l98.286 39.429q11.429 52.571 53.429 86.857t96.286 34.286q59.429 0 103.429-40t49.714-98.857l197.143-144q85.714 0 146-60.286t60.286-145.429q0-85.714-60.286-146t-146-60.286q-84.571 0-144.571 59.714t-61.143 144.286l-128.571 184q-5.143-0.571-16-0.571-42.857 0-78.286 21.143l-169.714-68v-267.429q0-68 48.286-116.286t116.286-48.286h548.571q68 0 116.286 48.286t48.286 116.286zM736.571 370.857q0 57.143-40.571 97.429t-97.714 40.286-97.429-40.286-40.286-97.429 40.286-97.714 97.429-40.571q57.714 0 98 40.286t40.286 98z"
				],
				"attrs": [],
				"tags": [
					"steam-square"
				],
				"defaultCode": 61879,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 398,
				"order": 399,
				"prevSize": 28,
				"code": 61879,
				"name": "steam-square"
			},
			"setIdx": 0,
			"iconIdx": 416
		},
		{
			"icon": {
				"paths": [
					"M477.714 668l-8.571 210.286-1.143 12.571-240-16.571q-20.571-1.714-38.286-18t-26.857-37.429q-6.286-15.429-8.286-31.429t2.286-37.143 6.857-31.429 12.286-36.571 10.857-30.286q44.571 6.857 290.857 16zM256.571 333.143l102.857 216.571-84-52.571q-36 41.143-63.714 82.571t-41.429 71.429-22.571 54-10.571 36l-2.286 12-108.571-204q-9.714-14.857-10.286-32t3.429-26.857l4.571-10.286q20-36 65.143-107.429l-80-49.143zM960 628.571l-107.429 205.143q-6.857 16.571-20.857 26.571t-24.857 11.714l-10.286 2.286q-40.571 4-125.143 6.857l4.571 93.714-131.429-209.714 120.571-206.857 4 98.857q97.143 9.143 161.714 2.857t97.143-18.857zM511.429 100.571q-26.857 36-151.429 248.571l-181.143-106.857-10.857-6.857 128.571-203.429q11.429-17.714 34.286-25.714t45.714-5.714q13.714 1.143 27.714 6.857t24 12 23.714 18.857 20.571 19.714 20.571 22.571 18.286 20zM885.714 276l121.143 207.429q10.286 21.143 7.143 43.429t-15.714 42.286q-7.429 11.429-18.857 21.143t-21.714 16-27.714 12.571-26.857 9.143-29.429 8-26.286 6.857q-19.429-41.143-151.429-249.143l178.857-111.429zM804 146.857l81.143-47.429-125.714 213.143-239.429-11.429 86.286-49.143q-19.429-50.857-42.857-94.857t-43.143-70.571-36.857-45.714-26.857-26.571l-9.714-7.429 231.429 0.571q17.714-1.714 33.143 6t22.286 16.286l6.286 8.571q22.286 34.857 64 108.571z"
				],
				"attrs": [],
				"tags": [
					"recycle"
				],
				"defaultCode": 61880,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 399,
				"order": 400,
				"prevSize": 28,
				"code": 61880,
				"name": "recycle"
			},
			"setIdx": 0,
			"iconIdx": 417
		},
		{
			"icon": {
				"width": 1170,
				"paths": [
					"M274.286 621.714q0-37.714-26.857-64.571t-64.571-26.857-64.571 26.857-26.857 64.571 26.857 64.571 64.571 26.857 64.571-26.857 26.857-64.571zM294.857 438.857h580.571l-50.857-204q-1.143-4.571-8-10t-12-5.429h-438.857q-5.143 0-12 5.429t-8 10zM1078.857 621.714q0-37.714-26.857-64.571t-64.571-26.857-64.571 26.857-26.857 64.571 26.857 64.571 64.571 26.857 64.571-26.857 26.857-64.571zM1170.286 566.857v219.429q0 8-5.143 13.143t-13.143 5.143h-54.857v73.143q0 45.714-32 77.714t-77.714 32-77.714-32-32-77.714v-73.143h-585.143v73.143q0 45.714-32 77.714t-77.714 32-77.714-32-32-77.714v-73.143h-54.857q-8 0-13.143-5.143t-5.143-13.143v-219.429q0-53.143 37.429-90.571t90.571-37.429h16l60-239.429q13.143-53.714 59.429-90t102.286-36.286h438.857q56 0 102.286 36.286t59.429 90l60 239.429h16q53.143 0 90.571 37.429t37.429 90.571z"
				],
				"attrs": [],
				"tags": [
					"automobile",
					"car"
				],
				"defaultCode": 61881,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 400,
				"order": 401,
				"prevSize": 28,
				"code": 61881,
				"name": "automobile"
			},
			"setIdx": 0,
			"iconIdx": 418
		},
		{
			"icon": {
				"width": 1170,
				"paths": [
					"M1042.286 512q53.143 0 90.571 37.429t37.429 90.571v219.429q0 8-5.143 13.143t-13.143 5.143h-54.857v36.571q0 45.714-32 77.714t-77.714 32-77.714-32-32-77.714v-36.571h-585.143v36.571q0 45.714-32 77.714t-77.714 32-77.714-32-32-77.714v-36.571h-54.857q-8 0-13.143-5.143t-5.143-13.143v-219.429q0-53.143 37.429-90.571t90.571-37.429h16l60-239.429q13.143-53.714 59.429-90t102.286-36.286h73.143v-128q0-8 5.143-13.143t13.143-5.143h256q8 0 13.143 5.143t5.143 13.143v128h73.143q56 0 102.286 36.286t59.429 90l60 239.429h16zM182.857 786.286q37.714 0 64.571-26.857t26.857-64.571-26.857-64.571-64.571-26.857-64.571 26.857-26.857 64.571 26.857 64.571 64.571 26.857zM294.857 512h580.571l-50.857-204q-1.143-4.571-8-10t-12-5.429h-438.857q-5.143 0-12 5.429t-8 10zM987.429 786.286q37.714 0 64.571-26.857t26.857-64.571-26.857-64.571-64.571-26.857-64.571 26.857-26.857 64.571 26.857 64.571 64.571 26.857z"
				],
				"attrs": [],
				"tags": [
					"cab",
					"taxi"
				],
				"defaultCode": 61882,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 401,
				"order": 402,
				"prevSize": 28,
				"code": 61882,
				"name": "cab"
			},
			"setIdx": 0,
			"iconIdx": 419
		},
		{
			"icon": {
				"paths": [
					"M859.429 841.143q0 14.857-10.857 25.714t-25.714 10.857h-264q0.571 9.714 3.429 50t2.857 62q0 14.286-10.286 24.286t-24.571 10h-182.857q-14.286 0-24.571-10t-10.286-24.286q0-21.714 2.857-62t3.429-50h-264q-14.857 0-25.714-10.857t-10.857-25.714 10.857-25.714l229.714-230.286h-130.857q-14.857 0-25.714-10.857t-10.857-25.714 10.857-25.714l229.714-230.286h-112.571q-14.857 0-25.714-10.857t-10.857-25.714 10.857-25.714l219.429-219.429q10.857-10.857 25.714-10.857t25.714 10.857l219.429 219.429q10.857 10.857 10.857 25.714t-10.857 25.714-25.714 10.857h-112.571l229.714 230.286q10.857 10.857 10.857 25.714t-10.857 25.714-25.714 10.857h-130.857l229.714 230.286q10.857 10.857 10.857 25.714z"
				],
				"attrs": [],
				"tags": [
					"tree"
				],
				"defaultCode": 61883,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 402,
				"order": 403,
				"prevSize": 28,
				"code": 61883,
				"name": "tree"
			},
			"setIdx": 0,
			"iconIdx": 420
		},
		{
			"icon": {
				"paths": [
					"M644 691.429q0-18.286-17.143-29.143-110.286-65.714-255.429-65.714-76 0-164 19.429-24 5.143-24 29.714 0 11.429 7.714 19.714t20.286 8.286q2.857 0 21.143-4.571 75.429-15.429 138.857-15.429 129.143 0 226.857 58.857 10.857 6.286 18.857 6.286 10.857 0 18.857-7.714t8-19.714zM698.857 568.571q0-22.857-20-34.857-135.429-80.571-313.143-80.571-87.429 0-173.143 24-27.429 7.429-27.429 36.571 0 14.286 10 24.286t24.286 10q4 0 21.143-4.571 69.714-18.857 143.429-18.857 159.429 0 278.857 70.857 13.714 7.429 21.714 7.429 14.286 0 24.286-10t10-24.286zM760.571 426.857q0-26.857-22.857-40-72-41.714-167.429-63.143t-196-21.429q-116.571 0-208 26.857-13.143 4-22 14.571t-8.857 27.714q0 17.714 11.714 29.714t29.429 12q6.286 0 22.857-4.571 76-21.143 175.429-21.143 90.857 0 176.857 19.429t144.857 54.286q12 6.857 22.857 6.857 16.571 0 28.857-11.714t12.286-29.429zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"spotify"
				],
				"defaultCode": 61884,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 403,
				"order": 404,
				"prevSize": 28,
				"code": 61884,
				"name": "spotify"
			},
			"setIdx": 0,
			"iconIdx": 421
		},
		{
			"icon": {
				"paths": [
					"M798.286 73.143q33.143 0 56.286 23.143t23.143 56.286v718.857q0 33.143-23.143 56.286t-56.286 23.143h-718.857q-33.143 0-56.286-23.143t-23.143-56.286v-718.857q0-33.143 23.143-56.286t56.286-23.143h718.857zM837.143 871.429v-718.857q0-16-11.429-27.429t-27.429-11.429h-718.857q-16 0-27.429 11.429t-11.429 27.429v718.857q0 16 11.429 27.429t27.429 11.429h718.857q16 0 27.429-11.429t11.429-27.429zM396.571 449.714l107.429 221.143 304.571-82.857v283.429q0 4-3.143 7.143t-7.143 3.143h-718.857q-4 0-7.143-3.143t-3.143-7.143v-80.571l406.286-111.429-121.143-250.857q2.286-0.571 6.857-1.429t6.857-0.857q97.143-18.286 173.429-12.286t126.286 26.286 82 54q15.429 16-14.286 24-36.571 9.143-146.286 35.429l-55.429-113.143q-63.429-4-137.143 9.143zM798.286 142.286q4 0 7.143 3.143t3.143 7.143v244.571q-48.571-17.143-107.429-29.714-168-36.571-368.571-6.857l-10.286 1.714-37.143-76.571h-133.143l48.571 108.571q-75.429 29.143-131.429 78.286v-320q0-4 3.143-7.143t7.143-3.143h718.857zM163.429 656.571q-8 1.714-14.857-2.571t-8-12.286q-13.714-116 94.857-174.286l73.714 154.286z"
				],
				"attrs": [],
				"tags": [
					"deviantart"
				],
				"defaultCode": 61885,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 404,
				"order": 405,
				"prevSize": 28,
				"code": 61885,
				"name": "deviantart"
			},
			"setIdx": 0,
			"iconIdx": 422
		},
		{
			"icon": {
				"width": 1317,
				"paths": [
					"M448 784l9.143-137.714-9.143-298.857q-0.571-5.714-4.286-9.714t-9.429-4q-5.143 0-9.143 4t-4 9.714l-8 298.857 8 137.714q0.571 5.714 4.286 9.429t8.857 3.714q12.571 0 13.714-13.143zM617.143 767.429l6.286-120.571-6.857-334.857q0-9.143-7.429-13.714-4.571-2.857-9.143-2.857t-9.143 2.857q-7.429 4.571-7.429 13.714l-0.571 3.429-5.714 330.857q0 0.571 6.286 134.857v0.571q0 5.714 3.429 9.714 5.143 6.286 13.143 6.286 6.286 0 11.429-5.143 5.143-4 5.143-11.429zM20 573.143l11.429 73.143-11.429 72q-1.143 5.143-5.143 5.143t-5.143-5.143l-9.714-72 9.714-73.143q1.143-5.143 5.143-5.143t5.143 5.143zM69.143 528l14.857 118.286-14.857 116q-1.143 5.143-5.714 5.143-5.143 0-5.143-5.714l-13.143-115.429 13.143-118.286q0-5.143 5.143-5.143 4.571 0 5.714 5.143zM121.714 506.286l14.286 140-14.286 135.429q0 6.286-6.286 6.286-5.714 0-6.857-6.286l-12-135.429 12-140q1.143-6.857 6.857-6.857 6.286 0 6.286 6.857zM175.429 502.286l13.143 144-13.143 139.429q-1.143 7.429-8 7.429-7.429 0-7.429-7.429l-12-139.429 12-144q0-7.429 7.429-7.429 6.857 0 8 7.429zM229.143 512.571l12 133.714-12 140.571q-1.143 9.143-9.143 9.143-3.429 0-6-2.571t-2.571-6.571l-11.429-140.571 11.429-133.714q0-3.429 2.571-6t6-2.571q8 0 9.143 8.571zM282.857 429.143l12 217.143-12 140.571q0 4-2.857 7.143t-6.857 3.143q-9.143 0-10.286-10.286l-10.286-140.571 10.286-217.143q1.143-10.286 10.286-10.286 4 0 6.857 3.143t2.857 7.143zM336.571 380l10.857 267.429-10.857 139.429q0 4.571-3.143 7.714t-7.714 3.143q-10.286 0-11.429-10.857l-9.143-139.429 9.143-267.429q1.143-10.857 11.429-10.857 4.571 0 7.714 3.143t3.143 7.714zM392.571 357.143l10.286 289.143-10.286 138.286q-1.143 12-12.571 12-10.857 0-12-12l-9.143-138.286 9.143-289.143q0-5.143 3.714-8.857t8.286-3.714q5.143 0 8.571 3.714t4 8.857zM616.571 781.143v0 0zM503.429 354.857l8.571 291.429-8.571 136.571q0 5.714-4.286 10t-10 4.286-9.714-4-4.571-10.286l-8-136.571 8-291.429q0-6.286 4.286-10.286t10-4 10 4 4.286 10.286zM560 365.714l8 281.143-8 134.857q0 6.286-4.571 10.857t-10.857 4.571-10.857-4.571-5.143-10.857l-6.857-134.857 6.857-281.143q0.571-6.857 5.143-11.429t10.857-4.571 10.571 4.571 4.857 11.429zM681.143 646.857l-8 132q0 7.429-5.143 12.571t-12.571 5.143-12.571-5.143-5.714-12.571l-3.429-65.143-3.429-66.857 6.857-363.429v-1.714q1.143-8.571 6.857-13.714 5.143-4 11.429-4 4.571 0 8.571 2.857 8 4.571 9.143 14.857zM1316.571 636q0 66.857-47.429 114t-114.286 47.143h-449.143q-7.429-1.143-12.571-6.286t-5.143-12.571v-513.714q0-13.143 16-18.857 48.571-19.429 103.429-19.429 111.429 0 193.143 75.143t91.429 184.857q30.286-12.571 62.857-12.571 66.857 0 114.286 47.429t47.429 114.857z"
				],
				"attrs": [],
				"tags": [
					"soundcloud"
				],
				"defaultCode": 61886,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 405,
				"order": 406,
				"prevSize": 28,
				"code": 61886,
				"name": "soundcloud"
			},
			"setIdx": 0,
			"iconIdx": 423
		},
		{
			"icon": {
				"paths": [
					"M438.857 438.857q135.429 0 253.143-24.571t185.714-72.571v97.143q0 39.429-58.857 73.143t-160 53.429-220 19.714-220-19.714-160-53.429-58.857-73.143v-97.143q68 48 185.714 72.571t253.143 24.571zM438.857 877.714q135.429 0 253.143-24.571t185.714-72.571v97.143q0 39.429-58.857 73.143t-160 53.429-220 19.714-220-19.714-160-53.429-58.857-73.143v-97.143q68 48 185.714 72.571t253.143 24.571zM438.857 658.286q135.429 0 253.143-24.571t185.714-72.571v97.143q0 39.429-58.857 73.143t-160 53.429-220 19.714-220-19.714-160-53.429-58.857-73.143v-97.143q68 48 185.714 72.571t253.143 24.571zM438.857 0q118.857 0 220 19.714t160 53.429 58.857 73.143v73.143q0 39.429-58.857 73.143t-160 53.429-220 19.714-220-19.714-160-53.429-58.857-73.143v-73.143q0-39.429 58.857-73.143t160-53.429 220-19.714z"
				],
				"attrs": [],
				"tags": [
					"database"
				],
				"defaultCode": 61888,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 406,
				"order": 407,
				"prevSize": 28,
				"code": 61888,
				"name": "database"
			},
			"setIdx": 0,
			"iconIdx": 424
		},
		{
			"icon": {
				"paths": [
					"M838.857 217.143q16 16 27.429 43.429t11.429 50.286v658.286q0 22.857-16 38.857t-38.857 16h-768q-22.857 0-38.857-16t-16-38.857v-914.286q0-22.857 16-38.857t38.857-16h512q22.857 0 50.286 11.429t43.429 27.429zM585.143 77.714v214.857h214.857q-5.714-16.571-12.571-23.429l-178.857-178.857q-6.857-6.857-23.429-12.571zM804.571 950.857v-585.143h-237.714q-22.857 0-38.857-16t-16-38.857v-237.714h-438.857v877.714h731.429zM510.857 612q18.857 14.857 48 32 33.714-4 66.857-4 84 0 101.143 28 9.143 12.571 1.143 29.714 0 0.571-0.571 1.143l-1.143 1.143v0.571q-3.429 21.714-40.571 21.714-27.429 0-65.714-11.429t-74.286-30.286q-126.286 13.714-224 47.429-87.429 149.714-138.286 149.714-8.571 0-16-4l-13.714-6.857q-0.571-0.571-3.429-2.857-5.714-5.714-3.429-20.571 5.143-22.857 32-52.286t75.429-55.143q8-5.143 13.143 3.429 1.143 1.143 1.143 2.286 29.714-48.571 61.143-112.571 38.857-77.714 59.429-149.714-13.714-46.857-17.429-91.143t3.714-72.857q6.286-22.857 24-22.857h12.571q13.143 0 20 8.571 10.286 12 5.143 38.857-1.143 3.429-2.286 4.571 0.571 1.714 0.571 4.571v17.143q-1.143 70.286-8 109.714 31.429 93.714 83.429 136zM181.714 846.857q29.714-13.714 78.286-90.286-29.143 22.857-50 48t-28.286 42.286zM409.143 321.143q-8.571 24-1.143 75.429 0.571-4 4-25.143 0-1.714 4-24.571 0.571-2.286 2.286-4.571-0.571-0.571-0.571-1.143t-0.286-0.857-0.286-0.857q-0.571-12.571-7.429-20.571 0 0.571-0.571 1.143v1.143zM338.286 698.857q77.143-30.857 162.286-46.286-1.143-0.571-7.429-5.429t-9.143-7.714q-43.429-38.286-72.571-100.571-15.429 49.143-47.429 112.571-17.143 32-25.714 47.429zM707.429 689.714q-13.714-13.714-80-13.714 43.429 16 70.857 16 8 0 10.286-0.571 0-0.571-1.143-1.714z"
				],
				"attrs": [],
				"tags": [
					"file-pdf-o"
				],
				"defaultCode": 61889,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 407,
				"order": 408,
				"prevSize": 28,
				"code": 61889,
				"name": "file-pdf-o"
			},
			"setIdx": 0,
			"iconIdx": 425
		},
		{
			"icon": {
				"paths": [
					"M838.857 217.143q16 16 27.429 43.429t11.429 50.286v658.286q0 22.857-16 38.857t-38.857 16h-768q-22.857 0-38.857-16t-16-38.857v-914.286q0-22.857 16-38.857t38.857-16h512q22.857 0 50.286 11.429t43.429 27.429zM585.143 77.714v214.857h214.857q-5.714-16.571-12.571-23.429l-178.857-178.857q-6.857-6.857-23.429-12.571zM804.571 950.857v-585.143h-237.714q-22.857 0-38.857-16t-16-38.857v-237.714h-438.857v877.714h731.429zM133.143 438.857v61.143h40l93.714 377.714h90.857l73.143-277.143q4-11.429 5.714-26.286 1.143-9.143 1.143-13.714h2.286l1.714 13.714q0.571 1.714 2 11.429t3.143 14.857l73.143 277.143h90.857l93.714-377.714h40v-61.143h-171.429v61.143h51.429l-56.571 250.286q-2.857 11.429-4 26.286l-1.143 12h-2.286l-1.714-12q-0.571-2.857-2.286-12t-2.857-14.286l-82.286-311.429h-65.143l-82.286 311.429q-1.143 5.143-2.571 14t-2 12.286l-2.286 12h-2.286l-1.143-12q-1.143-14.857-4-26.286l-56.571-250.286h51.429v-61.143h-171.429z"
				],
				"attrs": [],
				"tags": [
					"file-word-o"
				],
				"defaultCode": 61890,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 408,
				"order": 409,
				"prevSize": 28,
				"code": 61890,
				"name": "file-word-o"
			},
			"setIdx": 0,
			"iconIdx": 426
		},
		{
			"icon": {
				"paths": [
					"M838.857 217.143q16 16 27.429 43.429t11.429 50.286v658.286q0 22.857-16 38.857t-38.857 16h-768q-22.857 0-38.857-16t-16-38.857v-914.286q0-22.857 16-38.857t38.857-16h512q22.857 0 50.286 11.429t43.429 27.429zM585.143 77.714v214.857h214.857q-5.714-16.571-12.571-23.429l-178.857-178.857q-6.857-6.857-23.429-12.571zM804.571 950.857v-585.143h-237.714q-22.857 0-38.857-16t-16-38.857v-237.714h-438.857v877.714h731.429zM245.143 817.143v60.571h160.571v-60.571h-42.857l58.857-92q2.857-4 5.714-9.429t4.286-7.714 2-2.286h1.143q0.571 2.286 2.857 5.714 1.143 2.286 2.571 4.286t3.429 4.571 3.714 4.857l61.143 92h-43.429v60.571h166.286v-60.571h-38.857l-109.714-156 111.429-161.143h38.286v-61.143h-159.429v61.143h42.286l-58.857 90.857q-2.286 4-5.714 9.429t-5.143 7.714l-1.143 1.714h-1.143q-0.571-2.286-2.857-5.714-3.429-6.286-9.714-13.143l-60.571-90.857h43.429v-61.143h-165.714v61.143h38.857l108 155.429-110.857 161.714h-38.857z"
				],
				"attrs": [],
				"tags": [
					"file-excel-o"
				],
				"defaultCode": 61891,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 409,
				"order": 410,
				"prevSize": 28,
				"code": 61891,
				"name": "file-excel-o"
			},
			"setIdx": 0,
			"iconIdx": 427
		},
		{
			"icon": {
				"paths": [
					"M838.857 217.143q16 16 27.429 43.429t11.429 50.286v658.286q0 22.857-16 38.857t-38.857 16h-768q-22.857 0-38.857-16t-16-38.857v-914.286q0-22.857 16-38.857t38.857-16h512q22.857 0 50.286 11.429t43.429 27.429zM585.143 77.714v214.857h214.857q-5.714-16.571-12.571-23.429l-178.857-178.857q-6.857-6.857-23.429-12.571zM804.571 950.857v-585.143h-237.714q-22.857 0-38.857-16t-16-38.857v-237.714h-438.857v877.714h731.429zM237.714 817.143v60.571h186.857v-60.571h-53.143v-95.429h78.286q43.429 0 67.429-8.571 38.286-13.143 60.857-49.714t22.571-83.429q0-46.286-21.143-80.571t-57.143-49.714q-27.429-10.857-74.286-10.857h-210.286v61.143h52.571v317.143h-52.571zM439.429 657.143h-68v-153.143h68.571q29.714 0 47.429 10.286 32 18.857 32 65.714 0 50.857-35.429 68.571-17.714 8.571-44.571 8.571z"
				],
				"attrs": [],
				"tags": [
					"file-powerpoint-o"
				],
				"defaultCode": 61892,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 410,
				"order": 411,
				"prevSize": 28,
				"code": 61892,
				"name": "file-powerpoint-o"
			},
			"setIdx": 0,
			"iconIdx": 428
		},
		{
			"icon": {
				"paths": [
					"M838.857 217.143q16 16 27.429 43.429t11.429 50.286v658.286q0 22.857-16 38.857t-38.857 16h-768q-22.857 0-38.857-16t-16-38.857v-914.286q0-22.857 16-38.857t38.857-16h512q22.857 0 50.286 11.429t43.429 27.429zM585.143 77.714v214.857h214.857q-5.714-16.571-12.571-23.429l-178.857-178.857q-6.857-6.857-23.429-12.571zM804.571 950.857v-585.143h-237.714q-22.857 0-38.857-16t-16-38.857v-237.714h-438.857v877.714h731.429zM731.429 694.857v182.857h-585.143v-109.714l109.714-109.714 73.143 73.143 219.429-219.429zM256 585.143q-45.714 0-77.714-32t-32-77.714 32-77.714 77.714-32 77.714 32 32 77.714-32 77.714-77.714 32z"
				],
				"attrs": [],
				"tags": [
					"file-image-o",
					"file-photo-o",
					"file-picture-o"
				],
				"defaultCode": 61893,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 411,
				"order": 412,
				"prevSize": 28,
				"code": 61893,
				"name": "file-image-o"
			},
			"setIdx": 0,
			"iconIdx": 429
		},
		{
			"icon": {
				"paths": [
					"M365.714 219.429v-73.143h-73.143v73.143h73.143zM438.857 292.571v-73.143h-73.143v73.143h73.143zM365.714 365.714v-73.143h-73.143v73.143h73.143zM438.857 438.857v-73.143h-73.143v73.143h73.143zM838.857 217.143q16 16 27.429 43.429t11.429 50.286v658.286q0 22.857-16 38.857t-38.857 16h-768q-22.857 0-38.857-16t-16-38.857v-914.286q0-22.857 16-38.857t38.857-16h512q22.857 0 50.286 11.429t43.429 27.429zM585.143 77.714v214.857h214.857q-5.714-16.571-12.571-23.429l-178.857-178.857q-6.857-6.857-23.429-12.571zM804.571 950.857v-585.143h-237.714q-22.857 0-38.857-16t-16-38.857v-237.714h-73.143v73.143h-73.143v-73.143h-292.571v877.714h731.429zM446.286 538.857l61.143 199.429q4.571 15.429 4.571 29.714 0 47.429-41.429 78.571t-104.857 31.143-104.857-31.143-41.429-78.571q0-14.286 4.571-29.714 12-36 68.571-226.286v-73.143h73.143v73.143h45.143q12.571 0 22.286 7.429t13.143 19.429zM365.714 804.571q30.286 0 51.714-10.857t21.429-25.714-21.429-25.714-51.714-10.857-51.714 10.857-21.429 25.714 21.429 25.714 51.714 10.857z"
				],
				"attrs": [],
				"tags": [
					"file-archive-o",
					"file-zip-o"
				],
				"defaultCode": 61894,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 412,
				"order": 413,
				"prevSize": 28,
				"code": 61894,
				"name": "file-archive-o"
			},
			"setIdx": 0,
			"iconIdx": 430
		},
		{
			"icon": {
				"paths": [
					"M838.857 217.143q16 16 27.429 43.429t11.429 50.286v658.286q0 22.857-16 38.857t-38.857 16h-768q-22.857 0-38.857-16t-16-38.857v-914.286q0-22.857 16-38.857t38.857-16h512q22.857 0 50.286 11.429t43.429 27.429zM585.143 77.714v214.857h214.857q-5.714-16.571-12.571-23.429l-178.857-178.857q-6.857-6.857-23.429-12.571zM804.571 950.857v-585.143h-237.714q-22.857 0-38.857-16t-16-38.857v-237.714h-438.857v877.714h731.429zM354.286 485.714q11.429 4.571 11.429 17.143v310.857q0 12.571-11.429 17.143-4.571 1.143-6.857 1.143-6.857 0-13.143-5.143l-94.857-95.429h-74.857q-8 0-13.143-5.143t-5.143-13.143v-109.714q0-8 5.143-13.143t13.143-5.143h74.857l94.857-95.429q9.143-8.571 20-4zM592.571 879.429q17.714 0 28.571-13.714 73.714-90.857 73.714-207.429t-73.714-207.429q-9.143-12-24.571-13.714t-26.857 8q-12 9.714-13.429 24.857t8.286 27.143q57.143 70.286 57.143 161.143t-57.143 161.143q-9.714 12-8.286 27.143t13.429 24.286q10.286 8.571 22.857 8.571zM472 794.857q15.429 0 26.857-11.429 49.714-53.143 49.714-125.143t-49.714-125.143q-10.286-10.857-25.714-11.429t-26.286 9.714-11.429 25.429 10.286 26.571q29.714 32.571 29.714 74.857t-29.714 74.857q-10.857 11.429-10.286 26.571t11.429 25.429q11.429 9.714 25.143 9.714z"
				],
				"attrs": [],
				"tags": [
					"file-audio-o",
					"file-sound-o"
				],
				"defaultCode": 61895,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 413,
				"order": 414,
				"prevSize": 28,
				"code": 61895,
				"name": "file-audio-o"
			},
			"setIdx": 0,
			"iconIdx": 431
		},
		{
			"icon": {
				"paths": [
					"M838.857 217.143q16 16 27.429 43.429t11.429 50.286v658.286q0 22.857-16 38.857t-38.857 16h-768q-22.857 0-38.857-16t-16-38.857v-914.286q0-22.857 16-38.857t38.857-16h512q22.857 0 50.286 11.429t43.429 27.429zM585.143 77.714v214.857h214.857q-5.714-16.571-12.571-23.429l-178.857-178.857q-6.857-6.857-23.429-12.571zM804.571 950.857v-585.143h-237.714q-22.857 0-38.857-16t-16-38.857v-237.714h-438.857v877.714h731.429zM438.857 438.857q29.714 0 51.429 21.714t21.714 51.429v219.429q0 29.714-21.714 51.429t-51.429 21.714h-219.429q-29.714 0-51.429-21.714t-21.714-51.429v-219.429q0-29.714 21.714-51.429t51.429-21.714h219.429zM720 440q11.429 4.571 11.429 17.143v329.143q0 12.571-11.429 17.143-4.571 1.143-6.857 1.143-8 0-13.143-5.143l-151.429-152v-51.429l151.429-152q5.143-5.143 13.143-5.143 2.286 0 6.857 1.143z"
				],
				"attrs": [],
				"tags": [
					"file-movie-o",
					"file-video-o"
				],
				"defaultCode": 61896,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 414,
				"order": 415,
				"prevSize": 28,
				"code": 61896,
				"name": "file-movie-o"
			},
			"setIdx": 0,
			"iconIdx": 432
		},
		{
			"icon": {
				"paths": [
					"M838.857 217.143q16 16 27.429 43.429t11.429 50.286v658.286q0 22.857-16 38.857t-38.857 16h-768q-22.857 0-38.857-16t-16-38.857v-914.286q0-22.857 16-38.857t38.857-16h512q22.857 0 50.286 11.429t43.429 27.429zM585.143 77.714v214.857h214.857q-5.714-16.571-12.571-23.429l-178.857-178.857q-6.857-6.857-23.429-12.571zM804.571 950.857v-585.143h-237.714q-22.857 0-38.857-16t-16-38.857v-237.714h-438.857v877.714h731.429zM274.286 438.857q4.571-6.286 12-7.143t13.714 3.714l29.143 21.714q6.286 4.571 7.143 12t-3.714 13.714l-104 138.857 104 138.857q4.571 6.286 3.714 13.714t-7.143 12l-29.143 21.714q-6.286 4.571-13.714 3.714t-12-7.143l-129.143-172q-8-10.857 0-21.714zM732.571 610.857q8 10.857 0 21.714l-129.143 172q-4.571 6.286-12 7.143t-13.714-3.714l-29.143-21.714q-6.286-4.571-7.143-12t3.714-13.714l104-138.857-104-138.857q-4.571-6.286-3.714-13.714t7.143-12l29.143-21.714q6.286-4.571 13.714-3.714t12 7.143zM378.286 874.286q-7.429-1.143-11.714-7.429t-3.143-13.714l78.857-474.857q1.143-7.429 7.429-11.714t13.714-3.143l36 5.714q7.429 1.143 11.714 7.429t3.143 13.714l-78.857 474.857q-1.143 7.429-7.429 11.714t-13.714 3.143z"
				],
				"attrs": [],
				"tags": [
					"file-code-o"
				],
				"defaultCode": 61897,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 415,
				"order": 416,
				"prevSize": 28,
				"code": 61897,
				"name": "file-code-o"
			},
			"setIdx": 0,
			"iconIdx": 433
		},
		{
			"icon": {
				"paths": [
					"M855.429 472.571v113.143q-57.714 13.143-113.143 13.143-37.143 77.714-94.571 154.857t-103.714 123.143-73.143 60.857q-45.714 25.714-92.571-1.714-16-9.714-34.571-24.857t-48.571-47.714-58.571-73.429-61.429-105.143-60.286-139.429-52.286-179.714-40.286-222.857h161.714q14.857 124.571 40 227.714t59.714 181.143 69.429 134.571 80 111.429q96.571-96.571 164-232-81.143-41.143-127.429-125.714t-46.286-190.286q0-109.714 59.429-179.714t162.286-70q101.714 0 156 60.286t54.286 170q0 90.857-33.143 163.429-4 0.571-11.143 1.714t-26.286 1.143-36-3.429-35.429-14.571-28.857-29.429q17.714-58.857 17.714-105.143 0-49.714-16.571-75.429t-45.143-25.714q-30.286 0-48.571 28.286t-18.286 80.286q0 106.286 60 167.714t152.571 61.429q35.429 0 69.143-8z"
				],
				"attrs": [],
				"tags": [
					"vine"
				],
				"defaultCode": 61898,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 416,
				"order": 417,
				"prevSize": 28,
				"code": 61898,
				"name": "vine"
			},
			"setIdx": 0,
			"iconIdx": 434
		},
		{
			"icon": {
				"paths": [
					"M123.429 668l344.571 229.714v-205.143l-190.857-127.429zM88 585.714l110.286-73.714-110.286-73.714v147.429zM556 897.714l344.571-229.714-153.714-102.857-190.857 127.429v205.143zM512 616l155.429-104-155.429-104-155.429 104zM277.143 458.857l190.857-127.429v-205.143l-344.571 229.714zM825.714 512l110.286 73.714v-147.429zM746.857 458.857l153.714-102.857-344.571-229.714v205.143zM1024 356v312q0 23.429-19.429 36.571l-468 312q-12 7.429-24.571 7.429t-24.571-7.429l-468-312q-19.429-13.143-19.429-36.571v-312q0-23.429 19.429-36.571l468-312q12-7.429 24.571-7.429t24.571 7.429l468 312q19.429 13.143 19.429 36.571z"
				],
				"attrs": [],
				"tags": [
					"codepen"
				],
				"defaultCode": 61899,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 417,
				"order": 418,
				"prevSize": 28,
				"code": 61899,
				"name": "codepen"
			},
			"setIdx": 0,
			"iconIdx": 435
		},
		{
			"icon": {
				"width": 1170,
				"paths": [
					"M1028.571 441.143q63.429 26.286 102.571 83.143t39.143 126.571q0 93.714-67.429 160.286t-162.857 66.571q-2.286 0-6.571-0.286t-6-0.286h-695.429q-97.143-5.714-164.571-71.714t-67.429-160.286q0-62.857 31.429-116t84-84q-6.857-22.286-6.857-46.857 0-65.714 46.857-112t113.714-46.286q54.286 0 98.286 33.143 42.857-88 127.143-141.714t186.571-53.714q94.857 0 174.857 46t126.571 124.857 46.571 172q0 3.429-0.286 10.286t-0.286 10.286zM267.429 593.143q0 69.714 48 110.286t118.857 40.571q78.286 0 137.143-56.571-9.143-11.429-27.143-32.286t-24.857-28.857q-38.286 37.143-82.286 37.143-31.429 0-53.429-19.143t-22-50q0-30.286 22-49.714t52.286-19.429q25.143 0 48.286 12t41.714 31.429 37.143 42.857 39.429 46.857 44 42.857 55.429 31.429 69.429 12q69.143 0 116.857-40.857t47.714-108.857q0-69.143-48-109.714t-118.286-40.571q-81.714 0-137.714 55.429 8 9.143 16.857 19.429t19.714 22.857 16.571 19.429q37.714-36.571 81.143-36.571 29.714 0 52.571 18.857t22.857 48q0 32.571-21.143 52.286t-53.714 19.714q-24.571 0-47.143-12t-41.143-31.429-37.429-42.857-39.714-46.857-44.286-42.857-55.143-31.429-67.714-12q-69.714 0-118.286 40.286t-48.571 108.286z"
				],
				"attrs": [],
				"tags": [
					"jsfiddle"
				],
				"defaultCode": 61900,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 418,
				"order": 419,
				"prevSize": 28,
				"code": 61900,
				"name": "jsfiddle"
			},
			"setIdx": 0,
			"iconIdx": 436
		},
		{
			"icon": {
				"paths": [
					"M512 0q104 0 198.857 40.571t163.429 109.143 109.143 163.429 40.571 198.857-40.571 198.857-109.143 163.429-163.429 109.143-198.857 40.571-198.857-40.571-163.429-109.143-109.143-163.429-40.571-198.857 40.571-198.857 109.143-163.429 163.429-109.143 198.857-40.571zM512 73.143q-108.571 0-206.286 51.429l110.857 110.857q46.857-16 95.429-16t95.429 16l110.857-110.857q-97.714-51.429-206.286-51.429zM124.571 718.286l110.857-110.857q-16-46.857-16-95.429t16-95.429l-110.857-110.857q-51.429 97.714-51.429 206.286t51.429 206.286zM512 950.857q108.571 0 206.286-51.429l-110.857-110.857q-46.857 16-95.429 16t-95.429-16l-110.857 110.857q97.714 51.429 206.286 51.429zM512 731.429q90.857 0 155.143-64.286t64.286-155.143-64.286-155.143-155.143-64.286-155.143 64.286-64.286 155.143 64.286 155.143 155.143 64.286zM788.571 607.429l110.857 110.857q51.429-97.714 51.429-206.286t-51.429-206.286l-110.857 110.857q16 46.857 16 95.429t-16 95.429z"
				],
				"attrs": [],
				"tags": [
					"life-bouy",
					"life-buoy",
					"life-ring",
					"life-saver",
					"support"
				],
				"defaultCode": 61901,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 419,
				"order": 420,
				"prevSize": 28,
				"code": 61901,
				"name": "life-bouy"
			},
			"setIdx": 0,
			"iconIdx": 437
		},
		{
			"icon": {
				"paths": [
					"M1024 512q0 104-40.571 198.857t-109.143 163.429-163.429 109.143-198.857 40.571-198.857-40.571-163.429-109.143-109.143-163.429-40.571-198.857q0-126.857 57.714-236.857t158-181.143 223.143-88.857v148.571q-126.286 25.714-209.429 126.286t-83.143 232q0 74.286 29.143 142t78 116.571 116.571 78 142 29.143 142-29.143 116.571-78 78-116.571 29.143-142q0-131.429-83.143-232t-209.429-126.286v-148.571q122.857 17.714 223.143 88.857t158 181.143 57.714 236.857z"
				],
				"attrs": [],
				"tags": [
					"circle-o-notch"
				],
				"defaultCode": 61902,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 420,
				"order": 421,
				"prevSize": 28,
				"code": 61902,
				"name": "circle-o-notch"
			},
			"setIdx": 0,
			"iconIdx": 438
		},
		{
			"icon": {
				"paths": [
					"M10.857 499.429q4.571-124 66.286-232t174.286-181.714h2.857q0 0.571-0.571 1.714-4.571 4.571-16 19.143t-29.714 43.714-34.286 63.143-25.429 77.429-8 86 22.286 90 62 88q28.571 28.571 58.286 39.714t51.714 6.571 39.714-13.429 26.857-18.571l9.143-9.143q22.286-29.143 30.286-66.571t3.714-70-12-61.143-15.143-45.714l-8-16.571q-5.714-14.286-17.429-28.286t-24.571-23.429-24.857-16.857-20-10.857l-7.429-3.429 59.429-65.714q22.286 9.714 44.571 29.714t33.714 34.857l10.857 15.429q0.571-27.429-10.571-59.143t-23.143-50l-11.429-17.714 92-104.571 91.429 103.429q-18.857 26.286-30 58.571t-12.857 51.714l-2.286 18.857q12.571-21.143 35.143-41.429t38.571-30l16-9.714 58.857 65.714q-25.143 8-48.571 28.571t-34.286 37.143l-10.857 16.571q-17.714 32-27.429 76.286t-4 97.143 32.571 89.429q18.857 25.714 44.286 34.571t48.571 3.143 43.429-15.143 32.857-19.143l12-9.143q34.286-30.286 55.143-65.714t27.714-69.429 5.714-69.429-10.286-67.429-21.143-61.429-26-53.143-25.714-41.143-19.714-27.143l-7.429-9.714q-8-7.429-4-7.429l5.714 1.714q22.857 16.571 35.714 26.286t35.429 28.571 36.571 33.143 33.429 37.143 31.714 44 26 50.286 21.714 58.857 13.429 66.857 6 77.714q1.714 148-61.714 265.714t-178.286 183.429-260.571 65.714q-105.714 0-200.571-42.286t-162-113.143-105.143-167.429-34.571-201.714z"
				],
				"attrs": [],
				"tags": [
					"ra",
					"rebel"
				],
				"defaultCode": 61904,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 421,
				"order": 422,
				"prevSize": 28,
				"code": 61904,
				"name": "ra"
			},
			"setIdx": 0,
			"iconIdx": 439
		},
		{
			"icon": {
				"paths": [
					"M499.429 936v37.714q-118.857-3.429-220-62.571t-161.714-157.429l33.143-19.429q16.571 28 41.714 56.571l37.143-32.571q84.571 96 210.286 121.143l-9.714 49.143q37.143 6.857 69.143 7.429zM157.714 633.143l-47.429 16q12.571 34.286 28 64l-32.571 18.857q-56-102.857-56-220t56-220l32.571 18.857q-17.143 32-28 64l46.857 16q-20 57.143-20 121.143 0 62.286 20.571 121.143zM873.143 734.286l33.143 19.429q-60.571 98.286-161.714 157.429t-220 62.571v-37.714q32-0.571 69.143-7.429l-9.714-49.143q125.714-25.143 210.286-121.143l37.143 32.571q25.143-28.571 41.714-56.571zM786.857 417.714l-133.143 45.714q8 24 8 48.571t-8 48.571l132.571 45.714q-17.714 52.571-56 96.571l-105.714-92.571q-32.571 38.286-84 48.571l27.429 137.714q-29.714 5.714-56 5.714t-56-5.714l27.429-137.714q-51.429-10.286-84-48.571l-105.714 92.571q-38.286-44-56-96.571l132.571-45.714q-8-24-8-48.571t8-48.571l-133.143-45.714q18.857-53.143 56.571-96.571l105.714 92.571q33.714-38.857 84-49.143l-27.429-137.143q25.143-5.714 56-5.714t56 5.714l-27.429 137.143q50.286 10.286 84 49.143l105.714-92.571q37.714 43.429 56.571 96.571zM499.429 50.286v37.714q-37.143 1.143-69.143 7.429l9.714 49.143q-125.714 24-210.286 120.571l-37.143-32q-21.714 24-41.714 56l-32.571-18.857q60.571-98.286 161.143-157.429t220-62.571zM974.286 512q0 117.143-56 220l-32.571-18.857q15.429-29.714 28-64l-47.429-16q20.571-58.857 20.571-121.143 0-64-20-121.143l46.857-16q-10.857-32-28-64l32.571-18.857q56 102.857 56 220zM905.714 270.286l-32.571 18.857q-20-32-41.714-56l-37.143 32q-84.571-96.571-210.286-120.571l9.714-49.143q-32-6.286-69.143-7.429v-37.714q119.429 3.429 220 62.571t161.143 157.429zM998.857 512q0-98.857-38.571-189.143t-103.714-155.429-155.429-103.714-189.143-38.571-189.143 38.571-155.429 103.714-103.714 155.429-38.571 189.143 38.571 189.143 103.714 155.429 155.429 103.714 189.143 38.571 189.143-38.571 155.429-103.714 103.714-155.429 38.571-189.143zM1024 512q0 104-40.571 198.857t-109.143 163.429-163.429 109.143-198.857 40.571-198.857-40.571-163.429-109.143-109.143-163.429-40.571-198.857 40.571-198.857 109.143-163.429 163.429-109.143 198.857-40.571 198.857 40.571 163.429 109.143 109.143 163.429 40.571 198.857z"
				],
				"attrs": [],
				"tags": [
					"empire",
					"ge"
				],
				"defaultCode": 61905,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 422,
				"order": 423,
				"prevSize": 28,
				"code": 61905,
				"name": "empire"
			},
			"setIdx": 0,
			"iconIdx": 440
		},
		{
			"icon": {
				"paths": [
					"M332.571 747.429q0 37.714-53.143 37.714-61.143 0-61.143-36 0-36.571 56-36.571 58.286 0 58.286 34.857zM312 481.143q0 48.571-42.286 48.571-44 0-44-48 0-51.429 44-51.429 20.571 0 31.429 14.571t10.857 36.286zM406.857 438.286v-71.429q-44.571 16.571-77.143 16.571-28.571-16.571-62.857-16.571-49.143 0-82.857 32.571t-33.714 81.714q0 28.571 16.857 58.286t42 38.286v1.714q-21.714 9.714-21.714 48.571 0 30.286 23.429 44v1.714q-64.571 21.143-64.571 79.429 0 25.714 11.429 44.857t30.857 29.143 41.143 14.571 46.286 4.571q128 0 128-107.429 0-38.286-27.429-56.571t-72-26.286q-15.429-2.857-29.429-11.714t-14-22.571q0-25.143 28-29.714 44-8.571 69.714-40t25.714-76.571q0-13.714-5.714-29.714 21.143-5.143 28-7.429zM440.571 677.714h78.286q-1.143-15.429-1.143-46.857v-221.143q0-26.286 1.143-39.429h-78.286q1.714 13.143 1.714 40.571v224q0 28.571-1.714 42.857zM731.429 668.571v-69.143q-17.143 12-38.857 12-30.286 0-30.286-46.857v-128.571h29.714q5.143 0 15.143 0.571t15.143 0.571v-66.857h-60q0-46.857 1.714-58.286h-80q2.286 13.714 2.286 31.429v26.857h-34.286v66.857q20.571-1.714 21.143-1.714 1.714 0 6.286 0.286t6.857 0.286v1.143h-1.143v124q0 21.143 1.429 36.571t6.571 32.286 14 27.714 24.857 17.714 37.714 6.857q36.571 0 61.714-13.714zM528 265.143q0-20.571-13.714-36.286t-34.286-15.714-34.571 15.429-14 36.571q0 20.571 14.286 35.714t34.286 15.143 34-15.429 14-35.429zM877.714 237.714v548.571q0 68-48.286 116.286t-116.286 48.286h-548.571q-68 0-116.286-48.286t-48.286-116.286v-548.571q0-68 48.286-116.286t116.286-48.286h548.571q68 0 116.286 48.286t48.286 116.286z"
				],
				"attrs": [],
				"tags": [
					"git-square"
				],
				"defaultCode": 61906,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 423,
				"order": 424,
				"prevSize": 28,
				"code": 61906,
				"name": "git-square"
			},
			"setIdx": 0,
			"iconIdx": 441
		},
		{
			"icon": {
				"paths": [
					"M340 865.143q0-57.143-94.286-57.143-90.286 0-90.286 59.429 0 57.714 98.286 57.714 86.286 0 86.286-60zM306.286 433.714q0-34.857-17.143-58.286t-50.857-23.429q-70.857 0-70.857 82.857 0 77.143 70.857 77.143 68 0 68-78.286zM460 248.571v115.429q-20.571 6.857-45.143 12.571 9.143 24.571 9.143 48 0 72.571-41.714 123.714t-112.571 64.286q-22.857 4.571-34 15.429t-11.143 33.143q0 17.714 12.857 29.429t33.143 18.286 44.857 12.571 49.143 14.571 44.857 21.429 33.143 36.571 12.857 56.286q0 173.714-207.429 173.714-39.429 0-74.286-7.143t-66.286-23.429-50-46.857-18.571-72.857q0-94.286 104-128.571v-2.286q-38.286-23.429-38.286-72 0-62.286 36-78.286v-2.286q-41.143-13.714-68.286-62t-27.143-94.571q0-79.429 54.286-132.286t134.286-52.857q54.857 0 101.714 26.857 56 0 124.571-26.857zM641.714 752h-126.857q2.286-25.714 2.286-76.571v-348q0-53.714-2.286-73.143h126.857q-2.286 18.857-2.286 70.857v350.286q0 50.857 2.286 76.571zM985.143 625.143v112q-40.571 22.286-99.429 22.286-35.429 0-61.143-11.429t-40-28.571-22.571-44.571-10.571-52.571-2.286-58.857v-200.571h1.143v-2.286q-4 0-10.857-0.571t-10.286-0.571q-12 0-33.714 3.429v-108.571h54.857v-43.429q0-30.857-3.429-50.857h129.714q-3.429 23.429-3.429 94.286h97.714v108.571q-8.571 0-24.857-1.143t-24.286-1.143h-48.571v208.571q0 74.857 49.714 74.857 34.857 0 62.286-18.857zM656 84q0 33.143-22.286 58t-54.857 24.857q-33.143 0-56-24.857t-22.857-58q0-33.714 22.571-58.857t56.286-25.143q33.143 0 55.143 25.429t22 58.571z"
				],
				"attrs": [],
				"tags": [
					"git"
				],
				"defaultCode": 61907,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 424,
				"order": 425,
				"prevSize": 28,
				"code": 61907,
				"name": "git"
			},
			"setIdx": 0,
			"iconIdx": 442
		},
		{
			"icon": {
				"paths": [
					"M471.429 565.143l196-336h-85.714q-12 22.286-36.286 67.714t-38.857 73.429-34 67.714-34.286 73.429h-1.714q-12-27.429-25.429-55.429t-29.714-60.286-26.571-52.571-30.857-59.714-28-54.286h-85.714l184.571 336.571v248.571h76.571v-249.143zM877.714 237.714v548.571q0 68-48.286 116.286t-116.286 48.286h-548.571q-68 0-116.286-48.286t-48.286-116.286v-548.571q0-68 48.286-116.286t116.286-48.286h548.571q68 0 116.286 48.286t48.286 116.286z"
				],
				"attrs": [],
				"tags": [
					"hacker-news"
				],
				"defaultCode": 61908,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 425,
				"order": 426,
				"prevSize": 28,
				"code": 61908,
				"name": "hacker-news"
			},
			"setIdx": 0,
			"iconIdx": 443
		},
		{
			"icon": {
				"width": 731,
				"paths": [
					"M481.143 326.857q0 45.714-32.571 78t-77.714 32.286q-34.286 0-63.429-20-35.429 38.286-65.714 83.429-141.143 212-115.429 490.857 0.571 12.571-7.143 22t-19.714 10.571h-2.857q-11.429 0-20-7.714t-9.714-19.143q-8-72-2-141.429t16.857-124 30.857-106.286 39.429-88.857 42.286-71.429q34.857-51.429 75.429-94.286-9.143-20-9.143-44 0-45.714 32.286-78t78-32.286 78 32.286 32.286 78zM698.857 333.143q0 90.286-44.571 166.857t-121.429 121.143-167.143 44.571q-36.571 0-74.857-8-12-2.857-18.571-13.429t-3.714-22.571q2.857-11.429 13.143-18t22.286-4.286q29.143 7.429 61.714 7.429 55.429 0 106.286-21.714t87.429-58.286 58.286-87.429 21.714-106.286-21.714-106.286-58.286-87.429-87.429-58.286-106.286-21.714-106.286 21.714-87.429 58.286-58.286 87.429-21.714 106.286q0 65.143 29.714 124.571 5.714 11.429 2 22.857t-14.571 17.143-22.571 1.714-17.429-14.857q-36.571-70.286-36.571-151.429 0-68 26.571-129.714t71.143-106.286 106.286-70.857 129.143-26.286q90.286 0 167.143 44.571t121.429 121.429 44.571 167.143z"
				],
				"attrs": [],
				"tags": [
					"tencent-weibo"
				],
				"defaultCode": 61909,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 426,
				"order": 427,
				"prevSize": 28,
				"code": 61909,
				"name": "tencent-weibo"
			},
			"setIdx": 0,
			"iconIdx": 444
		},
		{
			"icon": {
				"paths": [
					"M154.286 460.571q-4.571-10.857-4.571-29.714 0-11.429 6.286-28t13.714-25.714q-0.571-12.571 4.286-30.286t12.857-24.571q0-79.429 52.857-164.857t124.286-119.714q79.429-37.714 185.143-37.714 76 0 152 31.429 28 12 51.429 27.429t40.571 32 31.429 38.857 24 42.286 18.571 48.286 14.571 51.143 12.571 56l0.571 2.857q31.429 47.429 31.429 85.714 0 8-5.143 22.857t-5.143 21.714q0 0.571 0.857 2t2 2.857 1.143 2q44 65.143 68.857 122.571t24.857 119.143q0 24.571-11.143 57.143t-31.714 32.571q-5.143 0-11.143-4.286t-10.857-10-10.857-14.857-9.143-15.143-7.714-14.857-5.143-10q-0.571-0.571-1.714-0.571l-2.857 2.286q-33.714 88-75.429 127.429 11.429 11.429 35.143 22t39.429 23.714 20.286 37.143q-1.143 2.286-2.286 9.143t-4 10.286q-36.571 55.429-172.571 55.429-30.286 0-63.143-5.143t-56-11.429-59.714-17.143q-8.571-2.857-13.143-4-8-2.286-26.286-2.571t-22.857-0.857q-23.429 25.714-72.857 37.143t-96.286 11.429q-20 0-39.429-0.857t-53.143-5.143-57.714-11.714-42.571-22.857-18.571-36.571q0-22.857 5.714-34t23.429-27.714q6.286-1.143 23.143-7.429t28.286-6.857q2.286 0 8-1.143 1.143-1.143 1.143-2.286l-1.143-1.714q-27.429-6.286-61.714-60.286t-41.714-89.429l-2.857-1.714q-2.286 0-6.857 11.429-10.286 23.429-31.143 42.571t-44.286 21.429h-0.571q-2.286 0-3.429-2.571t-2.857-3.143q-13.143-30.857-13.143-57.143 0-157.143 144-266.286z"
				],
				"attrs": [],
				"tags": [
					"qq"
				],
				"defaultCode": 61910,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 427,
				"order": 428,
				"prevSize": 28,
				"code": 61910,
				"name": "qq"
			},
			"setIdx": 0,
			"iconIdx": 445
		},
		{
			"icon": {
				"width": 1170,
				"paths": [
					"M331.429 263.429q0-23.429-14.286-37.714t-37.714-14.286q-24.571 0-43.429 14.571t-18.857 37.429q0 22.286 18.857 36.857t43.429 14.571q23.429 0 37.714-14t14.286-37.429zM756 553.143q0-16-14.571-28.571t-37.429-12.571q-15.429 0-28.286 12.857t-12.857 28.286q0 16 12.857 28.857t28.286 12.857q22.857 0 37.429-12.571t14.571-29.143zM621.143 263.429q0-23.429-14-37.714t-37.429-14.286q-24.571 0-43.429 14.571t-18.857 37.429q0 22.286 18.857 36.857t43.429 14.571q23.429 0 37.429-14t14-37.429zM984 553.143q0-16-14.857-28.571t-37.143-12.571q-15.429 0-28.286 12.857t-12.857 28.286q0 16 12.857 28.857t28.286 12.857q22.286 0 37.143-12.571t14.857-29.143zM832 326.286q-17.714-2.286-40-2.286-96.571 0-177.714 44t-127.714 119.143-46.571 164.286q0 44.571 13.143 86.857-20 1.714-38.857 1.714-14.857 0-28.571-0.857t-31.429-3.714-25.429-4-31.143-6-28.571-6l-144.571 72.571 41.143-124.571q-165.714-116-165.714-280 0-96.571 55.714-177.714t150.857-127.714 207.714-46.571q100.571 0 190 37.714t149.714 104.286 78 148.857zM1170.286 646.857q0 66.857-39.143 127.714t-106 110.571l31.429 103.429-113.714-62.286q-85.714 21.143-124.571 21.143-96.571 0-177.714-40.286t-127.714-109.429-46.571-150.857 46.571-150.857 127.714-109.429 177.714-40.286q92 0 173.143 40.286t130 109.714 48.857 150.571z"
				],
				"attrs": [],
				"tags": [
					"wechat",
					"weixin"
				],
				"defaultCode": 61911,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 428,
				"order": 429,
				"prevSize": 28,
				"code": 61911,
				"name": "wechat"
			},
			"setIdx": 0,
			"iconIdx": 446
		},
		{
			"icon": {
				"paths": [
					"M1008 6.286q18.857 13.714 15.429 36.571l-146.286 877.714q-2.857 16.571-18.286 25.714-8 4.571-17.714 4.571-6.286 0-13.714-2.857l-258.857-105.714-138.286 168.571q-10.286 13.143-28 13.143-7.429 0-12.571-2.286-10.857-4-17.429-13.429t-6.571-20.857v-199.429l493.714-605.143-610.857 528.571-225.714-92.571q-21.143-8-22.857-31.429-1.143-22.857 18.286-33.714l950.857-548.571q8.571-5.143 18.286-5.143 11.429 0 20.571 6.286z"
				],
				"attrs": [],
				"tags": [
					"paper-plane",
					"send"
				],
				"defaultCode": 61912,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 429,
				"order": 430,
				"prevSize": 28,
				"code": 61912,
				"name": "paper-plane"
			},
			"setIdx": 0,
			"iconIdx": 447
		},
		{
			"icon": {
				"paths": [
					"M1008 6.286q18.857 13.714 15.429 36.571l-146.286 877.714q-2.857 16.571-18.286 25.714-8 4.571-17.714 4.571-6.286 0-13.714-2.857l-301.143-122.857-170.286 186.857q-10.286 12-26.857 12-8 0-13.143-2.286-10.857-4-17.143-13.429t-6.286-20.857v-258.286l-269.714-110.286q-21.143-8-22.857-31.429-1.714-22.286 18.286-33.714l950.857-548.571q20-12 38.857 1.143zM812.571 862.857l126.286-756-819.429 472.571 192 78.286 493.143-365.143-273.143 455.429z"
				],
				"attrs": [],
				"tags": [
					"paper-plane-o",
					"send-o"
				],
				"defaultCode": 61913,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 430,
				"order": 431,
				"prevSize": 28,
				"code": 61913,
				"name": "paper-plane-o"
			},
			"setIdx": 0,
			"iconIdx": 448
		},
		{
			"icon": {
				"paths": [
					"M877.714 512q0 89.143-34.857 170.286t-93.714 140-140 93.714-170.286 34.857q-98.286 0-186.857-41.429t-150.857-116.857q-4-5.714-3.714-12.857t4.857-11.714l78.286-78.857q5.714-5.143 14.286-5.143 9.143 1.143 13.143 6.857 41.714 54.286 102.286 84t128.571 29.714q59.429 0 113.429-23.143t93.429-62.571 62.571-93.429 23.143-113.429-23.143-113.429-62.571-93.429-93.429-62.571-113.429-23.143q-56 0-107.429 20.286t-91.429 58l78.286 78.857q17.714 17.143 8 39.429-9.714 22.857-33.714 22.857h-256q-14.857 0-25.714-10.857t-10.857-25.714v-256q0-24 22.857-33.714 22.286-9.714 39.429 8l74.286 73.714q61.143-57.714 139.714-89.429t162.571-31.714q89.143 0 170.286 34.857t140 93.714 93.714 140 34.857 170.286zM512 347.429v256q0 8-5.143 13.143t-13.143 5.143h-182.857q-8 0-13.143-5.143t-5.143-13.143v-36.571q0-8 5.143-13.143t13.143-5.143h128v-201.143q0-8 5.143-13.143t13.143-5.143h36.571q8 0 13.143 5.143t5.143 13.143z"
				],
				"attrs": [],
				"tags": [
					"history"
				],
				"defaultCode": 61914,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 431,
				"order": 432,
				"prevSize": 28,
				"code": 61914,
				"name": "history"
			},
			"setIdx": 0,
			"iconIdx": 449
		},
		{
			"icon": {
				"paths": [
					"M438.857 146.286q-74.286 0-142 29.143t-116.571 78-78 116.571-29.143 142 29.143 142 78 116.571 116.571 78 142 29.143 142-29.143 116.571-78 78-116.571 29.143-142-29.143-142-78-116.571-116.571-78-142-29.143zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"circle-thin"
				],
				"defaultCode": 61915,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 432,
				"order": 433,
				"prevSize": 28,
				"code": 61915,
				"name": "circle-thin"
			},
			"setIdx": 0,
			"iconIdx": 450
		},
		{
			"icon": {
				"paths": [
					"M961.143 950.857q-25.143 0-75.714-2t-76.286-2q-25.143 0-75.429 2t-75.429 2q-13.714 0-21.143-11.714t-7.429-26q0-17.714 9.714-26.286t22.286-9.714 29.143-4 25.714-8.571q18.857-12 18.857-80l-0.571-223.429q0-12-0.571-17.714-7.429-2.286-28.571-2.286h-385.714q-21.714 0-29.143 2.286-0.571 5.714-0.571 17.714l-0.571 212q0 81.143 21.143 93.714 9.143 5.714 27.429 7.429t32.571 2 25.714 8.571 11.429 26q0 14.857-7.143 27.429t-20.857 12.571q-26.857 0-79.714-2t-79.143-2q-24.571 0-73.143 2t-72.571 2q-13.143 0-20.286-12t-7.143-25.714q0-17.143 8.857-25.714t20.571-10 27.143-4.286 24-8.571q18.857-13.143 18.857-81.714l-0.571-32.571v-464.571q0-1.714 0.286-14.857t0-20.857-0.857-22-2-24-3.714-20.857-6.286-18-9.143-10.286q-8.571-5.714-25.714-6.857t-30.286-1.143-23.429-8-10.286-25.714q0-14.857 6.857-27.429t20.571-12.571q26.286 0 79.143 2t79.143 2q24 0 72.286-2t72.286-2q14.286 0 21.429 12.571t7.143 27.429q0 17.143-9.714 24.857t-22 8.286-28.286 2.286-24.571 7.429q-20 12-20 91.429l0.571 182.857q0 12 0.571 18.286 7.429 1.714 22.286 1.714h399.429q14.286 0 21.714-1.714 0.571-6.286 0.571-18.286l0.571-182.857q0-79.429-20-91.429-10.286-6.286-33.429-7.143t-37.714-7.429-14.571-28.286q0-14.857 7.143-27.429t21.429-12.571q25.143 0 75.429 2t75.429 2q24.571 0 73.714-2t73.714-2q14.286 0 21.429 12.571t7.143 27.429q0 17.143-10 25.143t-22.857 8.286-29.429 1.714-25.143 7.143q-20 13.143-20 92l0.571 538.857q0 68 19.429 80 9.143 5.714 26.286 7.714t30.571 2.571 23.714 8.857 10.286 25.429q0 14.857-6.857 27.429t-20.571 12.571z"
				],
				"attrs": [],
				"tags": [
					"header"
				],
				"defaultCode": 61916,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 433,
				"order": 434,
				"prevSize": 28,
				"code": 61916,
				"name": "header"
			},
			"setIdx": 0,
			"iconIdx": 451
		},
		{
			"icon": {
				"width": 731,
				"paths": [
					"M730.286 108v41.714q0 16.571-10.571 34.857t-24.286 18.286q-28.571 0-30.857 0.571-14.857 3.429-18.286 17.714-1.714 6.286-1.714 36.571v658.286q0 14.286-10.286 24.571t-24.571 10.286h-61.714q-14.286 0-24.571-10.286t-10.286-24.571v-696h-81.714v696q0 14.286-10 24.571t-24.857 10.286h-61.714q-14.857 0-24.857-10.286t-10-24.571v-283.429q-84-6.857-140-33.714-72-33.143-109.714-102.286-36.571-66.857-36.571-148 0-94.857 50.286-163.429 50.286-67.429 119.429-90.857 63.429-21.143 238.286-21.143h273.714q14.286 0 24.571 10.286t10.286 24.571z"
				],
				"attrs": [],
				"tags": [
					"paragraph"
				],
				"defaultCode": 61917,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 434,
				"order": 435,
				"prevSize": 28,
				"code": 61917,
				"name": "paragraph"
			},
			"setIdx": 0,
			"iconIdx": 452
		},
		{
			"icon": {
				"paths": [
					"M201.143 804.571v73.143h-201.143v-73.143h201.143zM402.286 731.429q14.857 0 25.714 10.857t10.857 25.714v146.286q0 14.857-10.857 25.714t-25.714 10.857h-146.286q-14.857 0-25.714-10.857t-10.857-25.714v-146.286q0-14.857 10.857-25.714t25.714-10.857h146.286zM493.714 512v73.143h-493.714v-73.143h493.714zM128 219.429v73.143h-128v-73.143h128zM877.714 804.571v73.143h-420.571v-73.143h420.571zM329.143 146.286q14.857 0 25.714 10.857t10.857 25.714v146.286q0 14.857-10.857 25.714t-25.714 10.857h-146.286q-14.857 0-25.714-10.857t-10.857-25.714v-146.286q0-14.857 10.857-25.714t25.714-10.857h146.286zM694.857 438.857q14.857 0 25.714 10.857t10.857 25.714v146.286q0 14.857-10.857 25.714t-25.714 10.857h-146.286q-14.857 0-25.714-10.857t-10.857-25.714v-146.286q0-14.857 10.857-25.714t25.714-10.857h146.286zM877.714 512v73.143h-128v-73.143h128zM877.714 219.429v73.143h-493.714v-73.143h493.714z"
				],
				"attrs": [],
				"tags": [
					"sliders"
				],
				"defaultCode": 61918,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 435,
				"order": 436,
				"prevSize": 28,
				"code": 61918,
				"name": "sliders"
			},
			"setIdx": 0,
			"iconIdx": 453
		},
		{
			"icon": {
				"paths": [
					"M694.857 585.143q76 0 129.429 53.429t53.429 129.429-53.429 129.429-129.429 53.429-129.429-53.429-53.429-129.429q0-6.857 1.143-19.429l-205.714-102.857q-52.571 49.143-124.571 49.143-76 0-129.429-53.429t-53.429-129.429 53.429-129.429 129.429-53.429q72 0 124.571 49.143l205.714-102.857q-1.143-12.571-1.143-19.429 0-76 53.429-129.429t129.429-53.429 129.429 53.429 53.429 129.429-53.429 129.429-129.429 53.429q-72 0-124.571-49.143l-205.714 102.857q1.143 12.571 1.143 19.429t-1.143 19.429l205.714 102.857q52.571-49.143 124.571-49.143z"
				],
				"attrs": [],
				"tags": [
					"share-alt"
				],
				"defaultCode": 61920,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 436,
				"order": 437,
				"prevSize": 28,
				"code": 61920,
				"name": "share-alt"
			},
			"setIdx": 0,
			"iconIdx": 454
		},
		{
			"icon": {
				"paths": [
					"M731.429 682.857q0-50.286-35.714-86.286t-86-36q-48 0-82.857 33.143l-137.714-68.571q1.143-9.143 1.143-13.143t-1.143-13.143l137.714-68.571q34.857 33.143 82.857 33.143 50.286 0 86-36t35.714-86.286-35.714-86-86-35.714-86.286 35.714-36 86q0 4 1.143 13.143l-137.714 68.571q-35.429-32.571-82.857-32.571-50.286 0-86 35.714t-35.714 86 35.714 86 86 35.714q47.429 0 82.857-32.571l137.714 68.571q-1.143 9.143-1.143 13.143 0 50.286 36 86t86.286 35.714 86-35.714 35.714-86zM877.714 237.714v548.571q0 68-48.286 116.286t-116.286 48.286h-548.571q-68 0-116.286-48.286t-48.286-116.286v-548.571q0-68 48.286-116.286t116.286-48.286h548.571q68 0 116.286 48.286t48.286 116.286z"
				],
				"attrs": [],
				"tags": [
					"share-alt-square"
				],
				"defaultCode": 61921,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 437,
				"order": 438,
				"prevSize": 28,
				"code": 61921,
				"name": "share-alt-square"
			},
			"setIdx": 0,
			"iconIdx": 455
		},
		{
			"icon": {
				"paths": [
					"M326.286 336.571q-5.714-14.286-19.429-20t-28 0q-61.714 25.143-109.143 72.571t-72.571 109.143q-5.714 14.286 0 28t20 19.429q7.429 2.857 13.714 2.857 24 0 34.286-22.857 19.429-48 56.286-84.857t84.857-56.286q14.286-6.286 20-20t0-28zM864.571 133.143l26.286 26.286-139.429 138.857 38.857 38.857q10.857 10.857 10.857 26t-10.857 26l-36.571 36.571q50.857 92 50.857 196 0 81.714-31.714 156.286t-85.714 128.571-128.571 85.714-156.286 31.714-156.286-31.714-128.571-85.714-85.714-128.571-31.714-156.286 31.714-156.286 85.714-128.571 128.571-85.714 156.286-31.714q104 0 196 50.857l36.571-36.571q10.857-10.857 26-10.857t26 10.857l38.857 38.857zM869.143 101.143q-5.714 5.714-12.571 5.714-7.429 0-13.143-5.714l-52-51.429q-5.143-5.714-5.143-13.143t5.143-13.143q5.714-5.143 13.143-5.143t13.143 5.143l51.429 52q5.714 5.143 5.714 12.857t-5.714 12.857zM1000.571 232.571q-6.286 5.143-13.143 5.143t-13.143-5.143l-51.429-52q-5.714-5.143-5.714-12.857t5.714-12.857q5.143-5.714 12.857-5.714t12.857 5.714l52 51.429q5.143 5.714 5.143 13.143t-5.143 13.143zM1024 128q0 8-5.143 13.143t-13.143 5.143h-54.857q-8 0-13.143-5.143t-5.143-13.143 5.143-13.143 13.143-5.143h54.857q8 0 13.143 5.143t5.143 13.143zM914.286 18.286v54.857q0 8-5.143 13.143t-13.143 5.143-13.143-5.143-5.143-13.143v-54.857q0-8 5.143-13.143t13.143-5.143 13.143 5.143 5.143 13.143zM1000.571 49.714l-52 51.429q-5.714 5.714-12.571 5.714-7.429 0-13.143-5.714-5.714-5.143-5.714-12.857t5.714-12.857l51.429-52q5.714-5.143 13.143-5.143t13.143 5.143q5.143 5.714 5.143 13.143t-5.143 13.143z"
				],
				"attrs": [],
				"tags": [
					"bomb"
				],
				"defaultCode": 61922,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 438,
				"order": 439,
				"prevSize": 28,
				"code": 61922,
				"name": "bomb"
			},
			"setIdx": 0,
			"iconIdx": 456
		},
		{
			"icon": {
				"paths": [
					"M348 466.286l164-118.857 164 118.857-62.286 192h-202.857zM512 0q104 0 198.857 40.571t163.429 109.143 109.143 163.429 40.571 198.857-40.571 198.857-109.143 163.429-163.429 109.143-198.857 40.571-198.857-40.571-163.429-109.143-109.143-163.429-40.571-198.857 40.571-198.857 109.143-163.429 163.429-109.143 198.857-40.571zM865.714 771.429q85.143-116 85.143-259.429v-1.714l-58.286 50.857-137.143-128 36-184.571 76.571 6.857q-85.714-117.714-222.286-161.143l30.286 70.857-164 90.857-164-90.857 30.286-70.857q-136.571 43.429-222.286 161.143l77.143-6.857 35.429 184.571-137.143 128-58.286-50.857v1.714q0 143.429 85.143 259.429l17.143-75.429 186.286 22.857 79.429 170.286-66.286 39.429q66.857 22.286 137.143 22.286t137.143-22.286l-66.286-39.429 79.429-170.286 186.286-22.857z"
				],
				"attrs": [],
				"tags": [
					"futbol-o",
					"soccer-ball-o"
				],
				"defaultCode": 61923,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 439,
				"order": 440,
				"prevSize": 28,
				"code": 61923,
				"name": "futbol-o"
			},
			"setIdx": 0,
			"iconIdx": 457
		},
		{
			"icon": {
				"paths": [
					"M256 749.714v109.714q0 8-5.143 13.143t-13.143 5.143h-109.714q-8 0-13.143-5.143t-5.143-13.143v-109.714q0-8 5.143-13.143t13.143-5.143h109.714q8 0 13.143 5.143t5.143 13.143zM146.286 530.286v109.714q0 8-5.143 13.143t-13.143 5.143h-109.714q-8 0-13.143-5.143t-5.143-13.143v-109.714q0-8 5.143-13.143t13.143-5.143h109.714q8 0 13.143 5.143t5.143 13.143zM475.429 749.714v109.714q0 8-5.143 13.143t-13.143 5.143h-109.714q-8 0-13.143-5.143t-5.143-13.143v-109.714q0-8 5.143-13.143t13.143-5.143h109.714q8 0 13.143 5.143t5.143 13.143zM365.714 530.286v109.714q0 8-5.143 13.143t-13.143 5.143h-109.714q-8 0-13.143-5.143t-5.143-13.143v-109.714q0-8 5.143-13.143t13.143-5.143h109.714q8 0 13.143 5.143t5.143 13.143zM37.714 438.857q-16 0-26.857-10.857t-10.857-26.286v-73.714h293.714v73.714q0 15.429-10.857 26.286t-26.286 10.857h-218.857zM694.857 749.714v109.714q0 8-5.143 13.143t-13.143 5.143h-109.714q-8 0-13.143-5.143t-5.143-13.143v-109.714q0-8 5.143-13.143t13.143-5.143h109.714q8 0 13.143 5.143t5.143 13.143zM585.143 530.286v109.714q0 8-5.143 13.143t-13.143 5.143h-109.714q-8 0-13.143-5.143t-5.143-13.143v-109.714q0-8 5.143-13.143t13.143-5.143h109.714q8 0 13.143 5.143t5.143 13.143zM914.286 749.714v109.714q0 8-5.143 13.143t-13.143 5.143h-109.714q-8 0-13.143-5.143t-5.143-13.143v-109.714q0-8 5.143-13.143t13.143-5.143h109.714q8 0 13.143 5.143t5.143 13.143zM804.571 530.286v109.714q0 8-5.143 13.143t-13.143 5.143h-109.714q-8 0-13.143-5.143t-5.143-13.143v-109.714q0-8 5.143-13.143t13.143-5.143h109.714q8 0 13.143 5.143t5.143 13.143zM1024 297.143v7.429h-293.714v-5.714q0-59.429-218.286-58.286-218.286 0.571-218.286 58.286v5.714h-293.714v-7.429q0-9.714 4.857-24.571t19.429-36.571 37.429-43.143 63.143-43.429 91.429-38.571 128-27.143 167.714-10.571 167.429 10.571 128 27.143 91.714 38.571 63.143 43.429 37.429 43.143 19.429 36.571 4.857 24.571zM1024 530.286v109.714q0 8-5.143 13.143t-13.143 5.143h-109.714q-8 0-13.143-5.143t-5.143-13.143v-109.714q0-8 5.143-13.143t13.143-5.143h109.714q8 0 13.143 5.143t5.143 13.143zM1024 328v73.714q0 15.429-10.857 26.286t-26.286 10.857h-219.429q-15.429 0-26.286-10.857t-10.857-26.286v-73.714h293.714z"
				],
				"attrs": [],
				"tags": [
					"tty"
				],
				"defaultCode": 61924,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 440,
				"order": 441,
				"prevSize": 28,
				"code": 61924,
				"name": "tty"
			},
			"setIdx": 0,
			"iconIdx": 458
		},
		{
			"icon": {
				"paths": [
					"M402.286 182.857v438.857q0 14.857-10.857 25.714t-25.714 10.857v329.143q0 14.857-10.857 25.714t-25.714 10.857h-292.571q-14.857 0-25.714-10.857t-10.857-25.714v-292.571l142.286-498.857q4-13.143 17.714-13.143h242.286zM585.143 182.857v402.286h-146.286v-402.286h146.286zM1024 694.857v292.571q0 14.857-10.857 25.714t-25.714 10.857h-292.571q-14.857 0-25.714-10.857t-10.857-25.714v-329.143q-14.857 0-25.714-10.857t-10.857-25.714v-438.857h242.286q13.714 0 17.714 13.143zM420.571 18.286v128h-201.143v-128q0-8 5.143-13.143t13.143-5.143h164.571q8 0 13.143 5.143t5.143 13.143zM804.571 18.286v128h-201.143v-128q0-8 5.143-13.143t13.143-5.143h164.571q8 0 13.143 5.143t5.143 13.143z"
				],
				"attrs": [],
				"tags": [
					"binoculars"
				],
				"defaultCode": 61925,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 441,
				"order": 442,
				"prevSize": 28,
				"code": 61925,
				"name": "binoculars"
			},
			"setIdx": 0,
			"iconIdx": 459
		},
		{
			"icon": {
				"paths": [
					"M1002.857 258.857q21.143 21.143 21.143 51.429t-21.143 52l-229.143 228.571 85.714 85.714-91.429 91.429q-93.143 93.143-222.571 106.571t-235.143-57.429l-206.857 206.857h-103.429v-103.429l206.857-206.857q-70.857-105.714-57.429-235.143t106.571-222.571l91.429-91.429 85.714 85.714 228.571-229.143q21.714-21.143 52-21.143t51.429 21.143 21.143 51.714-21.143 51.714l-228.571 229.143 133.714 133.714 229.143-228.571q21.714-21.143 52-21.143t51.429 21.143z"
				],
				"attrs": [],
				"tags": [
					"plug"
				],
				"defaultCode": 61926,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 442,
				"order": 443,
				"prevSize": 28,
				"code": 61926,
				"name": "plug"
			},
			"setIdx": 0,
			"iconIdx": 460
		},
		{
			"icon": {
				"paths": [
					"M498.857 422.857q0 47.429-36.286 81.429t-87.143 34-87.143-34-36.286-81.429q0-48 36.286-81.714t87.143-33.714 87.143 33.714 36.286 81.714zM785.714 422.857q0 47.429-36 81.429t-87.429 34q-50.857 0-87.143-34t-36.286-81.429q0-48 36.286-81.714t87.143-33.714q51.429 0 87.429 33.714t36 81.714zM914.286 525.714v-381.143q0-49.714-18.286-70.571t-63.429-20.857h-635.429q-47.429 0-64.286 19.429t-16.857 72v384.571q24.571 13.143 50.571 22.857t46.286 16 46.286 10.571 40.571 6.286 40 2.286 33.429 0.286 32.286-1.143 25.429-1.143q38.857-0.571 54.286 15.429 3.429 3.429 5.714 5.143 14.857 14.286 34.857 29.143 4-52 67.429-49.714 2.857 0 20.857 0.857t24.571 1.143 26 0.571 30.286-0.571 31.143-2.571 34.857-4.857 35.429-7.714 38.286-11.143 38.571-15.429 41.143-19.714zM1007.429 522.857q-69.143 85.143-212.571 144 48 162.857-13.143 265.714-37.714 64.571-104.571 84.571-59.429 18.286-104-8.571-49.143-29.143-46.857-93.714l-0.571-186.286v-0.571q-4.571-1.143-14-3.429t-13.429-2.857l-0.571 193.143q2.286 65.143-47.429 93.714-45.143 26.857-104.571 8.571-66.857-20.571-104-85.714-60-102.857-12.571-264.571-143.429-58.857-212.571-144-14.286-21.143-2.286-36t34.286 0.571q1.714 1.143 6.286 4t6.286 4.571v-396.571q0-41.143 26.857-70.286t65.143-29.143h718.286q38.286 0 65.143 29.143t26.857 70.286v396.571l12-8.571q22.286-15.429 34.286-0.571t-2.286 36z"
				],
				"attrs": [],
				"tags": [
					"slideshare"
				],
				"defaultCode": 61927,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 443,
				"order": 444,
				"prevSize": 28,
				"code": 61927,
				"name": "slideshare"
			},
			"setIdx": 0,
			"iconIdx": 461
		},
		{
			"icon": {
				"paths": [
					"M512 248v248h-82.857v-248h82.857zM739.429 248v248h-82.857v-248h82.857zM739.429 682.286l144.571-145.143v-454.286h-682.286v599.429h186.286v124l124-124h227.429zM966.857 0v578.857l-248 248h-186.286l-124 124h-124v-124h-227.429v-661.714l62.286-165.143h847.429z"
				],
				"attrs": [],
				"tags": [
					"twitch"
				],
				"defaultCode": 61928,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 444,
				"order": 445,
				"prevSize": 28,
				"code": 61928,
				"name": "twitch"
			},
			"setIdx": 0,
			"iconIdx": 462
		},
		{
			"icon": {
				"paths": [
					"M441.714 753.714v72.571q-0.571 166.857-3.429 174.286-6.857 18.286-29.143 22.857-30.857 5.143-103.714-21.714t-92.857-50.857q-7.429-8.571-9.714-20.571-0.571-6.857 2.286-14.857 2.286-5.714 19.429-26.857t103.429-123.429q0.571 0 34.286-40 8.571-10.857 22.571-14t28.286 2q13.714 5.714 21.429 16.571t7.143 24zM356.571 610.286q-1.714 31.429-29.714 40l-68.571 22.286q-157.143 50.286-166.857 50.286-20-1.143-30.857-20.571-6.857-14.286-9.714-42.857-4.571-43.429 0.571-95.143t17.143-71.143 32-18.286q7.429 0 115.429 44 40 16.571 65.714 26.857l48 19.429q13.143 5.143 20.286 17.429t6.571 27.714zM828.571 780q-4 30.857-52.286 92t-77.429 72.571q-21.143 8-36-4-8-5.714-105.143-164l-26.857-44q-8-12-6.571-26.286t11.143-26.286q20-24.571 47.429-14.857 0.571 0.571 68 22.857 116 37.714 138.286 45.429t26.857 11.714q16 12.571 12.571 34.857zM444.571 418.857q2.857 58.286-30.857 69.714-33.143 9.714-65.143-40.571l-216-341.714q-4.571-20 10.857-35.429 23.429-24.571 118.571-51.143t128.286-18q22.857 5.714 28 25.714 1.714 10.286 12.571 174.571t13.714 216.857zM822.857 480.571q1.714 22.286-14.857 33.714-8.571 5.714-188 49.143-38.286 8.571-52 13.143l0.571-1.143q-13.143 3.429-26.286-2.286t-21.143-18.286q-17.143-26.857 0-49.714 0.571-0.571 42.857-58.286 71.429-97.714 85.714-116.571t19.429-22.286q16-10.857 37.143-1.143 27.429 13.143 70.286 76.286t46.286 95.714v1.714z"
				],
				"attrs": [],
				"tags": [
					"yelp"
				],
				"defaultCode": 61929,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 445,
				"order": 446,
				"prevSize": 28,
				"code": 61929,
				"name": "yelp"
			},
			"setIdx": 0,
			"iconIdx": 463
		},
		{
			"icon": {
				"width": 1170,
				"paths": [
					"M585.143 292.571h-219.429v219.429h219.429v-219.429zM658.286 658.286v73.143h-365.714v-73.143h365.714zM658.286 219.429v365.714h-365.714v-365.714h365.714zM1024 658.286v73.143h-292.571v-73.143h292.571zM1024 512v73.143h-292.571v-73.143h292.571zM1024 365.714v73.143h-292.571v-73.143h292.571zM1024 219.429v73.143h-292.571v-73.143h292.571zM146.286 768v-548.571h-73.143v548.571q0 14.857 10.857 25.714t25.714 10.857 25.714-10.857 10.857-25.714zM1097.143 768v-621.714h-877.714v621.714q0 18.857-6.286 36.571h847.429q14.857 0 25.714-10.857t10.857-25.714zM1170.286 73.143v694.857q0 45.714-32 77.714t-77.714 32h-950.857q-45.714 0-77.714-32t-32-77.714v-621.714h146.286v-73.143h1024z"
				],
				"attrs": [],
				"tags": [
					"newspaper-o"
				],
				"defaultCode": 61930,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 446,
				"order": 447,
				"prevSize": 28,
				"code": 61930,
				"name": "newspaper-o"
			},
			"setIdx": 0,
			"iconIdx": 464
		},
		{
			"icon": {
				"width": 1170,
				"paths": [
					"M585.143 870.286q-11.429 0-53.143-42t-41.714-53.429q0-18.286 35.714-30.857t59.143-12.571 59.143 12.571 35.714 30.857q0 11.429-41.714 53.429t-53.143 42zM739.429 715.429q-1.143 0-22.857-14.286t-58-28.571-73.429-14.286-73.429 14.286-57.714 28.571-23.143 14.286q-10.286 0-53.429-42.857t-43.143-53.143q0-7.429 5.714-13.143 44.571-44 112-69.143t133.143-25.143 133.143 25.143 112 69.143q5.714 5.714 5.714 13.143 0 10.286-43.143 53.143t-53.429 42.857zM895.429 560q-6.286 0-13.143-4.571-77.714-60-144-88.286t-153.143-28.286q-48.571 0-97.429 12.571t-85.143 30.286-64.857 35.429-45.143 30.286-17.714 12.571q-9.714 0-52.571-42.857t-42.857-53.143q0-6.857 5.714-12.571 75.429-75.429 182.857-117.143t217.143-41.714 217.143 41.714 182.857 117.143q5.714 5.714 5.714 12.571 0 10.286-42.857 53.143t-52.571 42.857zM1050.286 405.143q-6.286 0-12.571-5.143-102.286-89.714-212.286-135.143t-240.286-45.429-240.286 45.429-212.286 135.143q-6.286 5.143-12.571 5.143-9.714 0-52.857-42.857t-43.143-53.143q0-7.429 5.714-13.143 106.857-106.286 254.286-164.571t301.143-58.286 301.143 58.286 254.286 164.571q5.714 5.714 5.714 13.143 0 10.286-43.143 53.143t-52.857 42.857z"
				],
				"attrs": [],
				"tags": [
					"wifi"
				],
				"defaultCode": 61931,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 447,
				"order": 448,
				"prevSize": 28,
				"code": 61931,
				"name": "wifi"
			},
			"setIdx": 0,
			"iconIdx": 465
		},
		{
			"icon": {
				"paths": [
					"M219.429 877.714q0-30.286-21.429-51.714t-51.714-21.429-51.714 21.429-21.429 51.714 21.429 51.714 51.714 21.429 51.714-21.429 21.429-51.714zM438.857 877.714q0-30.286-21.429-51.714t-51.714-21.429-51.714 21.429-21.429 51.714 21.429 51.714 51.714 21.429 51.714-21.429 21.429-51.714zM219.429 658.286q0-30.286-21.429-51.714t-51.714-21.429-51.714 21.429-21.429 51.714 21.429 51.714 51.714 21.429 51.714-21.429 21.429-51.714zM658.286 877.714q0-30.286-21.429-51.714t-51.714-21.429-51.714 21.429-21.429 51.714 21.429 51.714 51.714 21.429 51.714-21.429 21.429-51.714zM438.857 658.286q0-30.286-21.429-51.714t-51.714-21.429-51.714 21.429-21.429 51.714 21.429 51.714 51.714 21.429 51.714-21.429 21.429-51.714zM219.429 438.857q0-30.286-21.429-51.714t-51.714-21.429-51.714 21.429-21.429 51.714 21.429 51.714 51.714 21.429 51.714-21.429 21.429-51.714zM658.286 658.286q0-30.286-21.429-51.714t-51.714-21.429-51.714 21.429-21.429 51.714 21.429 51.714 51.714 21.429 51.714-21.429 21.429-51.714zM438.857 438.857q0-30.286-21.429-51.714t-51.714-21.429-51.714 21.429-21.429 51.714 21.429 51.714 51.714 21.429 51.714-21.429 21.429-51.714zM877.714 877.714v-219.429q0-29.714-21.714-51.429t-51.429-21.714-51.429 21.714-21.714 51.429v219.429q0 29.714 21.714 51.429t51.429 21.714 51.429-21.714 21.714-51.429zM658.286 438.857q0-30.286-21.429-51.714t-51.714-21.429-51.714 21.429-21.429 51.714 21.429 51.714 51.714 21.429 51.714-21.429 21.429-51.714zM877.714 256v-146.286q0-14.857-10.857-25.714t-25.714-10.857h-731.429q-14.857 0-25.714 10.857t-10.857 25.714v146.286q0 14.857 10.857 25.714t25.714 10.857h731.429q14.857 0 25.714-10.857t10.857-25.714zM877.714 438.857q0-30.286-21.429-51.714t-51.714-21.429-51.714 21.429-21.429 51.714 21.429 51.714 51.714 21.429 51.714-21.429 21.429-51.714zM950.857 73.143v877.714q0 29.714-21.714 51.429t-51.429 21.714h-804.571q-29.714 0-51.429-21.714t-21.714-51.429v-877.714q0-29.714 21.714-51.429t51.429-21.714h804.571q29.714 0 51.429 21.714t21.714 51.429z"
				],
				"attrs": [],
				"tags": [
					"calculator"
				],
				"defaultCode": 61932,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 448,
				"order": 449,
				"prevSize": 28,
				"code": 61932,
				"name": "calculator"
			},
			"setIdx": 0,
			"iconIdx": 466
		},
		{
			"icon": {
				"paths": [
					"M635.429 254.857q0-90.857-135.429-90.857h-40q-18.286 0-34 12.286t-19.714 30l-36 157.714q-1.143 2.857-1.143 9.143 0 13.714 9.714 22.571t23.429 8.857h30.286q39.429 0 73.429-7.429t64.286-23.429 47.714-46.571 17.429-72.286zM980.571 341.714q0 151.429-125.714 244.571-125.143 92-349.714 92h-34.857q-18.286 0-33.714 12.286t-19.429 30l-41.714 180.571q-4.571 20.571-23.143 35.143t-39.714 14.571h-121.714q-17.714 0-30.286-11.429t-12.571-29.143q0-5.714 7.429-37.143h86.286q19.429 0 36.571-13.429t21.714-32.286l41.714-180.571q4.571-18.857 21.429-32.571t36.286-13.714h34.857q222.857 0 346.857-91.429t124-240.571q0-73.714-29.143-118.286 104.571 52.571 104.571 191.429zM876 236q0 150.857-126.286 244.571-124.571 92-349.714 92h-34.286q-18.286 0-34 12.571t-19.714 30.286l-41.714 180q-4.571 20.571-22.857 35.143t-39.429 14.571h-122.286q-17.714 0-30-11.143t-12.286-29.429q0-4.571 1.143-11.429l171.429-743.429q4.571-20.571 23.143-35.143t39.714-14.571h253.714q38.857 0 71.429 2.286t68.857 8.571 64.857 17.143 55.143 28.857 44.286 42.286 28.286 59.143 10.571 77.714z"
				],
				"attrs": [],
				"tags": [
					"paypal"
				],
				"defaultCode": 61933,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 449,
				"order": 450,
				"prevSize": 28,
				"code": 61933,
				"name": "paypal"
			},
			"setIdx": 0,
			"iconIdx": 467
		},
		{
			"icon": {
				"paths": [
					"M344 335.429q10.857 34.857 17.714 70.571t9.714 80.857-8 90.857-35.429 82.857q-12-46.286-38.286-89.714t-54.571-72.571-56.571-51.714-44.857-32.857-18.857-10.857q-35.429-19.429-46.571-57.143t8.286-73.143 57.714-46.571 73.714 8.286q78.857 47.429 136 101.143zM529.714 171.429q6.286 14.286 11.714 26.286t20.857 57.429 24.286 86 14.571 102.571 0 117.429-27.143 119.714-60.286 119.143q-29.143 41.143-78.857 41.143-30.857 0-56-17.714-32.571-22.857-39.429-62.286t16-72.571q34.286-48.571 46.286-111.429t7.429-114-18.286-103.143-22.286-73.143-12.571-29.714q-17.714-36-4.857-74t48.857-55.714q19.429-9.714 42.857-9.714 26.857 0 50.571 14.286t36.286 39.429zM713.143 553.714q-9.714 91.429-41.143 177.714-9.714-74.857-36-140.571 14.286-99.429-2.857-206.286-15.429-101.714-53.714-195.429 65.143 51.429 121.143 120.571 5.143 21.143 8.571 45.714 14.857 102.286 4 198.286zM868.571 54.857q5.143 9.714 13.429 28.286t24.857 67.143 28.857 101.714 19.429 130 2.857 153.714-26.857 171.429-64.286 184.857q-12.571 27.429-37.714 43.143t-54.286 15.714q-22.286 0-42.286-9.143-38.286-17.714-52.857-57.143t2.571-77.714q33.143-72 51.429-147.143t21.429-136.857-2-122-15.143-103.143-22-79.143-18.571-51.429-8.857-18.571q-19.429-37.143-6.571-77.429t50-59.714q21.143-11.429 46.286-11.429 28 0 52.286 14.571t38 40.286z"
				],
				"attrs": [],
				"tags": [
					"google-wallet"
				],
				"defaultCode": 61934,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 450,
				"order": 451,
				"prevSize": 28,
				"code": 61934,
				"name": "google-wallet"
			},
			"setIdx": 0,
			"iconIdx": 468
		},
		{
			"icon": {
				"width": 1317,
				"paths": [
					"M1128.571 565.714h-78.857q8-21.143 37.714-102.286l1.714-5.143q2.286-5.714 5.714-14.857t5.143-14.857l6.857 31.429zM303.429 528.571l-33.143-168.571q-6.286-30.857-42.857-30.857h-153.143l-1.143 7.429q177.714 45.143 230.286 192zM405.714 329.143l-92.571 250.286-9.714-50.857q-14.857-40-48.571-74t-74.857-50.571l77.143 291.429h100l149.143-366.286h-100.571zM485.143 696h94.857l59.429-366.857h-94.857zM924 338.286q-39.429-15.429-85.143-15.429-70.286 0-114.857 33.714t-45.143 87.429q-0.571 58.286 82.857 99.429 27.429 13.143 38.286 23.429t10.857 22.286q0 17.143-17.143 26.286t-39.429 9.143q-49.143 0-89.143-18.857l-12.571-6.286-13.143 82.286q42.286 19.429 105.714 19.429 74.286 0.571 119.143-33.714t46-91.429q0-60.571-80-99.429-28-14.286-40.571-24t-12.571-21.714q0-12.571 14-22t40.286-9.429q40-0.571 70.857 13.714l8.571 4.571zM1166.857 329.143h-73.143q-37.143 0-49.714 30.857l-140.571 336h99.429l20-54.857h121.143q2.857 12.571 11.429 54.857h88zM1316.571 146.286v731.429q0 29.714-21.714 51.429t-51.429 21.714h-1170.286q-29.714 0-51.429-21.714t-21.714-51.429v-731.429q0-29.714 21.714-51.429t51.429-21.714h1170.286q29.714 0 51.429 21.714t21.714 51.429z"
				],
				"attrs": [],
				"tags": [
					"cc-visa"
				],
				"defaultCode": 61936,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 451,
				"order": 452,
				"prevSize": 28,
				"code": 61936,
				"name": "cc-visa"
			},
			"setIdx": 0,
			"iconIdx": 469
		},
		{
			"icon": {
				"width": 1317,
				"paths": [
					"M383.429 533.143h-7.429q-26.857 0-26.857 18.286 0 12.571 11.429 12.571 9.714 0 16-8.571t6.857-22.286zM609.143 512.571h35.429v-1.714q0.571-2.286 0.286-3.714t-0.571-4-1.143-4.571-2.571-3.714-4.286-2.857-6.571-1.143q-16 0-20.571 21.714zM917.714 533.143h-6.857q-27.429 0-27.429 18.286 0 12.571 11.429 12.571 9.714 0 16-8.571t6.857-22.286zM1100 518.286q0-23.429-17.143-23.429-10.857 0-17.714 11.429t-6.857 29.143q0 24 16 24 11.429 0 18.571-11.429t7.143-29.714zM274.286 437.714h49.714l-25.143 149.714h-32l18.286-114.857-40.571 114.857h-22.286l-2.286-114.286-19.429 114.286h-30.286l25.143-149.714h46.286l1.143 93.143zM418.857 498.857q0 3.429-2.286 24-9.143 57.714-9.714 64.571h-26.857l0.571-12.571q-11.429 14.857-33.143 14.857-13.143 0-21.429-9.143t-8.286-24q0-22.286 14.857-34.571t41.714-12.286q8 0 13.143 0.571 0-1.714 0.286-3.143t0.571-2.571 0.286-1.714q0-11.429-20.571-11.429-16.571 0-33.714 5.714 0-2.286 4-27.429 21.714-6.286 38.286-6.286 42.286 0 42.286 35.429zM508 465.714l-4.571 28q-12.571-1.714-23.429-1.714-15.429 0-15.429 9.714 0 4.571 2.571 6.857t12.286 6.286q22.857 10.857 22.857 34.286 0 41.143-49.714 40.571-19.429 0-33.143-3.429 0-1.143 4-28 16.571 4.571 29.143 4.571 18.286 0 18.286-10.857 0-4-2.571-6.571t-12.286-7.143q-24.571-11.429-24.571-33.714 0-41.143 48-41.143 17.143 0 28.571 2.286zM558.286 465.714h16l-4 29.714h-16.571q-1.143 9.714-3.714 23.143t-4 22-1.429 10.286q0 9.143 10.857 9.143 4.571 0 9.143-1.143l-4.571 26.857q-12 4-22.857 4-24.571 0-25.714-26.857 0-6.857 4.571-32 1.714-11.429 14.286-83.429h31.429zM674.286 507.429q0 13.143-4 29.714h-63.429q-1.714 12.571 5.714 18.857t21.714 6.286q17.143 0 33.143-8l-5.143 30.857q-17.143 4.571-32.571 4.571-54.286 0-54.286-54.286 0-31.429 15.714-51.714t39.714-20.286q20 0 31.714 12t11.714 32zM753.714 465.143q-7.429 13.143-12.571 35.429-12.571-1.143-17.714 13.714t-14.286 73.143h-32l1.714-8q12.571-74.286 16.571-113.714h29.143l-1.714 18.857q8-12 14.571-16.857t16.286-2.571zM860.571 441.714l-5.143 32.571q-16-8-28.571-8-17.714 0-29.143 15.714t-11.429 40.286q0 17.143 7.714 26.857t22 9.714q12 0 27.429-7.429l-5.714 33.714q-16 4.571-28.571 4.571-25.714 0-40.857-17.429t-15.143-47.143q0-40 20.286-65.429t52.286-25.429q14.857 0 34.857 7.429zM953.143 498.857q0 10.286-2.286 24-7.429 45.143-9.714 64.571h-26.286l0.571-12.571q-11.429 14.857-33.714 14.857-13.143 0-21.143-9.143t-8-24q0-22.286 14.571-34.571t41.429-12.286q8.571 0 13.143 0.571 1.143-4 1.143-7.429 0-11.429-20.571-11.429-16.571 0-33.714 5.714 0-2.286 4.571-27.429 21.714-6.286 38.286-6.286 41.714 0 41.714 35.429zM1033.714 465.143q-8 13.714-12 35.429-13.143-1.143-18 13.143t-14.571 73.714h-32l1.714-8q10.857-59.429 16.571-113.714h29.714q0 6.286-2.286 18.857 8.571-12 15.143-16.857t15.714-2.571zM1114.286 437.714h32l-24.571 149.714h-30.286l1.714-10.857q-13.143 13.143-29.714 13.143-17.714 0-28.286-13.714t-10.571-36.571q0-30.286 15.714-52.571t36.857-22.286q17.714 0 30.286 16.571zM1177.714 512q0-84.571-41.429-156t-113.143-113.143-156.286-41.714q-103.429 0-187.429 62.857 72.571 66.286 97.714 162.286h-28.571q-25.143-85.714-90.286-144.571-65.143 58.857-90.286 144.571h-28.571q25.143-96 97.714-162.286-84-62.857-187.429-62.857-84.571 0-156.286 41.714t-113.143 113.143-41.429 156 41.429 156 113.143 113.143 156.286 41.714q103.429 0 187.429-62.857-68.571-63.429-94.286-150.857h28.571q26.286 78.857 86.857 133.143 60.571-54.286 86.857-133.143h28.571q-25.714 87.429-94.286 150.857 84 62.857 187.429 62.857 84.571 0 156.286-41.714t113.143-113.143 41.429-156zM1316.571 146.286v731.429q0 29.714-21.714 51.429t-51.429 21.714h-1170.286q-29.714 0-51.429-21.714t-21.714-51.429v-731.429q0-29.714 21.714-51.429t51.429-21.714h1170.286q29.714 0 51.429 21.714t21.714 51.429z"
				],
				"attrs": [],
				"tags": [
					"cc-mastercard"
				],
				"defaultCode": 61937,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 452,
				"order": 453,
				"prevSize": 28,
				"code": 61937,
				"name": "cc-mastercard"
			},
			"setIdx": 0,
			"iconIdx": 470
		},
		{
			"icon": {
				"width": 1317,
				"paths": [
					"M178.857 444q0 29.143-20.571 48-16.571 14.857-50.857 14.857h-9.714v-125.714h9.714q34.857 0 50.857 15.429 20.571 17.714 20.571 47.429zM1193.714 406.857q0 29.714-36.571 29.714h-10.857v-57.714h11.429q36 0 36 28zM217.143 444q0-42.286-28.571-68.857t-73.714-26.571h-54.286v190.286h54.286q42.286 0 68-21.714 34.286-29.143 34.286-73.143zM234.286 538.857h37.143v-190.286h-37.143v190.286zM417.143 481.143q0-22.857-11.714-35.429t-43.143-24q-16.571-5.714-22.571-10.857t-6-13.143q0-9.143 7.714-15.143t19.714-6q16.571 0 30.286 15.429l19.429-25.143q-23.429-21.143-56-21.143-25.143 0-42.286 15.714t-17.143 38.571q0 20 10.286 31.714t36.571 20.857q21.143 7.429 25.714 10.857 10.857 6.857 10.857 19.429 0 11.429-8 19.143t-20.571 7.714q-27.429 0-40.571-25.143l-24 22.857q25.143 36.571 65.714 36.571 29.143 0 47.429-17.429t18.286-45.429zM576 532.571v-44q-21.143 21.143-44.571 21.143-28 0-46-18.571t-18-47.143q0-27.429 18-46.571t44.286-19.143q24.571 0 46.286 21.714v-44q-22.857-11.429-45.714-11.429-42.286 0-71.714 28.857t-29.429 70.571 29.143 70.571 71.429 28.857q24 0 46.286-10.857zM1280 877.714v-301.143q-37.143 22.857-82.571 48t-135.714 66.857-188.286 78.571-238.571 76.857-288 67.429h896.571q14.857 0 25.714-10.857t10.857-25.714zM793.714 445.143q0-42.857-30.286-73.143t-73.143-30.286-73.143 30.286-30.286 73.143 30.286 73.143 73.143 30.286 73.143-30.286 30.286-73.143zM880.571 544l82.286-195.429h-40.571l-51.429 128-50.857-128h-40.571l81.143 195.429h20zM979.429 538.857h105.143v-32h-68v-51.429h65.714v-32h-65.714v-42.286h68v-32.571h-105.143v190.286zM1202.857 538.857h45.714l-60-80q43.429-9.143 43.429-53.714 0-26.857-17.714-41.714t-49.714-14.857h-55.429v190.286h37.143v-76h5.143zM1316.571 149.714v724.571q0 32-22 54.286t-53.429 22.286h-1165.714q-31.429 0-53.429-22.286t-22-54.286v-724.571q0-32 22-54.286t53.429-22.286h1165.714q31.429 0 53.429 22.286t22 54.286z"
				],
				"attrs": [],
				"tags": [
					"cc-discover"
				],
				"defaultCode": 61938,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 453,
				"order": 454,
				"prevSize": 28,
				"code": 61938,
				"name": "cc-discover"
			},
			"setIdx": 0,
			"iconIdx": 471
		},
		{
			"icon": {
				"width": 1317,
				"paths": [
					"M68 389.714h50.857l-25.714-61.714zM422.857 690.286l42.286-45.143-40-45.143h-93.143v28h81.143v31.429h-81.143v30.857h90.857zM513.143 645.714l56.571 62.857v-124zM677.714 618.857q0-18.857-22.857-18.857h-48v39.429h47.429q23.429 0 23.429-20.571zM842.857 616.571q0-16.571-24-16.571h-46.857v34.857h46.286q24.571 0 24.571-18.286zM684 350.286q0-16.571-24-16.571h-46.857v34.286h46.286q24.571 0 24.571-17.714zM946.286 389.714h50.857l-25.143-61.714zM399.429 301.143v154.857h-37.714v-121.143l-53.714 121.143h-32.571l-53.714-121.143v121.143h-75.429l-14.286-34.286h-77.143l-14.286 34.286h-40l66.286-154.857h54.857l62.857 146.857v-146.857h60.571l48.571 105.143 44-105.143h61.714zM717.143 618.857q0 11.429-3.143 20t-8 14.286-12.857 9.429-14.857 5.714-18 2.571-18 0.571-18.571-0.286-16.857-0.286v52h-72l-45.714-51.429-47.429 51.429h-146.286v-154.857h148.571l45.714 50.857 46.857-50.857h118.286q62.286 0 62.286 50.857zM550.857 424v32h-124v-154.857h124v32.571h-86.857v28h84.571v31.429h-84.571v30.857h86.857zM1316.571 743.429v130.857q0 31.429-22 54t-53.429 22.571h-1165.714q-31.429 0-53.429-22.571t-22-54v-387.429h63.429l14.286-34.857h31.429l14.286 34.857h124.571v-26.286l10.857 26.286h64.571l11.429-26.857v26.857h309.143v-56.571l5.714-0.571q5.714 0 5.714 8v49.143h159.429v-13.143q13.143 6.857 31.429 10.286t30 3.714 36-0.286 29.429-0.571l14.286-34.857h32l14.286 34.857h129.714v-33.143l19.429 33.143h104v-216h-102.857v25.143l-14.286-25.143h-105.714v25.143l-13.143-25.143h-142.286q-39.429 0-62.286 12.571v-12.571h-98.286v12.571q-13.714-12.571-41.714-12.571h-358.857l-24.571 55.429-24.571-55.429h-113.143v25.143l-12.571-25.143h-96.571l-44.571 102.286v-223.429q0-31.429 22-54t53.429-22.571h1165.714q31.429 0 53.429 22.571t22 54v387.429h-68.571q-29.143 0-46.286 12.571v-12.571h-101.143q-31.429 0-44.571 12.571v-12.571h-180.571v12.571q-17.714-12.571-49.714-12.571h-119.429v12.571q-13.143-12.571-52-12.571h-133.714l-30.857 33.143-28.571-33.143h-199.429v216h196l31.429-33.714 29.714 33.714h120.571v-50.857h12q33.714 0 51.429-7.429v58.286h99.429v-56.571h4.571q4.571 0 5.714 1.143t1.143 5.714v49.714h302.286q32.571 0 50.286-13.714v13.714h96q34.286 0 54.286-9.714zM883.429 609.714q0 13.143-6.857 24.571t-19.429 16.571q14.286 5.143 19.429 14.857t5.143 26.286v30.857h-37.143v-25.714q0-18.857-6.857-24.857t-26.286-6h-39.429v56.571h-37.143v-154.857h88q27.429 0 44 8.571t16.571 33.143zM725.143 342.857q0 13.714-7.143 25.143t-19.143 16.571q14.857 5.143 19.714 14.571t4.857 26.571v30.286h-37.143q0-5.143 0.286-15.143t0-14.286-1.714-10.571-4.857-9.143-10-4.857-16.857-2h-40v56h-36.571v-154.857l87.429 0.571q28 0 44.571 8.286t16.571 32.857zM1027.429 690.857v32h-123.429v-154.857h123.429v32h-86.286v28h84.571v31.429h-84.571v30.857zM784 301.143v154.857h-37.714v-154.857h37.714zM1180 673.714q0 49.143-58.286 49.143h-72v-33.143h72q19.429 0 19.429-14.286 0-9.143-9.714-12t-23.714-2.857-28.286-2-24-12.857-9.714-31.429q0-22.286 14.857-34.286t37.714-12h74.286v32.571h-68q-20.571 0-20.571 14.286 0 9.143 10 11.714t24 2.286 28 1.429 24 12.286 10 31.143zM1316.571 645.143v57.714q-13.714 20-50.286 20h-71.429v-33.143h71.429q18.857 0 18.857-14.286 0-7.429-7.143-10.857t-17.714-3.143-22.857-1.143-22.857-4.571-17.714-13.714-7.143-27.714q0-22.286 15.143-34.286t38-12h73.714v32.571h-67.429q-20.571 0-20.571 14.286 0 11.429 16.571 12.571t39.143 2.857 32.286 14.857zM1222.286 301.714v154.286h-52.571l-69.714-116v116h-75.429l-14.857-34.286h-76.571l-14.286 34.286h-42.857q-73.714 0-73.714-76 0-78.857 76-78.857h36v33.714q-4 0-16-0.571t-16.286-0.286-13.143 1.143-12.286 3.714-8.286 7.714-6.571 13.143-1.714 19.143q0 21.714 7.714 33.143t28.286 11.429h16.571l52.571-121.714h55.429l62.286 146.286v-146.286h56.571l65.143 107.429v-107.429h37.714z"
				],
				"attrs": [],
				"tags": [
					"cc-amex"
				],
				"defaultCode": 61939,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 454,
				"order": 455,
				"prevSize": 28,
				"code": 61939,
				"name": "cc-amex"
			},
			"setIdx": 0,
			"iconIdx": 472
		},
		{
			"icon": {
				"width": 1317,
				"paths": [
					"M184 484h-8.571q-10.857 0-10.857-10.286 0-16 10.857-48.571 2.857-8.571 8.571-11.143t16-2.571q44 0 44 28 0 23.429-17.429 34t-42.571 10.571zM379.429 576q-26.857 0-26.857-16.571 0-35.429 70.286-35.429l1.714 1.714q-2.857 50.286-45.143 50.286zM821.714 485.143h-8.571q-10.857 0-10.857-10.857 0-16 10.857-48.571 2.857-8.571 8.286-10.857t16.286-2.286q44 0 44 28 0 23.429-17.429 34t-42.571 10.571zM1017.143 576.571q-26.857 0-26.857-17.143 0-35.429 70.286-35.429l1.714 1.714q-2.857 50.857-45.143 50.857zM213.143 366.857h-73.143q-4.571 0-8.286 2.286t-4.857 4.286-4 7.143q-1.714 4-25.714 108.571t-24 109.714q0 4 3.143 7.143t7.714 3.143h35.429q14.286 0 18.571-19.714l8.571-39.429t18.571-19.714q26.857 0 50-4.286t46-14 36.286-30 13.429-48.286q0-20.571-8.286-34.857t-23.429-20.857-30.571-8.857-35.429-2.286zM410.857 421.714q-21.714 0-42.286 3.429-1.143 0-4.857 0.571t-5.143 0.857l-4.286 0.857t-4.286 1.143-3.714 1.714-3.714 2.286-2.857 2.857-2.571 4-2.286 5.143q-5.143 16.571-5.143 22.286t5.143 5.714q2.857 0 12.286-2.857t11.143-3.429q17.143-4.571 33.143-4.571 42.286 0 42.286 20.571 0 6.286-5.714 8-4.571 1.143-10.286 1.714t-12.286 0.857-10 0.857q-21.714 2.286-36.857 5.714t-32.286 11.143-26 22.286-8.857 35.714q0 21.714 14.857 34t36.571 12.286q13.714 0 26-3.714t18.857-7.429 22-13.429q-1.714 4-1.714 8.571t3.143 7.714 7.143 3.143h32q0.571-0.571 4-2t4.286-2 2.857-2 2.857-3.143 1.429-4.571l25.714-110.857q2.286-7.429 2.286-17.143 0-46.286-82.857-46.286zM712.571 424.571h-42.286q-12.571 0-22.286 13.143-2.857 4-16.857 29.143t-26.571 46.571-14.857 22l-2.857-2.286q0-44-15.429-94.857-0.571-2.857-2-4.857t-3.429-3.714-3.714-2.857-4.857-1.714-4.857-0.857-5.429-0.571-5.143-0.286h-10.571q-21.714 0-21.714 12l0.571 2.857q2.857 30.286 14.286 86.286t14.286 81.714q1.143 9.143 1.143 13.714 0 10.857-17.429 35.143t-17.429 33.429q0 7.429 22.857 7.429 34.857 0 43.429-14.286l140-237.143q5.714-11.429 5.714-14.857 0-5.143-4.571-5.143zM850.857 368h-73.714q-10.286 0-16.571 13.143-3.429 7.429-26.571 109.429t-23.143 108.857q0 11.429 24.571 11.429h14.571t5.429-0.571 4.857-1.143 4.857-1.714 3.714-2.571 3.143-3.429 1.714-4.857l12-52q1.143-5.714 6-9.714t11.143-4q26.857 0 50-4t46-14 36.286-30 13.429-48q0-20.571-8.286-34.857t-23.429-20.857-30.571-8.857-35.429-2.286zM1048.571 421.714q-14.857 0-42.286 3.429-21.714 3.429-27.429 9.143-4 4.571-6.286 10.857-4.571 13.714-4.571 22.286 0 5.714 4.571 5.714 0.571 0 23.429-6.857 17.143-4.571 33.143-4.571 42.286 0 42.286 20.571 0 6.857-5.714 8-2.286 0.571-32.571 4-21.714 2.286-36.857 5.714t-32.286 11.143-26 22.286-8.857 35.714 14.857 33.429 36.571 12.286q13.714 0 25.714-3.429t19.429-7.429 21.714-13.714q-1.714 8.571-1.714 9.143 0 2.857 1.143 4.857t3.714 3.143 4.571 2 6 1.143 5.429 0.286h10q24 0 27.429-14.286l25.714-110.857q1.714-8.571 1.714-17.714 0-46.286-82.857-46.286zM1232.571 369.714h-31.429q-14.286 0-18.857 22.857-5.714 25.143-20.857 95.429t-24.286 108.571v2.857q0 9.143 9.143 10.286h33.143q5.714 0 10.571-3.714t6-9.429l47.429-213.714h-0.571l0.571-2.857q0-4-3.143-7.143t-7.714-3.143zM1316.571 146.286v731.429q0 29.714-21.714 51.429t-51.429 21.714h-1170.286q-29.714 0-51.429-21.714t-21.714-51.429v-731.429q0-29.714 21.714-51.429t51.429-21.714h1170.286q29.714 0 51.429 21.714t21.714 51.429z"
				],
				"attrs": [],
				"tags": [
					"cc-paypal"
				],
				"defaultCode": 61940,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 455,
				"order": 456,
				"prevSize": 28,
				"code": 61940,
				"name": "cc-paypal"
			},
			"setIdx": 0,
			"iconIdx": 473
		},
		{
			"icon": {
				"width": 1317,
				"paths": [
					"M912.571 516q0 39.429-12 60.571-10.857 20-29.714 20-13.143 0-23.429-5.143v-128q16.571-17.143 32.571-17.143 32.571 0 32.571 69.714zM1162.857 495.429h-62.857q3.429-56 32-56 29.143 0 30.857 56zM272 572.571q0-33.714-18.857-52.286t-57.714-32.857q-20.571-7.429-29.714-13.714t-9.143-14.286q0-14.857 21.714-14.857 33.143 0 70.857 18.857l10.286-64q-38.286-18.286-85.143-18.286-44 0-70.286 21.714-27.429 22.286-27.429 62.286 0 33.143 18.571 51.714t56.857 32.286q22.286 8 31.143 14.571t8.857 15.714q0 17.714-27.429 17.714-16.571 0-40-7.143t-41.143-17.429l-10.286 64.571q41.143 23.429 96 23.429 46.286 0 73.714-21.143 29.143-23.429 29.143-66.857zM440.571 449.714l10.857-63.429h-54.857v-77.143l-73.714 12-10.286 65.143-26.286 4.571-9.714 58.857h35.429v125.143q0 48 25.143 68.571 21.714 17.143 63.429 17.143 18.286 0 45.143-6.286v-67.429q-18.286 4-25.143 4-24 0-24-28.571v-112.571h44zM621.143 464v-79.429q-8.571-1.714-16-1.714-18.286 0-31.714 9.143t-19.143 26.286l-5.714-32h-74.857v269.143h85.714v-174.857q14.857-17.714 46.857-17.714 9.143 0 14.857 1.143zM642.286 655.429h85.714v-269.143h-85.714v269.143zM997.714 513.143q0-69.714-25.714-102.286-22.857-29.714-63.429-29.714-36.571 0-66.857 32l-4.571-26.857h-75.429v368.571l85.714-14.286v-86.286q20.571 6.286 38.857 6.286 47.429 0 76.571-32 34.857-37.143 34.857-115.429zM730.286 314.286q0-18.857-13.143-32t-32-13.143-32 13.143-13.143 32 13.143 32.286 32 13.429 32-13.429 13.143-32.286zM1243.429 518.286q0-64.571-27.429-100.571-28.571-36.571-82.286-36.571-54.857 0-86.571 37.714t-31.714 102.857q0 73.143 36 107.429 31.429 31.429 92 31.429 57.714 0 91.429-22.857l-9.143-58.857q-32.571 17.714-73.143 17.714-24.571 0-36-10.857-13.143-10.857-16-37.714h141.714q1.143-8 1.143-29.714zM1316.571 146.286v731.429q0 29.714-21.714 51.429t-51.429 21.714h-1170.286q-29.714 0-51.429-21.714t-21.714-51.429v-731.429q0-29.714 21.714-51.429t51.429-21.714h1170.286q29.714 0 51.429 21.714t21.714 51.429z"
				],
				"attrs": [],
				"tags": [
					"cc-stripe"
				],
				"defaultCode": 61941,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 456,
				"order": 457,
				"prevSize": 28,
				"code": 61941,
				"name": "cc-stripe"
			},
			"setIdx": 0,
			"iconIdx": 474
		},
		{
			"icon": {
				"width": 1170,
				"paths": [
					"M890.286 486.857q34.857 203.429 170.286 317.714 0 29.714-21.714 51.429t-51.429 21.714h-256q0 60.571-42.857 103.429t-103.429 42.857-103.143-42.571-43.143-103.143zM585.143 978.286q9.143 0 9.143-9.143t-9.143-9.143q-33.714 0-58-24.286t-24.286-58q0-9.143-9.143-9.143t-9.143 9.143q0 41.714 29.429 71.143t71.143 29.429zM1157.714 64q4.571 5.714 4.286 13.429t-6 12.857l-1069.714 926.857q-5.714 4.571-13.429 4t-12.286-6.286l-48-54.857q-4.571-5.714-4.286-13.429t6-12.286l106.286-92q-10.857-18.286-10.857-37.714 28.571-24 52-50.286t48.571-68.286 42.571-90.571 28.571-117.714 11.143-148.571q0-86.857 66.857-161.429t175.429-90.571q-4.571-10.857-4.571-22.286 0-22.857 16-38.857t38.857-16 38.857 16 16 38.857q0 11.429-4.571 22.286 70.857 10.286 125.143 47.143t84.571 90l238.857-207.429q5.714-4.571 13.429-4t12.286 6.286z"
				],
				"attrs": [],
				"tags": [
					"bell-slash"
				],
				"defaultCode": 61942,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 457,
				"order": 458,
				"prevSize": 28,
				"code": 61942,
				"name": "bell-slash"
			},
			"setIdx": 0,
			"iconIdx": 475
		},
		{
			"icon": {
				"width": 1170,
				"paths": [
					"M594.286 969.143q0-9.143-9.143-9.143-33.714 0-58-24.286t-24.286-58q0-9.143-9.143-9.143t-9.143 9.143q0 41.714 29.429 71.143t71.143 29.429q9.143 0 9.143-9.143zM287.429 697.714l501.143-434.286q-24-50.286-75.714-83.714t-127.714-33.429q-53.143 0-96.857 18t-69.429 46-39.429 58.857-13.714 60q0 219.429-78.286 368.571zM1060.571 804.571q0 29.714-21.714 51.429t-51.429 21.714h-256q0 60.571-42.857 103.429t-103.429 42.857-103.143-42.571-43.143-103.143l85.143-73.714h432.571q-94.857-106.857-129.714-262.286l63.429-55.429q34.857 203.429 170.286 317.714zM1109.714 9.143l48 54.857q4.571 5.714 4.286 13.429t-6 12.857l-1069.714 926.857q-5.714 4.571-13.429 4t-12.286-6.286l-48-54.857q-4.571-5.714-4.286-13.429t6-12.286l106.286-92q-10.857-18.286-10.857-37.714 28.571-24 52-50.286t48.571-68.286 42.571-90.571 28.571-117.714 11.143-148.571q0-86.857 66.857-161.429t175.429-90.571q-4.571-10.857-4.571-22.286 0-22.857 16-38.857t38.857-16 38.857 16 16 38.857q0 11.429-4.571 22.286 70.857 10.286 125.143 47.143t84.571 90l238.857-207.429q5.714-4.571 13.429-4t12.286 6.286z"
				],
				"attrs": [],
				"tags": [
					"bell-slash-o"
				],
				"defaultCode": 61943,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 458,
				"order": 459,
				"prevSize": 28,
				"code": 61943,
				"name": "bell-slash-o"
			},
			"setIdx": 0,
			"iconIdx": 476
		},
		{
			"icon": {
				"width": 805,
				"paths": [
					"M292.571 786.286v-402.286q0-8-5.143-13.143t-13.143-5.143h-36.571q-8 0-13.143 5.143t-5.143 13.143v402.286q0 8 5.143 13.143t13.143 5.143h36.571q8 0 13.143-5.143t5.143-13.143zM438.857 786.286v-402.286q0-8-5.143-13.143t-13.143-5.143h-36.571q-8 0-13.143 5.143t-5.143 13.143v402.286q0 8 5.143 13.143t13.143 5.143h36.571q8 0 13.143-5.143t5.143-13.143zM585.143 786.286v-402.286q0-8-5.143-13.143t-13.143-5.143h-36.571q-8 0-13.143 5.143t-5.143 13.143v402.286q0 8 5.143 13.143t13.143 5.143h36.571q8 0 13.143-5.143t5.143-13.143zM274.286 219.429h256l-27.429-66.857q-4-5.143-9.714-6.286h-181.143q-5.714 1.143-9.714 6.286zM804.571 237.714v36.571q0 8-5.143 13.143t-13.143 5.143h-54.857v541.714q0 47.429-26.857 82t-64.571 34.571h-475.429q-37.714 0-64.571-33.429t-26.857-80.857v-544h-54.857q-8 0-13.143-5.143t-5.143-13.143v-36.571q0-8 5.143-13.143t13.143-5.143h176.571l40-95.429q8.571-21.143 30.857-36t45.143-14.857h182.857q22.857 0 45.143 14.857t30.857 36l40 95.429h176.571q8 0 13.143 5.143t5.143 13.143z"
				],
				"attrs": [],
				"tags": [
					"trash"
				],
				"defaultCode": 61944,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 459,
				"order": 460,
				"prevSize": 28,
				"code": 61944,
				"name": "trash"
			},
			"setIdx": 0,
			"iconIdx": 477
		},
		{
			"icon": {
				"paths": [
					"M657.143 613.714v62.286q0 28.571-20.857 50.857t-53.714 34.571-67.429 18.571-67.143 6.286q-117.143 0-195.714-79.429t-78.571-197.714q0-116 77.714-193.714t193.714-77.714q19.429 0 43.143 2.571t53.143 10.286 52.857 19.429 39.429 32.286 16 46.286v62.286q0 9.143-9.143 9.143h-67.429q-9.143 0-9.143-9.143v-40q0-24.571-37.429-38.571t-78.571-14q-80 0-130.571 52.286t-50.571 135.714q0 86.286 52.286 142.571t133.429 56.286q38.857 0 78.857-13.714t40-37.714v-40q0-4 2.571-6.571t6-2.571h68q3.429 0 6.286 2.571t2.857 6.571zM438.857 146.286q-74.286 0-142 29.143t-116.571 78-78 116.571-29.143 142 29.143 142 78 116.571 116.571 78 142 29.143 142-29.143 116.571-78 78-116.571 29.143-142-29.143-142-78-116.571-116.571-78-142-29.143zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"copyright"
				],
				"defaultCode": 61945,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 460,
				"order": 461,
				"prevSize": 28,
				"code": 61945,
				"name": "copyright"
			},
			"setIdx": 0,
			"iconIdx": 478
		},
		{
			"icon": {
				"paths": [
					"M555.429 442.857q0-61.714-30.571-96.571t-84.286-34.857q-36 0-70.857 17.429t-62.857 48.286-45.429 78.286-17.429 102.857q0 64 30.571 98.857t86 34.857q54.857 0 100.571-38t70-94.857 24.286-116.286zM877.714 512q0 63.429-21.143 112.571t-56.286 77.143-75.143 42.571-82.857 15.714q-3.429 0-8.857 0.286t-9.429 0.286q-54.286 0-81.143-30.286-16-18.857-18.857-47.429-29.714 37.714-75.143 62.857t-99.143 25.143q-92 0-142.571-54.571t-50.571-154q0-89.714 37.714-165.714t102.286-120.286 140.571-44.286q49.714 0 88.571 20.286t60.571 56.857l1.143-10.857 6.286-32q0.571-3.429 3.143-6.857t5.429-3.429h67.429q2.857 0 7.429 6.286 2.857 2.857 1.714 9.143l-68.571 350.857q-2.857 13.714-2.857 27.429 0 22.286 7.143 29.714t25.429 7.429q16-0.571 32.571-3.143t41.714-13.714 44-28.571 32.571-51.143 13.714-78.286q0-166.857-99.429-266.286t-266.286-99.429q-74.286 0-142 29.143t-116.571 78-78 116.571-29.143 142 29.143 142 78 116.571 116.571 78 142 29.143q130.286 0 231.429-82.286 6.286-5.143 13.714-4.571t12 6.857l23.429 28q4.571 6.857 4 13.714-1.143 7.429-6.857 12.571-58.286 47.429-130 73.143t-147.714 25.714q-89.143 0-170.286-34.857t-140-93.714-93.714-140-34.857-170.286 34.857-170.286 93.714-140 140-93.714 170.286-34.857q196.571 0 317.714 121.143t121.143 317.714z"
				],
				"attrs": [],
				"tags": [
					"at"
				],
				"defaultCode": 61946,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 461,
				"order": 462,
				"prevSize": 28,
				"code": 61946,
				"name": "at"
			},
			"setIdx": 0,
			"iconIdx": 479
		},
		{
			"icon": {
				"paths": [
					"M970.286 53.714q53.714 53.714 53.714 129.429t-53.714 128.857l-128.571 127.429 59.429 59.429q5.714 5.714 5.714 13.143t-5.714 13.143l-120 120q-5.714 5.714-13.143 5.714t-13.143-5.714l-60-60-344.571 344.571q-21.143 21.143-51.429 21.143h-116l-146.286 73.143-36.571-36.571 73.143-146.286v-116q0-30.286 21.143-51.429l344.571-344.571-60-60q-5.714-5.714-5.714-13.143t5.714-13.143l120-120q5.714-5.714 13.143-5.714t13.143 5.714l59.429 59.429 127.429-128.571q53.143-53.714 128.857-53.714t129.429 53.714zM292.571 841.143l329.143-329.143-109.714-109.714-329.143 329.143v109.714h109.714z"
				],
				"attrs": [],
				"tags": [
					"eyedropper"
				],
				"defaultCode": 61947,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 462,
				"order": 463,
				"prevSize": 28,
				"code": 61947,
				"name": "eyedropper"
			},
			"setIdx": 0,
			"iconIdx": 480
		},
		{
			"icon": {
				"paths": [
					"M922.857 0q40 0 70 26.571t30 66.571q0 36-25.714 86.286-189.714 359.429-265.714 429.714-55.429 52-124.571 52-72 0-123.714-52.857t-51.714-125.429q0-73.143 52.571-121.143l364.571-330.857q33.714-30.857 74.286-30.857zM403.429 590.857q22.286 43.429 60.857 74.286t86 43.429l0.571 40.571q2.286 121.714-74 198.286t-199.143 76.571q-70.286 0-124.571-26.571t-87.143-72.857-49.429-104.571-16.571-125.714q4 2.857 23.429 17.143t35.429 25.429 33.714 20.857 26.286 9.714q23.429 0 31.429-21.143 14.286-37.714 32.857-64.286t39.714-43.429 50.286-27.143 58.857-14.571 71.429-6z"
				],
				"attrs": [],
				"tags": [
					"paint-brush"
				],
				"defaultCode": 61948,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 463,
				"order": 464,
				"prevSize": 28,
				"code": 61948,
				"name": "paint-brush"
			},
			"setIdx": 0,
			"iconIdx": 481
		},
		{
			"icon": {
				"paths": [
					"M1024 804.571v219.429h-1024v-219.429q25.714 0 48.571-8t33.714-15.714 26.857-21.429q17.143-15.429 29.429-21.714t32.286-6.286 31.714 6.286 30 21.714q16.571 14.286 26.857 21.714t33.143 15.429 49.143 8q25.714 0 48.571-8.286t33.143-15.429 27.429-21.429q12-10.857 18.571-15.429t17.714-8.571 24.857-4q20 0 32.286 6.286t29.429 21.714q16 13.714 26.857 21.429t33.714 15.714 48.571 8 48.571-8 33.714-15.714 26.857-21.429q17.143-15.429 29.429-21.714t32.286-6.286q19.429 0 31.714 6.286t29.429 21.714q16 13.714 26.857 21.429t33.714 15.714 48.571 8zM1024 621.714v109.714q-20 0-31.714-6.286t-30-21.714q-16.571-14.286-26.857-21.714t-33.143-15.429-48.571-8q-26.286 0-49.143 8t-33.143 15.429-26.857 21.714q-12.571 10.857-18.857 15.429t-17.714 8.571-25.143 4q-20 0-32.286-6.286t-29.429-21.714q-16.571-14.286-26.857-21.714t-33.143-15.429-49.143-8q-25.714 0-48.571 8.286t-33.143 15.429-27.429 21.429q-12 10.857-18.571 15.429t-17.714 8.571-24.857 4q-20 0-32.286-6.286t-29.429-21.714q-16-13.714-26.857-21.429t-33.714-15.714-48.571-8q-26.286 0-49.143 8t-33.143 15.429-26.857 21.714q-17.143 15.429-29.429 21.714t-32.286 6.286v-109.714q0-45.714 32-77.714t77.714-32h36.571v-256h146.286v256h146.286v-256h146.286v256h146.286v-256h146.286v256h36.571q45.714 0 77.714 32t32 77.714zM292.571 128q0 44-20.571 67.714t-52.571 23.714q-30.286 0-51.714-21.429t-21.429-51.714q0-16.571 5.429-29.143t13.429-19.429 17.714-16 17.714-18 13.429-25.429 5.429-38.286q21.714 0 47.429 42.286t25.714 85.714zM585.143 128q0 44-20.571 67.714t-52.571 23.714q-30.286 0-51.714-21.429t-21.429-51.714q0-16.571 5.429-29.143t13.429-19.429 17.714-16 17.714-18 13.429-25.429 5.429-38.286q21.714 0 47.429 42.286t25.714 85.714zM877.714 128q0 44-20.571 67.714t-52.571 23.714q-30.286 0-51.714-21.429t-21.429-51.714q0-16.571 5.429-29.143t13.429-19.429 17.714-16 17.714-18 13.429-25.429 5.429-38.286q21.714 0 47.429 42.286t25.714 85.714z"
				],
				"attrs": [],
				"tags": [
					"birthday-cake"
				],
				"defaultCode": 61949,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 464,
				"order": 465,
				"prevSize": 28,
				"code": 61949,
				"name": "birthday-cake"
			},
			"setIdx": 0,
			"iconIdx": 482
		},
		{
			"icon": {
				"width": 1170,
				"paths": [
					"M1170.286 877.714v73.143h-1170.286v-877.714h73.143v804.571h1097.143zM950.857 292.571l146.286 512h-950.857v-329.143l256-329.143 329.143 329.143z"
				],
				"attrs": [],
				"tags": [
					"area-chart"
				],
				"defaultCode": 61950,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 465,
				"order": 466,
				"prevSize": 28,
				"code": 61950,
				"name": "area-chart"
			},
			"setIdx": 0,
			"iconIdx": 483
		},
		{
			"icon": {
				"paths": [
					"M438.857 508.571l312 312q-60.571 61.714-141.429 96t-170.571 34.286q-119.429 0-220.286-58.857t-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857v435.429zM545.714 512h441.714q0 89.714-34.286 170.571t-96 141.429zM950.857 438.857h-438.857v-438.857q119.429 0 220.286 58.857t159.714 159.714 58.857 220.286z"
				],
				"attrs": [],
				"tags": [
					"pie-chart"
				],
				"defaultCode": 61952,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 466,
				"order": 467,
				"prevSize": 28,
				"code": 61952,
				"name": "pie-chart"
			},
			"setIdx": 0,
			"iconIdx": 484
		},
		{
			"icon": {
				"width": 1170,
				"paths": [
					"M1170.286 877.714v73.143h-1170.286v-877.714h73.143v804.571h1097.143zM1097.143 164.571v248.571q0 12-11.143 16.857t-20.286-4.286l-69.143-69.143-361.714 361.714q-5.714 5.714-13.143 5.714t-13.143-5.714l-133.143-133.143-237.714 237.714-109.714-109.714 334.286-334.286q5.714-5.714 13.143-5.714t13.143 5.714l133.143 133.143 265.143-265.143-69.143-69.143q-9.143-9.143-4.286-20.286t16.857-11.143h248.571q8 0 13.143 5.143t5.143 13.143z"
				],
				"attrs": [],
				"tags": [
					"line-chart"
				],
				"defaultCode": 61953,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 467,
				"order": 468,
				"prevSize": 28,
				"code": 61953,
				"name": "line-chart"
			},
			"setIdx": 0,
			"iconIdx": 485
		},
		{
			"icon": {
				"paths": [
					"M738.286 402.286q0 3.429 5.714 23.429 5.714 16.571 14.286 28.286t23.429 19.429 25.143 11.429 31.429 9.429q185.714 52 185.714 189.714 0 83.429-60.286 138.571t-145.429 55.143q-33.714 0-63.714-10.571t-52.286-26-44-42.571-36-50-30.571-59.143-24.857-58.857-22.571-60.857-20.286-54.286q-18.286-46.286-35.143-76.286t-42-55.143-59.429-36.571-81.143-11.429q-54.857 0-104.571 31.714t-78.857 82.571-29.143 105.714q0 91.429 60.857 159.714t150.571 68.286q101.143 0 147.429-54.286 32-36 47.429-66.286l48 86.857q-8.571 19.429-25.143 40l0.571 0.571q-74.857 86.857-221.714 86.857-84 0-154-45.143t-108.857-118.571-38.857-156.857q0-60 24.857-117.714t66.286-100.857 98.286-69.429 116.857-26.286q49.714 0 90.857 10.857t70.571 28.571 54.286 45.714 41.429 56.571 33.429 66.857 28.857 71.143 28.571 74.571 31.429 72.571q54.857 114.286 133.143 114.286 46.286 0 79.143-27.714t32.857-73.429q0-24-10.857-41.143t-28.857-26.286-41.429-18-48.286-15.429-50-19.429-46.286-29.714-37.143-46.857-22.286-70q-1.714-9.143-1.714-18.857 0-62.857 50-109.714t113.429-44.571q44.571 1.714 68.857 8.286t51.714 30.571h-0.571q6.857 6.286 13.143 14t14.857 20.571 10.857 15.714l-73.714 56.571q-14.857-28-30.857-40v-0.571q-13.143-12-55.429-12-28 0-48 18.857t-20 47.429z"
				],
				"attrs": [],
				"tags": [
					"lastfm"
				],
				"defaultCode": 61954,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 468,
				"order": 469,
				"prevSize": 28,
				"code": 61954,
				"name": "lastfm"
			},
			"setIdx": 0,
			"iconIdx": 486
		},
		{
			"icon": {
				"paths": [
					"M818.286 601.143q0-98.857-133.714-136.571-20-5.714-30.286-9.429t-21.714-14.286-16.571-26.571q0-1.143-1.143-4.857t-1.714-6.857-0.571-4.286q0-20.571 14-34t34.571-13.429q30.857 0 40.571 8.571h-0.571q11.429 8.571 22.286 29.143l53.143-40.571q-22.286-30.857-28-36.571-18.857-16.571-38.571-22.286t-48.857-5.714q-45.714 0-81.143 32.857t-35.429 78.571q0 4 1.143 13.143 9.143 54.857 36.857 80t84.857 41.714q16.571 4.571 28 8.857t25.714 12.286 22 19.714 7.714 26.571v2.857q0.571 33.143-23.143 53.143t-57.429 20q-55.429 0-95.429-82.286-13.143-26.857-29.429-69.429t-27.429-71.714-30.857-63.143-42.286-54.571-59.143-34.571-84-14q-57.714 0-109.714 32t-82.286 84.571-28.571 109.714v0.571q2.286 61.714 28.857 113.714t76.286 84.286 112 32.286q106.286 0 159.429-62.857 11.429-15.429 17.714-29.143l-34.286-62.286q-24 45.714-56.571 66.286t-83.429 20.571q-65.714 0-109.143-49.714t-43.429-116.571q0-60 46.857-108t106.286-48q64 0 97.143 30.571t59.429 98.571q4.571 12 14.571 39.143t16.286 43.714 18 42.571 22 42.286 26 35.714 31.714 30.571 37.714 18.857 45.714 7.714q61.143 0 104.571-39.714t43.429-99.714zM877.714 237.714v548.571q0 68-48.286 116.286t-116.286 48.286h-548.571q-68 0-116.286-48.286t-48.286-116.286v-548.571q0-68 48.286-116.286t116.286-48.286h548.571q68 0 116.286 48.286t48.286 116.286z"
				],
				"attrs": [],
				"tags": [
					"lastfm-square"
				],
				"defaultCode": 61955,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 469,
				"order": 470,
				"prevSize": 28,
				"code": 61955,
				"name": "lastfm-square"
			},
			"setIdx": 0,
			"iconIdx": 487
		},
		{
			"icon": {
				"width": 1170,
				"paths": [
					"M658.286 512q0-59.429-23.143-113.429t-62.571-93.429-93.429-62.571-113.429-23.143-113.429 23.143-93.429 62.571-62.571 93.429-23.143 113.429 23.143 113.429 62.571 93.429 93.429 62.571 113.429 23.143 113.429-23.143 93.429-62.571 62.571-93.429 23.143-113.429zM1097.143 512q0-59.429-23.143-113.429t-62.571-93.429-93.429-62.571-113.429-23.143h-220.571q68 51.429 107.714 128t39.714 164.571-39.714 164.571-107.714 128h220.571q59.429 0 113.429-23.143t93.429-62.571 62.571-93.429 23.143-113.429zM1170.286 512q0 74.286-29.143 142t-78 116.571-116.571 78-142 29.143h-438.857q-74.286 0-142-29.143t-116.571-78-78-116.571-29.143-142 29.143-142 78-116.571 116.571-78 142-29.143h438.857q74.286 0 142 29.143t116.571 78 78 116.571 29.143 142z"
				],
				"attrs": [],
				"tags": [
					"toggle-off"
				],
				"defaultCode": 61956,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 470,
				"order": 471,
				"prevSize": 28,
				"code": 61956,
				"name": "toggle-off"
			},
			"setIdx": 0,
			"iconIdx": 488
		},
		{
			"icon": {
				"width": 1170,
				"paths": [
					"M0 512q0-74.286 29.143-142t78-116.571 116.571-78 142-29.143h438.857q74.286 0 142 29.143t116.571 78 78 116.571 29.143 142-29.143 142-78 116.571-116.571 78-142 29.143h-438.857q-74.286 0-142-29.143t-116.571-78-78-116.571-29.143-142zM804.571 804.571q59.429 0 113.429-23.143t93.429-62.571 62.571-93.429 23.143-113.429-23.143-113.429-62.571-93.429-93.429-62.571-113.429-23.143-113.429 23.143-93.429 62.571-62.571 93.429-23.143 113.429 23.143 113.429 62.571 93.429 93.429 62.571 113.429 23.143z"
				],
				"attrs": [],
				"tags": [
					"toggle-on"
				],
				"defaultCode": 61957,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 471,
				"order": 472,
				"prevSize": 28,
				"code": 61957,
				"name": "toggle-on"
			},
			"setIdx": 0,
			"iconIdx": 489
		},
		{
			"icon": {
				"width": 1317,
				"paths": [
					"M435.429 658.286h-179.429q-22.857 0-32.857-20t3.714-38.286l107.429-143.429q-37.143-17.714-78.286-17.714-75.429 0-129.143 53.714t-53.714 129.143 53.714 129.143 129.143 53.714q65.714 0 116-41.429t63.429-104.857zM329.143 585.143h106.286q-10.286-48.571-42.857-84.571zM603.429 585.143l164.571-219.429h-274.286l-56.571 75.429q60 58.857 72 144h94.286zM1243.429 621.714q0-75.429-53.714-129.143t-129.143-53.714q-34.286 0-69.143 13.714l99.429 148.571q8.571 13.143 5.714 28t-15.429 22.857q-8.571 6.286-20.571 6.286-20 0-30.286-16.571l-99.429-148.571q-53.143 54.286-53.143 128.571 0 75.429 53.714 129.143t129.143 53.714 129.143-53.714 53.714-129.143zM1316.571 621.714q0 105.714-75.143 180.857t-180.857 75.143-180.857-75.143-75.143-180.857q0-55.429 22.571-104.857t62.571-85.429l-37.143-56-201.714 268q-10.286 14.857-29.143 14.857h-112.571q-13.143 93.714-85.143 156.571t-168 62.857q-105.714 0-180.857-75.143t-75.143-180.857 75.143-180.857 180.857-75.143q65.143 0 122.857 31.429l78.286-104.571h-128q-14.857 0-25.714-10.857t-10.857-25.714 10.857-25.714 25.714-10.857h219.429v73.143h248.571l-48.571-73.143h-126.857q-14.857 0-25.714-10.857t-10.857-25.714 10.857-25.714 25.714-10.857h146.286q18.857 0 30.286 16l152.571 228.571q52-25.143 109.714-25.143 105.714 0 180.857 75.143t75.143 180.857z"
				],
				"attrs": [],
				"tags": [
					"bicycle"
				],
				"defaultCode": 61958,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 472,
				"order": 473,
				"prevSize": 28,
				"code": 61958,
				"name": "bicycle"
			},
			"setIdx": 0,
			"iconIdx": 490
		},
		{
			"icon": {
				"paths": [
					"M219.429 694.857q0-30.286-21.429-51.714t-51.714-21.429-51.714 21.429-21.429 51.714 21.429 51.714 51.714 21.429 51.714-21.429 21.429-51.714zM804.571 694.857q0-30.286-21.429-51.714t-51.714-21.429-51.714 21.429-21.429 51.714 21.429 51.714 51.714 21.429 51.714-21.429 21.429-51.714zM778.286 468.571l-41.143-219.429q-2.857-13.143-12.857-21.429t-23.143-8.286h-524.571q-13.143 0-23.143 8.286t-12.857 21.429l-41.143 219.429q-2.857 17.143 8 30.286t28 13.143h606.857q17.143 0 28-13.143t8-30.286zM649.143 118.857q0-11.429-8-19.429t-19.429-8h-365.714q-11.429 0-19.429 8t-8 19.429 8 19.429 19.429 8h365.714q11.429 0 19.429-8t8-19.429zM877.714 533.143v344.571h-73.143v73.143q0 30.286-21.429 51.714t-51.714 21.429-51.714-21.429-21.429-51.714v-73.143h-438.857v73.143q0 30.286-21.429 51.714t-51.714 21.429-51.714-21.429-21.429-51.714v-73.143h-73.143v-344.571q0-64 14.286-127.429l58.857-259.429q5.143-44.571 55.714-78.286t131.429-50.857 178.571-17.143 178.571 17.143 131.429 50.857 55.714 78.286l60 259.429q13.143 58.286 13.143 127.429z"
				],
				"attrs": [],
				"tags": [
					"bus"
				],
				"defaultCode": 61959,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 473,
				"order": 474,
				"prevSize": 28,
				"code": 61959,
				"name": "bus"
			},
			"setIdx": 0,
			"iconIdx": 491
		},
		{
			"icon": {
				"width": 1170,
				"paths": [
					"M836 475.429q0 20-14.286 34.571t-34.857 14.571h-401.143q-20.571 0-34.857-14.571t-14.286-34.571 14.286-34.571 34.857-14.571h401.143q20.571 0 34.857 14.571t14.286 34.571zM958.286 475.429q0-49.143-13.143-97.143h-561.143q-20.571 0-34.857-14.286t-14.286-34.286q0-20.571 14.286-34.857t34.857-14.286h518.857q-50.286-81.714-134.286-129.714t-182.857-48q-101.143 0-187.143 50t-136 135.714-50 186.857q0 49.143 13.143 97.143h561.143q20.571 0 34.857 14.286t14.286 34.286q0 20.571-14.286 34.857t-34.857 14.286h-518.857q50.286 81.714 134.571 129.714t183.143 48q75.429 0 144.571-29.429t118.857-79.429 79.429-118.857 29.714-144.857zM1170.286 329.714q0 20-14.286 34.286t-34.857 14.286h-74.857q9.714 48.571 9.714 97.143 0 95.429-37.429 182.571t-100.286 150.286-150 100.571-182.571 37.429q-140.571 0-256.286-76t-172.286-200h-108q-20.571 0-34.857-14.286t-14.286-34.857q0-20 14.286-34.286t34.857-14.286h75.429q-9.714-48.571-9.714-97.143 0-95.429 37.429-182.571t100.286-150.286 150-100.571 183.143-37.429q140 0 255.714 76t172.286 200h107.429q20.571 0 34.857 14.286t14.286 34.857z"
				],
				"attrs": [],
				"tags": [
					"ioxhost"
				],
				"defaultCode": 61960,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 474,
				"order": 475,
				"prevSize": 28,
				"code": 61960,
				"name": "ioxhost"
			},
			"setIdx": 0,
			"iconIdx": 492
		},
		{
			"icon": {
				"width": 731,
				"paths": [
					"M544.571 216l-65.143 187.429 66.857 12q94.286-257.714 94.286-296 0-32-21.714-32-32.571 0-74.286 128.571zM373.714 608.571l18.857 50.286q21.143-24 40.571-38.286l-18.857-3.143t-22-4-18.571-4.857zM206.857 96.571q0 56 90.857 297.714 10.286-5.714 28-5.714 8.571 0 42.857 2.857l-69.143-200.571q-42.857-125.714-70.286-125.714-10.857 0-16.571 10t-5.714 21.429zM161.714 530.286q0 20.571 29.429 68t67.143 87.429 57.143 40q8 0 14.571-7.429t6.571-15.429q0-13.714-18.286-58.286-7.429-18.286-18.286-41.143t-27.143-50.857-35.143-46.286-35.429-18.286q-11.429 0-26 15.429t-14.571 26.857zM71.429 721.714q0 23.429 14.286 59.429 33.714 82.857 104.857 129.714t160.857 46.857q129.714 0 218.286-97.143 86.857-96.571 86.857-244 0-24.571-0.571-38.286t-6.571-35.429-17.429-32q-32-28-120.857-43.143t-154.571-15.143q-21.143 0-28 6.286-6.857 2.857-6.857 20 0 19.429 12.286 34.286t31.714 22.857 44.286 13.429 50 6.571 48.571 2.286 40 0h13.143q13.714 0 22.857 10.857 8.571 10.857 10.857 31.429-16 16-54.857 30.857-34.857 12.571-53.143 26.286-36.571 26.286-62 65.143t-25.429 78.286q0 17.714 10.571 50.571t10.571 50l-1.714 6.857q-2.286 6.857-2.286 8-78.286-5.714-83.429-123.429-4.571 1.143-23.429 1.143 1.143 4 1.143 12 0 30.286-23.143 51.143t-54 20.857q-46.857 0-95.143-44.571t-48.286-90.857q0-19.429 18.857-38.286 29.714 36.571 34.286 43.429 44 59.429 76 59.429 6.857 0 15.143-4.857t8.286-11.714q0-19.429-50-82.857t-66.571-63.429q-24.571 0-40 25.429t-15.429 51.714zM6.286 726.857q0-57.714 24.286-93.143t78-50.286q-16-42.286-16-59.429 0-35.429 34.857-70.286t69.714-34.857q16.571 0 40 8.571-93.143-264-93.143-324 0-45.714 23.429-74.571t68-28.857q74.857 0 185.714 332 3.429 9.714 4.571 13.143 3.429-9.143 16.571-45.429t24.857-67.714 30.857-72.857 36.857-70.286 40.286-49.429 43.714-20.571q40.571 0 64 28t23.429 69.714q0 61.714-90.857 314.286 34.857 8.571 57.429 26.286t33.429 44.571 14.857 53.429 4 63.143q0 85.714-26.857 160t-75.429 128.571-120.571 85.714-158.857 31.429q-63.429 0-127.429-24-85.143-32.571-147.429-109.429t-62.286-163.714z"
				],
				"attrs": [],
				"tags": [
					"angellist"
				],
				"defaultCode": 61961,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 475,
				"order": 476,
				"prevSize": 28,
				"code": 61961,
				"name": "angellist"
			},
			"setIdx": 0,
			"iconIdx": 493
		},
		{
			"icon": {
				"width": 1170,
				"paths": [
					"M448.571 576h118.286q-8 90.286-56.286 142t-122.571 51.714q-92.571 0-145.429-66.286t-52.857-180.571q0-110.857 53.143-178t133.143-67.143q84.571 0 132.571 49.714t55.429 141.143h-116q-2.857-36.571-20.286-56.571t-46.571-20q-32.571 0-50.571 34.571t-18 101.429q0 27.429 2.857 48t10.286 39.714 22.857 29.429 37.714 10.286q54.286 0 62.286-79.429zM855.429 576h117.714q-8 90.286-56 142t-122.286 51.714q-92.571 0-145.429-66.286t-52.857-180.571q0-110.857 53.143-178t133.143-67.143q84.571 0 132.571 49.714t55.429 141.143h-116.571q-2.286-36.571-20-56.571t-46.286-20q-32.571 0-50.571 34.571t-18 101.429q0 27.429 2.857 48t10.286 39.714 22.571 29.429 37.429 10.286q28 0 43.714-21.714t19.143-57.714zM1060.571 508q0-118.286-8.857-175.429t-34.571-92q-3.429-4.571-7.714-8t-12.286-8.571-9.143-6.286q-49.143-36-398.286-36-357.143 0-405.714 36-2.857 2.286-10 6.571t-12 8-8.286 8.286q-25.714 34.286-34.286 91.143t-8.571 176.286q0 118.857 8.571 175.714t34.286 91.714q3.429 4.571 8.571 8.571t11.714 8 10 6.857q25.143 18.857 136.857 28t268.857 9.143q348.571 0 398.286-37.143 2.857-2.286 9.714-6.286t11.714-8 7.714-9.143q26.286-34.286 34.857-90.857t8.571-176.571zM1170.286 73.143v877.714h-1170.286v-877.714h1170.286z"
				],
				"attrs": [],
				"tags": [
					"cc"
				],
				"defaultCode": 61962,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 476,
				"order": 477,
				"prevSize": 28,
				"code": 61962,
				"name": "cc"
			},
			"setIdx": 0,
			"iconIdx": 494
		},
		{
			"icon": {
				"paths": [
					"M566.857 356.571v283.429q0 8-5.143 13.143t-13.143 5.143h-91.429q-8 0-13.143-5.143t-5.143-13.143v-283.429q0-64-45.714-109.714t-109.714-45.714h-155.429v658.286q0 8-5.143 13.143t-13.143 5.143h-91.429q-8 0-13.143-5.143t-5.143-13.143v-768q0-8 5.143-13.143t13.143-5.143h265.143q77.143 0 142.286 38t103.143 103.143 38 142.286zM786.286 91.429v502.857q0 77.143-38 142.286t-103.143 103.143-142.286 38h-265.143q-8 0-13.143-5.143t-5.143-13.143v-548.571q0-8 5.143-13.143t13.143-5.143h91.429q8 0 13.143 5.143t5.143 13.143v438.857h155.429q64 0 109.714-45.714t45.714-109.714v-502.857q0-8 5.143-13.143t13.143-5.143h91.429q8 0 13.143 5.143t5.143 13.143z"
				],
				"attrs": [],
				"tags": [
					"ils",
					"shekel",
					"sheqel"
				],
				"defaultCode": 61963,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 477,
				"order": 478,
				"prevSize": 28,
				"code": 61963,
				"name": "ils"
			},
			"setIdx": 0,
			"iconIdx": 495
		},
		{
			"icon": {
				"paths": [
					"M749.143 481.143v65.143q0 13.714-7.714 21.714t-21.429 8h-115.429q-13.714 0-21.714-8t-8-21.714v-65.143q0-13.714 8-21.714t21.714-8h115.429q13.714 0 21.429 8t7.714 21.714zM469.143 612.571v-142.857q0-30.286-18.571-48.857t-48.857-18.571h-76q-38.857 0-54.857 29.714-16-29.714-54.857-29.714h-74.286q-30.286 0-48.857 18.571t-18.571 48.857v142.857q0 12.571 12 12.571h31.429q12.571 0 12.571-12.571v-131.429q0-13.714 7.714-21.714t22-8h53.714q13.714 0 21.714 8t8 21.714v131.429q0 12.571 12 12.571h30.857q12.571 0 12.571-12.571v-131.429q0-13.714 8-21.714t21.714-8h55.429q13.714 0 21.429 8t7.714 21.714v131.429q0 12.571 12.571 12.571h31.429q12 0 12-12.571zM805.714 557.714v-88q0-30.286-18.857-48.857t-49.143-18.571h-150.857q-30.286 0-49.143 18.571t-18.857 48.857v234.286q0 12 12.571 12h31.429q12 0 12-12v-102.857q17.714 24 53.714 24h109.143q30.286 0 49.143-18.571t18.857-48.857zM877.714 205.714v612.571q0 54.857-38.857 93.714t-93.714 38.857h-612.571q-54.857 0-93.714-38.857t-38.857-93.714v-612.571q0-54.857 38.857-93.714t93.714-38.857h612.571q54.857 0 93.714 38.857t38.857 93.714z"
				],
				"attrs": [],
				"tags": [
					"meanpath"
				],
				"defaultCode": 61964,
				"grid": 14
			},
			"attrs": [],
			"properties": {
				"id": 478,
				"order": 479,
				"prevSize": 28,
				"code": 61964,
				"name": "meanpath"
			},
			"setIdx": 0,
			"iconIdx": 496
		}
	],
	"height": 1024,
	"metadata": {
		"name": "icomoon"
	},
	"preferences": {
		"showGlyphs": true,
		"showQuickUse": true,
		"showQuickUse2": true,
		"showSVGs": true,
		"fontPref": {
			"prefix": "icomoon-",
			"metadata": {
				"fontFamily": "icomoon",
				"majorVersion": 1,
				"minorVersion": 0
			},
			"metrics": {
				"emSize": 1024,
				"baseline": 6.25,
				"whitespace": 50
			},
			"ie7": true,
			"showSelector": true,
			"selector": "class",
			"classSelector": ".icomoon",
			"showMetrics": false
		},
		"imagePref": {
			"prefix": "icon-",
			"png": true,
			"useClassSelector": true,
			"color": 4473924,
			"bgColor": 16777215
		},
		"historySize": 100,
		"showCodes": true
	}
};});

/*global define */

define('docs/ExampleData/Icons',['require','backbone','json!../../../assets/icomoon/selection.json'],function (require) {
  
  var Backbone = require('backbone');
  var manifest = require('json!../../../assets/icomoon/selection.json');
  var Icon = Backbone.Model.extend({});
  var Icons = Backbone.Collection.extend({
    model: Icon,
    parse: function (d) {
      return _.pluck(d, 'properties');
    }
  });
  return new Icons(manifest.icons, { parse: true });
});


/*global define */
define('jsx!docs/Icon/Icon',['require','react.backbone','jsx!Oui/Icon/Icon','../ExampleData/Icons'],function (require) {

  
  var React = require('react.backbone');
  var Icon = require('jsx!Oui/Icon/Icon');
  var Icons = require('../ExampleData/Icons');

  var IconInfo = React.createBackboneClass({
    getInitialState: function () {
      return { expanded: false };
    },
    handleOver: function () {
      this.setState({ expanded: true });
    },
    handleOut: function () {
      this.setState({ expanded: false });
    },
    render: function () {
      var name = this.getModel().get('name');
      var classSet = React.addons.classSet({ 'icon-info': true, 'expanded': this.state.expanded });
      var iconStyle = { color: this.state.expanded ? '#7AA8D9' : '#999999'}
      return (
        React.createElement("div", {className: "icon-example", onMouseOver: this.handleOver, onMouseOut: this.handleOut}, 
          React.createElement(Icon, {style: iconStyle, name: name}), 
          React.createElement("div", {className: classSet}, name)
        )
      );
    }
  });

  var IconList = React.createBackboneClass({
    render: function () {
      return (
        React.createElement("div", {className: "icon-examples clearfix"}, 
          this.getCollection().map(function (icon) {
            return React.createElement(IconInfo, {model: icon, key: icon.id});
          })
        )
      );
    }
  });
  return React.createClass({
    render: function () {
      return React.createElement(IconList, {collection: Icons});
    }
  });
});


define("json!docs/Icon/manifest.json", function(){ return {
  "properties": [
    {
      "name": "name",
      "type": "String",
      "required": true,
      "description": "Defines which icon to use out of the library."
    },{
      "name": "title",
      "type": "String",
      "required": false,
      "description": "Set a title on the element (for accessibility)"
    }
  ]
}
;});


define('mdown!docs/Loader/Loader.md',[],function () { return '<p>Place this lil component inside of a relatively positioned element, and get some killer loading action going!</p>';});


define('text!docs/Loader/LoaderExample.jsx',[],function () { return '/*global define */\ndefine(function (require) {\n  \'use strict\';\n  var React = require(\'react.backbone\');\n  var Loader = require(\'jsx!../../../src/Loader/Loader\');\n  var wasteland = require(\'mdown!../ExampleData/Wasteland.md\');\n\n  var LoaderExample = React.createClass({\n    getInitialState: function () {\n      return { loading: true };\n    },\n    toggleLoading: function () {\n      this.setState({ loading: !this.state.loading });\n    },\n    turnOff: function () {\n      this.setState({ loading: false });\n    },\n    render: function () {\n      var loadingOnOff = this.state.loading ? \'Off\' : \'On\';\n      return (\n        <div>\n          <div className="u-relative">\n            <Loader on={this.state.loading} />\n            <div className="u-zBody" dangerouslySetInnerHTML={{__html: wasteland}}></div>\n          </div>\n          <div>\n            <a onClick={this.toggleLoading} className="docs-button">Toggle {loadingOnOff}</a>\n          </div>\n        </div>\n      );\n    }\n  });\n  return LoaderExample;\n});\n';});


/*global define */
define('jsx!docs/../../src/Icon/Icon',['require','react.backbone'],function (require) {

  
  var React = require('react.backbone');

  var Icon = React.createClass({displayName: 'Icon',
    getDefaultProps: function () {
      return { name: 'user' };
    },
    render: function () {
      var className = 'icomoon icomoon-' + this.props.name;
      delete this.props.name;
      return React.createElement("span", React.__spread({},  this.props, {className: className}));
    }
  });
  return Icon;
});


/*global define */
define('jsx!docs/../../src/Loader/Loader',['require','react','jsx!../Icon/Icon'],function (require) {
  
  var React = require('react');
  var Icon = require('jsx!../Icon/Icon');
  var Loader = React.createClass({displayName: 'Loader',
    getDefaultProps: function () {
      return { on: false };
    },
    render: function () {
      var classList = React.addons.classSet({
        'off': !this.props.on,
        'on': this.props.on,
        'oui-loader': true
      });
      return (
        React.createElement("div", {className: classList}, 
          React.createElement("span", {className: "oui-button-icon u-circle text-center"}, 
            React.createElement("span", {className: "a-spin"}, React.createElement(Icon, {name: "refresh"}))
          )
        )
      );
    }
  });
  return Loader;
});


define('mdown!docs/ExampleData/Wasteland.md',[],function () { return '<p>April is the cruellest month, breeding\nLilacs out of the dead land, mixing\nMemory and desire, stirring\nDull roots with spring rain.\nWinter kept us warm, covering\nEarth in forgetful snow, feeding\nA little life with dried tubers.\nSummer surprised us, coming over the Starnbergersee\nWith a shower of rain; we stopped in the colonnade,\nAnd went on in sunlight, into the Hofgarten,\nAnd drank coffee, and talked for an hour.\nBin gar keine Russin, stamm’ aus Litauen, echt deutsch.\nAnd when we were children, staying at the arch-duke’s,\nMy cousin’s, he took me out on a sled,\nAnd I was frightened. He said, Marie,\nMarie, hold on tight. And down we went.\nIn the mountains, there you feel free.\nI read, much of the night, and go south in the winter.</p>';});


/*global define */
define('jsx!docs/Loader/LoaderExample',['require','react.backbone','jsx!../../../src/Loader/Loader','mdown!../ExampleData/Wasteland.md'],function (require) {
  
  var React = require('react.backbone');
  var Loader = require('jsx!../../../src/Loader/Loader');
  var wasteland = require('mdown!../ExampleData/Wasteland.md');

  var LoaderExample = React.createClass({displayName: 'LoaderExample',
    getInitialState: function () {
      return { loading: true };
    },
    toggleLoading: function () {
      this.setState({ loading: !this.state.loading });
    },
    turnOff: function () {
      this.setState({ loading: false });
    },
    render: function () {
      var loadingOnOff = this.state.loading ? 'Off' : 'On';
      return (
        React.createElement("div", null, 
          React.createElement("div", {className: "u-relative"}, 
            React.createElement(Loader, {on: this.state.loading}), 
            React.createElement("div", {className: "u-zBody", dangerouslySetInnerHTML: {__html: wasteland}})
          ), 
          React.createElement("div", null, 
            React.createElement("a", {onClick: this.toggleLoading, className: "docs-button"}, "Toggle ", loadingOnOff)
          )
        )
      );
    }
  });
  return LoaderExample;
});


define("json!docs/Loader/manifest.json", function(){ return {
  "properties": [
    {
      "name": "on",
      "type": "Boolean",
      "required": true,
      "description": "Loader only displays if set to 'on'"
    }
  ]
}
;});

/*global define */

define('docs/manifest',['require','mdown!docs/List/Basic.md','text!docs/List/Basic.jsx','jsx!docs/List/Basic','json!docs/List/manifest.json','mdown!docs/Icon/Icon.md','text!docs/Icon/Icon.jsx','jsx!docs/Icon/Icon','json!docs/Icon/manifest.json','mdown!docs/Loader/Loader.md','text!docs/Loader/LoaderExample.jsx','jsx!docs/Loader/LoaderExample','json!docs/Loader/manifest.json'],function (require) {
  
  return [
    {
      name: 'List',
      content: require('mdown!docs/List/Basic.md'),
      source: require('text!docs/List/Basic.jsx'),
      component: require('jsx!docs/List/Basic'),
      manifest: require('json!docs/List/manifest.json')
    },{
      name: 'Icon',
      content: require('mdown!docs/Icon/Icon.md'),
      source: require('text!docs/Icon/Icon.jsx'),
      component: require('jsx!docs/Icon/Icon'),
      manifest: require('json!docs/Icon/manifest.json')
    },{
      name: 'Loader',
      content: require('mdown!docs/Loader/Loader.md'),
      source: require('text!docs/Loader/LoaderExample.jsx'),
      component: require('jsx!docs/Loader/LoaderExample'),
      manifest: require('json!docs/Loader/manifest.json')
    }
  ];
});


define('mdown!docs/../../README.md',[],function () { return '<h3>Oui!</h3>\n\n<p>UI components for building smart health applications</p>\n\n<p><a href="https://github.com/oberd/oui">Github Repo</a></p>\n\n<p><a href="https://jenkins.medamine.com/job/oui/"><img src="https://jenkins.medamine.com/buildStatus/icon?job=oui" alt="Build Status" title="" /></a></p>\n\n<h3>Installation</h3>\n\n<p><code>\nbower install --save https://github.com/oberd/oui.git\n</code></p>\n\n<h3>Usage</h3>\n\n<p>Designed for use with require.js, but there is basic support for browser globals if require.js (or another package loader) is unavailable.  With require.js, load the components directly from the <code>src</code> folder.  With browser globals, you will have to load all of the components in a concatenated file <code>dist/oui.js</code>  You can find example usage of specific components in the menu on the left.</p>\n\n<h3>Overview</h3>\n\n<p>Oui has the goal of standardizing user interface components for all Oberd Platform Applications.</p>\n\n<p>Components should have these goals in mind:</p>\n\n<ul>\n<li>Accessibile</li>\n<li>Well tested</li>\n<li>Keyboard Enabled</li>\n<li>Progressively enhanced (with a baseline assumption of Javascript)</li>\n<li>Browser support: IE8+</li>\n</ul>\n\n<h3>Getting Started</h3>\n\n<p><code>\n./tools/init.sh\n</code></p>\n\n<h3>Contribution</h3>\n\n<p>More information on creating your own component can be found in the <a href="https://github.com/oberd/oui/blob/master/CONTRIBUTION.md">Contribution Guide</a></p>\n\n<h3>Development Commands</h3>\n\n<ul>\n<li><code>gulp serve</code> - Start a server for mocha tests and documentation.  Use this command for active development</li>\n<li><code>gulp build</code> - Compiles dist folder from source</li>\n<li><code>gulp test</code> - Runs mocha tests in phantomjs</li>\n</ul>\n\n<h3>Directory Structure</h3>\n\n<pre>\n|-- assets   # Any static assets for use in the compilation / build step\n|-- dist     # Compiled files for use with browser globals, compiled CSS\n|-- docs\n|   `-- src  # Example source code.\n|-- src      # Component source, one component per folder please.\n|-- test     # Specifications and test files\n`-- tools    # Random utilities and build tools\n</pre>';});


/*global define, window, document */

define('jsx!docs/Documentation',['require','text!../../bower.json','react.backbone','jsx!./Menu','jsx!./ComponentPage','./manifest','mdown!../../README.md'],function (require) {
  
  var packageInfo = require('text!../../bower.json');
  var React = require('react.backbone');
  var DocsMenu = require('jsx!./Menu');
  var ComponentPage = require('jsx!./ComponentPage');
  var examples = require('./manifest');

  var defaultPage = {
    name: 'Oui!',
    content: require('mdown!../../README.md')
  };

  packageInfo = JSON.parse(packageInfo);

  var Docs = React.createClass({displayName: 'Docs',
    getDefaultProps: function () {
      return {
        examples: examples
      };
    },
    getInitialState: function () {
      return { example: { name: null } };
    },
    handleExample: function (example) {
      this.setState({ example: example });
    },
    goHome: function () {
      window.location.hash = '';
      this.setState({ example: { name: null }});
    },
    render: function () {
      var page;
      if (this.state.example.name) {
        page = React.createElement(ComponentPage, React.__spread({},  this.state.example, {currentPage: this.state.example.component}));
      } else {
        page = React.createElement("div", {className: "page-content", dangerouslySetInnerHTML: {__html: defaultPage.content}});
      }
      return (
        React.createElement("section", null, 
          React.createElement("h4", {className: "text-center page-header"}, 
            React.createElement("div", {className: "pointer", onClick: this.goHome}, 
              React.createElement("img", {src: "oui.svg", width: "250"}), 
              React.createElement("div", {className: "subtitle"}, "Oberd User Interface Library ", React.createElement("br", null), " v", packageInfo.version, " ", React.createElement("a", {className: "header-link", href: "/test"}, "Tests"))
            )
          ), 
          React.createElement("div", {className: "page-container"}, 
            React.createElement("div", {className: "row"}, 
              React.createElement("div", {className: "col-s-3"}, 
                React.createElement(DocsMenu, {examples: this.props.examples, onSelect: this.handleExample, value: this.state.example.name})
              ), 
              React.createElement("div", {className: "col-s-9"}, 
                page
              )
            )
          )
        )
      );
    }
  });
  React.render(React.createElement(Docs, null), document.getElementById('main'));
  setTimeout(function () {
    document.getElementById('main').className = 'in';
  });
});

/*global define */

define('docs/main',['require','jsx!./Documentation'],function (require) {
  
  var Docs = require('jsx!./Documentation');
});

